/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/scripts/Superstore.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@pixelunion/breakpoint/dist/cjs/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@pixelunion/breakpoint/dist/cjs/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction all() {\n    return window\n        .getComputedStyle(document.documentElement, ':before')\n        .getPropertyValue('content')\n        .replace(/\"/g, '')\n        .split(',');\n}\nexports.all = all;\nfunction current() {\n    return window\n        .getComputedStyle(document.documentElement, ':after')\n        .getPropertyValue('content')\n        .replace(/\"/g, '');\n}\nexports.current = current;\nvar callbacks = [];\nvar breakpoints = all();\nvar breakpointData = {\n    previous: current(),\n    current: current(),\n};\nfunction min(breakpoint) {\n    var current = breakpointData.current;\n    var comparison = breakpoints.indexOf(current) - breakpoints.indexOf(breakpoint);\n    return comparison >= 0;\n}\nexports.min = min;\nfunction max(breakpoint) {\n    var current = breakpointData.current;\n    var comparison = breakpoints.indexOf(current) - breakpoints.indexOf(breakpoint);\n    return comparison <= 0;\n}\nexports.max = max;\nfunction range(breakpointStart, breakpointEnd) {\n    var current = breakpointData.current;\n    var indexCurrent = breakpoints.indexOf(current);\n    var indexStart = breakpoints.indexOf(breakpointStart);\n    var indexEnd = breakpoints.indexOf(breakpointEnd);\n    return indexStart <= indexCurrent && indexCurrent <= indexEnd;\n}\nexports.range = range;\nfunction is() {\n    var breakpoints = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        breakpoints[_i] = arguments[_i];\n    }\n    var current = breakpointData.current;\n    return breakpoints.some(function (breakpoint) { return breakpoint === current; });\n}\nexports.is = is;\nfunction onChange(callback) {\n    if (callbacks.indexOf(callback) === -1) {\n        callbacks.push(callback);\n    }\n}\nexports.onChange = onChange;\nfunction offChange(callback) {\n    var index = callbacks.indexOf(callback);\n    if (index !== -1) {\n        callbacks.splice(index, 1);\n    }\n}\nexports.offChange = offChange;\nvar styleSheetList = document.styleSheets;\nvar mediaLists = Object.keys(styleSheetList).reduce(function (accumulator, key) {\n    var stylesheet = styleSheetList[key];\n    if (!stylesheet.href || stylesheet.href.indexOf('theme') === -1) {\n        return accumulator;\n    }\n    try {\n        var cssRules = stylesheet.cssRules;\n        for (var i = 0; i < cssRules.length; i++) {\n            var cssRule = stylesheet.cssRules[i];\n            if (!(cssRule instanceof CSSMediaRule)) {\n                continue;\n            }\n            for (var j = 0; j < cssRules.length; j++) {\n                var cssMediaCssRule = cssRule.cssRules[j];\n                if (!(cssMediaCssRule instanceof CSSStyleRule)) {\n                    continue;\n                }\n                if (cssMediaCssRule.selectorText && cssMediaCssRule.selectorText.indexOf('html::after') !== -1) {\n                    accumulator.push(cssRule.media);\n                }\n            }\n        }\n    }\n    catch (_a) {\n        return accumulator;\n    }\n    return accumulator;\n}, []);\nif (mediaLists.length > 0) {\n    mediaLists.forEach(function (mediaList) {\n        var mql = window.matchMedia(mediaList.mediaText);\n        mql.addListener(function () {\n            var currentBreakpoint = current();\n            if (breakpointData.current !== currentBreakpoint) {\n                breakpointData.previous = breakpointData.current;\n                breakpointData.current = currentBreakpoint;\n                callbacks.forEach(function (callback) { return callback(breakpointData); });\n            }\n        });\n    });\n}\nelse {\n    window.addEventListener('resize', function () {\n        var currentBreakpoint = current();\n        if (breakpointData.current !== currentBreakpoint) {\n            breakpointData.previous = breakpointData.current;\n            breakpointData.current = currentBreakpoint;\n            callbacks.forEach(function (callback) { return callback(breakpointData); });\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBpeGVsdW5pb24vYnJlYWtwb2ludC9kaXN0L2Nqcy9pbmRleC5qcz8wZDUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCwrQkFBK0IsRUFBRTtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHFCQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixxQkFBcUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGlDQUFpQyxFQUFFO0FBQzFGO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxpQ0FBaUMsRUFBRTtBQUN0RjtBQUNBLEtBQUs7QUFDTCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AcGl4ZWx1bmlvbi9icmVha3BvaW50L2Rpc3QvY2pzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBhbGwoKSB7XG4gICAgcmV0dXJuIHdpbmRvd1xuICAgICAgICAuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICc6YmVmb3JlJylcbiAgICAgICAgLmdldFByb3BlcnR5VmFsdWUoJ2NvbnRlbnQnKVxuICAgICAgICAucmVwbGFjZSgvXCIvZywgJycpXG4gICAgICAgIC5zcGxpdCgnLCcpO1xufVxuZXhwb3J0cy5hbGwgPSBhbGw7XG5mdW5jdGlvbiBjdXJyZW50KCkge1xuICAgIHJldHVybiB3aW5kb3dcbiAgICAgICAgLmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAnOmFmdGVyJylcbiAgICAgICAgLmdldFByb3BlcnR5VmFsdWUoJ2NvbnRlbnQnKVxuICAgICAgICAucmVwbGFjZSgvXCIvZywgJycpO1xufVxuZXhwb3J0cy5jdXJyZW50ID0gY3VycmVudDtcbnZhciBjYWxsYmFja3MgPSBbXTtcbnZhciBicmVha3BvaW50cyA9IGFsbCgpO1xudmFyIGJyZWFrcG9pbnREYXRhID0ge1xuICAgIHByZXZpb3VzOiBjdXJyZW50KCksXG4gICAgY3VycmVudDogY3VycmVudCgpLFxufTtcbmZ1bmN0aW9uIG1pbihicmVha3BvaW50KSB7XG4gICAgdmFyIGN1cnJlbnQgPSBicmVha3BvaW50RGF0YS5jdXJyZW50O1xuICAgIHZhciBjb21wYXJpc29uID0gYnJlYWtwb2ludHMuaW5kZXhPZihjdXJyZW50KSAtIGJyZWFrcG9pbnRzLmluZGV4T2YoYnJlYWtwb2ludCk7XG4gICAgcmV0dXJuIGNvbXBhcmlzb24gPj0gMDtcbn1cbmV4cG9ydHMubWluID0gbWluO1xuZnVuY3Rpb24gbWF4KGJyZWFrcG9pbnQpIHtcbiAgICB2YXIgY3VycmVudCA9IGJyZWFrcG9pbnREYXRhLmN1cnJlbnQ7XG4gICAgdmFyIGNvbXBhcmlzb24gPSBicmVha3BvaW50cy5pbmRleE9mKGN1cnJlbnQpIC0gYnJlYWtwb2ludHMuaW5kZXhPZihicmVha3BvaW50KTtcbiAgICByZXR1cm4gY29tcGFyaXNvbiA8PSAwO1xufVxuZXhwb3J0cy5tYXggPSBtYXg7XG5mdW5jdGlvbiByYW5nZShicmVha3BvaW50U3RhcnQsIGJyZWFrcG9pbnRFbmQpIHtcbiAgICB2YXIgY3VycmVudCA9IGJyZWFrcG9pbnREYXRhLmN1cnJlbnQ7XG4gICAgdmFyIGluZGV4Q3VycmVudCA9IGJyZWFrcG9pbnRzLmluZGV4T2YoY3VycmVudCk7XG4gICAgdmFyIGluZGV4U3RhcnQgPSBicmVha3BvaW50cy5pbmRleE9mKGJyZWFrcG9pbnRTdGFydCk7XG4gICAgdmFyIGluZGV4RW5kID0gYnJlYWtwb2ludHMuaW5kZXhPZihicmVha3BvaW50RW5kKTtcbiAgICByZXR1cm4gaW5kZXhTdGFydCA8PSBpbmRleEN1cnJlbnQgJiYgaW5kZXhDdXJyZW50IDw9IGluZGV4RW5kO1xufVxuZXhwb3J0cy5yYW5nZSA9IHJhbmdlO1xuZnVuY3Rpb24gaXMoKSB7XG4gICAgdmFyIGJyZWFrcG9pbnRzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgYnJlYWtwb2ludHNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICB9XG4gICAgdmFyIGN1cnJlbnQgPSBicmVha3BvaW50RGF0YS5jdXJyZW50O1xuICAgIHJldHVybiBicmVha3BvaW50cy5zb21lKGZ1bmN0aW9uIChicmVha3BvaW50KSB7IHJldHVybiBicmVha3BvaW50ID09PSBjdXJyZW50OyB9KTtcbn1cbmV4cG9ydHMuaXMgPSBpcztcbmZ1bmN0aW9uIG9uQ2hhbmdlKGNhbGxiYWNrKSB7XG4gICAgaWYgKGNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKSA9PT0gLTEpIHtcbiAgICAgICAgY2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgIH1cbn1cbmV4cG9ydHMub25DaGFuZ2UgPSBvbkNoYW5nZTtcbmZ1bmN0aW9uIG9mZkNoYW5nZShjYWxsYmFjaykge1xuICAgIHZhciBpbmRleCA9IGNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgIGNhbGxiYWNrcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbn1cbmV4cG9ydHMub2ZmQ2hhbmdlID0gb2ZmQ2hhbmdlO1xudmFyIHN0eWxlU2hlZXRMaXN0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHM7XG52YXIgbWVkaWFMaXN0cyA9IE9iamVjdC5rZXlzKHN0eWxlU2hlZXRMaXN0KS5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBrZXkpIHtcbiAgICB2YXIgc3R5bGVzaGVldCA9IHN0eWxlU2hlZXRMaXN0W2tleV07XG4gICAgaWYgKCFzdHlsZXNoZWV0LmhyZWYgfHwgc3R5bGVzaGVldC5ocmVmLmluZGV4T2YoJ3RoZW1lJykgPT09IC0xKSB7XG4gICAgICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIGNzc1J1bGVzID0gc3R5bGVzaGVldC5jc3NSdWxlcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjc3NSdWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGNzc1J1bGUgPSBzdHlsZXNoZWV0LmNzc1J1bGVzW2ldO1xuICAgICAgICAgICAgaWYgKCEoY3NzUnVsZSBpbnN0YW5jZW9mIENTU01lZGlhUnVsZSkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY3NzUnVsZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgY3NzTWVkaWFDc3NSdWxlID0gY3NzUnVsZS5jc3NSdWxlc1tqXTtcbiAgICAgICAgICAgICAgICBpZiAoIShjc3NNZWRpYUNzc1J1bGUgaW5zdGFuY2VvZiBDU1NTdHlsZVJ1bGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY3NzTWVkaWFDc3NSdWxlLnNlbGVjdG9yVGV4dCAmJiBjc3NNZWRpYUNzc1J1bGUuc2VsZWN0b3JUZXh0LmluZGV4T2YoJ2h0bWw6OmFmdGVyJykgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yLnB1c2goY3NzUnVsZS5tZWRpYSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gICAgfVxuICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbn0sIFtdKTtcbmlmIChtZWRpYUxpc3RzLmxlbmd0aCA+IDApIHtcbiAgICBtZWRpYUxpc3RzLmZvckVhY2goZnVuY3Rpb24gKG1lZGlhTGlzdCkge1xuICAgICAgICB2YXIgbXFsID0gd2luZG93Lm1hdGNoTWVkaWEobWVkaWFMaXN0Lm1lZGlhVGV4dCk7XG4gICAgICAgIG1xbC5hZGRMaXN0ZW5lcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudEJyZWFrcG9pbnQgPSBjdXJyZW50KCk7XG4gICAgICAgICAgICBpZiAoYnJlYWtwb2ludERhdGEuY3VycmVudCAhPT0gY3VycmVudEJyZWFrcG9pbnQpIHtcbiAgICAgICAgICAgICAgICBicmVha3BvaW50RGF0YS5wcmV2aW91cyA9IGJyZWFrcG9pbnREYXRhLmN1cnJlbnQ7XG4gICAgICAgICAgICAgICAgYnJlYWtwb2ludERhdGEuY3VycmVudCA9IGN1cnJlbnRCcmVha3BvaW50O1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChjYWxsYmFjaykgeyByZXR1cm4gY2FsbGJhY2soYnJlYWtwb2ludERhdGEpOyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5lbHNlIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY3VycmVudEJyZWFrcG9pbnQgPSBjdXJyZW50KCk7XG4gICAgICAgIGlmIChicmVha3BvaW50RGF0YS5jdXJyZW50ICE9PSBjdXJyZW50QnJlYWtwb2ludCkge1xuICAgICAgICAgICAgYnJlYWtwb2ludERhdGEucHJldmlvdXMgPSBicmVha3BvaW50RGF0YS5jdXJyZW50O1xuICAgICAgICAgICAgYnJlYWtwb2ludERhdGEuY3VycmVudCA9IGN1cnJlbnRCcmVha3BvaW50O1xuICAgICAgICAgICAgY2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7IHJldHVybiBjYWxsYmFjayhicmVha3BvaW50RGF0YSk7IH0pO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\n");

/***/ }),

/***/ "./node_modules/@pixelunion/events/dist/EventHandler.js":
/*!**************************************************************!*\
  !*** ./node_modules/@pixelunion/events/dist/EventHandler.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar EventHandler = /** @class */ (function () {\n    function EventHandler() {\n        this.events = [];\n    }\n    EventHandler.prototype.register = function (el, event, listener) {\n        if (!el || !event || !listener)\n            return null;\n        this.events.push({ el: el, event: event, listener: listener });\n        el.addEventListener(event, listener);\n        return { el: el, event: event, listener: listener };\n    };\n    EventHandler.prototype.unregister = function (_a) {\n        var el = _a.el, event = _a.event, listener = _a.listener;\n        if (!el || !event || !listener)\n            return null;\n        this.events = this.events.filter(function (e) { return el !== e.el\n            || event !== e.event || listener !== e.listener; });\n        el.removeEventListener(event, listener);\n        return { el: el, event: event, listener: listener };\n    };\n    EventHandler.prototype.unregisterAll = function () {\n        this.events.forEach(function (_a) {\n            var el = _a.el, event = _a.event, listener = _a.listener;\n            return el.removeEventListener(event, listener);\n        });\n        this.events = [];\n    };\n    return EventHandler;\n}());\nexports[\"default\"] = EventHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBpeGVsdW5pb24vZXZlbnRzL2Rpc3QvRXZlbnRIYW5kbGVyLmpzP2Q1OTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJDQUEyQztBQUNyRTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELDREQUE0RCxFQUFFO0FBQzlEO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BwaXhlbHVuaW9uL2V2ZW50cy9kaXN0L0V2ZW50SGFuZGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBFdmVudEhhbmRsZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRXZlbnRIYW5kbGVyKCkge1xuICAgICAgICB0aGlzLmV2ZW50cyA9IFtdO1xuICAgIH1cbiAgICBFdmVudEhhbmRsZXIucHJvdG90eXBlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKGVsLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgaWYgKCFlbCB8fCAhZXZlbnQgfHwgIWxpc3RlbmVyKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHRoaXMuZXZlbnRzLnB1c2goeyBlbDogZWwsIGV2ZW50OiBldmVudCwgbGlzdGVuZXI6IGxpc3RlbmVyIH0pO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAgIHJldHVybiB7IGVsOiBlbCwgZXZlbnQ6IGV2ZW50LCBsaXN0ZW5lcjogbGlzdGVuZXIgfTtcbiAgICB9O1xuICAgIEV2ZW50SGFuZGxlci5wcm90b3R5cGUudW5yZWdpc3RlciA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgZWwgPSBfYS5lbCwgZXZlbnQgPSBfYS5ldmVudCwgbGlzdGVuZXIgPSBfYS5saXN0ZW5lcjtcbiAgICAgICAgaWYgKCFlbCB8fCAhZXZlbnQgfHwgIWxpc3RlbmVyKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIHRoaXMuZXZlbnRzID0gdGhpcy5ldmVudHMuZmlsdGVyKGZ1bmN0aW9uIChlKSB7IHJldHVybiBlbCAhPT0gZS5lbFxuICAgICAgICAgICAgfHwgZXZlbnQgIT09IGUuZXZlbnQgfHwgbGlzdGVuZXIgIT09IGUubGlzdGVuZXI7IH0pO1xuICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAgIHJldHVybiB7IGVsOiBlbCwgZXZlbnQ6IGV2ZW50LCBsaXN0ZW5lcjogbGlzdGVuZXIgfTtcbiAgICB9O1xuICAgIEV2ZW50SGFuZGxlci5wcm90b3R5cGUudW5yZWdpc3RlckFsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5ldmVudHMuZm9yRWFjaChmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBlbCA9IF9hLmVsLCBldmVudCA9IF9hLmV2ZW50LCBsaXN0ZW5lciA9IF9hLmxpc3RlbmVyO1xuICAgICAgICAgICAgcmV0dXJuIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZXZlbnRzID0gW107XG4gICAgfTtcbiAgICByZXR1cm4gRXZlbnRIYW5kbGVyO1xufSgpKTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gRXZlbnRIYW5kbGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixelunion/events/dist/EventHandler.js\n");

/***/ }),

/***/ "./node_modules/@pixelunion/grouped-content/dist/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@pixelunion/grouped-content/dist/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// forEach method, could be shipped as part of an Object Literal/Module\nfunction forEach(array, callback, scope) {\n  var index = 0;\n\n  for (index = 0; index < array.length; index += 1) {\n    callback.call(scope, array[index], index); // passes back stuff we need\n  }\n}\n\nfunction hasClass(el, className) {\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  return el.className.match(regex);\n}\n\nfunction addClass(el, className) {\n  // Return if it already has the className\n  if (hasClass(el, className)) return;\n\n  el.className += ' ' + className;\n}\n\nfunction removeClass(el, className) {\n  // Return if it doesn't already have the className\n  if (!hasClass(el, className)) return;\n\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  el.className = el.className.replace(regex, '');\n}\n\nfunction toggleClass(el, className) {\n  if (hasClass(el, className)) {\n    removeClass(el, className);\n  } else {\n    addClass(el, className);\n  }\n}\n\nfunction findPairingFromPairingTrigger(pairings, pairingTrigger) {\n  var foundPairing = null;\n\n  forEach(pairings, function (pairing) {\n    if (pairing.trigger === pairingTrigger) {\n      foundPairing = pairing;\n    }\n  });\n\n  return foundPairing;\n}\n\n/**\n * See {@link https://stackoverflow.com/revisions/2117523/11 Stack Overflow}\n * An RFC4122 v4 compliant uuid solution\n */\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nfunction init(groupedContent) {\n  var triggers = groupedContent.triggers;\n  var pairings = groupedContent.pairings;\n\n  triggers.setAttribute('role', 'tablist');\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'tab');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n\n    var triggerContent = pairing.trigger.innerHTML;\n    var triggerWrapper = document.createElement('span');\n    triggerWrapper.innerHTML = triggerContent;\n\n    pairing.trigger.innerHTML = '';\n    pairing.trigger.appendChild(triggerWrapper);\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n    pairing.content.setAttribute('role', 'tabpanel');\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.trigger.removeAttribute('aria-selected');\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y = {\n  init: init,\n  update: update\n};\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/** A class for creating, managing, and destroying groupable content as tabs. */\n\nvar TabsLayout = function () {\n  function TabsLayout(groupedContent) {\n    classCallCheck(this, TabsLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init();\n    a11y.init(this.groupedContent);\n  }\n\n  createClass(TabsLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.trigger.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      var existingActive = false;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n\n        if (hasClass(trigger, 'active')) {\n          existingActive = true;\n        }\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      if (!existingActive) {\n        addClass(this.pairings[0].trigger, 'active');\n        addClass(this.pairings[0].content, 'active');\n      }\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n      var pairingIndex = this.pairings.indexOf(pairing);\n      var prevIndex = pairingIndex - 1 < 0 ? this.pairings.length - 1 : pairingIndex - 1;\n      var nextIndex = pairingIndex + 1 >= this.pairings.length ? 0 : pairingIndex + 1;\n\n      var nextPairing = null;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          nextPairing = this.pairings[prevIndex];\n          break;\n        case 'ArrowRight':\n          nextPairing = this.pairings[nextIndex];\n          break;\n        default:\n          nextPairing = null;\n          break;\n      }\n\n      // Fast exit if we can't find the tab or tabs\n      if (nextPairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(nextPairing.trigger, 'active');\n      addClass(nextPairing.content, 'active');\n\n      nextPairing.trigger.focus();\n\n      a11y.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the tab or tabs\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(pairing.trigger, 'active');\n      addClass(pairing.content, 'active');\n\n      a11y.update(this.groupedContent);\n    }\n  }]);\n  return TabsLayout;\n}();\n\nfunction init$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'button');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n    pairing.trigger.setAttribute('tabIndex', '0');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y$1 = {\n  init: init$1,\n  update: update$1\n};\n\n/** A class for creating, managing, and destroying groupable content as an accordion. */\n\nvar AccordionLayout = function () {\n  function AccordionLayout(groupedContent) {\n    classCallCheck(this, AccordionLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init(this.pairings);\n    a11y$1.init(this.groupedContent);\n  }\n\n  createClass(AccordionLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.trigger.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n        var content = pairing.content;\n\n        trigger.parentNode.insertBefore(content, trigger.nextSibling);\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      this.groupedContent.contents.remove();\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if enter isn't pressed or we can't find the group\n      if (event.key !== 'Enter' || pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the group\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }]);\n  return AccordionLayout;\n}();\n\n/**\n * Returns an array of nodes related to the heading node.\n * @param {node} heading - The heading node to search for content from.\n * @returns {node[]}\n */\nfunction getHeadingContent(heading) {\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(heading.tagName);\n  var content = [];\n\n  var sibling = heading.nextElementSibling;\n\n  while (sibling !== null && (headingTagNames.indexOf(sibling.tagName) === -1 || headingTagNames.indexOf(sibling.tagName) > tagNameIndex)) {\n    content.push(sibling);\n\n    sibling = sibling.nextElementSibling;\n  }\n\n  return content;\n}\n\n/**\n * Returns an object array representing the heading tree from a given node.\n * Root nodes are evaluated differently, and requires the evaluatingRoot flag\n * to be true.\n * @param {node} el - The node being evaluated.\n * @param {node[]} children - The children of the evaluated node.\n * @param {boolean} [evaluatingRoot] - Whether to evaluate as root node.\n * @returns {Object[]}\n */\nfunction getHeadingTree(el, children) {\n  var evaluatingRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(el.tagName);\n  var headings = [];\n\n  var currentLowestTagNameIndex = 5;\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var childTagNameIndex = headingTagNames.indexOf(child.tagName);\n\n    if (childTagNameIndex !== -1 && childTagNameIndex < currentLowestTagNameIndex) {\n      currentLowestTagNameIndex = childTagNameIndex;\n    }\n\n    if (evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex <= currentLowestTagNameIndex || !evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex === tagNameIndex + 1) {\n      var siblings = getHeadingContent(child);\n\n      var childNode = {\n        el: child,\n        content: siblings,\n        children: getHeadingTree(child, siblings)\n      };\n\n      headings.push(childNode);\n    }\n  }\n\n  return headings;\n}\n\n/**\n * Returns groupings of headings that meet the minimum sequence value\n * and don't contain any invalid headings.\n * @param {Object[]} headings - An array of heading objects.\n * @param {int[]} invalidHeadings - An array of invalid heading integers,\n *                                  representing indexes of headings.\n * @param {*} minInSequence - Minimum headings in sequence before being considered\n *                            as a grouping.\n * @returns {Object[][]}\n */\nfunction getHeadingGroupsInSequence(headings, invalidHeadings, minInSequence) {\n  var headingGroupsInSequence = [];\n  var currentHeadingGroupInSequence = [];\n  var currentSequence = 0;\n\n  for (var i = 0; i < headings.length; i += 1) {\n    if (invalidHeadings.indexOf(i) === -1) {\n      currentHeadingGroupInSequence.push(headings[i]);\n      currentSequence += 1;\n\n      if (i !== headings.length - 1 && headings[i].el.tagName !== headings[i + 1].el.tagName && invalidHeadings.indexOf(i + 1)) {\n        currentHeadingGroupInSequence = [];\n        currentSequence = 0;\n      } else if (i !== 0 && headings[i].el.tagName !== headings[i - 1].el.tagName) {\n        currentHeadingGroupInSequence.pop();\n        currentSequence -= 1;\n\n        if (currentSequence >= minInSequence) {\n          headingGroupsInSequence.push(currentHeadingGroupInSequence);\n        }\n\n        currentHeadingGroupInSequence = [headings[i]];\n        currentSequence = 1;\n      }\n    }\n  }\n\n  if (currentSequence >= minInSequence) {\n    headingGroupsInSequence.push(currentHeadingGroupInSequence);\n  }\n\n  return headingGroupsInSequence;\n}\n\n/**\n * Generates necessary DOM elements to group related content.\n * Returns a object array representing the grouped content.\n * @param {Object[]} children - An array of objects.\n * @returns {Object[]}\n */\nfunction createGroupedContent(children) {\n  var pairings = [];\n\n  var firstChild = children[0].el;\n  var triggers = document.createElement('div');\n  var contents = document.createElement('div');\n\n  contents = firstChild.parentNode.insertBefore(contents, firstChild.nextSibling);\n  triggers = firstChild.parentNode.insertBefore(triggers, firstChild.nextSibling);\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var trigger = child.el;\n    var content = document.createElement('div');\n\n    trigger = triggers.appendChild(trigger);\n    content = contents.appendChild(content);\n\n    for (var j = 0; j < child.content.length; j += 1) {\n      content.appendChild(child.content[j]);\n    }\n\n    pairings.push({\n      trigger: trigger,\n      content: content\n    });\n  }\n\n  return {\n    triggers: triggers,\n    contents: contents,\n    pairings: pairings\n  };\n}\n\n/**\n * Returns all groupable content within the supplied node.\n * @param {node} node - A node to traverse for groupable content.\n * @returns {Object[][]}\n */\n/*\n * Recursive function:\n *  Returns all groups of headings that\n *  are elegible to become grouped content.\n */\nfunction getGroupedContentSet(node) {\n  var children = node.children;\n  var childrenWithGroupableContent = [];\n  var groupedContentSet = [];\n\n  if (children.length === 0) {\n    return [];\n  }\n\n  for (var i = 0; i < children.length; i += 1) {\n    var childGroupableContent = getGroupedContentSet(children[i]);\n\n    if (childGroupableContent.length > 0) {\n      childrenWithGroupableContent.push(i);\n      groupedContentSet = groupedContentSet.concat(childGroupableContent);\n    }\n  }\n\n  var headingGroupsInSequence = getHeadingGroupsInSequence(children, childrenWithGroupableContent, 3);\n\n  for (var _i = 0; _i < headingGroupsInSequence.length; _i += 1) {\n    groupedContentSet.push(createGroupedContent(headingGroupsInSequence[_i]));\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * When static parsing isn't enough, there's intelliparse™!\n * Searches through dom content to find heading groupings that\n * are elegible to become tab groups.\n * Assumes that content is in a flattened hierarchy in the dom\n * and interprets increasing heading values as a deeper level of nesting.\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction intelliParse(el) {\n  var children = el.children;\n  var heading = el.querySelector('h1, h2, h3, h4, h5, h6');\n\n  // Fast return if there's no headings\n  if (children.length === 0) return [];\n\n  var rootNode = {\n    el: el,\n    content: null,\n    children: getHeadingTree(heading, children, true)\n  };\n\n  return getGroupedContentSet(rootNode);\n}\n\n/**\n * Parses content from a given node based on a static structure.\n * The structure is as follows:\n * <ul class=\"tabs\">\n *   <li class=\"active\">Tab 1</li>\n *   <li>Tab 2</li>\n *   <li>Tab 3</li>\n * </ul>\n *\n * <ul class=\"tabs-content\">\n *   <li class=\"active\">\n *     <p>Tab 1 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 2 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 3 content goes here.</p>\n *   </li>\n * </ul>\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction staticParse(el) {\n  var groupedContentSet = [];\n\n  var tabs = el.querySelectorAll('.tabs');\n\n  for (var i = 0; i < tabs.length; i += 1) {\n    var triggers = tabs[i].children;\n    var contents = tabs[i].nextElementSibling.children;\n\n    // Only add a tab group if equal triggers to contents\n    if (triggers.length === contents.length) {\n      var length = groupedContentSet.push({\n        triggers: tabs[i],\n        contents: tabs[i].nextElementSibling,\n        pairings: []\n      });\n      var index = length - 1;\n\n      for (var j = 0; j < triggers.length; j += 1) {\n        var trigger = triggers[j];\n        var content = contents[j];\n\n        var pairing = {\n          trigger: trigger,\n          content: content\n        };\n\n        groupedContentSet[index].pairings.push(pairing);\n      }\n    }\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * Returns all groupable content as an array of object arrays.\n * @param {node} content - The node to parse for groupable content.\n * @param {boolean} intelliparse - Whether to use intelligent parsing.\n * @returns {Object[][]}\n */\nfunction parse(content) {\n  var intelliparse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var groupedContentSet = intelliparse ? intelliParse(content) : staticParse(content);\n\n  return groupedContentSet;\n}\n\n/** A class for creating, managing, and destroying groupable content. */\n\nvar GroupedContent = function () {\n  /**\n   * Create grouped content\n   * @param {node} el - The element to search for groupable content in.\n   * @param {Object}  [options] - Additional options\n   * @param {string}  [options.layout] - The layout to display groupable content in.\n   * @param {boolean} [options.intelliparse] - The parsing algorithm used to find content with.\n   */\n  function GroupedContent(el) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, GroupedContent);\n\n    this.namespace = 'grouped-content';\n    this.el = el;\n    this.groupedContentInstances = [];\n\n    var layout = options.layout || 'tabs';\n    var intelliparse = !!options.intelliparse;\n\n    forEach(parse(el, intelliparse), function (groupedContent) {\n      var id = uuidv4();\n      var instance = null;\n      var groupedContentWrapper = document.createElement('div');\n\n      groupedContentWrapper = groupedContent.triggers.parentNode.insertBefore(groupedContentWrapper, groupedContent.triggers.nextSibling);\n\n      addClass(groupedContentWrapper, _this.namespace);\n      addClass(groupedContentWrapper, _this.namespace + '-layout-' + layout);\n\n      groupedContentWrapper.appendChild(groupedContent.triggers);\n      groupedContentWrapper.appendChild(groupedContent.contents);\n\n      groupedContent.namespace = _this.namespace;\n      groupedContent.id = id;\n      groupedContent.triggers.id = _this.namespace + '-' + id + '-triggers';\n      groupedContent.contents.id = _this.namespace + '-' + id + '-contents';\n\n      addClass(groupedContent.triggers, _this.namespace + '-triggers');\n      addClass(groupedContent.contents, _this.namespace + '-contents');\n\n      forEach(groupedContent.pairings, function (pairing) {\n        addClass(pairing.trigger, _this.namespace + '-trigger');\n        addClass(pairing.content, _this.namespace + '-content');\n      });\n\n      switch (layout) {\n        case 'accordion':\n          instance = new AccordionLayout(groupedContent);\n          break;\n        case 'tabs':\n        default:\n          instance = new TabsLayout(groupedContent);\n          break;\n      }\n\n      _this.groupedContentInstances.push({\n        groupedContent: groupedContent,\n        instance: instance\n      });\n    });\n  }\n\n  /** Unload all grouped content instances */\n\n\n  createClass(GroupedContent, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.groupedContentInstances, function (groupedContentInstance) {\n        groupedContentInstance.instance.unload();\n      });\n    }\n  }]);\n  return GroupedContent;\n}();\n\nmodule.exports = GroupedContent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixelunion/grouped-content/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@pixelunion/shopify-cross-border/dist/index.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@pixelunion/shopify-cross-border/dist/index.es.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n/*!\n * @pixelunion/shopify-cross-border v1.0.4\n * (c) 2020 \n */\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar EventHandler_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\nvar EventHandler =\n/** @class */\nfunction () {\n  function EventHandler() {\n    this.events = [];\n  }\n\n  EventHandler.prototype.register = function (el, event, listener) {\n    if (!el || !event || !listener) return null;\n    this.events.push({\n      el: el,\n      event: event,\n      listener: listener\n    });\n    el.addEventListener(event, listener);\n    return {\n      el: el,\n      event: event,\n      listener: listener\n    };\n  };\n\n  EventHandler.prototype.unregister = function (_a) {\n    var el = _a.el,\n        event = _a.event,\n        listener = _a.listener;\n    if (!el || !event || !listener) return null;\n    this.events = this.events.filter(function (e) {\n      return el !== e.el || event !== e.event || listener !== e.listener;\n    });\n    el.removeEventListener(event, listener);\n    return {\n      el: el,\n      event: event,\n      listener: listener\n    };\n  };\n\n  EventHandler.prototype.unregisterAll = function () {\n    this.events.forEach(function (_a) {\n      var el = _a.el,\n          event = _a.event,\n          listener = _a.listener;\n      return el.removeEventListener(event, listener);\n    });\n    this.events = [];\n  };\n\n  return EventHandler;\n}();\n\nexports[\"default\"] = EventHandler;\n});\n\nvar Events = unwrapExports(EventHandler_1);\n\nvar selectors = {\n  disclosureList: '[data-disclosure-list]',\n  disclosureToggle: '[data-disclosure-toggle]',\n  disclosureInput: '[data-disclosure-input]',\n  disclosureOptions: '[data-disclosure-option]'\n};\nvar classes = {\n  listVisible: 'disclosure-list--visible',\n  alternateDrop: 'disclosure-list--alternate-drop'\n};\n\nvar Disclosure = /*#__PURE__*/function () {\n  function Disclosure(el) {\n    _classCallCheck(this, Disclosure);\n\n    this.el = el;\n    this.events = new Events();\n    this.cache = {};\n\n    this._cacheSelectors();\n\n    this._connectOptions();\n\n    this._connectToggle();\n\n    this._onFocusOut();\n  }\n\n  _createClass(Disclosure, [{\n    key: \"_cacheSelectors\",\n    value: function _cacheSelectors() {\n      this.cache = {\n        disclosureList: this.el.querySelector(selectors.disclosureList),\n        disclosureToggle: this.el.querySelector(selectors.disclosureToggle),\n        disclosureInput: this.el.querySelector(selectors.disclosureInput),\n        disclosureOptions: this.el.querySelectorAll(selectors.disclosureOptions)\n      };\n    }\n  }, {\n    key: \"_connectToggle\",\n    value: function _connectToggle() {\n      var _this = this;\n\n      this.events.register(this.cache.disclosureToggle, 'click', function (e) {\n        var ariaExpanded = e.currentTarget.getAttribute('aria-expanded') === 'true';\n        e.currentTarget.setAttribute('aria-expanded', !ariaExpanded);\n\n        _this.cache.disclosureList.classList.remove(classes.alternateDrop);\n\n        _this.cache.disclosureList.classList.toggle(classes.listVisible);\n\n        window.requestAnimationFrame(function () {\n          var _this$cache$disclosur = _this.cache.disclosureList.getBoundingClientRect(),\n              left = _this$cache$disclosur.left,\n              width = _this$cache$disclosur.width;\n\n          var _window = window,\n              innerWidth = _window.innerWidth;\n          var gutter = 30;\n\n          if (left + width + gutter > innerWidth) {\n            _this.cache.disclosureList.classList.add(classes.alternateDrop);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_connectOptions\",\n    value: function _connectOptions() {\n      var _this2 = this;\n\n      var options = this.cache.disclosureOptions;\n\n      for (var i = 0; i < options.length; i++) {\n        var option = options[i];\n        this.events.register(option, 'click', function (e) {\n          return _this2._submitForm(e.currentTarget.dataset.value);\n        });\n      }\n    }\n  }, {\n    key: \"_onFocusOut\",\n    value: function _onFocusOut() {\n      var _this3 = this;\n\n      this.events.register(this.cache.disclosureToggle, 'focusout', function (e) {\n        var disclosureLostFocus = !_this3.el.contains(e.relatedTarget);\n\n        if (disclosureLostFocus) {\n          _this3._hideList();\n        }\n      });\n      this.events.register(this.cache.disclosureList, 'focusout', function (e) {\n        var childInFocus = e.currentTarget.contains(e.relatedTarget);\n\n        var isVisible = _this3.cache.disclosureList.classList.contains(classes.listVisible);\n\n        if (isVisible && !childInFocus) {\n          _this3._hideList();\n        }\n      });\n      this.events.register(this.el, 'keyup', function (e) {\n        if (e.defaultPrevented) {\n          return; // Do nothing if the event was already processed\n        }\n\n        if (e.key !== 'Escape' || e.key !== 'Esc') return;\n\n        _this3._hideList();\n\n        _this3.cache.disclosureToggle.focus();\n      });\n      this.events.register(document.body, 'click', function (e) {\n        var isOption = _this3.el.contains(e.target);\n\n        var isVisible = _this3.cache.disclosureList.classList.contains(classes.listVisible);\n\n        if (isVisible && !isOption) {\n          _this3._hideList();\n        }\n      });\n    }\n  }, {\n    key: \"_submitForm\",\n    value: function _submitForm(value) {\n      this.cache.disclosureInput.value = value;\n      this.el.closest('form').submit();\n    }\n  }, {\n    key: \"_hideList\",\n    value: function _hideList() {\n      this.cache.disclosureList.classList.remove(classes.listVisible);\n      this.cache.disclosureToggle.setAttribute('aria-expanded', false);\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.events.unregisterAll();\n    }\n  }]);\n\n  return Disclosure;\n}();\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Disclosure);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixelunion/shopify-cross-border/dist/index.es.js\n");

/***/ }),

/***/ "./node_modules/@shopify/theme-a11y/theme-a11y.js":
/*!********************************************************!*\
  !*** ./node_modules/@shopify/theme-a11y/theme-a11y.js ***!
  \********************************************************/
/*! exports provided: forceFocus, focusHash, bindInPageLinks, focusable, trapFocus, removeTrapFocus, accessibleLinks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forceFocus\", function() { return forceFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"focusHash\", function() { return focusHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bindInPageLinks\", function() { return bindInPageLinks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"focusable\", function() { return focusable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trapFocus\", function() { return trapFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeTrapFocus\", function() { return removeTrapFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accessibleLinks\", function() { return accessibleLinks; });\n/**\n * A11y Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help make your theme more accessible\n */\n\n/**\n * Moves focus to an HTML element\n * eg for In-page links, after scroll, focus shifts to content area so that\n * next `tab` is where user expects. Used in bindInPageLinks()\n * eg move focus to a modal that is opened. Used in trapFocus()\n *\n * @param {Element} container - Container DOM element to trap focus inside of\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n */\nfunction forceFocus(element, options) {\n  options = options || {};\n\n  var savedTabIndex = element.tabIndex;\n\n  element.tabIndex = -1;\n  element.dataset.tabIndex = savedTabIndex;\n  element.focus();\n  if (typeof options.className !== 'undefined') {\n    element.classList.add(options.className);\n  }\n  element.addEventListener('blur', callback);\n\n  function callback(event) {\n    event.target.removeEventListener(event.type, callback);\n\n    element.tabIndex = savedTabIndex;\n    delete element.dataset.tabIndex;\n    if (typeof options.className !== 'undefined') {\n      element.classList.remove(options.className);\n    }\n  }\n}\n\n/**\n * If there's a hash in the url, focus the appropriate element\n * This compensates for older browsers that do not move keyboard focus to anchor links.\n * Recommendation: To be called once the page in loaded.\n *\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n * @param {string} options.ignore - Selector for elements to not include.\n */\n\nfunction focusHash(options) {\n  options = options || {};\n  var hash = window.location.hash;\n  var element = document.getElementById(hash.slice(1));\n\n  // if we are to ignore this element, early return\n  if (element && options.ignore && element.matches(options.ignore)) {\n    return false;\n  }\n\n  if (hash && element) {\n    forceFocus(element, options);\n  }\n}\n\n/**\n * When an in-page (url w/hash) link is clicked, focus the appropriate element\n * This compensates for older browsers that do not move keyboard focus to anchor links.\n * Recommendation: To be called once the page in loaded.\n *\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n * @param {string} options.ignore - CSS selector for elements to not include.\n */\n\nfunction bindInPageLinks(options) {\n  options = options || {};\n  var links = Array.prototype.slice.call(\n    document.querySelectorAll('a[href^=\"#\"]')\n  );\n\n  return links.filter(function(link) {\n    if (link.hash === '#' || link.hash === '') {\n      return false;\n    }\n\n    if (options.ignore && link.matches(options.ignore)) {\n      return false;\n    }\n\n    var element = document.querySelector(link.hash);\n\n    if (!element) {\n      return false;\n    }\n\n    link.addEventListener('click', function() {\n      forceFocus(element, options);\n    });\n\n    return true;\n  });\n}\n\nfunction focusable(container) {\n  var elements = Array.prototype.slice.call(\n    container.querySelectorAll(\n      '[tabindex],' +\n        '[draggable],' +\n        'a[href],' +\n        'area,' +\n        'button:enabled,' +\n        'input:not([type=hidden]):enabled,' +\n        'object,' +\n        'select:enabled,' +\n        'textarea:enabled'\n    )\n  );\n\n  // Filter out elements that are not visible.\n  // Copied from jQuery https://github.com/jquery/jquery/blob/2d4f53416e5f74fa98e0c1d66b6f3c285a12f0ce/src/css/hiddenVisibleSelectors.js\n  return elements.filter(function(element) {\n    return !!(\n      element.offsetWidth ||\n      element.offsetHeight ||\n      element.getClientRects().length\n    );\n  });\n}\n\n/**\n * Traps the focus in a particular container\n *\n * @param {Element} container - Container DOM element to trap focus inside of\n * @param {Element} elementToFocus - Element to be focused on first\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n */\n\nvar trapFocusHandlers = {};\n\nfunction trapFocus(container, options) {\n  options = options || {};\n  var elements = focusable(container);\n  var elementToFocus = options.elementToFocus || container;\n  var first = elements[0];\n  var last = elements[elements.length - 1];\n\n  removeTrapFocus();\n\n  trapFocusHandlers.focusin = function(event) {\n    if (container !== event.target && !container.contains(event.target)) {\n      first.focus();\n    }\n\n    if (\n      event.target !== container &&\n      event.target !== last &&\n      event.target !== first\n    )\n      return;\n    document.addEventListener('keydown', trapFocusHandlers.keydown);\n  };\n\n  trapFocusHandlers.focusout = function() {\n    document.removeEventListener('keydown', trapFocusHandlers.keydown);\n  };\n\n  trapFocusHandlers.keydown = function(event) {\n    if (event.keyCode !== 9) return; // If not TAB key\n\n    // On the last focusable element and tab forward, focus the first element.\n    if (event.target === last && !event.shiftKey) {\n      event.preventDefault();\n      first.focus();\n    }\n\n    //  On the first focusable element and tab backward, focus the last element.\n    if (\n      (event.target === container || event.target === first) &&\n      event.shiftKey\n    ) {\n      event.preventDefault();\n      last.focus();\n    }\n  };\n\n  document.addEventListener('focusout', trapFocusHandlers.focusout);\n  document.addEventListener('focusin', trapFocusHandlers.focusin);\n\n  forceFocus(elementToFocus, options);\n}\n\n/**\n * Removes the trap of focus from the page\n */\nfunction removeTrapFocus() {\n  document.removeEventListener('focusin', trapFocusHandlers.focusin);\n  document.removeEventListener('focusout', trapFocusHandlers.focusout);\n  document.removeEventListener('keydown', trapFocusHandlers.keydown);\n}\n\n/**\n * Add a preventive message to external links and links that open to a new window.\n * @param {string} elements - Specific elements to be targeted\n * @param {object} options.messages - Custom messages to overwrite with keys: newWindow, external, newWindowExternal\n * @param {string} options.messages.newWindow - When the link opens in a new window (e.g. target=\"_blank\")\n * @param {string} options.messages.external - When the link is to a different host domain.\n * @param {string} options.messages.newWindowExternal - When the link is to a different host domain and opens in a new window.\n * @param {object} options.prefix - Prefix to namespace \"id\" of the messages\n */\nfunction accessibleLinks(elements, options) {\n  if (typeof elements !== 'string') {\n    throw new TypeError(elements + ' is not a String.');\n  }\n\n  elements = document.querySelectorAll(elements);\n\n  if (elements.length === 0) {\n    return;\n  }\n\n  options = options || {};\n  options.messages = options.messages || {};\n\n  var messages = {\n    newWindow: options.messages.newWindow || 'Opens in a new window.',\n    external: options.messages.external || 'Opens external website.',\n    newWindowExternal:\n      options.messages.newWindowExternal ||\n      'Opens external website in a new window.'\n  };\n\n  var prefix = options.prefix || 'a11y';\n\n  var messageSelectors = {\n    newWindow: prefix + '-new-window-message',\n    external: prefix + '-external-message',\n    newWindowExternal: prefix + '-new-window-external-message'\n  };\n\n  function generateHTML(messages) {\n    var container = document.createElement('ul');\n    var htmlMessages = Object.keys(messages).reduce(function(html, key) {\n      return (html +=\n        '<li id=' + messageSelectors[key] + '>' + messages[key] + '</li>');\n    }, '');\n\n    container.setAttribute('hidden', true);\n    container.innerHTML = htmlMessages;\n\n    document.body.appendChild(container);\n  }\n\n  function externalSite(link) {\n    return link.hostname !== window.location.hostname;\n  }\n\n  elements.forEach(function(link) {\n    var target = link.getAttribute('target');\n    var rel = link.getAttribute('rel');\n    var isExternal = externalSite(link);\n    var isTargetBlank = target === '_blank';\n    var isRelNoopenerEmpty = rel === null || rel.indexOf('noopener') === -1;\n\n    if (isTargetBlank && isRelNoopenerEmpty) {\n      link.setAttribute('rel', 'noopener');\n    }\n\n    if (isExternal && isTargetBlank) {\n      link.setAttribute('aria-describedby', messageSelectors.newWindowExternal);\n    } else if (isExternal) {\n      link.setAttribute('aria-describedby', messageSelectors.external);\n    } else if (isTargetBlank) {\n      link.setAttribute('aria-describedby', messageSelectors.newWindow);\n    }\n  });\n\n  generateHTML(messages);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@shopify/theme-a11y/theme-a11y.js\n");

/***/ }),

/***/ "./node_modules/@shopify/theme-addresses/theme-addresses.js":
/*!******************************************************************!*\
  !*** ./node_modules/@shopify/theme-addresses/theme-addresses.js ***!
  \******************************************************************/
/*! exports provided: CountryProvinceSelector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CountryProvinceSelector\", function() { return CountryProvinceSelector; });\n/**\n * CountryProvinceSelector Constructor\n * @param {String} countryOptions the country options in html string\n */\nfunction CountryProvinceSelector(countryOptions) {\n  if (typeof countryOptions !== 'string') {\n    throw new TypeError(countryOptions + ' is not a string.');\n  }\n  this.countryOptions = countryOptions;\n}\n\n/**\n * Builds the country and province selector with the given node element\n * @param {Node} countryNodeElement The <select> element for country\n * @param {Node} provinceNodeElement The <select> element for province\n * @param {Object} options Additional settings available\n * @param {CountryProvinceSelector~onCountryChange} options.onCountryChange callback after a country `change` event\n * @param {CountryProvinceSelector~onProvinceChange} options.onProvinceChange callback after a province `change` event\n */\nCountryProvinceSelector.prototype.build = function (countryNodeElement, provinceNodeElement, options) {\n  if (typeof countryNodeElement !== 'object') {\n    throw new TypeError(countryNodeElement + ' is not a object.');\n  }\n\n  if (typeof provinceNodeElement !== 'object') {\n    throw new TypeError(provinceNodeElement + ' is not a object.');\n  }\n\n  var defaultValue = countryNodeElement.getAttribute('data-default');\n  options = options || {}\n\n  countryNodeElement.innerHTML = this.countryOptions;\n  countryNodeElement.value = defaultValue;\n\n  if (defaultValue && getOption(countryNodeElement, defaultValue)) {\n    var provinces = buildProvince(countryNodeElement, provinceNodeElement, defaultValue);\n    options.onCountryChange && options.onCountryChange(provinces, provinceNodeElement, countryNodeElement);\n  }\n\n  // Listen for value change on the country select\n  countryNodeElement.addEventListener('change', function (event) {\n    var target = event.target;\n    var selectedValue = target.value;\n    \n    var provinces = buildProvince(target, provinceNodeElement, selectedValue);\n    options.onCountryChange && options.onCountryChange(provinces, provinceNodeElement, countryNodeElement);\n  });\n\n  options.onProvinceChange && provinceNodeElement.addEventListener('change', options.onProvinceChange);\n}\n\n/**\n * This callback is called after a user interacted with a country `<select>`\n * @callback CountryProvinceSelector~onCountryChange\n * @param {array} provinces the parsed provinces\n * @param {Node} provinceNodeElement province `<select>` element\n * @param {Node} countryNodeElement country `<select>` element\n */\n\n /**\n * This callback is called after a user interacted with a province `<select>`\n * @callback CountryProvinceSelector~onProvinceChange\n * @param {Event} event the province selector `change` event object\n */\n\n/**\n * Returns the <option> with the specified value from the\n * given node element\n * A null is returned if no such <option> is found\n */\nfunction getOption(nodeElement, value) {\n  return nodeElement.querySelector('option[value=\"' + value +'\"]')\n}\n\n/**\n * Builds the options for province selector\n */\nfunction buildOptions (provinceNodeElement, provinces) {\n  var defaultValue = provinceNodeElement.getAttribute('data-default');\n\n  provinces.forEach(function (option) {\n    var optionElement = document.createElement('option');\n    optionElement.value = option[0];\n    optionElement.textContent = option[1];\n\n    provinceNodeElement.appendChild(optionElement);\n  })\n\n  if (defaultValue && getOption(provinceNodeElement, defaultValue)) {\n    provinceNodeElement.value = defaultValue;\n  }\n}\n\n/**\n * Builds the province selector\n */\nfunction buildProvince (countryNodeElement, provinceNodeElement, selectedValue) {\n  var selectedOption = getOption(countryNodeElement, selectedValue);\n  var provinces = JSON.parse(selectedOption.getAttribute('data-provinces'));\n\n  provinceNodeElement.options.length = 0;\n\n  if (provinces.length) {\n    buildOptions(provinceNodeElement, provinces)\n  }\n\n  return provinces;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHNob3BpZnkvdGhlbWUtYWRkcmVzc2VzL3RoZW1lLWFkZHJlc3Nlcy5qcz8xOWI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsT0FBTztBQUNsQixXQUFXLHdDQUF3QztBQUNuRCxXQUFXLHlDQUF5QztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsS0FBSztBQUNoQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNob3BpZnkvdGhlbWUtYWRkcmVzc2VzL3RoZW1lLWFkZHJlc3Nlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ291bnRyeVByb3ZpbmNlU2VsZWN0b3IgQ29uc3RydWN0b3JcbiAqIEBwYXJhbSB7U3RyaW5nfSBjb3VudHJ5T3B0aW9ucyB0aGUgY291bnRyeSBvcHRpb25zIGluIGh0bWwgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBDb3VudHJ5UHJvdmluY2VTZWxlY3Rvcihjb3VudHJ5T3B0aW9ucykge1xuICBpZiAodHlwZW9mIGNvdW50cnlPcHRpb25zICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoY291bnRyeU9wdGlvbnMgKyAnIGlzIG5vdCBhIHN0cmluZy4nKTtcbiAgfVxuICB0aGlzLmNvdW50cnlPcHRpb25zID0gY291bnRyeU9wdGlvbnM7XG59XG5cbi8qKlxuICogQnVpbGRzIHRoZSBjb3VudHJ5IGFuZCBwcm92aW5jZSBzZWxlY3RvciB3aXRoIHRoZSBnaXZlbiBub2RlIGVsZW1lbnRcbiAqIEBwYXJhbSB7Tm9kZX0gY291bnRyeU5vZGVFbGVtZW50IFRoZSA8c2VsZWN0PiBlbGVtZW50IGZvciBjb3VudHJ5XG4gKiBAcGFyYW0ge05vZGV9IHByb3ZpbmNlTm9kZUVsZW1lbnQgVGhlIDxzZWxlY3Q+IGVsZW1lbnQgZm9yIHByb3ZpbmNlXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBBZGRpdGlvbmFsIHNldHRpbmdzIGF2YWlsYWJsZVxuICogQHBhcmFtIHtDb3VudHJ5UHJvdmluY2VTZWxlY3Rvcn5vbkNvdW50cnlDaGFuZ2V9IG9wdGlvbnMub25Db3VudHJ5Q2hhbmdlIGNhbGxiYWNrIGFmdGVyIGEgY291bnRyeSBgY2hhbmdlYCBldmVudFxuICogQHBhcmFtIHtDb3VudHJ5UHJvdmluY2VTZWxlY3Rvcn5vblByb3ZpbmNlQ2hhbmdlfSBvcHRpb25zLm9uUHJvdmluY2VDaGFuZ2UgY2FsbGJhY2sgYWZ0ZXIgYSBwcm92aW5jZSBgY2hhbmdlYCBldmVudFxuICovXG5Db3VudHJ5UHJvdmluY2VTZWxlY3Rvci5wcm90b3R5cGUuYnVpbGQgPSBmdW5jdGlvbiAoY291bnRyeU5vZGVFbGVtZW50LCBwcm92aW5jZU5vZGVFbGVtZW50LCBvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgY291bnRyeU5vZGVFbGVtZW50ICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoY291bnRyeU5vZGVFbGVtZW50ICsgJyBpcyBub3QgYSBvYmplY3QuJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByb3ZpbmNlTm9kZUVsZW1lbnQgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihwcm92aW5jZU5vZGVFbGVtZW50ICsgJyBpcyBub3QgYSBvYmplY3QuJyk7XG4gIH1cblxuICB2YXIgZGVmYXVsdFZhbHVlID0gY291bnRyeU5vZGVFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1kZWZhdWx0Jyk7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgY291bnRyeU5vZGVFbGVtZW50LmlubmVySFRNTCA9IHRoaXMuY291bnRyeU9wdGlvbnM7XG4gIGNvdW50cnlOb2RlRWxlbWVudC52YWx1ZSA9IGRlZmF1bHRWYWx1ZTtcblxuICBpZiAoZGVmYXVsdFZhbHVlICYmIGdldE9wdGlvbihjb3VudHJ5Tm9kZUVsZW1lbnQsIGRlZmF1bHRWYWx1ZSkpIHtcbiAgICB2YXIgcHJvdmluY2VzID0gYnVpbGRQcm92aW5jZShjb3VudHJ5Tm9kZUVsZW1lbnQsIHByb3ZpbmNlTm9kZUVsZW1lbnQsIGRlZmF1bHRWYWx1ZSk7XG4gICAgb3B0aW9ucy5vbkNvdW50cnlDaGFuZ2UgJiYgb3B0aW9ucy5vbkNvdW50cnlDaGFuZ2UocHJvdmluY2VzLCBwcm92aW5jZU5vZGVFbGVtZW50LCBjb3VudHJ5Tm9kZUVsZW1lbnQpO1xuICB9XG5cbiAgLy8gTGlzdGVuIGZvciB2YWx1ZSBjaGFuZ2Ugb24gdGhlIGNvdW50cnkgc2VsZWN0XG4gIGNvdW50cnlOb2RlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgIHZhciBzZWxlY3RlZFZhbHVlID0gdGFyZ2V0LnZhbHVlO1xuICAgIFxuICAgIHZhciBwcm92aW5jZXMgPSBidWlsZFByb3ZpbmNlKHRhcmdldCwgcHJvdmluY2VOb2RlRWxlbWVudCwgc2VsZWN0ZWRWYWx1ZSk7XG4gICAgb3B0aW9ucy5vbkNvdW50cnlDaGFuZ2UgJiYgb3B0aW9ucy5vbkNvdW50cnlDaGFuZ2UocHJvdmluY2VzLCBwcm92aW5jZU5vZGVFbGVtZW50LCBjb3VudHJ5Tm9kZUVsZW1lbnQpO1xuICB9KTtcblxuICBvcHRpb25zLm9uUHJvdmluY2VDaGFuZ2UgJiYgcHJvdmluY2VOb2RlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvcHRpb25zLm9uUHJvdmluY2VDaGFuZ2UpO1xufVxuXG4vKipcbiAqIFRoaXMgY2FsbGJhY2sgaXMgY2FsbGVkIGFmdGVyIGEgdXNlciBpbnRlcmFjdGVkIHdpdGggYSBjb3VudHJ5IGA8c2VsZWN0PmBcbiAqIEBjYWxsYmFjayBDb3VudHJ5UHJvdmluY2VTZWxlY3Rvcn5vbkNvdW50cnlDaGFuZ2VcbiAqIEBwYXJhbSB7YXJyYXl9IHByb3ZpbmNlcyB0aGUgcGFyc2VkIHByb3ZpbmNlc1xuICogQHBhcmFtIHtOb2RlfSBwcm92aW5jZU5vZGVFbGVtZW50IHByb3ZpbmNlIGA8c2VsZWN0PmAgZWxlbWVudFxuICogQHBhcmFtIHtOb2RlfSBjb3VudHJ5Tm9kZUVsZW1lbnQgY291bnRyeSBgPHNlbGVjdD5gIGVsZW1lbnRcbiAqL1xuXG4gLyoqXG4gKiBUaGlzIGNhbGxiYWNrIGlzIGNhbGxlZCBhZnRlciBhIHVzZXIgaW50ZXJhY3RlZCB3aXRoIGEgcHJvdmluY2UgYDxzZWxlY3Q+YFxuICogQGNhbGxiYWNrIENvdW50cnlQcm92aW5jZVNlbGVjdG9yfm9uUHJvdmluY2VDaGFuZ2VcbiAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IHRoZSBwcm92aW5jZSBzZWxlY3RvciBgY2hhbmdlYCBldmVudCBvYmplY3RcbiAqL1xuXG4vKipcbiAqIFJldHVybnMgdGhlIDxvcHRpb24+IHdpdGggdGhlIHNwZWNpZmllZCB2YWx1ZSBmcm9tIHRoZVxuICogZ2l2ZW4gbm9kZSBlbGVtZW50XG4gKiBBIG51bGwgaXMgcmV0dXJuZWQgaWYgbm8gc3VjaCA8b3B0aW9uPiBpcyBmb3VuZFxuICovXG5mdW5jdGlvbiBnZXRPcHRpb24obm9kZUVsZW1lbnQsIHZhbHVlKSB7XG4gIHJldHVybiBub2RlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdvcHRpb25bdmFsdWU9XCInICsgdmFsdWUgKydcIl0nKVxufVxuXG4vKipcbiAqIEJ1aWxkcyB0aGUgb3B0aW9ucyBmb3IgcHJvdmluY2Ugc2VsZWN0b3JcbiAqL1xuZnVuY3Rpb24gYnVpbGRPcHRpb25zIChwcm92aW5jZU5vZGVFbGVtZW50LCBwcm92aW5jZXMpIHtcbiAgdmFyIGRlZmF1bHRWYWx1ZSA9IHByb3ZpbmNlTm9kZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWRlZmF1bHQnKTtcblxuICBwcm92aW5jZXMuZm9yRWFjaChmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgdmFyIG9wdGlvbkVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICBvcHRpb25FbGVtZW50LnZhbHVlID0gb3B0aW9uWzBdO1xuICAgIG9wdGlvbkVsZW1lbnQudGV4dENvbnRlbnQgPSBvcHRpb25bMV07XG5cbiAgICBwcm92aW5jZU5vZGVFbGVtZW50LmFwcGVuZENoaWxkKG9wdGlvbkVsZW1lbnQpO1xuICB9KVxuXG4gIGlmIChkZWZhdWx0VmFsdWUgJiYgZ2V0T3B0aW9uKHByb3ZpbmNlTm9kZUVsZW1lbnQsIGRlZmF1bHRWYWx1ZSkpIHtcbiAgICBwcm92aW5jZU5vZGVFbGVtZW50LnZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICB9XG59XG5cbi8qKlxuICogQnVpbGRzIHRoZSBwcm92aW5jZSBzZWxlY3RvclxuICovXG5mdW5jdGlvbiBidWlsZFByb3ZpbmNlIChjb3VudHJ5Tm9kZUVsZW1lbnQsIHByb3ZpbmNlTm9kZUVsZW1lbnQsIHNlbGVjdGVkVmFsdWUpIHtcbiAgdmFyIHNlbGVjdGVkT3B0aW9uID0gZ2V0T3B0aW9uKGNvdW50cnlOb2RlRWxlbWVudCwgc2VsZWN0ZWRWYWx1ZSk7XG4gIHZhciBwcm92aW5jZXMgPSBKU09OLnBhcnNlKHNlbGVjdGVkT3B0aW9uLmdldEF0dHJpYnV0ZSgnZGF0YS1wcm92aW5jZXMnKSk7XG5cbiAgcHJvdmluY2VOb2RlRWxlbWVudC5vcHRpb25zLmxlbmd0aCA9IDA7XG5cbiAgaWYgKHByb3ZpbmNlcy5sZW5ndGgpIHtcbiAgICBidWlsZE9wdGlvbnMocHJvdmluY2VOb2RlRWxlbWVudCwgcHJvdmluY2VzKVxuICB9XG5cbiAgcmV0dXJuIHByb3ZpbmNlcztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@shopify/theme-addresses/theme-addresses.js\n");

/***/ }),

/***/ "./node_modules/desandro-matches-selector/matches-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3Rvci9tYXRjaGVzLXNlbGVjdG9yLmpzP2M3NDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sSUFBeUM7QUFDaEQ7QUFDQSxJQUFJLG9DQUFRLE9BQU87QUFBQTtBQUFBO0FBQUE7QUFBQSxvR0FBRTtBQUNyQixHQUFHLE1BQU0sRUFNTjs7QUFFSCxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yL21hdGNoZXMtc2VsZWN0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG1hdGNoZXNTZWxlY3RvciB2Mi4wLjJcbiAqIG1hdGNoZXNTZWxlY3RvciggZWxlbWVudCwgJy5zZWxlY3RvcicgKVxuICogTUlUIGxpY2Vuc2VcbiAqL1xuXG4vKmpzaGludCBicm93c2VyOiB0cnVlLCBzdHJpY3Q6IHRydWUsIHVuZGVmOiB0cnVlLCB1bnVzZWQ6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvKmdsb2JhbCBkZWZpbmU6IGZhbHNlLCBtb2R1bGU6IGZhbHNlICovXG4gICd1c2Ugc3RyaWN0JztcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EXG4gICAgZGVmaW5lKCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIHdpbmRvdy5tYXRjaGVzU2VsZWN0b3IgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIG1hdGNoZXNNZXRob2QgPSAoIGZ1bmN0aW9uKCkge1xuICAgIHZhciBFbGVtUHJvdG8gPSB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGU7XG4gICAgLy8gY2hlY2sgZm9yIHRoZSBzdGFuZGFyZCBtZXRob2QgbmFtZSBmaXJzdFxuICAgIGlmICggRWxlbVByb3RvLm1hdGNoZXMgKSB7XG4gICAgICByZXR1cm4gJ21hdGNoZXMnO1xuICAgIH1cbiAgICAvLyBjaGVjayB1bi1wcmVmaXhlZFxuICAgIGlmICggRWxlbVByb3RvLm1hdGNoZXNTZWxlY3RvciApIHtcbiAgICAgIHJldHVybiAnbWF0Y2hlc1NlbGVjdG9yJztcbiAgICB9XG4gICAgLy8gY2hlY2sgdmVuZG9yIHByZWZpeGVzXG4gICAgdmFyIHByZWZpeGVzID0gWyAnd2Via2l0JywgJ21veicsICdtcycsICdvJyBdO1xuXG4gICAgZm9yICggdmFyIGk9MDsgaSA8IHByZWZpeGVzLmxlbmd0aDsgaSsrICkge1xuICAgICAgdmFyIHByZWZpeCA9IHByZWZpeGVzW2ldO1xuICAgICAgdmFyIG1ldGhvZCA9IHByZWZpeCArICdNYXRjaGVzU2VsZWN0b3InO1xuICAgICAgaWYgKCBFbGVtUHJvdG9bIG1ldGhvZCBdICkge1xuICAgICAgICByZXR1cm4gbWV0aG9kO1xuICAgICAgfVxuICAgIH1cbiAgfSkoKTtcblxuICByZXR1cm4gZnVuY3Rpb24gbWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBzZWxlY3RvciApIHtcbiAgICByZXR1cm4gZWxlbVsgbWF0Y2hlc01ldGhvZCBdKCBzZWxlY3RvciApO1xuICB9O1xuXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/desandro-matches-selector/matches-selector.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/BoundingBox.js":
/*!***************************************************!*\
  !*** ./node_modules/drift-zoom/es/BoundingBox.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BoundingBox; });\n/* harmony import */ var _util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/throwIfMissing */ \"./node_modules/drift-zoom/es/util/throwIfMissing.js\");\n/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/dom */ \"./node_modules/drift-zoom/es/util/dom.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar BoundingBox =\n/*#__PURE__*/\nfunction () {\n  function BoundingBox(options) {\n    _classCallCheck(this, BoundingBox);\n\n    this.isShowing = false;\n    var _options$namespace = options.namespace,\n        namespace = _options$namespace === void 0 ? null : _options$namespace,\n        _options$zoomFactor = options.zoomFactor,\n        zoomFactor = _options$zoomFactor === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$zoomFactor,\n        _options$containerEl = options.containerEl,\n        containerEl = _options$containerEl === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$containerEl;\n    this.settings = {\n      namespace: namespace,\n      zoomFactor: zoomFactor,\n      containerEl: containerEl\n    };\n    this.openClasses = this._buildClasses(\"open\");\n\n    this._buildElement();\n  }\n\n  _createClass(BoundingBox, [{\n    key: \"_buildClasses\",\n    value: function _buildClasses(suffix) {\n      var classes = [\"drift-\".concat(suffix)];\n      var ns = this.settings.namespace;\n\n      if (ns) {\n        classes.push(\"\".concat(ns, \"-\").concat(suffix));\n      }\n\n      return classes;\n    }\n  }, {\n    key: \"_buildElement\",\n    value: function _buildElement() {\n      this.el = document.createElement(\"div\");\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this._buildClasses(\"bounding-box\"));\n    }\n  }, {\n    key: \"show\",\n    value: function show(zoomPaneWidth, zoomPaneHeight) {\n      this.isShowing = true;\n      this.settings.containerEl.appendChild(this.el);\n      var style = this.el.style;\n      style.width = \"\".concat(Math.round(zoomPaneWidth / this.settings.zoomFactor), \"px\");\n      style.height = \"\".concat(Math.round(zoomPaneHeight / this.settings.zoomFactor), \"px\");\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this.openClasses);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.isShowing) {\n        this.settings.containerEl.removeChild(this.el);\n      }\n\n      this.isShowing = false;\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.openClasses);\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(percentageOffsetX, percentageOffsetY, triggerRect) {\n      var pageXOffset = window.pageXOffset;\n      var pageYOffset = window.pageYOffset;\n      var inlineLeft = triggerRect.left + percentageOffsetX * triggerRect.width - this.el.clientWidth / 2 + pageXOffset;\n      var inlineTop = triggerRect.top + percentageOffsetY * triggerRect.height - this.el.clientHeight / 2 + pageYOffset;\n\n      if (inlineLeft < triggerRect.left + pageXOffset) {\n        inlineLeft = triggerRect.left + pageXOffset;\n      } else if (inlineLeft + this.el.clientWidth > triggerRect.left + triggerRect.width + pageXOffset) {\n        inlineLeft = triggerRect.left + triggerRect.width - this.el.clientWidth + pageXOffset;\n      }\n\n      if (inlineTop < triggerRect.top + pageYOffset) {\n        inlineTop = triggerRect.top + pageYOffset;\n      } else if (inlineTop + this.el.clientHeight > triggerRect.top + triggerRect.height + pageYOffset) {\n        inlineTop = triggerRect.top + triggerRect.height - this.el.clientHeight + pageYOffset;\n      }\n\n      this.el.style.left = \"\".concat(inlineLeft, \"px\");\n      this.el.style.top = \"\".concat(inlineTop, \"px\");\n    }\n  }]);\n\n  return BoundingBox;\n}();\n\n\n//# sourceMappingURL=BoundingBox.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZHJpZnQtem9vbS9lcy9Cb3VuZGluZ0JveC5qcz9jMTU1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUU7O0FBRTNULDZEQUE2RCxzRUFBc0UsOERBQThELG9CQUFvQjs7QUFFbEs7QUFDSTs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxvRUFBYztBQUNwRTtBQUNBLHdEQUF3RCxvRUFBYztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNERBQVU7QUFDaEI7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDREQUFVO0FBQ2hCO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLCtEQUFhO0FBQ25CO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVpQztBQUNsQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kcmlmdC16b29tL2VzL0JvdW5kaW5nQm94LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5pbXBvcnQgdGhyb3dJZk1pc3NpbmcgZnJvbSBcIi4vdXRpbC90aHJvd0lmTWlzc2luZ1wiO1xuaW1wb3J0IHsgYWRkQ2xhc3NlcywgcmVtb3ZlQ2xhc3NlcyB9IGZyb20gXCIuL3V0aWwvZG9tXCI7XG5cbnZhciBCb3VuZGluZ0JveCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEJvdW5kaW5nQm94KG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQm91bmRpbmdCb3gpO1xuXG4gICAgdGhpcy5pc1Nob3dpbmcgPSBmYWxzZTtcbiAgICB2YXIgX29wdGlvbnMkbmFtZXNwYWNlID0gb3B0aW9ucy5uYW1lc3BhY2UsXG4gICAgICAgIG5hbWVzcGFjZSA9IF9vcHRpb25zJG5hbWVzcGFjZSA9PT0gdm9pZCAwID8gbnVsbCA6IF9vcHRpb25zJG5hbWVzcGFjZSxcbiAgICAgICAgX29wdGlvbnMkem9vbUZhY3RvciA9IG9wdGlvbnMuem9vbUZhY3RvcixcbiAgICAgICAgem9vbUZhY3RvciA9IF9vcHRpb25zJHpvb21GYWN0b3IgPT09IHZvaWQgMCA/IHRocm93SWZNaXNzaW5nKCkgOiBfb3B0aW9ucyR6b29tRmFjdG9yLFxuICAgICAgICBfb3B0aW9ucyRjb250YWluZXJFbCA9IG9wdGlvbnMuY29udGFpbmVyRWwsXG4gICAgICAgIGNvbnRhaW5lckVsID0gX29wdGlvbnMkY29udGFpbmVyRWwgPT09IHZvaWQgMCA/IHRocm93SWZNaXNzaW5nKCkgOiBfb3B0aW9ucyRjb250YWluZXJFbDtcbiAgICB0aGlzLnNldHRpbmdzID0ge1xuICAgICAgbmFtZXNwYWNlOiBuYW1lc3BhY2UsXG4gICAgICB6b29tRmFjdG9yOiB6b29tRmFjdG9yLFxuICAgICAgY29udGFpbmVyRWw6IGNvbnRhaW5lckVsXG4gICAgfTtcbiAgICB0aGlzLm9wZW5DbGFzc2VzID0gdGhpcy5fYnVpbGRDbGFzc2VzKFwib3BlblwiKTtcblxuICAgIHRoaXMuX2J1aWxkRWxlbWVudCgpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEJvdW5kaW5nQm94LCBbe1xuICAgIGtleTogXCJfYnVpbGRDbGFzc2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9idWlsZENsYXNzZXMoc3VmZml4KSB7XG4gICAgICB2YXIgY2xhc3NlcyA9IFtcImRyaWZ0LVwiLmNvbmNhdChzdWZmaXgpXTtcbiAgICAgIHZhciBucyA9IHRoaXMuc2V0dGluZ3MubmFtZXNwYWNlO1xuXG4gICAgICBpZiAobnMpIHtcbiAgICAgICAgY2xhc3Nlcy5wdXNoKFwiXCIuY29uY2F0KG5zLCBcIi1cIikuY29uY2F0KHN1ZmZpeCkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY2xhc3NlcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX2J1aWxkRWxlbWVudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfYnVpbGRFbGVtZW50KCkge1xuICAgICAgdGhpcy5lbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBhZGRDbGFzc2VzKHRoaXMuZWwsIHRoaXMuX2J1aWxkQ2xhc3NlcyhcImJvdW5kaW5nLWJveFwiKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNob3dcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvdyh6b29tUGFuZVdpZHRoLCB6b29tUGFuZUhlaWdodCkge1xuICAgICAgdGhpcy5pc1Nob3dpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5zZXR0aW5ncy5jb250YWluZXJFbC5hcHBlbmRDaGlsZCh0aGlzLmVsKTtcbiAgICAgIHZhciBzdHlsZSA9IHRoaXMuZWwuc3R5bGU7XG4gICAgICBzdHlsZS53aWR0aCA9IFwiXCIuY29uY2F0KE1hdGgucm91bmQoem9vbVBhbmVXaWR0aCAvIHRoaXMuc2V0dGluZ3Muem9vbUZhY3RvciksIFwicHhcIik7XG4gICAgICBzdHlsZS5oZWlnaHQgPSBcIlwiLmNvbmNhdChNYXRoLnJvdW5kKHpvb21QYW5lSGVpZ2h0IC8gdGhpcy5zZXR0aW5ncy56b29tRmFjdG9yKSwgXCJweFwiKTtcbiAgICAgIGFkZENsYXNzZXModGhpcy5lbCwgdGhpcy5vcGVuQ2xhc3Nlcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhpZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGlkZSgpIHtcbiAgICAgIGlmICh0aGlzLmlzU2hvd2luZykge1xuICAgICAgICB0aGlzLnNldHRpbmdzLmNvbnRhaW5lckVsLnJlbW92ZUNoaWxkKHRoaXMuZWwpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmlzU2hvd2luZyA9IGZhbHNlO1xuICAgICAgcmVtb3ZlQ2xhc3Nlcyh0aGlzLmVsLCB0aGlzLm9wZW5DbGFzc2VzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0UG9zaXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UG9zaXRpb24ocGVyY2VudGFnZU9mZnNldFgsIHBlcmNlbnRhZ2VPZmZzZXRZLCB0cmlnZ2VyUmVjdCkge1xuICAgICAgdmFyIHBhZ2VYT2Zmc2V0ID0gd2luZG93LnBhZ2VYT2Zmc2V0O1xuICAgICAgdmFyIHBhZ2VZT2Zmc2V0ID0gd2luZG93LnBhZ2VZT2Zmc2V0O1xuICAgICAgdmFyIGlubGluZUxlZnQgPSB0cmlnZ2VyUmVjdC5sZWZ0ICsgcGVyY2VudGFnZU9mZnNldFggKiB0cmlnZ2VyUmVjdC53aWR0aCAtIHRoaXMuZWwuY2xpZW50V2lkdGggLyAyICsgcGFnZVhPZmZzZXQ7XG4gICAgICB2YXIgaW5saW5lVG9wID0gdHJpZ2dlclJlY3QudG9wICsgcGVyY2VudGFnZU9mZnNldFkgKiB0cmlnZ2VyUmVjdC5oZWlnaHQgLSB0aGlzLmVsLmNsaWVudEhlaWdodCAvIDIgKyBwYWdlWU9mZnNldDtcblxuICAgICAgaWYgKGlubGluZUxlZnQgPCB0cmlnZ2VyUmVjdC5sZWZ0ICsgcGFnZVhPZmZzZXQpIHtcbiAgICAgICAgaW5saW5lTGVmdCA9IHRyaWdnZXJSZWN0LmxlZnQgKyBwYWdlWE9mZnNldDtcbiAgICAgIH0gZWxzZSBpZiAoaW5saW5lTGVmdCArIHRoaXMuZWwuY2xpZW50V2lkdGggPiB0cmlnZ2VyUmVjdC5sZWZ0ICsgdHJpZ2dlclJlY3Qud2lkdGggKyBwYWdlWE9mZnNldCkge1xuICAgICAgICBpbmxpbmVMZWZ0ID0gdHJpZ2dlclJlY3QubGVmdCArIHRyaWdnZXJSZWN0LndpZHRoIC0gdGhpcy5lbC5jbGllbnRXaWR0aCArIHBhZ2VYT2Zmc2V0O1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5saW5lVG9wIDwgdHJpZ2dlclJlY3QudG9wICsgcGFnZVlPZmZzZXQpIHtcbiAgICAgICAgaW5saW5lVG9wID0gdHJpZ2dlclJlY3QudG9wICsgcGFnZVlPZmZzZXQ7XG4gICAgICB9IGVsc2UgaWYgKGlubGluZVRvcCArIHRoaXMuZWwuY2xpZW50SGVpZ2h0ID4gdHJpZ2dlclJlY3QudG9wICsgdHJpZ2dlclJlY3QuaGVpZ2h0ICsgcGFnZVlPZmZzZXQpIHtcbiAgICAgICAgaW5saW5lVG9wID0gdHJpZ2dlclJlY3QudG9wICsgdHJpZ2dlclJlY3QuaGVpZ2h0IC0gdGhpcy5lbC5jbGllbnRIZWlnaHQgKyBwYWdlWU9mZnNldDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5lbC5zdHlsZS5sZWZ0ID0gXCJcIi5jb25jYXQoaW5saW5lTGVmdCwgXCJweFwiKTtcbiAgICAgIHRoaXMuZWwuc3R5bGUudG9wID0gXCJcIi5jb25jYXQoaW5saW5lVG9wLCBcInB4XCIpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCb3VuZGluZ0JveDtcbn0oKTtcblxuZXhwb3J0IHsgQm91bmRpbmdCb3ggYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Qm91bmRpbmdCb3guanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/BoundingBox.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/Drift.js":
/*!*********************************************!*\
  !*** ./node_modules/drift-zoom/es/Drift.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Drift; });\n/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/dom */ \"./node_modules/drift-zoom/es/util/dom.js\");\n/* harmony import */ var _injectBaseStylesheet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./injectBaseStylesheet */ \"./node_modules/drift-zoom/es/injectBaseStylesheet.js\");\n/* harmony import */ var _Trigger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Trigger */ \"./node_modules/drift-zoom/es/Trigger.js\");\n/* harmony import */ var _ZoomPane__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ZoomPane */ \"./node_modules/drift-zoom/es/ZoomPane.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar Drift =\n/*#__PURE__*/\nfunction () {\n  function Drift(triggerEl) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Drift);\n\n    this.VERSION = \"1.4.0\";\n    this.triggerEl = triggerEl;\n    this.destroy = this.destroy.bind(this);\n\n    if (!Object(_util_dom__WEBPACK_IMPORTED_MODULE_0__[\"isDOMElement\"])(this.triggerEl)) {\n      throw new TypeError(\"`new Drift` requires a DOM element as its first argument.\");\n    } // Prefix for generated element class names (e.g. `my-ns` will\n    // result in classes such as `my-ns-pane`. Default `drift-`\n    // prefixed classes will always be added as well.\n\n\n    var namespace = options[\"namespace\"] || null; // Whether the ZoomPane should show whitespace when near the edges.\n\n    var showWhitespaceAtEdges = options[\"showWhitespaceAtEdges\"] || false; // Whether the inline ZoomPane should stay inside\n    // the bounds of its image.\n\n    var containInline = options[\"containInline\"] || false; // How much to offset the ZoomPane from the\n    // interaction point when inline.\n\n    var inlineOffsetX = options[\"inlineOffsetX\"] || 0;\n    var inlineOffsetY = options[\"inlineOffsetY\"] || 0; // A DOM element to append the inline ZoomPane to\n\n    var inlineContainer = options[\"inlineContainer\"] || document.body; // Which trigger attribute to pull the ZoomPane image source from.\n\n    var sourceAttribute = options[\"sourceAttribute\"] || \"data-zoom\"; // How much to magnify the trigger by in the ZoomPane.\n    // (e.g., `zoomFactor: 3` will result in a 900 px wide ZoomPane imag\n    // if the trigger is displayed at 300 px wide)\n\n    var zoomFactor = options[\"zoomFactor\"] || 3; // A DOM element to append the non-inline ZoomPane to.\n    // Required if `inlinePane !== true`.\n\n    var paneContainer = options[\"paneContainer\"] === undefined ? document.body : options[\"paneContainer\"]; // When to switch to an inline ZoomPane. This can be a boolean or\n    // an integer. If `true`, the ZoomPane will always be inline,\n    // if `false`, it will switch to inline when `windowWidth <= inlinePane`\n\n    var inlinePane = options[\"inlinePane\"] || 375; // If `true`, touch events will trigger the zoom, like mouse events.\n\n    var handleTouch = \"handleTouch\" in options ? !!options[\"handleTouch\"] : true; // If present (and a function), this will be called\n    // whenever the ZoomPane is shown.\n\n    var onShow = options[\"onShow\"] || null; // If present (and a function), this will be called\n    // whenever the ZoomPane is hidden.\n\n    var onHide = options[\"onHide\"] || null; // Add base styles to the page. See the \"Theming\"\n    // section of README.md for more information.\n\n    var injectBaseStyles = \"injectBaseStyles\" in options ? !!options[\"injectBaseStyles\"] : true; // An optional number that determines how long to wait before\n    // showing the ZoomPane because of a `mouseenter` event.\n\n    var hoverDelay = options[\"hoverDelay\"] || 0; // An optional number that determines how long to wait before\n    // showing the ZoomPane because of a `touchstart` event.\n    // It's unlikely that you would want to use this option, since\n    // \"tap and hold\" is much more intentional than a hover event.\n\n    var touchDelay = options[\"touchDelay\"] || 0; // If true, a bounding box will show the area currently being previewed\n    // during mouse hover\n\n    var hoverBoundingBox = options[\"hoverBoundingBox\"] || false; // If true, a bounding box will show the area currently being previewed\n    // during touch events\n\n    var touchBoundingBox = options[\"touchBoundingBox\"] || false; // A DOM element to append the bounding box to.\n\n    var boundingBoxContainer = options[\"boundingBoxContainer\"] || document.body;\n\n    if (inlinePane !== true && !Object(_util_dom__WEBPACK_IMPORTED_MODULE_0__[\"isDOMElement\"])(paneContainer)) {\n      throw new TypeError(\"`paneContainer` must be a DOM element when `inlinePane !== true`\");\n    }\n\n    if (!Object(_util_dom__WEBPACK_IMPORTED_MODULE_0__[\"isDOMElement\"])(inlineContainer)) {\n      throw new TypeError(\"`inlineContainer` must be a DOM element\");\n    }\n\n    this.settings = {\n      namespace: namespace,\n      showWhitespaceAtEdges: showWhitespaceAtEdges,\n      containInline: containInline,\n      inlineOffsetX: inlineOffsetX,\n      inlineOffsetY: inlineOffsetY,\n      inlineContainer: inlineContainer,\n      sourceAttribute: sourceAttribute,\n      zoomFactor: zoomFactor,\n      paneContainer: paneContainer,\n      inlinePane: inlinePane,\n      handleTouch: handleTouch,\n      onShow: onShow,\n      onHide: onHide,\n      injectBaseStyles: injectBaseStyles,\n      hoverDelay: hoverDelay,\n      touchDelay: touchDelay,\n      hoverBoundingBox: hoverBoundingBox,\n      touchBoundingBox: touchBoundingBox,\n      boundingBoxContainer: boundingBoxContainer\n    };\n\n    if (this.settings.injectBaseStyles) {\n      Object(_injectBaseStylesheet__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    }\n\n    this._buildZoomPane();\n\n    this._buildTrigger();\n  }\n\n  _createClass(Drift, [{\n    key: \"_buildZoomPane\",\n    value: function _buildZoomPane() {\n      this.zoomPane = new _ZoomPane__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n        container: this.settings.paneContainer,\n        zoomFactor: this.settings.zoomFactor,\n        showWhitespaceAtEdges: this.settings.showWhitespaceAtEdges,\n        containInline: this.settings.containInline,\n        inline: this.settings.inlinePane,\n        namespace: this.settings.namespace,\n        inlineOffsetX: this.settings.inlineOffsetX,\n        inlineOffsetY: this.settings.inlineOffsetY,\n        inlineContainer: this.settings.inlineContainer\n      });\n    }\n  }, {\n    key: \"_buildTrigger\",\n    value: function _buildTrigger() {\n      this.trigger = new _Trigger__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n        el: this.triggerEl,\n        zoomPane: this.zoomPane,\n        handleTouch: this.settings.handleTouch,\n        onShow: this.settings.onShow,\n        onHide: this.settings.onHide,\n        sourceAttribute: this.settings.sourceAttribute,\n        hoverDelay: this.settings.hoverDelay,\n        touchDelay: this.settings.touchDelay,\n        hoverBoundingBox: this.settings.hoverBoundingBox,\n        touchBoundingBox: this.settings.touchBoundingBox,\n        namespace: this.settings.namespace,\n        zoomFactor: this.settings.zoomFactor,\n        boundingBoxContainer: this.settings.boundingBoxContainer\n      });\n    }\n  }, {\n    key: \"setZoomImageURL\",\n    value: function setZoomImageURL(imageURL) {\n      this.zoomPane._setImageURL(imageURL);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.trigger.enabled = false;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.trigger.enabled = true;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.trigger._hide();\n\n      this.trigger._unbindEvents();\n    }\n  }, {\n    key: \"isShowing\",\n    get: function get() {\n      return this.zoomPane.isShowing;\n    }\n  }, {\n    key: \"zoomFactor\",\n    get: function get() {\n      return this.settings.zoomFactor;\n    },\n    set: function set(zf) {\n      this.settings.zoomFactor = zf;\n      this.zoomPane.settings.zoomFactor = zf;\n      this.trigger.settings.zoomFactor = zf;\n      this.boundingBox.settings.zoomFactor = zf;\n    }\n  }]);\n\n  return Drift;\n}(); // Public API\n\n/* eslint-disable no-self-assign */\n\n\n\nObject.defineProperty(Drift.prototype, \"isShowing\", {\n  get: function get() {\n    return this.isShowing;\n  }\n});\nObject.defineProperty(Drift.prototype, \"zoomFactor\", {\n  get: function get() {\n    return this.zoomFactor;\n  },\n  set: function set(value) {\n    this.zoomFactor = value;\n  }\n});\nDrift.prototype[\"setZoomImageURL\"] = Drift.prototype.setZoomImageURL;\nDrift.prototype[\"disable\"] = Drift.prototype.disable;\nDrift.prototype[\"enable\"] = Drift.prototype.enable;\nDrift.prototype[\"destroy\"] = Drift.prototype.destroy;\n/* eslint-enable no-self-assign */\n//# sourceMappingURL=Drift.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/Drift.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/Trigger.js":
/*!***********************************************!*\
  !*** ./node_modules/drift-zoom/es/Trigger.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Trigger; });\n/* harmony import */ var _util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/throwIfMissing */ \"./node_modules/drift-zoom/es/util/throwIfMissing.js\");\n/* harmony import */ var _BoundingBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BoundingBox */ \"./node_modules/drift-zoom/es/BoundingBox.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Trigger =\n/*#__PURE__*/\nfunction () {\n  function Trigger() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Trigger);\n\n    this._show = this._show.bind(this);\n    this._hide = this._hide.bind(this);\n    this._handleEntry = this._handleEntry.bind(this);\n    this._handleMovement = this._handleMovement.bind(this);\n    var _options$el = options.el,\n        el = _options$el === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$el,\n        _options$zoomPane = options.zoomPane,\n        zoomPane = _options$zoomPane === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$zoomPane,\n        _options$sourceAttrib = options.sourceAttribute,\n        sourceAttribute = _options$sourceAttrib === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$sourceAttrib,\n        _options$handleTouch = options.handleTouch,\n        handleTouch = _options$handleTouch === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$handleTouch,\n        _options$onShow = options.onShow,\n        onShow = _options$onShow === void 0 ? null : _options$onShow,\n        _options$onHide = options.onHide,\n        onHide = _options$onHide === void 0 ? null : _options$onHide,\n        _options$hoverDelay = options.hoverDelay,\n        hoverDelay = _options$hoverDelay === void 0 ? 0 : _options$hoverDelay,\n        _options$touchDelay = options.touchDelay,\n        touchDelay = _options$touchDelay === void 0 ? 0 : _options$touchDelay,\n        _options$hoverBoundin = options.hoverBoundingBox,\n        hoverBoundingBox = _options$hoverBoundin === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$hoverBoundin,\n        _options$touchBoundin = options.touchBoundingBox,\n        touchBoundingBox = _options$touchBoundin === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$touchBoundin,\n        _options$namespace = options.namespace,\n        namespace = _options$namespace === void 0 ? null : _options$namespace,\n        _options$zoomFactor = options.zoomFactor,\n        zoomFactor = _options$zoomFactor === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$zoomFactor,\n        _options$boundingBoxC = options.boundingBoxContainer,\n        boundingBoxContainer = _options$boundingBoxC === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$boundingBoxC;\n    this.settings = {\n      el: el,\n      zoomPane: zoomPane,\n      sourceAttribute: sourceAttribute,\n      handleTouch: handleTouch,\n      onShow: onShow,\n      onHide: onHide,\n      hoverDelay: hoverDelay,\n      touchDelay: touchDelay,\n      hoverBoundingBox: hoverBoundingBox,\n      touchBoundingBox: touchBoundingBox,\n      namespace: namespace,\n      zoomFactor: zoomFactor,\n      boundingBoxContainer: boundingBoxContainer\n    };\n\n    if (this.settings.hoverBoundingBox || this.settings.touchBoundingBox) {\n      this.boundingBox = new _BoundingBox__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n        namespace: this.settings.namespace,\n        zoomFactor: this.settings.zoomFactor,\n        containerEl: this.settings.boundingBoxContainer\n      });\n    }\n\n    this.enabled = true;\n\n    this._bindEvents();\n  }\n\n  _createClass(Trigger, [{\n    key: \"_preventDefault\",\n    value: function _preventDefault(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"_preventDefaultAllowTouchScroll\",\n    value: function _preventDefaultAllowTouchScroll(event) {\n      if (!this.settings.touchDelay || !this._isTouchEvent(event) || this.isShowing) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_isTouchEvent\",\n    value: function _isTouchEvent(event) {\n      return !!event.touches;\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      this.settings.el.addEventListener(\"mouseenter\", this._handleEntry, false);\n      this.settings.el.addEventListener(\"mouseleave\", this._hide, false);\n      this.settings.el.addEventListener(\"mousemove\", this._handleMovement, false);\n\n      if (this.settings.handleTouch) {\n        this.settings.el.addEventListener(\"touchstart\", this._handleEntry, false);\n        this.settings.el.addEventListener(\"touchend\", this._hide, false);\n        this.settings.el.addEventListener(\"touchmove\", this._handleMovement, false);\n      } else {\n        this.settings.el.addEventListener(\"touchstart\", this._preventDefault, false);\n        this.settings.el.addEventListener(\"touchend\", this._preventDefault, false);\n        this.settings.el.addEventListener(\"touchmove\", this._preventDefault, false);\n      }\n    }\n  }, {\n    key: \"_unbindEvents\",\n    value: function _unbindEvents() {\n      this.settings.el.removeEventListener(\"mouseenter\", this._handleEntry, false);\n      this.settings.el.removeEventListener(\"mouseleave\", this._hide, false);\n      this.settings.el.removeEventListener(\"mousemove\", this._handleMovement, false);\n\n      if (this.settings.handleTouch) {\n        this.settings.el.removeEventListener(\"touchstart\", this._handleEntry, false);\n        this.settings.el.removeEventListener(\"touchend\", this._hide, false);\n        this.settings.el.removeEventListener(\"touchmove\", this._handleMovement, false);\n      } else {\n        this.settings.el.removeEventListener(\"touchstart\", this._preventDefault, false);\n        this.settings.el.removeEventListener(\"touchend\", this._preventDefault, false);\n        this.settings.el.removeEventListener(\"touchmove\", this._preventDefault, false);\n      }\n    }\n  }, {\n    key: \"_handleEntry\",\n    value: function _handleEntry(e) {\n      this._preventDefaultAllowTouchScroll(e);\n\n      this._lastMovement = e;\n\n      if (e.type == \"mouseenter\" && this.settings.hoverDelay) {\n        this.entryTimeout = setTimeout(this._show, this.settings.hoverDelay);\n      } else if (this.settings.touchDelay) {\n        this.entryTimeout = setTimeout(this._show, this.settings.touchDelay);\n      } else {\n        this._show();\n      }\n    }\n  }, {\n    key: \"_show\",\n    value: function _show() {\n      if (!this.enabled) {\n        return;\n      }\n\n      var onShow = this.settings.onShow;\n\n      if (onShow && typeof onShow === \"function\") {\n        onShow();\n      }\n\n      this.settings.zoomPane.show(this.settings.el.getAttribute(this.settings.sourceAttribute), this.settings.el.clientWidth, this.settings.el.clientHeight);\n\n      if (this._lastMovement) {\n        var touchActivated = this._lastMovement.touches;\n\n        if (touchActivated && this.settings.touchBoundingBox || !touchActivated && this.settings.hoverBoundingBox) {\n          this.boundingBox.show(this.settings.zoomPane.el.clientWidth, this.settings.zoomPane.el.clientHeight);\n        }\n      }\n\n      this._handleMovement();\n    }\n  }, {\n    key: \"_hide\",\n    value: function _hide(e) {\n      if (e) {\n        this._preventDefaultAllowTouchScroll(e);\n      }\n\n      this._lastMovement = null;\n\n      if (this.entryTimeout) {\n        clearTimeout(this.entryTimeout);\n      }\n\n      if (this.boundingBox) {\n        this.boundingBox.hide();\n      }\n\n      var onHide = this.settings.onHide;\n\n      if (onHide && typeof onHide === \"function\") {\n        onHide();\n      }\n\n      this.settings.zoomPane.hide();\n    }\n  }, {\n    key: \"_handleMovement\",\n    value: function _handleMovement(e) {\n      if (e) {\n        this._preventDefaultAllowTouchScroll(e);\n\n        this._lastMovement = e;\n      } else if (this._lastMovement) {\n        e = this._lastMovement;\n      } else {\n        return;\n      }\n\n      var movementX;\n      var movementY;\n\n      if (e.touches) {\n        var firstTouch = e.touches[0];\n        movementX = firstTouch.clientX;\n        movementY = firstTouch.clientY;\n      } else {\n        movementX = e.clientX;\n        movementY = e.clientY;\n      }\n\n      var el = this.settings.el;\n      var rect = el.getBoundingClientRect();\n      var offsetX = movementX - rect.left;\n      var offsetY = movementY - rect.top;\n      var percentageOffsetX = offsetX / this.settings.el.clientWidth;\n      var percentageOffsetY = offsetY / this.settings.el.clientHeight;\n\n      if (this.boundingBox) {\n        this.boundingBox.setPosition(percentageOffsetX, percentageOffsetY, rect);\n      }\n\n      this.settings.zoomPane.setPosition(percentageOffsetX, percentageOffsetY, rect);\n    }\n  }, {\n    key: \"isShowing\",\n    get: function get() {\n      return this.settings.zoomPane.isShowing;\n    }\n  }]);\n\n  return Trigger;\n}();\n\n\n//# sourceMappingURL=Trigger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/Trigger.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/ZoomPane.js":
/*!************************************************!*\
  !*** ./node_modules/drift-zoom/es/ZoomPane.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ZoomPane; });\n/* harmony import */ var _util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/throwIfMissing */ \"./node_modules/drift-zoom/es/util/throwIfMissing.js\");\n/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/dom */ \"./node_modules/drift-zoom/es/util/dom.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n // All officially-supported browsers have this, but it's easy to\n// account for, just in case.\n\nvar divStyle = document.createElement(\"div\").style;\nvar HAS_ANIMATION = typeof document === \"undefined\" ? false : \"animation\" in divStyle || \"webkitAnimation\" in divStyle;\n\nvar ZoomPane =\n/*#__PURE__*/\nfunction () {\n  function ZoomPane() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ZoomPane);\n\n    this._completeShow = this._completeShow.bind(this);\n    this._completeHide = this._completeHide.bind(this);\n    this._handleLoad = this._handleLoad.bind(this);\n    this.isShowing = false;\n    var _options$container = options.container,\n        container = _options$container === void 0 ? null : _options$container,\n        _options$zoomFactor = options.zoomFactor,\n        zoomFactor = _options$zoomFactor === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$zoomFactor,\n        _options$inline = options.inline,\n        inline = _options$inline === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$inline,\n        _options$namespace = options.namespace,\n        namespace = _options$namespace === void 0 ? null : _options$namespace,\n        _options$showWhitespa = options.showWhitespaceAtEdges,\n        showWhitespaceAtEdges = _options$showWhitespa === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$showWhitespa,\n        _options$containInlin = options.containInline,\n        containInline = _options$containInlin === void 0 ? Object(_util_throwIfMissing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])() : _options$containInlin,\n        _options$inlineOffset = options.inlineOffsetX,\n        inlineOffsetX = _options$inlineOffset === void 0 ? 0 : _options$inlineOffset,\n        _options$inlineOffset2 = options.inlineOffsetY,\n        inlineOffsetY = _options$inlineOffset2 === void 0 ? 0 : _options$inlineOffset2,\n        _options$inlineContai = options.inlineContainer,\n        inlineContainer = _options$inlineContai === void 0 ? document.body : _options$inlineContai;\n    this.settings = {\n      container: container,\n      zoomFactor: zoomFactor,\n      inline: inline,\n      namespace: namespace,\n      showWhitespaceAtEdges: showWhitespaceAtEdges,\n      containInline: containInline,\n      inlineOffsetX: inlineOffsetX,\n      inlineOffsetY: inlineOffsetY,\n      inlineContainer: inlineContainer\n    };\n    this.openClasses = this._buildClasses(\"open\");\n    this.openingClasses = this._buildClasses(\"opening\");\n    this.closingClasses = this._buildClasses(\"closing\");\n    this.inlineClasses = this._buildClasses(\"inline\");\n    this.loadingClasses = this._buildClasses(\"loading\");\n\n    this._buildElement();\n  }\n\n  _createClass(ZoomPane, [{\n    key: \"_buildClasses\",\n    value: function _buildClasses(suffix) {\n      var classes = [\"drift-\".concat(suffix)];\n      var ns = this.settings.namespace;\n\n      if (ns) {\n        classes.push(\"\".concat(ns, \"-\").concat(suffix));\n      }\n\n      return classes;\n    }\n  }, {\n    key: \"_buildElement\",\n    value: function _buildElement() {\n      this.el = document.createElement(\"div\");\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this._buildClasses(\"zoom-pane\"));\n      var loaderEl = document.createElement(\"div\");\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(loaderEl, this._buildClasses(\"zoom-pane-loader\"));\n      this.el.appendChild(loaderEl);\n      this.imgEl = document.createElement(\"img\");\n      this.el.appendChild(this.imgEl);\n    }\n  }, {\n    key: \"_setImageURL\",\n    value: function _setImageURL(imageURL) {\n      this.imgEl.setAttribute(\"src\", imageURL);\n    }\n  }, {\n    key: \"_setImageSize\",\n    value: function _setImageSize(triggerWidth, triggerHeight) {\n      this.imgEl.style.width = \"\".concat(triggerWidth * this.settings.zoomFactor, \"px\");\n      this.imgEl.style.height = \"\".concat(triggerHeight * this.settings.zoomFactor, \"px\");\n    } // `percentageOffsetX` and `percentageOffsetY` must be percentages\n    // expressed as floats between `0' and `1`.\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(percentageOffsetX, percentageOffsetY, triggerRect) {\n      var imgElWidth = this.imgEl.offsetWidth;\n      var imgElHeight = this.imgEl.offsetHeight;\n      var elWidth = this.el.offsetWidth;\n      var elHeight = this.el.offsetHeight;\n      var centreOfContainerX = elWidth / 2;\n      var centreOfContainerY = elHeight / 2;\n      var targetImgXToBeCentre = imgElWidth * percentageOffsetX;\n      var targetImgYToBeCentre = imgElHeight * percentageOffsetY;\n      var left = centreOfContainerX - targetImgXToBeCentre;\n      var top = centreOfContainerY - targetImgYToBeCentre;\n      var differenceBetweenContainerWidthAndImgWidth = elWidth - imgElWidth;\n      var differenceBetweenContainerHeightAndImgHeight = elHeight - imgElHeight;\n      var isContainerLargerThanImgX = differenceBetweenContainerWidthAndImgWidth > 0;\n      var isContainerLargerThanImgY = differenceBetweenContainerHeightAndImgHeight > 0;\n      var minLeft = isContainerLargerThanImgX ? differenceBetweenContainerWidthAndImgWidth / 2 : 0;\n      var minTop = isContainerLargerThanImgY ? differenceBetweenContainerHeightAndImgHeight / 2 : 0;\n      var maxLeft = isContainerLargerThanImgX ? differenceBetweenContainerWidthAndImgWidth / 2 : differenceBetweenContainerWidthAndImgWidth;\n      var maxTop = isContainerLargerThanImgY ? differenceBetweenContainerHeightAndImgHeight / 2 : differenceBetweenContainerHeightAndImgHeight;\n\n      if (this.el.parentElement === this.settings.inlineContainer) {\n        // This may be needed in the future to deal with browser event\n        // inconsistencies, but it's difficult to tell for sure.\n        // let scrollX = isTouch ? 0 : window.scrollX;\n        // let scrollY = isTouch ? 0 : window.scrollY;\n        var scrollX = window.pageXOffset;\n        var scrollY = window.pageYOffset;\n        var inlineLeft = triggerRect.left + percentageOffsetX * triggerRect.width - elWidth / 2 + this.settings.inlineOffsetX + scrollX;\n        var inlineTop = triggerRect.top + percentageOffsetY * triggerRect.height - elHeight / 2 + this.settings.inlineOffsetY + scrollY;\n\n        if (this.settings.containInline) {\n          if (inlineLeft < triggerRect.left + scrollX) {\n            inlineLeft = triggerRect.left + scrollX;\n          } else if (inlineLeft + elWidth > triggerRect.left + triggerRect.width + scrollX) {\n            inlineLeft = triggerRect.left + triggerRect.width - elWidth + scrollX;\n          }\n\n          if (inlineTop < triggerRect.top + scrollY) {\n            inlineTop = triggerRect.top + scrollY;\n          } else if (inlineTop + elHeight > triggerRect.top + triggerRect.height + scrollY) {\n            inlineTop = triggerRect.top + triggerRect.height - elHeight + scrollY;\n          }\n        }\n\n        this.el.style.left = \"\".concat(inlineLeft, \"px\");\n        this.el.style.top = \"\".concat(inlineTop, \"px\");\n      }\n\n      if (!this.settings.showWhitespaceAtEdges) {\n        if (left > minLeft) {\n          left = minLeft;\n        } else if (left < maxLeft) {\n          left = maxLeft;\n        }\n\n        if (top > minTop) {\n          top = minTop;\n        } else if (top < maxTop) {\n          top = maxTop;\n        }\n      }\n\n      this.imgEl.style.transform = \"translate(\".concat(left, \"px, \").concat(top, \"px)\");\n      this.imgEl.style.webkitTransform = \"translate(\".concat(left, \"px, \").concat(top, \"px)\");\n    }\n  }, {\n    key: \"_removeListenersAndResetClasses\",\n    value: function _removeListenersAndResetClasses() {\n      this.el.removeEventListener(\"animationend\", this._completeShow, false);\n      this.el.removeEventListener(\"animationend\", this._completeHide, false);\n      this.el.removeEventListener(\"webkitAnimationEnd\", this._completeShow, false);\n      this.el.removeEventListener(\"webkitAnimationEnd\", this._completeHide, false);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.openClasses);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.closingClasses);\n    }\n  }, {\n    key: \"show\",\n    value: function show(imageURL, triggerWidth, triggerHeight) {\n      this._removeListenersAndResetClasses();\n\n      this.isShowing = true;\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this.openClasses);\n\n      if (this.imgEl.getAttribute(\"src\") != imageURL) {\n        Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this.loadingClasses);\n        this.imgEl.addEventListener(\"load\", this._handleLoad, false);\n\n        this._setImageURL(imageURL);\n      }\n\n      this._setImageSize(triggerWidth, triggerHeight);\n\n      if (this._isInline) {\n        this._showInline();\n      } else {\n        this._showInContainer();\n      }\n\n      if (HAS_ANIMATION) {\n        this.el.addEventListener(\"animationend\", this._completeShow, false);\n        this.el.addEventListener(\"webkitAnimationEnd\", this._completeShow, false);\n        Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this.openingClasses);\n      }\n    }\n  }, {\n    key: \"_showInline\",\n    value: function _showInline() {\n      this.settings.inlineContainer.appendChild(this.el);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this.inlineClasses);\n    }\n  }, {\n    key: \"_showInContainer\",\n    value: function _showInContainer() {\n      this.settings.container.appendChild(this.el);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._removeListenersAndResetClasses();\n\n      this.isShowing = false;\n\n      if (HAS_ANIMATION) {\n        this.el.addEventListener(\"animationend\", this._completeHide, false);\n        this.el.addEventListener(\"webkitAnimationEnd\", this._completeHide, false);\n        Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"addClasses\"])(this.el, this.closingClasses);\n      } else {\n        Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.openClasses);\n        Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.inlineClasses);\n      }\n    }\n  }, {\n    key: \"_completeShow\",\n    value: function _completeShow() {\n      this.el.removeEventListener(\"animationend\", this._completeShow, false);\n      this.el.removeEventListener(\"webkitAnimationEnd\", this._completeShow, false);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.openingClasses);\n    }\n  }, {\n    key: \"_completeHide\",\n    value: function _completeHide() {\n      this.el.removeEventListener(\"animationend\", this._completeHide, false);\n      this.el.removeEventListener(\"webkitAnimationEnd\", this._completeHide, false);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.openClasses);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.closingClasses);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.inlineClasses);\n      this.el.setAttribute(\"style\", \"\"); // The window could have been resized above or below `inline`\n      // limits since the ZoomPane was shown. Because of this, we\n      // can't rely on `this._isInline` here.\n\n      if (this.el.parentElement === this.settings.container) {\n        this.settings.container.removeChild(this.el);\n      } else if (this.el.parentElement === this.settings.inlineContainer) {\n        this.settings.inlineContainer.removeChild(this.el);\n      }\n    }\n  }, {\n    key: \"_handleLoad\",\n    value: function _handleLoad() {\n      this.imgEl.removeEventListener(\"load\", this._handleLoad, false);\n      Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__[\"removeClasses\"])(this.el, this.loadingClasses);\n    }\n  }, {\n    key: \"_isInline\",\n    get: function get() {\n      var inline = this.settings.inline;\n      return inline === true || typeof inline === \"number\" && window.innerWidth <= inline;\n    }\n  }]);\n\n  return ZoomPane;\n}();\n\n\n//# sourceMappingURL=ZoomPane.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/ZoomPane.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/injectBaseStylesheet.js":
/*!************************************************************!*\
  !*** ./node_modules/drift-zoom/es/injectBaseStylesheet.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return injectBaseStylesheet; });\n/* UNMINIFIED RULES\n\nconst RULES = `\n@keyframes noop {\n  0% { zoom: 1; }\n}\n\n@-webkit-keyframes noop {\n  0% { zoom: 1; }\n}\n\n.drift-zoom-pane.drift-open {\n  display: block;\n}\n\n.drift-zoom-pane.drift-opening, .drift-zoom-pane.drift-closing {\n  animation: noop 1ms;\n  -webkit-animation: noop 1ms;\n}\n\n.drift-zoom-pane {\n  position: absolute;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n.drift-zoom-pane-loader {\n  display: none;\n}\n\n.drift-zoom-pane img {\n  position: absolute;\n  display: block;\n  max-width: none;\n  max-height: none;\n}\n\n.drift-bounding-box {\n  position: absolute;\n  pointer-events: none;\n}\n`;\n\n*/\nvar RULES = \".drift-bounding-box,.drift-zoom-pane{position:absolute;pointer-events:none}@keyframes noop{0%{zoom:1}}@-webkit-keyframes noop{0%{zoom:1}}.drift-zoom-pane.drift-open{display:block}.drift-zoom-pane.drift-closing,.drift-zoom-pane.drift-opening{animation:noop 1ms;-webkit-animation:noop 1ms}.drift-zoom-pane{overflow:hidden;width:100%;height:100%;top:0;left:0}.drift-zoom-pane-loader{display:none}.drift-zoom-pane img{position:absolute;display:block;max-width:none;max-height:none}\";\nfunction injectBaseStylesheet() {\n  if (document.querySelector(\".drift-base-styles\")) {\n    return;\n  }\n\n  var styleEl = document.createElement(\"style\");\n  styleEl.type = \"text/css\";\n  styleEl.classList.add(\"drift-base-styles\");\n  styleEl.appendChild(document.createTextNode(RULES));\n  var head = document.head;\n  head.insertBefore(styleEl, head.firstChild);\n}\n//# sourceMappingURL=injectBaseStylesheet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZHJpZnQtem9vbS9lcy9pbmplY3RCYXNlU3R5bGVzaGVldC5qcz9mNTk4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxTQUFTO0FBQ2Y7O0FBRUE7QUFDQSxNQUFNLFNBQVM7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtEQUFrRCxrQkFBa0Isb0JBQW9CLGdCQUFnQixHQUFHLFFBQVEsd0JBQXdCLEdBQUcsUUFBUSw0QkFBNEIsY0FBYyw4REFBOEQsbUJBQW1CLDJCQUEyQixpQkFBaUIsZ0JBQWdCLFdBQVcsWUFBWSxNQUFNLE9BQU8sd0JBQXdCLGFBQWEscUJBQXFCLGtCQUFrQixjQUFjLGVBQWUsZ0JBQWdCO0FBQzNkO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHJpZnQtem9vbS9lcy9pbmplY3RCYXNlU3R5bGVzaGVldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFVOTUlOSUZJRUQgUlVMRVNcblxuY29uc3QgUlVMRVMgPSBgXG5Aa2V5ZnJhbWVzIG5vb3Age1xuICAwJSB7IHpvb206IDE7IH1cbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIG5vb3Age1xuICAwJSB7IHpvb206IDE7IH1cbn1cblxuLmRyaWZ0LXpvb20tcGFuZS5kcmlmdC1vcGVuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5kcmlmdC16b29tLXBhbmUuZHJpZnQtb3BlbmluZywgLmRyaWZ0LXpvb20tcGFuZS5kcmlmdC1jbG9zaW5nIHtcbiAgYW5pbWF0aW9uOiBub29wIDFtcztcbiAgLXdlYmtpdC1hbmltYXRpb246IG5vb3AgMW1zO1xufVxuXG4uZHJpZnQtem9vbS1wYW5lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uZHJpZnQtem9vbS1wYW5lLWxvYWRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5kcmlmdC16b29tLXBhbmUgaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiBub25lO1xuICBtYXgtaGVpZ2h0OiBub25lO1xufVxuXG4uZHJpZnQtYm91bmRpbmctYm94IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbmA7XG5cbiovXG52YXIgUlVMRVMgPSBcIi5kcmlmdC1ib3VuZGluZy1ib3gsLmRyaWZ0LXpvb20tcGFuZXtwb3NpdGlvbjphYnNvbHV0ZTtwb2ludGVyLWV2ZW50czpub25lfUBrZXlmcmFtZXMgbm9vcHswJXt6b29tOjF9fUAtd2Via2l0LWtleWZyYW1lcyBub29wezAle3pvb206MX19LmRyaWZ0LXpvb20tcGFuZS5kcmlmdC1vcGVue2Rpc3BsYXk6YmxvY2t9LmRyaWZ0LXpvb20tcGFuZS5kcmlmdC1jbG9zaW5nLC5kcmlmdC16b29tLXBhbmUuZHJpZnQtb3BlbmluZ3thbmltYXRpb246bm9vcCAxbXM7LXdlYmtpdC1hbmltYXRpb246bm9vcCAxbXN9LmRyaWZ0LXpvb20tcGFuZXtvdmVyZmxvdzpoaWRkZW47d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt0b3A6MDtsZWZ0OjB9LmRyaWZ0LXpvb20tcGFuZS1sb2FkZXJ7ZGlzcGxheTpub25lfS5kcmlmdC16b29tLXBhbmUgaW1ne3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7bWF4LXdpZHRoOm5vbmU7bWF4LWhlaWdodDpub25lfVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5qZWN0QmFzZVN0eWxlc2hlZXQoKSB7XG4gIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRyaWZ0LWJhc2Utc3R5bGVzXCIpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0eWxlRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIHN0eWxlRWwudHlwZSA9IFwidGV4dC9jc3NcIjtcbiAgc3R5bGVFbC5jbGFzc0xpc3QuYWRkKFwiZHJpZnQtYmFzZS1zdHlsZXNcIik7XG4gIHN0eWxlRWwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoUlVMRVMpKTtcbiAgdmFyIGhlYWQgPSBkb2N1bWVudC5oZWFkO1xuICBoZWFkLmluc2VydEJlZm9yZShzdHlsZUVsLCBoZWFkLmZpcnN0Q2hpbGQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5qZWN0QmFzZVN0eWxlc2hlZXQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/injectBaseStylesheet.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/util/dom.js":
/*!************************************************!*\
  !*** ./node_modules/drift-zoom/es/util/dom.js ***!
  \************************************************/
/*! exports provided: isDOMElement, addClasses, removeClasses */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDOMElement\", function() { return isDOMElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addClasses\", function() { return addClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeClasses\", function() { return removeClasses; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// This is not really a perfect check, but works fine.\n// From http://stackoverflow.com/questions/384286\nvar HAS_DOM_2 = (typeof HTMLElement === \"undefined\" ? \"undefined\" : _typeof(HTMLElement)) === \"object\";\nfunction isDOMElement(obj) {\n  return HAS_DOM_2 ? obj instanceof HTMLElement : obj && _typeof(obj) === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\";\n}\nfunction addClasses(el, classNames) {\n  classNames.forEach(function (className) {\n    el.classList.add(className);\n  });\n}\nfunction removeClasses(el, classNames) {\n  classNames.forEach(function (className) {\n    el.classList.remove(className);\n  });\n}\n//# sourceMappingURL=dom.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZHJpZnQtem9vbS9lcy91dGlsL2RvbS5qcz83YmJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBQXVCLDJFQUEyRSxrQ0FBa0MsbUJBQW1CLEdBQUcsRUFBRSxPQUFPLGtDQUFrQyw4SEFBOEgsR0FBRyxFQUFFLHFCQUFxQjs7QUFFN1Y7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ087QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHJpZnQtem9vbS9lcy91dGlsL2RvbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbi8vIFRoaXMgaXMgbm90IHJlYWxseSBhIHBlcmZlY3QgY2hlY2ssIGJ1dCB3b3JrcyBmaW5lLlxuLy8gRnJvbSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzM4NDI4NlxudmFyIEhBU19ET01fMiA9ICh0eXBlb2YgSFRNTEVsZW1lbnQgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihIVE1MRWxlbWVudCkpID09PSBcIm9iamVjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRE9NRWxlbWVudChvYmopIHtcbiAgcmV0dXJuIEhBU19ET01fMiA/IG9iaiBpbnN0YW5jZW9mIEhUTUxFbGVtZW50IDogb2JqICYmIF90eXBlb2Yob2JqKSA9PT0gXCJvYmplY3RcIiAmJiBvYmogIT09IG51bGwgJiYgb2JqLm5vZGVUeXBlID09PSAxICYmIHR5cGVvZiBvYmoubm9kZU5hbWUgPT09IFwic3RyaW5nXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gYWRkQ2xhc3NlcyhlbCwgY2xhc3NOYW1lcykge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGVsLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbiAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlQ2xhc3NlcyhlbCwgY2xhc3NOYW1lcykge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcbiAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kb20uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/util/dom.js\n");

/***/ }),

/***/ "./node_modules/drift-zoom/es/util/throwIfMissing.js":
/*!***********************************************************!*\
  !*** ./node_modules/drift-zoom/es/util/throwIfMissing.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return throwIfMissing; });\nfunction throwIfMissing() {\n  throw new Error(\"Missing parameter\");\n}\n//# sourceMappingURL=throwIfMissing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZHJpZnQtem9vbS9lcy91dGlsL3Rocm93SWZNaXNzaW5nLmpzPzVhNDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2RyaWZ0LXpvb20vZXMvdXRpbC90aHJvd0lmTWlzc2luZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRocm93SWZNaXNzaW5nKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHBhcmFtZXRlclwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocm93SWZNaXNzaW5nLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/drift-zoom/es/util/throwIfMissing.js\n");

/***/ }),

/***/ "./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXYtZW1pdHRlci9ldi1lbWl0dGVyLmpzPzA5NDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQXlDO0FBQ2hEO0FBQ0EsSUFBSSxvQ0FBUSxPQUFPO0FBQUE7QUFBQTtBQUFBO0FBQUEsb0dBQUU7QUFDckIsR0FBRyxNQUFNLEVBTU47O0FBRUgsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixzQkFBc0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ldi1lbWl0dGVyL2V2LWVtaXR0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV2RW1pdHRlciB2MS4xLjBcbiAqIExpbCcgZXZlbnQgZW1pdHRlclxuICogTUlUIExpY2Vuc2VcbiAqL1xuXG4vKiBqc2hpbnQgdW51c2VkOiB0cnVlLCB1bmRlZjogdHJ1ZSwgc3RyaWN0OiB0cnVlICovXG5cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qIGdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHdpbmRvdyAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRCAtIFJlcXVpcmVKU1xuICAgIGRlZmluZSggZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTIC0gQnJvd3NlcmlmeSwgV2VicGFja1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIC8vIEJyb3dzZXIgZ2xvYmFsc1xuICAgIGdsb2JhbC5FdkVtaXR0ZXIgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCkge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gRXZFbWl0dGVyKCkge31cblxudmFyIHByb3RvID0gRXZFbWl0dGVyLnByb3RvdHlwZTtcblxucHJvdG8ub24gPSBmdW5jdGlvbiggZXZlbnROYW1lLCBsaXN0ZW5lciApIHtcbiAgaWYgKCAhZXZlbnROYW1lIHx8ICFsaXN0ZW5lciApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gc2V0IGV2ZW50cyBoYXNoXG4gIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHMgPSB0aGlzLl9ldmVudHMgfHwge307XG4gIC8vIHNldCBsaXN0ZW5lcnMgYXJyYXlcbiAgdmFyIGxpc3RlbmVycyA9IGV2ZW50c1sgZXZlbnROYW1lIF0gPSBldmVudHNbIGV2ZW50TmFtZSBdIHx8IFtdO1xuICAvLyBvbmx5IGFkZCBvbmNlXG4gIGlmICggbGlzdGVuZXJzLmluZGV4T2YoIGxpc3RlbmVyICkgPT0gLTEgKSB7XG4gICAgbGlzdGVuZXJzLnB1c2goIGxpc3RlbmVyICk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbnByb3RvLm9uY2UgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBsaXN0ZW5lciApIHtcbiAgaWYgKCAhZXZlbnROYW1lIHx8ICFsaXN0ZW5lciApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gYWRkIGV2ZW50XG4gIHRoaXMub24oIGV2ZW50TmFtZSwgbGlzdGVuZXIgKTtcbiAgLy8gc2V0IG9uY2UgZmxhZ1xuICAvLyBzZXQgb25jZUV2ZW50cyBoYXNoXG4gIHZhciBvbmNlRXZlbnRzID0gdGhpcy5fb25jZUV2ZW50cyA9IHRoaXMuX29uY2VFdmVudHMgfHwge307XG4gIC8vIHNldCBvbmNlTGlzdGVuZXJzIG9iamVjdFxuICB2YXIgb25jZUxpc3RlbmVycyA9IG9uY2VFdmVudHNbIGV2ZW50TmFtZSBdID0gb25jZUV2ZW50c1sgZXZlbnROYW1lIF0gfHwge307XG4gIC8vIHNldCBmbGFnXG4gIG9uY2VMaXN0ZW5lcnNbIGxpc3RlbmVyIF0gPSB0cnVlO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8ub2ZmID0gZnVuY3Rpb24oIGV2ZW50TmFtZSwgbGlzdGVuZXIgKSB7XG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHMgJiYgdGhpcy5fZXZlbnRzWyBldmVudE5hbWUgXTtcbiAgaWYgKCAhbGlzdGVuZXJzIHx8ICFsaXN0ZW5lcnMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgaW5kZXggPSBsaXN0ZW5lcnMuaW5kZXhPZiggbGlzdGVuZXIgKTtcbiAgaWYgKCBpbmRleCAhPSAtMSApIHtcbiAgICBsaXN0ZW5lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5wcm90by5lbWl0RXZlbnQgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBhcmdzICkge1xuICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzICYmIHRoaXMuX2V2ZW50c1sgZXZlbnROYW1lIF07XG4gIGlmICggIWxpc3RlbmVycyB8fCAhbGlzdGVuZXJzLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gY29weSBvdmVyIHRvIGF2b2lkIGludGVyZmVyZW5jZSBpZiAub2ZmKCkgaW4gbGlzdGVuZXJcbiAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLnNsaWNlKDApO1xuICBhcmdzID0gYXJncyB8fCBbXTtcbiAgLy8gb25jZSBzdHVmZlxuICB2YXIgb25jZUxpc3RlbmVycyA9IHRoaXMuX29uY2VFdmVudHMgJiYgdGhpcy5fb25jZUV2ZW50c1sgZXZlbnROYW1lIF07XG5cbiAgZm9yICggdmFyIGk9MDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKyApIHtcbiAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV1cbiAgICB2YXIgaXNPbmNlID0gb25jZUxpc3RlbmVycyAmJiBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIGlmICggaXNPbmNlICkge1xuICAgICAgLy8gcmVtb3ZlIGxpc3RlbmVyXG4gICAgICAvLyByZW1vdmUgYmVmb3JlIHRyaWdnZXIgdG8gcHJldmVudCByZWN1cnNpb25cbiAgICAgIHRoaXMub2ZmKCBldmVudE5hbWUsIGxpc3RlbmVyICk7XG4gICAgICAvLyB1bnNldCBvbmNlIGZsYWdcbiAgICAgIGRlbGV0ZSBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIH1cbiAgICAvLyB0cmlnZ2VyIGxpc3RlbmVyXG4gICAgbGlzdGVuZXIuYXBwbHkoIHRoaXMsIGFyZ3MgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8uYWxsT2ZmID0gZnVuY3Rpb24oKSB7XG4gIGRlbGV0ZSB0aGlzLl9ldmVudHM7XG4gIGRlbGV0ZSB0aGlzLl9vbmNlRXZlbnRzO1xufTtcblxucmV0dXJuIEV2RW1pdHRlcjtcblxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ev-emitter/ev-emitter.js\n");

/***/ }),

/***/ "./node_modules/eventemitter2/lib/eventemitter2.js":
/*!*********************************************************!*\
  !*** ./node_modules/eventemitter2/lib/eventemitter2.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._events.maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this.newListener = conf.newListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._events.maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. %d listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: %s.';\r\n      console.error(errorMsg, count, eventName);\r\n    } else {\r\n      console.error(errorMsg, count);\r\n    }\r\n\r\n    if (console.trace){\r\n      console.trace();\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this.newListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._events.maxListeners > 0 &&\r\n            tree._listeners.length > this._events.maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._events || init.call(this);\r\n      this._events.maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    this.many(event, 1, fn);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this.on(event, listener);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    if (typeof type === 'function') {\r\n      this.onAny(type);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just append.\r\n      this._events[type].push(listener);\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._events.maxListeners > 0 &&\r\n        this._events[type].length > this._events.maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    this._all.push(fn);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++)\r\n        this.emit(\"removeListenerAny\", fns[i]);\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (arguments.length === 0) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (true) {\r\n     // AMD. Register as an anonymous module.\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n      return EventEmitter;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  } else {}\r\n}();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/eventemitter2/lib/eventemitter2.js\n");

/***/ }),

/***/ "./node_modules/fitvids/index.js":
/*!***************************************!*\
  !*** ./node_modules/fitvids/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var selectors = [\n  'iframe[src*=\"player.vimeo.com\"]',\n  'iframe[src*=\"youtube.com\"]',\n  'iframe[src*=\"youtube-nocookie.com\"]',\n  'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n  \"object\"\n];\n\nvar css =\n  \".fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}\";\n\nmodule.exports = function(parentSelector, opts) {\n  parentSelector = parentSelector || \"body\";\n  opts = opts || {};\n\n  if (isObject(parentSelector)) {\n    opts = parentSelector;\n    parentSelector = \"body\";\n  }\n\n  opts.ignore = opts.ignore || \"\";\n  opts.players = opts.players || \"\";\n\n  var containers = queryAll(parentSelector);\n  if (!hasLength(containers)) return;\n\n  if (!document.getElementById(\"fit-vids-style\")) {\n    var head = document.head || document.getElementsByTagName(\"head\")[0];\n    head.appendChild(styles());\n  }\n\n  var custom = toSelectorArray(opts.players);\n  var ignored = toSelectorArray(opts.ignore);\n  var ignoredSelector = ignored.length > 0 ? ignored.join() : null;\n  var selector = selectors.concat(custom).join();\n\n  if (!hasLength(selector)) {\n    return;\n  }\n\n  containers.forEach(function(container) {\n    var videos = queryAll(container, selector);\n\n    videos.forEach(function(video) {\n      if (ignoredSelector && video.matches(ignoredSelector)) {\n        return;\n      }\n      wrap(video);\n    });\n  });\n}\n\nfunction queryAll(el, selector) {\n  if (typeof el === \"string\") {\n    selector = el;\n    el = document;\n  }\n  return Array.prototype.slice.call(el.querySelectorAll(selector));\n}\n\nfunction toSelectorArray(input) {\n  if (typeof input === \"string\") {\n    return input\n      .split(\",\")\n      .map(trim)\n      .filter(hasLength);\n  } else if (isArray(input)) {\n    return flatten(input.map(toSelectorArray).filter(hasLength));\n  }\n  return input || [];\n}\n\nfunction wrap(el) {\n  if (/fluid-width-video-wrapper/.test(el.parentNode.className)) {\n    return;\n  }\n\n  var widthAttr = parseInt(el.getAttribute(\"width\"), 10);\n  var heightAttr = parseInt(el.getAttribute(\"height\"), 10);\n\n  var width = !isNaN(widthAttr) ? widthAttr : el.clientWidth;\n  var height = !isNaN(heightAttr) ? heightAttr : el.clientHeight;\n  var aspect = height / width;\n\n  el.removeAttribute(\"width\");\n  el.removeAttribute(\"height\");\n\n  var wrapper = document.createElement(\"div\");\n  el.parentNode.insertBefore(wrapper, el);\n  wrapper.className = \"fluid-width-video-wrapper\";\n  wrapper.style.paddingTop = aspect * 100 + \"%\";\n  wrapper.appendChild(el);\n}\n\nfunction styles() {\n  var div = document.createElement(\"div\");\n  div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + \"</style>\";\n  return div.childNodes[1];\n}\n\nfunction hasLength(input) {\n  return input.length > 0;\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, \"\");\n}\n\nfunction flatten(input) {\n  return [].concat.apply([], input);\n}\n\nfunction isObject(input) {\n  return Object.prototype.toString.call(input) === \"[object Object]\";\n}\n\nfunction isArray(input) {\n  return Object.prototype.toString.call(input) === \"[object Array]\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZml0dmlkcy9pbmRleC5qcz80ZTlmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLFdBQVcsa0JBQWtCLFdBQVcsc0dBQXNHLGtCQUFrQixNQUFNLE9BQU8sV0FBVyxhQUFhOztBQUVuTztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZml0dmlkcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzZWxlY3RvcnMgPSBbXG4gICdpZnJhbWVbc3JjKj1cInBsYXllci52aW1lby5jb21cIl0nLFxuICAnaWZyYW1lW3NyYyo9XCJ5b3V0dWJlLmNvbVwiXScsXG4gICdpZnJhbWVbc3JjKj1cInlvdXR1YmUtbm9jb29raWUuY29tXCJdJyxcbiAgJ2lmcmFtZVtzcmMqPVwia2lja3N0YXJ0ZXIuY29tXCJdW3NyYyo9XCJ2aWRlby5odG1sXCJdJyxcbiAgXCJvYmplY3RcIlxuXTtcblxudmFyIGNzcyA9XG4gIFwiLmZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXJ7d2lkdGg6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOjA7fS5mbHVpZC13aWR0aC12aWRlby13cmFwcGVyIGlmcmFtZSwuZmx1aWQtd2lkdGgtdmlkZW8td3JhcHBlciBvYmplY3QsLmZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXIgZW1iZWQge3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO31cIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJlbnRTZWxlY3Rvciwgb3B0cykge1xuICBwYXJlbnRTZWxlY3RvciA9IHBhcmVudFNlbGVjdG9yIHx8IFwiYm9keVwiO1xuICBvcHRzID0gb3B0cyB8fCB7fTtcblxuICBpZiAoaXNPYmplY3QocGFyZW50U2VsZWN0b3IpKSB7XG4gICAgb3B0cyA9IHBhcmVudFNlbGVjdG9yO1xuICAgIHBhcmVudFNlbGVjdG9yID0gXCJib2R5XCI7XG4gIH1cblxuICBvcHRzLmlnbm9yZSA9IG9wdHMuaWdub3JlIHx8IFwiXCI7XG4gIG9wdHMucGxheWVycyA9IG9wdHMucGxheWVycyB8fCBcIlwiO1xuXG4gIHZhciBjb250YWluZXJzID0gcXVlcnlBbGwocGFyZW50U2VsZWN0b3IpO1xuICBpZiAoIWhhc0xlbmd0aChjb250YWluZXJzKSkgcmV0dXJuO1xuXG4gIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaXQtdmlkcy1zdHlsZVwiKSkge1xuICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF07XG4gICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZXMoKSk7XG4gIH1cblxuICB2YXIgY3VzdG9tID0gdG9TZWxlY3RvckFycmF5KG9wdHMucGxheWVycyk7XG4gIHZhciBpZ25vcmVkID0gdG9TZWxlY3RvckFycmF5KG9wdHMuaWdub3JlKTtcbiAgdmFyIGlnbm9yZWRTZWxlY3RvciA9IGlnbm9yZWQubGVuZ3RoID4gMCA/IGlnbm9yZWQuam9pbigpIDogbnVsbDtcbiAgdmFyIHNlbGVjdG9yID0gc2VsZWN0b3JzLmNvbmNhdChjdXN0b20pLmpvaW4oKTtcblxuICBpZiAoIWhhc0xlbmd0aChzZWxlY3RvcikpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb250YWluZXJzLmZvckVhY2goZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gICAgdmFyIHZpZGVvcyA9IHF1ZXJ5QWxsKGNvbnRhaW5lciwgc2VsZWN0b3IpO1xuXG4gICAgdmlkZW9zLmZvckVhY2goZnVuY3Rpb24odmlkZW8pIHtcbiAgICAgIGlmIChpZ25vcmVkU2VsZWN0b3IgJiYgdmlkZW8ubWF0Y2hlcyhpZ25vcmVkU2VsZWN0b3IpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHdyYXAodmlkZW8pO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcXVlcnlBbGwoZWwsIHNlbGVjdG9yKSB7XG4gIGlmICh0eXBlb2YgZWwgPT09IFwic3RyaW5nXCIpIHtcbiAgICBzZWxlY3RvciA9IGVsO1xuICAgIGVsID0gZG9jdW1lbnQ7XG4gIH1cbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGVsLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpKTtcbn1cblxuZnVuY3Rpb24gdG9TZWxlY3RvckFycmF5KGlucHV0KSB7XG4gIGlmICh0eXBlb2YgaW5wdXQgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gaW5wdXRcbiAgICAgIC5zcGxpdChcIixcIilcbiAgICAgIC5tYXAodHJpbSlcbiAgICAgIC5maWx0ZXIoaGFzTGVuZ3RoKTtcbiAgfSBlbHNlIGlmIChpc0FycmF5KGlucHV0KSkge1xuICAgIHJldHVybiBmbGF0dGVuKGlucHV0Lm1hcCh0b1NlbGVjdG9yQXJyYXkpLmZpbHRlcihoYXNMZW5ndGgpKTtcbiAgfVxuICByZXR1cm4gaW5wdXQgfHwgW107XG59XG5cbmZ1bmN0aW9uIHdyYXAoZWwpIHtcbiAgaWYgKC9mbHVpZC13aWR0aC12aWRlby13cmFwcGVyLy50ZXN0KGVsLnBhcmVudE5vZGUuY2xhc3NOYW1lKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciB3aWR0aEF0dHIgPSBwYXJzZUludChlbC5nZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiKSwgMTApO1xuICB2YXIgaGVpZ2h0QXR0ciA9IHBhcnNlSW50KGVsLmdldEF0dHJpYnV0ZShcImhlaWdodFwiKSwgMTApO1xuXG4gIHZhciB3aWR0aCA9ICFpc05hTih3aWR0aEF0dHIpID8gd2lkdGhBdHRyIDogZWwuY2xpZW50V2lkdGg7XG4gIHZhciBoZWlnaHQgPSAhaXNOYU4oaGVpZ2h0QXR0cikgPyBoZWlnaHRBdHRyIDogZWwuY2xpZW50SGVpZ2h0O1xuICB2YXIgYXNwZWN0ID0gaGVpZ2h0IC8gd2lkdGg7XG5cbiAgZWwucmVtb3ZlQXR0cmlidXRlKFwid2lkdGhcIik7XG4gIGVsLnJlbW92ZUF0dHJpYnV0ZShcImhlaWdodFwiKTtcblxuICB2YXIgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGVsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHdyYXBwZXIsIGVsKTtcbiAgd3JhcHBlci5jbGFzc05hbWUgPSBcImZsdWlkLXdpZHRoLXZpZGVvLXdyYXBwZXJcIjtcbiAgd3JhcHBlci5zdHlsZS5wYWRkaW5nVG9wID0gYXNwZWN0ICogMTAwICsgXCIlXCI7XG4gIHdyYXBwZXIuYXBwZW5kQ2hpbGQoZWwpO1xufVxuXG5mdW5jdGlvbiBzdHlsZXMoKSB7XG4gIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBkaXYuaW5uZXJIVE1MID0gJzxwPng8L3A+PHN0eWxlIGlkPVwiZml0LXZpZHMtc3R5bGVcIj4nICsgY3NzICsgXCI8L3N0eWxlPlwiO1xuICByZXR1cm4gZGl2LmNoaWxkTm9kZXNbMV07XG59XG5cbmZ1bmN0aW9uIGhhc0xlbmd0aChpbnB1dCkge1xuICByZXR1cm4gaW5wdXQubGVuZ3RoID4gMDtcbn1cblxuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCBcIlwiKTtcbn1cblxuZnVuY3Rpb24gZmxhdHRlbihpbnB1dCkge1xuICByZXR1cm4gW10uY29uY2F0LmFwcGx5KFtdLCBpbnB1dCk7XG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGlucHV0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpID09PSBcIltvYmplY3QgT2JqZWN0XVwiO1xufVxuXG5mdW5jdGlvbiBpc0FycmF5KGlucHV0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpID09PSBcIltvYmplY3QgQXJyYXldXCI7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/fitvids/index.js\n");

/***/ }),

/***/ "./node_modules/fizzy-ui-utils/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! desandro-matches-selector/matches-selector */ \"./node_modules/desandro-matches-selector/matches-selector.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZml6enktdWktdXRpbHMvdXRpbHMuanM/NjE1OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTyxJQUF5QztBQUNoRDtBQUNBLElBQUksaUNBQVE7QUFDWixNQUFNLHFJQUE0QztBQUNsRCxLQUFLLG1DQUFFO0FBQ1A7QUFDQSxLQUFLO0FBQUEsb0dBQUM7QUFDTixHQUFHLE1BQU0sRUFZTjs7QUFFSCxDQUFDOztBQUVEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUJBQXVCO0FBQ3pDO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUwsR0FBRztBQUNIOztBQUVBOztBQUVBOztBQUVBLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZml6enktdWktdXRpbHMvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpenp5IFVJIHV0aWxzIHYyLjAuN1xuICogTUlUIGxpY2Vuc2VcbiAqL1xuXG4vKmpzaGludCBicm93c2VyOiB0cnVlLCB1bmRlZjogdHJ1ZSwgdW51c2VkOiB0cnVlLCBzdHJpY3Q6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLypqc2hpbnQgc3RyaWN0OiBmYWxzZSAqLyAvKmdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cblxuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRFxuICAgIGRlZmluZSggW1xuICAgICAgJ2Rlc2FuZHJvLW1hdGNoZXMtc2VsZWN0b3IvbWF0Y2hlcy1zZWxlY3RvcidcbiAgICBdLCBmdW5jdGlvbiggbWF0Y2hlc1NlbGVjdG9yICkge1xuICAgICAgcmV0dXJuIGZhY3RvcnkoIHdpbmRvdywgbWF0Y2hlc1NlbGVjdG9yICk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICByZXF1aXJlKCdkZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93LmZpenp5VUlVdGlscyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICB3aW5kb3cubWF0Y2hlc1NlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoIHdpbmRvdywgbWF0Y2hlc1NlbGVjdG9yICkge1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHt9O1xuXG4vLyAtLS0tLSBleHRlbmQgLS0tLS0gLy9cblxuLy8gZXh0ZW5kcyBvYmplY3RzXG51dGlscy5leHRlbmQgPSBmdW5jdGlvbiggYSwgYiApIHtcbiAgZm9yICggdmFyIHByb3AgaW4gYiApIHtcbiAgICBhWyBwcm9wIF0gPSBiWyBwcm9wIF07XG4gIH1cbiAgcmV0dXJuIGE7XG59O1xuXG4vLyAtLS0tLSBtb2R1bG8gLS0tLS0gLy9cblxudXRpbHMubW9kdWxvID0gZnVuY3Rpb24oIG51bSwgZGl2ICkge1xuICByZXR1cm4gKCAoIG51bSAlIGRpdiApICsgZGl2ICkgJSBkaXY7XG59O1xuXG4vLyAtLS0tLSBtYWtlQXJyYXkgLS0tLS0gLy9cblxudmFyIGFycmF5U2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG5cbi8vIHR1cm4gZWxlbWVudCBvciBub2RlTGlzdCBpbnRvIGFuIGFycmF5XG51dGlscy5tYWtlQXJyYXkgPSBmdW5jdGlvbiggb2JqICkge1xuICBpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xuICAgIC8vIHVzZSBvYmplY3QgaWYgYWxyZWFkeSBhbiBhcnJheVxuICAgIHJldHVybiBvYmo7XG4gIH1cbiAgLy8gcmV0dXJuIGVtcHR5IGFycmF5IGlmIHVuZGVmaW5lZCBvciBudWxsLiAjNlxuICBpZiAoIG9iaiA9PT0gbnVsbCB8fCBvYmogPT09IHVuZGVmaW5lZCApIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICB2YXIgaXNBcnJheUxpa2UgPSB0eXBlb2Ygb2JqID09ICdvYmplY3QnICYmIHR5cGVvZiBvYmoubGVuZ3RoID09ICdudW1iZXInO1xuICBpZiAoIGlzQXJyYXlMaWtlICkge1xuICAgIC8vIGNvbnZlcnQgbm9kZUxpc3QgdG8gYXJyYXlcbiAgICByZXR1cm4gYXJyYXlTbGljZS5jYWxsKCBvYmogKTtcbiAgfVxuXG4gIC8vIGFycmF5IG9mIHNpbmdsZSBpbmRleFxuICByZXR1cm4gWyBvYmogXTtcbn07XG5cbi8vIC0tLS0tIHJlbW92ZUZyb20gLS0tLS0gLy9cblxudXRpbHMucmVtb3ZlRnJvbSA9IGZ1bmN0aW9uKCBhcnksIG9iaiApIHtcbiAgdmFyIGluZGV4ID0gYXJ5LmluZGV4T2YoIG9iaiApO1xuICBpZiAoIGluZGV4ICE9IC0xICkge1xuICAgIGFyeS5zcGxpY2UoIGluZGV4LCAxICk7XG4gIH1cbn07XG5cbi8vIC0tLS0tIGdldFBhcmVudCAtLS0tLSAvL1xuXG51dGlscy5nZXRQYXJlbnQgPSBmdW5jdGlvbiggZWxlbSwgc2VsZWN0b3IgKSB7XG4gIHdoaWxlICggZWxlbS5wYXJlbnROb2RlICYmIGVsZW0gIT0gZG9jdW1lbnQuYm9keSApIHtcbiAgICBlbGVtID0gZWxlbS5wYXJlbnROb2RlO1xuICAgIGlmICggbWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBzZWxlY3RvciApICkge1xuICAgICAgcmV0dXJuIGVsZW07XG4gICAgfVxuICB9XG59O1xuXG4vLyAtLS0tLSBnZXRRdWVyeUVsZW1lbnQgLS0tLS0gLy9cblxuLy8gdXNlIGVsZW1lbnQgYXMgc2VsZWN0b3Igc3RyaW5nXG51dGlscy5nZXRRdWVyeUVsZW1lbnQgPSBmdW5jdGlvbiggZWxlbSApIHtcbiAgaWYgKCB0eXBlb2YgZWxlbSA9PSAnc3RyaW5nJyApIHtcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvciggZWxlbSApO1xuICB9XG4gIHJldHVybiBlbGVtO1xufTtcblxuLy8gLS0tLS0gaGFuZGxlRXZlbnQgLS0tLS0gLy9cblxuLy8gZW5hYmxlIC5vbnR5cGUgdG8gdHJpZ2dlciBmcm9tIC5hZGRFdmVudExpc3RlbmVyKCBlbGVtLCAndHlwZScgKVxudXRpbHMuaGFuZGxlRXZlbnQgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIHZhciBtZXRob2QgPSAnb24nICsgZXZlbnQudHlwZTtcbiAgaWYgKCB0aGlzWyBtZXRob2QgXSApIHtcbiAgICB0aGlzWyBtZXRob2QgXSggZXZlbnQgKTtcbiAgfVxufTtcblxuLy8gLS0tLS0gZmlsdGVyRmluZEVsZW1lbnRzIC0tLS0tIC8vXG5cbnV0aWxzLmZpbHRlckZpbmRFbGVtZW50cyA9IGZ1bmN0aW9uKCBlbGVtcywgc2VsZWN0b3IgKSB7XG4gIC8vIG1ha2UgYXJyYXkgb2YgZWxlbXNcbiAgZWxlbXMgPSB1dGlscy5tYWtlQXJyYXkoIGVsZW1zICk7XG4gIHZhciBmZkVsZW1zID0gW107XG5cbiAgZWxlbXMuZm9yRWFjaCggZnVuY3Rpb24oIGVsZW0gKSB7XG4gICAgLy8gY2hlY2sgdGhhdCBlbGVtIGlzIGFuIGFjdHVhbCBlbGVtZW50XG4gICAgaWYgKCAhKCBlbGVtIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgKSApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gYWRkIGVsZW0gaWYgbm8gc2VsZWN0b3JcbiAgICBpZiAoICFzZWxlY3RvciApIHtcbiAgICAgIGZmRWxlbXMucHVzaCggZWxlbSApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBmaWx0ZXIgJiBmaW5kIGl0ZW1zIGlmIHdlIGhhdmUgYSBzZWxlY3RvclxuICAgIC8vIGZpbHRlclxuICAgIGlmICggbWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBzZWxlY3RvciApICkge1xuICAgICAgZmZFbGVtcy5wdXNoKCBlbGVtICk7XG4gICAgfVxuICAgIC8vIGZpbmQgY2hpbGRyZW5cbiAgICB2YXIgY2hpbGRFbGVtcyA9IGVsZW0ucXVlcnlTZWxlY3RvckFsbCggc2VsZWN0b3IgKTtcbiAgICAvLyBjb25jYXQgY2hpbGRFbGVtcyB0byBmaWx0ZXJGb3VuZCBhcnJheVxuICAgIGZvciAoIHZhciBpPTA7IGkgPCBjaGlsZEVsZW1zLmxlbmd0aDsgaSsrICkge1xuICAgICAgZmZFbGVtcy5wdXNoKCBjaGlsZEVsZW1zW2ldICk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gZmZFbGVtcztcbn07XG5cbi8vIC0tLS0tIGRlYm91bmNlTWV0aG9kIC0tLS0tIC8vXG5cbnV0aWxzLmRlYm91bmNlTWV0aG9kID0gZnVuY3Rpb24oIF9jbGFzcywgbWV0aG9kTmFtZSwgdGhyZXNob2xkICkge1xuICB0aHJlc2hvbGQgPSB0aHJlc2hvbGQgfHwgMTAwO1xuICAvLyBvcmlnaW5hbCBtZXRob2RcbiAgdmFyIG1ldGhvZCA9IF9jbGFzcy5wcm90b3R5cGVbIG1ldGhvZE5hbWUgXTtcbiAgdmFyIHRpbWVvdXROYW1lID0gbWV0aG9kTmFtZSArICdUaW1lb3V0JztcblxuICBfY2xhc3MucHJvdG90eXBlWyBtZXRob2ROYW1lIF0gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdGltZW91dCA9IHRoaXNbIHRpbWVvdXROYW1lIF07XG4gICAgY2xlYXJUaW1lb3V0KCB0aW1lb3V0ICk7XG5cbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgIHRoaXNbIHRpbWVvdXROYW1lIF0gPSBzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcbiAgICAgIG1ldGhvZC5hcHBseSggX3RoaXMsIGFyZ3MgKTtcbiAgICAgIGRlbGV0ZSBfdGhpc1sgdGltZW91dE5hbWUgXTtcbiAgICB9LCB0aHJlc2hvbGQgKTtcbiAgfTtcbn07XG5cbi8vIC0tLS0tIGRvY1JlYWR5IC0tLS0tIC8vXG5cbnV0aWxzLmRvY1JlYWR5ID0gZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuICB2YXIgcmVhZHlTdGF0ZSA9IGRvY3VtZW50LnJlYWR5U3RhdGU7XG4gIGlmICggcmVhZHlTdGF0ZSA9PSAnY29tcGxldGUnIHx8IHJlYWR5U3RhdGUgPT0gJ2ludGVyYWN0aXZlJyApIHtcbiAgICAvLyBkbyBhc3luYyB0byBhbGxvdyBmb3Igb3RoZXIgc2NyaXB0cyB0byBydW4uIG1ldGFmaXp6eS9mbGlja2l0eSM0NDFcbiAgICBzZXRUaW1lb3V0KCBjYWxsYmFjayApO1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICdET01Db250ZW50TG9hZGVkJywgY2FsbGJhY2sgKTtcbiAgfVxufTtcblxuLy8gLS0tLS0gaHRtbEluaXQgLS0tLS0gLy9cblxuLy8gaHR0cDovL2phbWVzcm9iZXJ0cy5uYW1lL2Jsb2cvMjAxMC8wMi8yMi9zdHJpbmctZnVuY3Rpb25zLWZvci1qYXZhc2NyaXB0LXRyaW0tdG8tY2FtZWwtY2FzZS10by1kYXNoZWQtYW5kLXRvLXVuZGVyc2NvcmUvXG51dGlscy50b0Rhc2hlZCA9IGZ1bmN0aW9uKCBzdHIgKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSggLyguKShbQS1aXSkvZywgZnVuY3Rpb24oIG1hdGNoLCAkMSwgJDIgKSB7XG4gICAgcmV0dXJuICQxICsgJy0nICsgJDI7XG4gIH0pLnRvTG93ZXJDYXNlKCk7XG59O1xuXG52YXIgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlO1xuLyoqXG4gKiBhbGxvdyB1c2VyIHRvIGluaXRpYWxpemUgY2xhc3NlcyB2aWEgW2RhdGEtbmFtZXNwYWNlXSBvciAuanMtbmFtZXNwYWNlIGNsYXNzXG4gKiBodG1sSW5pdCggV2lkZ2V0LCAnd2lkZ2V0TmFtZScgKVxuICogb3B0aW9ucyBhcmUgcGFyc2VkIGZyb20gZGF0YS1uYW1lc3BhY2Utb3B0aW9uc1xuICovXG51dGlscy5odG1sSW5pdCA9IGZ1bmN0aW9uKCBXaWRnZXRDbGFzcywgbmFtZXNwYWNlICkge1xuICB1dGlscy5kb2NSZWFkeSggZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRhc2hlZE5hbWVzcGFjZSA9IHV0aWxzLnRvRGFzaGVkKCBuYW1lc3BhY2UgKTtcbiAgICB2YXIgZGF0YUF0dHIgPSAnZGF0YS0nICsgZGFzaGVkTmFtZXNwYWNlO1xuICAgIHZhciBkYXRhQXR0ckVsZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCggJ1snICsgZGF0YUF0dHIgKyAnXScgKTtcbiAgICB2YXIganNEYXNoRWxlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCAnLmpzLScgKyBkYXNoZWROYW1lc3BhY2UgKTtcbiAgICB2YXIgZWxlbXMgPSB1dGlscy5tYWtlQXJyYXkoIGRhdGFBdHRyRWxlbXMgKVxuICAgICAgLmNvbmNhdCggdXRpbHMubWFrZUFycmF5KCBqc0Rhc2hFbGVtcyApICk7XG4gICAgdmFyIGRhdGFPcHRpb25zQXR0ciA9IGRhdGFBdHRyICsgJy1vcHRpb25zJztcbiAgICB2YXIgalF1ZXJ5ID0gd2luZG93LmpRdWVyeTtcblxuICAgIGVsZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBlbGVtICkge1xuICAgICAgdmFyIGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZSggZGF0YUF0dHIgKSB8fFxuICAgICAgICBlbGVtLmdldEF0dHJpYnV0ZSggZGF0YU9wdGlvbnNBdHRyICk7XG4gICAgICB2YXIgb3B0aW9ucztcbiAgICAgIHRyeSB7XG4gICAgICAgIG9wdGlvbnMgPSBhdHRyICYmIEpTT04ucGFyc2UoIGF0dHIgKTtcbiAgICAgIH0gY2F0Y2ggKCBlcnJvciApIHtcbiAgICAgICAgLy8gbG9nIGVycm9yLCBkbyBub3QgaW5pdGlhbGl6ZVxuICAgICAgICBpZiAoIGNvbnNvbGUgKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvciggJ0Vycm9yIHBhcnNpbmcgJyArIGRhdGFBdHRyICsgJyBvbiAnICsgZWxlbS5jbGFzc05hbWUgK1xuICAgICAgICAgICc6ICcgKyBlcnJvciApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIGluaXRpYWxpemVcbiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBXaWRnZXRDbGFzcyggZWxlbSwgb3B0aW9ucyApO1xuICAgICAgLy8gbWFrZSBhdmFpbGFibGUgdmlhICQoKS5kYXRhKCduYW1lc3BhY2UnKVxuICAgICAgaWYgKCBqUXVlcnkgKSB7XG4gICAgICAgIGpRdWVyeS5kYXRhKCBlbGVtLCBuYW1lc3BhY2UsIGluc3RhbmNlICk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgfSk7XG59O1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxucmV0dXJuIHV0aWxzO1xuXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/fizzy-ui-utils/utils.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/add-remove-cell.js":
/*!*****************************************************!*\
  !*** ./node_modules/flickity/js/add-remove-cell.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// add, remove cell\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, Flickity, utils ) {\n\n'use strict';\n\n// append cells to a document fragment\nfunction getCellsFragment( cells ) {\n  var fragment = document.createDocumentFragment();\n  cells.forEach( function( cell ) {\n    fragment.appendChild( cell.element );\n  });\n  return fragment;\n}\n\n// -------------------------- add/remove cell prototype -------------------------- //\n\nvar proto = Flickity.prototype;\n\n/**\n * Insert, prepend, or append cells\n * @param {Element, Array, NodeList} elems\n * @param {Integer} index\n */\nproto.insert = function( elems, index ) {\n  var cells = this._makeCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  var len = this.cells.length;\n  // default to append\n  index = index === undefined ? len : index;\n  // add cells with document fragment\n  var fragment = getCellsFragment( cells );\n  // append to slider\n  var isAppend = index == len;\n  if ( isAppend ) {\n    this.slider.appendChild( fragment );\n  } else {\n    var insertCellElement = this.cells[ index ].element;\n    this.slider.insertBefore( fragment, insertCellElement );\n  }\n  // add to this.cells\n  if ( index === 0 ) {\n    // prepend, add to start\n    this.cells = cells.concat( this.cells );\n  } else if ( isAppend ) {\n    // append, add to end\n    this.cells = this.cells.concat( cells );\n  } else {\n    // insert in this.cells\n    var endCells = this.cells.splice( index, len - index );\n    this.cells = this.cells.concat( cells ).concat( endCells );\n  }\n\n  this._sizeCells( cells );\n  this.cellChange( index, true );\n};\n\nproto.append = function( elems ) {\n  this.insert( elems, this.cells.length );\n};\n\nproto.prepend = function( elems ) {\n  this.insert( elems, 0 );\n};\n\n/**\n * Remove cells\n * @param {Element, Array, NodeList} elems\n */\nproto.remove = function( elems ) {\n  var cells = this.getCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n\n  var minCellIndex = this.cells.length - 1;\n  // remove cells from collection & DOM\n  cells.forEach( function( cell ) {\n    cell.remove();\n    var index = this.cells.indexOf( cell );\n    minCellIndex = Math.min( index, minCellIndex );\n    utils.removeFrom( this.cells, cell );\n  }, this );\n\n  this.cellChange( minCellIndex, true );\n};\n\n/**\n * logic to be run after a cell's size changes\n * @param {Element} elem - cell's element\n */\nproto.cellSizeChange = function( elem ) {\n  var cell = this.getCell( elem );\n  if ( !cell ) {\n    return;\n  }\n  cell.getSize();\n\n  var index = this.cells.indexOf( cell );\n  this.cellChange( index );\n};\n\n/**\n * logic any time a cell is changed: added, removed, or size changed\n * @param {Integer} changedCellIndex - index of the changed cell, optional\n */\nproto.cellChange = function( changedCellIndex, isPositioningSlider ) {\n  var prevSelectedElem = this.selectedElement;\n  this._positionCells( changedCellIndex );\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  // update selectedIndex\n  // try to maintain position & select previous selected element\n  var cell = this.getCell( prevSelectedElem );\n  if ( cell ) {\n    this.selectedIndex = this.getCellSlideIndex( cell );\n  }\n  this.selectedIndex = Math.min( this.slides.length - 1, this.selectedIndex );\n\n  this.emitEvent( 'cellChange', [ changedCellIndex ] );\n  // position slider\n  this.select( this.selectedIndex );\n  // do not position slider after lazy load\n  if ( isPositioningSlider ) {\n    this.positionSliderAtSelected();\n  }\n};\n\n// -----  ----- //\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvYWRkLXJlbW92ZS1jZWxsLmpzP2JkN2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQXlDO0FBQ2hEO0FBQ0EsSUFBSSxpQ0FBUTtBQUNaLE1BQU0sK0VBQVk7QUFDbEIsTUFBTSx5RkFBc0I7QUFDNUIsS0FBSyxtQ0FBRTtBQUNQO0FBQ0EsS0FBSztBQUFBLG9HQUFDO0FBQ04sR0FBRyxNQUFNLEVBY047O0FBRUgsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFdBQVcseUJBQXlCO0FBQ3BDLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyx5QkFBeUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2ZsaWNraXR5L2pzL2FkZC1yZW1vdmUtY2VsbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGFkZCwgcmVtb3ZlIGNlbGxcbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EXG4gICAgZGVmaW5lKCBbXG4gICAgICAnLi9mbGlja2l0eScsXG4gICAgICAnZml6enktdWktdXRpbHMvdXRpbHMnXG4gICAgXSwgZnVuY3Rpb24oIEZsaWNraXR5LCB1dGlscyApIHtcbiAgICAgIHJldHVybiBmYWN0b3J5KCB3aW5kb3csIEZsaWNraXR5LCB1dGlscyApO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgcmVxdWlyZSgnLi9mbGlja2l0eScpLFxuICAgICAgcmVxdWlyZSgnZml6enktdWktdXRpbHMnKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgd2luZG93LkZsaWNraXR5LFxuICAgICAgd2luZG93LmZpenp5VUlVdGlsc1xuICAgICk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCB3aW5kb3csIEZsaWNraXR5LCB1dGlscyApIHtcblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyBhcHBlbmQgY2VsbHMgdG8gYSBkb2N1bWVudCBmcmFnbWVudFxuZnVuY3Rpb24gZ2V0Q2VsbHNGcmFnbWVudCggY2VsbHMgKSB7XG4gIHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgY2VsbHMuZm9yRWFjaCggZnVuY3Rpb24oIGNlbGwgKSB7XG4gICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNlbGwuZWxlbWVudCApO1xuICB9KTtcbiAgcmV0dXJuIGZyYWdtZW50O1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBhZGQvcmVtb3ZlIGNlbGwgcHJvdG90eXBlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbnZhciBwcm90byA9IEZsaWNraXR5LnByb3RvdHlwZTtcblxuLyoqXG4gKiBJbnNlcnQsIHByZXBlbmQsIG9yIGFwcGVuZCBjZWxsc1xuICogQHBhcmFtIHtFbGVtZW50LCBBcnJheSwgTm9kZUxpc3R9IGVsZW1zXG4gKiBAcGFyYW0ge0ludGVnZXJ9IGluZGV4XG4gKi9cbnByb3RvLmluc2VydCA9IGZ1bmN0aW9uKCBlbGVtcywgaW5kZXggKSB7XG4gIHZhciBjZWxscyA9IHRoaXMuX21ha2VDZWxscyggZWxlbXMgKTtcbiAgaWYgKCAhY2VsbHMgfHwgIWNlbGxzLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGxlbiA9IHRoaXMuY2VsbHMubGVuZ3RoO1xuICAvLyBkZWZhdWx0IHRvIGFwcGVuZFxuICBpbmRleCA9IGluZGV4ID09PSB1bmRlZmluZWQgPyBsZW4gOiBpbmRleDtcbiAgLy8gYWRkIGNlbGxzIHdpdGggZG9jdW1lbnQgZnJhZ21lbnRcbiAgdmFyIGZyYWdtZW50ID0gZ2V0Q2VsbHNGcmFnbWVudCggY2VsbHMgKTtcbiAgLy8gYXBwZW5kIHRvIHNsaWRlclxuICB2YXIgaXNBcHBlbmQgPSBpbmRleCA9PSBsZW47XG4gIGlmICggaXNBcHBlbmQgKSB7XG4gICAgdGhpcy5zbGlkZXIuYXBwZW5kQ2hpbGQoIGZyYWdtZW50ICk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluc2VydENlbGxFbGVtZW50ID0gdGhpcy5jZWxsc1sgaW5kZXggXS5lbGVtZW50O1xuICAgIHRoaXMuc2xpZGVyLmluc2VydEJlZm9yZSggZnJhZ21lbnQsIGluc2VydENlbGxFbGVtZW50ICk7XG4gIH1cbiAgLy8gYWRkIHRvIHRoaXMuY2VsbHNcbiAgaWYgKCBpbmRleCA9PT0gMCApIHtcbiAgICAvLyBwcmVwZW5kLCBhZGQgdG8gc3RhcnRcbiAgICB0aGlzLmNlbGxzID0gY2VsbHMuY29uY2F0KCB0aGlzLmNlbGxzICk7XG4gIH0gZWxzZSBpZiAoIGlzQXBwZW5kICkge1xuICAgIC8vIGFwcGVuZCwgYWRkIHRvIGVuZFxuICAgIHRoaXMuY2VsbHMgPSB0aGlzLmNlbGxzLmNvbmNhdCggY2VsbHMgKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBpbnNlcnQgaW4gdGhpcy5jZWxsc1xuICAgIHZhciBlbmRDZWxscyA9IHRoaXMuY2VsbHMuc3BsaWNlKCBpbmRleCwgbGVuIC0gaW5kZXggKTtcbiAgICB0aGlzLmNlbGxzID0gdGhpcy5jZWxscy5jb25jYXQoIGNlbGxzICkuY29uY2F0KCBlbmRDZWxscyApO1xuICB9XG5cbiAgdGhpcy5fc2l6ZUNlbGxzKCBjZWxscyApO1xuICB0aGlzLmNlbGxDaGFuZ2UoIGluZGV4LCB0cnVlICk7XG59O1xuXG5wcm90by5hcHBlbmQgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIHRoaXMuaW5zZXJ0KCBlbGVtcywgdGhpcy5jZWxscy5sZW5ndGggKTtcbn07XG5cbnByb3RvLnByZXBlbmQgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIHRoaXMuaW5zZXJ0KCBlbGVtcywgMCApO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgY2VsbHNcbiAqIEBwYXJhbSB7RWxlbWVudCwgQXJyYXksIE5vZGVMaXN0fSBlbGVtc1xuICovXG5wcm90by5yZW1vdmUgPSBmdW5jdGlvbiggZWxlbXMgKSB7XG4gIHZhciBjZWxscyA9IHRoaXMuZ2V0Q2VsbHMoIGVsZW1zICk7XG4gIGlmICggIWNlbGxzIHx8ICFjZWxscy5sZW5ndGggKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1pbkNlbGxJbmRleCA9IHRoaXMuY2VsbHMubGVuZ3RoIC0gMTtcbiAgLy8gcmVtb3ZlIGNlbGxzIGZyb20gY29sbGVjdGlvbiAmIERPTVxuICBjZWxscy5mb3JFYWNoKCBmdW5jdGlvbiggY2VsbCApIHtcbiAgICBjZWxsLnJlbW92ZSgpO1xuICAgIHZhciBpbmRleCA9IHRoaXMuY2VsbHMuaW5kZXhPZiggY2VsbCApO1xuICAgIG1pbkNlbGxJbmRleCA9IE1hdGgubWluKCBpbmRleCwgbWluQ2VsbEluZGV4ICk7XG4gICAgdXRpbHMucmVtb3ZlRnJvbSggdGhpcy5jZWxscywgY2VsbCApO1xuICB9LCB0aGlzICk7XG5cbiAgdGhpcy5jZWxsQ2hhbmdlKCBtaW5DZWxsSW5kZXgsIHRydWUgKTtcbn07XG5cbi8qKlxuICogbG9naWMgdG8gYmUgcnVuIGFmdGVyIGEgY2VsbCdzIHNpemUgY2hhbmdlc1xuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtIC0gY2VsbCdzIGVsZW1lbnRcbiAqL1xucHJvdG8uY2VsbFNpemVDaGFuZ2UgPSBmdW5jdGlvbiggZWxlbSApIHtcbiAgdmFyIGNlbGwgPSB0aGlzLmdldENlbGwoIGVsZW0gKTtcbiAgaWYgKCAhY2VsbCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY2VsbC5nZXRTaXplKCk7XG5cbiAgdmFyIGluZGV4ID0gdGhpcy5jZWxscy5pbmRleE9mKCBjZWxsICk7XG4gIHRoaXMuY2VsbENoYW5nZSggaW5kZXggKTtcbn07XG5cbi8qKlxuICogbG9naWMgYW55IHRpbWUgYSBjZWxsIGlzIGNoYW5nZWQ6IGFkZGVkLCByZW1vdmVkLCBvciBzaXplIGNoYW5nZWRcbiAqIEBwYXJhbSB7SW50ZWdlcn0gY2hhbmdlZENlbGxJbmRleCAtIGluZGV4IG9mIHRoZSBjaGFuZ2VkIGNlbGwsIG9wdGlvbmFsXG4gKi9cbnByb3RvLmNlbGxDaGFuZ2UgPSBmdW5jdGlvbiggY2hhbmdlZENlbGxJbmRleCwgaXNQb3NpdGlvbmluZ1NsaWRlciApIHtcbiAgdmFyIHByZXZTZWxlY3RlZEVsZW0gPSB0aGlzLnNlbGVjdGVkRWxlbWVudDtcbiAgdGhpcy5fcG9zaXRpb25DZWxscyggY2hhbmdlZENlbGxJbmRleCApO1xuICB0aGlzLl9nZXRXcmFwU2hpZnRDZWxscygpO1xuICB0aGlzLnNldEdhbGxlcnlTaXplKCk7XG4gIC8vIHVwZGF0ZSBzZWxlY3RlZEluZGV4XG4gIC8vIHRyeSB0byBtYWludGFpbiBwb3NpdGlvbiAmIHNlbGVjdCBwcmV2aW91cyBzZWxlY3RlZCBlbGVtZW50XG4gIHZhciBjZWxsID0gdGhpcy5nZXRDZWxsKCBwcmV2U2VsZWN0ZWRFbGVtICk7XG4gIGlmICggY2VsbCApIHtcbiAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSB0aGlzLmdldENlbGxTbGlkZUluZGV4KCBjZWxsICk7XG4gIH1cbiAgdGhpcy5zZWxlY3RlZEluZGV4ID0gTWF0aC5taW4oIHRoaXMuc2xpZGVzLmxlbmd0aCAtIDEsIHRoaXMuc2VsZWN0ZWRJbmRleCApO1xuXG4gIHRoaXMuZW1pdEV2ZW50KCAnY2VsbENoYW5nZScsIFsgY2hhbmdlZENlbGxJbmRleCBdICk7XG4gIC8vIHBvc2l0aW9uIHNsaWRlclxuICB0aGlzLnNlbGVjdCggdGhpcy5zZWxlY3RlZEluZGV4ICk7XG4gIC8vIGRvIG5vdCBwb3NpdGlvbiBzbGlkZXIgYWZ0ZXIgbGF6eSBsb2FkXG4gIGlmICggaXNQb3NpdGlvbmluZ1NsaWRlciApIHtcbiAgICB0aGlzLnBvc2l0aW9uU2xpZGVyQXRTZWxlY3RlZCgpO1xuICB9XG59O1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxucmV0dXJuIEZsaWNraXR5O1xuXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/add-remove-cell.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/animate.js":
/*!*********************************************!*\
  !*** ./node_modules/flickity/js/animate.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// animate\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( utils ) {\n      return factory( window, utils );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, utils ) {\n\n'use strict';\n\n// -------------------------- animate -------------------------- //\n\nvar proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) {\n    return;\n  }\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  var previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) {\n    var _this = this;\n    requestAnimationFrame( function animateFrame() {\n      _this.animate();\n    });\n  }\n};\n\nproto.positionSlider = function() {\n  var x = this.x;\n  // wrap position around\n  if ( this.options.wrapAround && this.cells.length > 1 ) {\n    x = utils.modulo( x, this.slideableWidth );\n    x = x - this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  this.setTranslateX( x, this.isAnimating );\n  this.dispatchScrollEvent();\n};\n\nproto.setTranslateX = function( x, is3d ) {\n  x += this.cursorPosition;\n  // reverse if right-to-left and using transform\n  x = this.options.rightToLeft ? -x : x;\n  var translateX = this.getPositionValue( x );\n  // use 3D tranforms for hardware acceleration on iOS\n  // but use 2D when settled, for better font-rendering\n  this.slider.style.transform = is3d ?\n    'translate3d(' + translateX + ',0,0)' : 'translateX(' + translateX + ')';\n};\n\nproto.dispatchScrollEvent = function() {\n  var firstSlide = this.slides[0];\n  if ( !firstSlide ) {\n    return;\n  }\n  var positionX = -this.x - firstSlide.target;\n  var progress = positionX / this.slidesWidth;\n  this.dispatchEvent( 'scroll', null, [ progress, positionX ] );\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) {\n    return;\n  }\n  this.x = -this.selectedSlide.target;\n  this.velocity = 0; // stop wobble\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 )+ '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  if ( !this.isPointerDown && Math.round( this.x * 100 ) == Math.round( previousX * 100 ) ) {\n    this.restingFrames++;\n  }\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    this.positionSlider();\n    this.dispatchEvent( 'settle', null, [ this.selectedIndex ] );\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  var beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  var afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  for ( var i=0; i < cells.length; i++ ) {\n    var cell = cells[i];\n    var cellShift = gap > 0 ? shift : 0;\n    cell.wrapShift( cellShift );\n    gap -= cell.size.outerWidth;\n  }\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  for ( var i=0; i < cells.length; i++ ) {\n    cells[i].wrapShift( 0 );\n  }\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n};\n\nproto.applyForce = function( force ) {\n  this.velocity += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isDraggable || !this.isPointerDown ) {\n    return;\n  }\n  // change the position to drag position by applying force\n  var dragVelocity = this.dragX - this.x;\n  var dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no slides\n  var dragDown = this.isDraggable && this.isPointerDown;\n  if ( dragDown || this.isFreeScrolling || !this.slides.length ) {\n    return;\n  }\n  var distance = this.selectedSlide.target * -1 - this.x;\n  var force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/animate.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/cell.js":
/*!******************************************!*\
  !*** ./node_modules/flickity/js/cell.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Flickity.Cell\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( getSize ) {\n      return factory( window, getSize );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, getSize ) {\n\n'use strict';\n\nfunction Cell( elem, parent ) {\n  this.element = elem;\n  this.parent = parent;\n\n  this.create();\n}\n\nvar proto = Cell.prototype;\n\nproto.create = function() {\n  this.element.style.position = 'absolute';\n  this.element.setAttribute( 'aria-hidden', 'true' );\n  this.x = 0;\n  this.shift = 0;\n};\n\nproto.destroy = function() {\n  // reset style\n  this.unselect();\n  this.element.style.position = '';\n  var side = this.parent.originSide;\n  this.element.style[ side ] = '';\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\nproto.setPosition = function( x ) {\n  this.x = x;\n  this.updateTarget();\n  this.renderPosition( x );\n};\n\n// setDefaultTarget v1 method, backwards compatibility, remove in v3\nproto.updateTarget = proto.setDefaultTarget = function() {\n  var marginProperty = this.parent.originSide == 'left' ? 'marginLeft' : 'marginRight';\n  this.target = this.x + this.size[ marginProperty ] +\n    this.size.width * this.parent.cellAlign;\n};\n\nproto.renderPosition = function( x ) {\n  // render position of cell with in slider\n  var side = this.parent.originSide;\n  this.element.style[ side ] = this.parent.getPositionValue( x );\n};\n\nproto.select = function() {\n  this.element.classList.add('is-selected');\n  this.element.removeAttribute('aria-hidden');\n};\n\nproto.unselect = function() {\n  this.element.classList.remove('is-selected');\n  this.element.setAttribute( 'aria-hidden', 'true' );\n};\n\n/**\n * @param {Integer} factor - 0, 1, or -1\n**/\nproto.wrapShift = function( shift ) {\n  this.shift = shift;\n  this.renderPosition( this.x + this.parent.slideableWidth * shift );\n};\n\nproto.remove = function() {\n  this.element.parentNode.removeChild( this.element );\n};\n\nreturn Cell;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvY2VsbC5qcz9jOGRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUF5QztBQUNoRDtBQUNBLElBQUksaUNBQVE7QUFDWixNQUFNLG1GQUFtQjtBQUN6QixLQUFLLG1DQUFFO0FBQ1A7QUFDQSxLQUFLO0FBQUEsb0dBQUM7QUFDTixHQUFHLE1BQU0sRUFhTjs7QUFFSCxDQUFDOztBQUVEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2ZsaWNraXR5L2pzL2NlbGwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGbGlja2l0eS5DZWxsXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRFxuICAgIGRlZmluZSggW1xuICAgICAgJ2dldC1zaXplL2dldC1zaXplJ1xuICAgIF0sIGZ1bmN0aW9uKCBnZXRTaXplICkge1xuICAgICAgcmV0dXJuIGZhY3RvcnkoIHdpbmRvdywgZ2V0U2l6ZSApO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgcmVxdWlyZSgnZ2V0LXNpemUnKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICB3aW5kb3cuRmxpY2tpdHkgPSB3aW5kb3cuRmxpY2tpdHkgfHwge307XG4gICAgd2luZG93LkZsaWNraXR5LkNlbGwgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgd2luZG93LmdldFNpemVcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggd2luZG93LCBnZXRTaXplICkge1xuXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIENlbGwoIGVsZW0sIHBhcmVudCApIHtcbiAgdGhpcy5lbGVtZW50ID0gZWxlbTtcbiAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG5cbiAgdGhpcy5jcmVhdGUoKTtcbn1cblxudmFyIHByb3RvID0gQ2VsbC5wcm90b3R5cGU7XG5cbnByb3RvLmNyZWF0ZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCAnYXJpYS1oaWRkZW4nLCAndHJ1ZScgKTtcbiAgdGhpcy54ID0gMDtcbiAgdGhpcy5zaGlmdCA9IDA7XG59O1xuXG5wcm90by5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gIC8vIHJlc2V0IHN0eWxlXG4gIHRoaXMudW5zZWxlY3QoKTtcbiAgdGhpcy5lbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJyc7XG4gIHZhciBzaWRlID0gdGhpcy5wYXJlbnQub3JpZ2luU2lkZTtcbiAgdGhpcy5lbGVtZW50LnN0eWxlWyBzaWRlIF0gPSAnJztcbn07XG5cbnByb3RvLmdldFNpemUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5zaXplID0gZ2V0U2l6ZSggdGhpcy5lbGVtZW50ICk7XG59O1xuXG5wcm90by5zZXRQb3NpdGlvbiA9IGZ1bmN0aW9uKCB4ICkge1xuICB0aGlzLnggPSB4O1xuICB0aGlzLnVwZGF0ZVRhcmdldCgpO1xuICB0aGlzLnJlbmRlclBvc2l0aW9uKCB4ICk7XG59O1xuXG4vLyBzZXREZWZhdWx0VGFyZ2V0IHYxIG1ldGhvZCwgYmFja3dhcmRzIGNvbXBhdGliaWxpdHksIHJlbW92ZSBpbiB2M1xucHJvdG8udXBkYXRlVGFyZ2V0ID0gcHJvdG8uc2V0RGVmYXVsdFRhcmdldCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgbWFyZ2luUHJvcGVydHkgPSB0aGlzLnBhcmVudC5vcmlnaW5TaWRlID09ICdsZWZ0JyA/ICdtYXJnaW5MZWZ0JyA6ICdtYXJnaW5SaWdodCc7XG4gIHRoaXMudGFyZ2V0ID0gdGhpcy54ICsgdGhpcy5zaXplWyBtYXJnaW5Qcm9wZXJ0eSBdICtcbiAgICB0aGlzLnNpemUud2lkdGggKiB0aGlzLnBhcmVudC5jZWxsQWxpZ247XG59O1xuXG5wcm90by5yZW5kZXJQb3NpdGlvbiA9IGZ1bmN0aW9uKCB4ICkge1xuICAvLyByZW5kZXIgcG9zaXRpb24gb2YgY2VsbCB3aXRoIGluIHNsaWRlclxuICB2YXIgc2lkZSA9IHRoaXMucGFyZW50Lm9yaWdpblNpZGU7XG4gIHRoaXMuZWxlbWVudC5zdHlsZVsgc2lkZSBdID0gdGhpcy5wYXJlbnQuZ2V0UG9zaXRpb25WYWx1ZSggeCApO1xufTtcblxucHJvdG8uc2VsZWN0ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpcy1zZWxlY3RlZCcpO1xuICB0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWhpZGRlbicpO1xufTtcblxucHJvdG8udW5zZWxlY3QgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2lzLXNlbGVjdGVkJyk7XG4gIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoICdhcmlhLWhpZGRlbicsICd0cnVlJyApO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0ludGVnZXJ9IGZhY3RvciAtIDAsIDEsIG9yIC0xXG4qKi9cbnByb3RvLndyYXBTaGlmdCA9IGZ1bmN0aW9uKCBzaGlmdCApIHtcbiAgdGhpcy5zaGlmdCA9IHNoaWZ0O1xuICB0aGlzLnJlbmRlclBvc2l0aW9uKCB0aGlzLnggKyB0aGlzLnBhcmVudC5zbGlkZWFibGVXaWR0aCAqIHNoaWZ0ICk7XG59O1xuXG5wcm90by5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRoaXMuZWxlbWVudCApO1xufTtcblxucmV0dXJuIENlbGw7XG5cbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/cell.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/drag.js":
/*!******************************************!*\
  !*** ./node_modules/flickity/js/drag.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// drag\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\"),\n      __webpack_require__(/*! unidragger/unidragger */ \"./node_modules/unidragger/unidragger.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Flickity, Unidragger, utils ) {\n      return factory( window, Flickity, Unidragger, utils );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, Flickity, Unidragger, utils ) {\n\n'use strict';\n\n// ----- defaults ----- //\n\nutils.extend( Flickity.defaults, {\n  draggable: '>1',\n  dragThreshold: 3,\n});\n\n// ----- create ----- //\n\nFlickity.createMethods.push('_createDrag');\n\n// -------------------------- drag prototype -------------------------- //\n\nvar proto = Flickity.prototype;\nutils.extend( proto, Unidragger.prototype );\nproto._touchActionValue = 'pan-y';\n\n// --------------------------  -------------------------- //\n\nvar isTouch = 'createTouch' in document;\nvar isTouchmoveScrollCanceled = false;\n\nproto._createDrag = function() {\n  this.on( 'activate', this.onActivateDrag );\n  this.on( 'uiChange', this._uiChangeDrag );\n  this.on( 'deactivate', this.onDeactivateDrag );\n  this.on( 'cellChange', this.updateDraggable );\n  // TODO updateDraggable on resize? if groupCells & slides change\n  // HACK - add seemingly innocuous handler to fix iOS 10 scroll behavior\n  // #457, RubaXa/Sortable#973\n  if ( isTouch && !isTouchmoveScrollCanceled ) {\n    window.addEventListener( 'touchmove', function() {});\n    isTouchmoveScrollCanceled = true;\n  }\n};\n\nproto.onActivateDrag = function() {\n  this.handles = [ this.viewport ];\n  this.bindHandles();\n  this.updateDraggable();\n};\n\nproto.onDeactivateDrag = function() {\n  this.unbindHandles();\n  this.element.classList.remove('is-draggable');\n};\n\nproto.updateDraggable = function() {\n  // disable dragging if less than 2 slides. #278\n  if ( this.options.draggable == '>1' ) {\n    this.isDraggable = this.slides.length > 1;\n  } else {\n    this.isDraggable = this.options.draggable;\n  }\n  if ( this.isDraggable ) {\n    this.element.classList.add('is-draggable');\n  } else {\n    this.element.classList.remove('is-draggable');\n  }\n};\n\n// backwards compatibility\nproto.bindDrag = function() {\n  this.options.draggable = true;\n  this.updateDraggable();\n};\n\nproto.unbindDrag = function() {\n  this.options.draggable = false;\n  this.updateDraggable();\n};\n\nproto._uiChangeDrag = function() {\n  delete this.isFreeScrolling;\n};\n\n// -------------------------- pointer events -------------------------- //\n\nproto.pointerDown = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    this._pointerDownDefault( event, pointer );\n    return;\n  }\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n\n  this._pointerDownPreventDefault( event );\n  this.pointerDownFocus( event );\n  // blur\n  if ( document.activeElement != this.element ) {\n    // do not blur if already focused\n    this.pointerDownBlur();\n  }\n\n  // stop if it was moving\n  this.dragX = this.x;\n  this.viewport.classList.add('is-pointer-down');\n  // track scrolling\n  this.pointerDownScroll = getScrollPosition();\n  window.addEventListener( 'scroll', this );\n\n  this._pointerDownDefault( event, pointer );\n};\n\n// default pointerDown logic, used for staticClick\nproto._pointerDownDefault = function( event, pointer ) {\n  // track start event position\n  // Safari 9 overrides pageX and pageY. These values needs to be copied. #779\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.dispatchEvent( 'pointerDown', event, [ pointer ] );\n};\n\nvar focusNodes = {\n  INPUT: true,\n  TEXTAREA: true,\n  SELECT: true,\n};\n\nproto.pointerDownFocus = function( event ) {\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isFocusNode ) {\n    this.focus();\n  }\n};\n\nproto._pointerDownPreventDefault = function( event ) {\n  var isTouchStart = event.type == 'touchstart';\n  var isTouchPointer = event.pointerType == 'touch';\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isTouchStart && !isTouchPointer && !isFocusNode ) {\n    event.preventDefault();\n  }\n};\n\n// ----- move ----- //\n\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > this.options.dragThreshold;\n};\n\n// ----- up ----- //\n\nproto.pointerUp = function( event, pointer ) {\n  delete this.isTouchScrolling;\n  this.viewport.classList.remove('is-pointer-down');\n  this.dispatchEvent( 'pointerUp', event, [ pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto.pointerDone = function() {\n  window.removeEventListener( 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// -------------------------- dragging -------------------------- //\n\nproto.dragStart = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  this.dragStartPosition = this.x;\n  this.startAnimation();\n  window.removeEventListener( 'scroll', this );\n  this.dispatchEvent( 'dragStart', event, [ pointer ] );\n};\n\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.dispatchEvent( 'pointerMove', event, [ pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  event.preventDefault();\n\n  this.previousDragX = this.dragX;\n  // reverse if right-to-left\n  var direction = this.options.rightToLeft ? -1 : 1;\n  if ( this.options.wrapAround ) {\n    // wrap around move. #589\n    moveVector.x = moveVector.x % this.slideableWidth;\n  }\n  var dragX = this.dragStartPosition + moveVector.x * direction;\n\n  if ( !this.options.wrapAround && this.slides.length ) {\n    // slow drag\n    var originBound = Math.max( -this.slides[0].target, this.dragStartPosition );\n    dragX = dragX > originBound ? ( dragX + originBound ) * 0.5 : dragX;\n    var endBound = Math.min( -this.getLastSlide().target, this.dragStartPosition );\n    dragX = dragX < endBound ? ( dragX + endBound ) * 0.5 : dragX;\n  }\n\n  this.dragX = dragX;\n\n  this.dragMoveTime = new Date();\n  this.dispatchEvent( 'dragMove', event, [ pointer, moveVector ] );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  if ( this.options.freeScroll ) {\n    this.isFreeScrolling = true;\n  }\n  // set selectedIndex based on where flick will end up\n  var index = this.dragEndRestingSelect();\n\n  if ( this.options.freeScroll && !this.options.wrapAround ) {\n    // if free-scroll & not wrap around\n    // do not free-scroll if going outside of bounding slides\n    // so bounding slides can attract slider, and keep it in bounds\n    var restingX = this.getRestingPosition();\n    this.isFreeScrolling = -restingX > this.slides[0].target &&\n      -restingX < this.getLastSlide().target;\n  } else if ( !this.options.freeScroll && index == this.selectedIndex ) {\n    // boost selection if selected index has not changed\n    index += this.dragEndBoostSelect();\n  }\n  delete this.previousDragX;\n  // apply selection\n  // TODO refactor this, selecting here feels weird\n  // HACK, set flag so dragging stays in correct direction\n  this.isDragSelect = this.options.wrapAround;\n  this.select( index );\n  delete this.isDragSelect;\n  this.dispatchEvent( 'dragEnd', event, [ pointer ] );\n};\n\nproto.dragEndRestingSelect = function() {\n  var restingX = this.getRestingPosition();\n  // how far away from selected slide\n  var distance = Math.abs( this.getSlideDistance( -restingX, this.selectedIndex ) );\n  // get closet resting going up and going down\n  var positiveResting = this._getClosestResting( restingX, distance, 1 );\n  var negativeResting = this._getClosestResting( restingX, distance, -1 );\n  // use closer resting for wrap-around\n  var index = positiveResting.distance < negativeResting.distance ?\n    positiveResting.index : negativeResting.index;\n  return index;\n};\n\n/**\n * given resting X and distance to selected cell\n * get the distance and index of the closest cell\n * @param {Number} restingX - estimated post-flick resting position\n * @param {Number} distance - distance to selected cell\n * @param {Integer} increment - +1 or -1, going up or down\n * @returns {Object} - { distance: {Number}, index: {Integer} }\n */\nproto._getClosestResting = function( restingX, distance, increment ) {\n  var index = this.selectedIndex;\n  var minDistance = Infinity;\n  var condition = this.options.contain && !this.options.wrapAround ?\n    // if contain, keep going if distance is equal to minDistance\n    function( d, md ) { return d <= md; } : function( d, md ) { return d < md; };\n  while ( condition( distance, minDistance ) ) {\n    // measure distance to next cell\n    index += increment;\n    minDistance = distance;\n    distance = this.getSlideDistance( -restingX, index );\n    if ( distance === null ) {\n      break;\n    }\n    distance = Math.abs( distance );\n  }\n  return {\n    distance: minDistance,\n    // selected was previous index\n    index: index - increment\n  };\n};\n\n/**\n * measure distance between x and a slide target\n * @param {Number} x\n * @param {Integer} index - slide index\n */\nproto.getSlideDistance = function( x, index ) {\n  var len = this.slides.length;\n  // wrap around if at least 2 slides\n  var isWrapAround = this.options.wrapAround && len > 1;\n  var slideIndex = isWrapAround ? utils.modulo( index, len ) : index;\n  var slide = this.slides[ slideIndex ];\n  if ( !slide ) {\n    return null;\n  }\n  // add distance for wrap-around slides\n  var wrap = isWrapAround ? this.slideableWidth * Math.floor( index / len ) : 0;\n  return x - ( slide.target + wrap );\n};\n\nproto.dragEndBoostSelect = function() {\n  // do not boost if no previousDragX or dragMoveTime\n  if ( this.previousDragX === undefined || !this.dragMoveTime ||\n    // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100 ) {\n    return 0;\n  }\n\n  var distance = this.getSlideDistance( -this.dragX, this.selectedIndex );\n  var delta = this.previousDragX - this.dragX;\n  if ( distance > 0 && delta > 0 ) {\n    // boost to next if moving towards the right, and positive velocity\n    return 1;\n  } else if ( distance < 0 && delta < 0 ) {\n    // boost to previous if moving towards the left, and negative velocity\n    return -1;\n  }\n  return 0;\n};\n\n// ----- staticClick ----- //\n\nproto.staticClick = function( event, pointer ) {\n  // get clickedCell, if cell was clicked\n  var clickedCell = this.getParentCell( event.target );\n  var cellElem = clickedCell && clickedCell.element;\n  var cellIndex = clickedCell && this.cells.indexOf( clickedCell );\n  this.dispatchEvent( 'staticClick', event, [ pointer, cellElem, cellIndex ] );\n};\n\n// ----- scroll ----- //\n\nproto.onscroll = function() {\n  var scroll = getScrollPosition();\n  var scrollMoveX = this.pointerDownScroll.x - scroll.x;\n  var scrollMoveY = this.pointerDownScroll.y - scroll.y;\n  // cancel click/tap if scroll is too much\n  if ( Math.abs( scrollMoveX ) > 3 || Math.abs( scrollMoveY ) > 3 ) {\n    this._pointerDone();\n  }\n};\n\n// ----- utils ----- //\n\nfunction getScrollPosition() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  };\n}\n\n// -----  ----- //\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvZHJhZy5qcz80OTY0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUF5QztBQUNoRDtBQUNBLElBQUksaUNBQVE7QUFDWixNQUFNLCtFQUFZO0FBQ2xCLE1BQU0sMkZBQXVCO0FBQzdCLE1BQU0seUZBQXNCO0FBQzVCLEtBQUssbUNBQUU7QUFDUDtBQUNBLEtBQUs7QUFBQSxvR0FBQztBQUNOLEdBQUcsTUFBTSxFQWdCTjs7QUFFSCxDQUFDOztBQUVEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTyxJQUFJLFlBQVksT0FBTyxVQUFVLFFBQVE7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdCQUFnQixFQUFFLHNCQUFzQixlQUFlO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9mbGlja2l0eS9qcy9kcmFnLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZHJhZ1xuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLyoganNoaW50IHN0cmljdDogZmFsc2UgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoIFtcbiAgICAgICcuL2ZsaWNraXR5JyxcbiAgICAgICd1bmlkcmFnZ2VyL3VuaWRyYWdnZXInLFxuICAgICAgJ2Zpenp5LXVpLXV0aWxzL3V0aWxzJ1xuICAgIF0sIGZ1bmN0aW9uKCBGbGlja2l0eSwgVW5pZHJhZ2dlciwgdXRpbHMgKSB7XG4gICAgICByZXR1cm4gZmFjdG9yeSggd2luZG93LCBGbGlja2l0eSwgVW5pZHJhZ2dlciwgdXRpbHMgKTtcbiAgICB9KTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KU1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShcbiAgICAgIHdpbmRvdyxcbiAgICAgIHJlcXVpcmUoJy4vZmxpY2tpdHknKSxcbiAgICAgIHJlcXVpcmUoJ3VuaWRyYWdnZXInKSxcbiAgICAgIHJlcXVpcmUoJ2Zpenp5LXVpLXV0aWxzJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93LkZsaWNraXR5ID0gZmFjdG9yeShcbiAgICAgIHdpbmRvdyxcbiAgICAgIHdpbmRvdy5GbGlja2l0eSxcbiAgICAgIHdpbmRvdy5VbmlkcmFnZ2VyLFxuICAgICAgd2luZG93LmZpenp5VUlVdGlsc1xuICAgICk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCB3aW5kb3csIEZsaWNraXR5LCBVbmlkcmFnZ2VyLCB1dGlscyApIHtcblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyAtLS0tLSBkZWZhdWx0cyAtLS0tLSAvL1xuXG51dGlscy5leHRlbmQoIEZsaWNraXR5LmRlZmF1bHRzLCB7XG4gIGRyYWdnYWJsZTogJz4xJyxcbiAgZHJhZ1RocmVzaG9sZDogMyxcbn0pO1xuXG4vLyAtLS0tLSBjcmVhdGUgLS0tLS0gLy9cblxuRmxpY2tpdHkuY3JlYXRlTWV0aG9kcy5wdXNoKCdfY3JlYXRlRHJhZycpO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBkcmFnIHByb3RvdHlwZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG52YXIgcHJvdG8gPSBGbGlja2l0eS5wcm90b3R5cGU7XG51dGlscy5leHRlbmQoIHByb3RvLCBVbmlkcmFnZ2VyLnByb3RvdHlwZSApO1xucHJvdG8uX3RvdWNoQWN0aW9uVmFsdWUgPSAncGFuLXknO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxudmFyIGlzVG91Y2ggPSAnY3JlYXRlVG91Y2gnIGluIGRvY3VtZW50O1xudmFyIGlzVG91Y2htb3ZlU2Nyb2xsQ2FuY2VsZWQgPSBmYWxzZTtcblxucHJvdG8uX2NyZWF0ZURyYWcgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5vbiggJ2FjdGl2YXRlJywgdGhpcy5vbkFjdGl2YXRlRHJhZyApO1xuICB0aGlzLm9uKCAndWlDaGFuZ2UnLCB0aGlzLl91aUNoYW5nZURyYWcgKTtcbiAgdGhpcy5vbiggJ2RlYWN0aXZhdGUnLCB0aGlzLm9uRGVhY3RpdmF0ZURyYWcgKTtcbiAgdGhpcy5vbiggJ2NlbGxDaGFuZ2UnLCB0aGlzLnVwZGF0ZURyYWdnYWJsZSApO1xuICAvLyBUT0RPIHVwZGF0ZURyYWdnYWJsZSBvbiByZXNpemU/IGlmIGdyb3VwQ2VsbHMgJiBzbGlkZXMgY2hhbmdlXG4gIC8vIEhBQ0sgLSBhZGQgc2VlbWluZ2x5IGlubm9jdW91cyBoYW5kbGVyIHRvIGZpeCBpT1MgMTAgc2Nyb2xsIGJlaGF2aW9yXG4gIC8vICM0NTcsIFJ1YmFYYS9Tb3J0YWJsZSM5NzNcbiAgaWYgKCBpc1RvdWNoICYmICFpc1RvdWNobW92ZVNjcm9sbENhbmNlbGVkICkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCAndG91Y2htb3ZlJywgZnVuY3Rpb24oKSB7fSk7XG4gICAgaXNUb3VjaG1vdmVTY3JvbGxDYW5jZWxlZCA9IHRydWU7XG4gIH1cbn07XG5cbnByb3RvLm9uQWN0aXZhdGVEcmFnID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuaGFuZGxlcyA9IFsgdGhpcy52aWV3cG9ydCBdO1xuICB0aGlzLmJpbmRIYW5kbGVzKCk7XG4gIHRoaXMudXBkYXRlRHJhZ2dhYmxlKCk7XG59O1xuXG5wcm90by5vbkRlYWN0aXZhdGVEcmFnID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMudW5iaW5kSGFuZGxlcygpO1xuICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtZHJhZ2dhYmxlJyk7XG59O1xuXG5wcm90by51cGRhdGVEcmFnZ2FibGUgPSBmdW5jdGlvbigpIHtcbiAgLy8gZGlzYWJsZSBkcmFnZ2luZyBpZiBsZXNzIHRoYW4gMiBzbGlkZXMuICMyNzhcbiAgaWYgKCB0aGlzLm9wdGlvbnMuZHJhZ2dhYmxlID09ICc+MScgKSB7XG4gICAgdGhpcy5pc0RyYWdnYWJsZSA9IHRoaXMuc2xpZGVzLmxlbmd0aCA+IDE7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5pc0RyYWdnYWJsZSA9IHRoaXMub3B0aW9ucy5kcmFnZ2FibGU7XG4gIH1cbiAgaWYgKCB0aGlzLmlzRHJhZ2dhYmxlICkge1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpcy1kcmFnZ2FibGUnKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtZHJhZ2dhYmxlJyk7XG4gIH1cbn07XG5cbi8vIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG5wcm90by5iaW5kRHJhZyA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLm9wdGlvbnMuZHJhZ2dhYmxlID0gdHJ1ZTtcbiAgdGhpcy51cGRhdGVEcmFnZ2FibGUoKTtcbn07XG5cbnByb3RvLnVuYmluZERyYWcgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5vcHRpb25zLmRyYWdnYWJsZSA9IGZhbHNlO1xuICB0aGlzLnVwZGF0ZURyYWdnYWJsZSgpO1xufTtcblxucHJvdG8uX3VpQ2hhbmdlRHJhZyA9IGZ1bmN0aW9uKCkge1xuICBkZWxldGUgdGhpcy5pc0ZyZWVTY3JvbGxpbmc7XG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBwb2ludGVyIGV2ZW50cyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG5wcm90by5wb2ludGVyRG93biA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgaWYgKCAhdGhpcy5pc0RyYWdnYWJsZSApIHtcbiAgICB0aGlzLl9wb2ludGVyRG93bkRlZmF1bHQoIGV2ZW50LCBwb2ludGVyICk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpc09rYXkgPSB0aGlzLm9rYXlQb2ludGVyRG93biggZXZlbnQgKTtcbiAgaWYgKCAhaXNPa2F5ICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuX3BvaW50ZXJEb3duUHJldmVudERlZmF1bHQoIGV2ZW50ICk7XG4gIHRoaXMucG9pbnRlckRvd25Gb2N1cyggZXZlbnQgKTtcbiAgLy8gYmx1clxuICBpZiAoIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT0gdGhpcy5lbGVtZW50ICkge1xuICAgIC8vIGRvIG5vdCBibHVyIGlmIGFscmVhZHkgZm9jdXNlZFxuICAgIHRoaXMucG9pbnRlckRvd25CbHVyKCk7XG4gIH1cblxuICAvLyBzdG9wIGlmIGl0IHdhcyBtb3ZpbmdcbiAgdGhpcy5kcmFnWCA9IHRoaXMueDtcbiAgdGhpcy52aWV3cG9ydC5jbGFzc0xpc3QuYWRkKCdpcy1wb2ludGVyLWRvd24nKTtcbiAgLy8gdHJhY2sgc2Nyb2xsaW5nXG4gIHRoaXMucG9pbnRlckRvd25TY3JvbGwgPSBnZXRTY3JvbGxQb3NpdGlvbigpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ3Njcm9sbCcsIHRoaXMgKTtcblxuICB0aGlzLl9wb2ludGVyRG93bkRlZmF1bHQoIGV2ZW50LCBwb2ludGVyICk7XG59O1xuXG4vLyBkZWZhdWx0IHBvaW50ZXJEb3duIGxvZ2ljLCB1c2VkIGZvciBzdGF0aWNDbGlja1xucHJvdG8uX3BvaW50ZXJEb3duRGVmYXVsdCA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgLy8gdHJhY2sgc3RhcnQgZXZlbnQgcG9zaXRpb25cbiAgLy8gU2FmYXJpIDkgb3ZlcnJpZGVzIHBhZ2VYIGFuZCBwYWdlWS4gVGhlc2UgdmFsdWVzIG5lZWRzIHRvIGJlIGNvcGllZC4gIzc3OVxuICB0aGlzLnBvaW50ZXJEb3duUG9pbnRlciA9IHtcbiAgICBwYWdlWDogcG9pbnRlci5wYWdlWCxcbiAgICBwYWdlWTogcG9pbnRlci5wYWdlWSxcbiAgfTtcbiAgLy8gYmluZCBtb3ZlIGFuZCBlbmQgZXZlbnRzXG4gIHRoaXMuX2JpbmRQb3N0U3RhcnRFdmVudHMoIGV2ZW50ICk7XG4gIHRoaXMuZGlzcGF0Y2hFdmVudCggJ3BvaW50ZXJEb3duJywgZXZlbnQsIFsgcG9pbnRlciBdICk7XG59O1xuXG52YXIgZm9jdXNOb2RlcyA9IHtcbiAgSU5QVVQ6IHRydWUsXG4gIFRFWFRBUkVBOiB0cnVlLFxuICBTRUxFQ1Q6IHRydWUsXG59O1xuXG5wcm90by5wb2ludGVyRG93bkZvY3VzID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB2YXIgaXNGb2N1c05vZGUgPSBmb2N1c05vZGVzWyBldmVudC50YXJnZXQubm9kZU5hbWUgXTtcbiAgaWYgKCAhaXNGb2N1c05vZGUgKSB7XG4gICAgdGhpcy5mb2N1cygpO1xuICB9XG59O1xuXG5wcm90by5fcG9pbnRlckRvd25QcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgdmFyIGlzVG91Y2hTdGFydCA9IGV2ZW50LnR5cGUgPT0gJ3RvdWNoc3RhcnQnO1xuICB2YXIgaXNUb3VjaFBvaW50ZXIgPSBldmVudC5wb2ludGVyVHlwZSA9PSAndG91Y2gnO1xuICB2YXIgaXNGb2N1c05vZGUgPSBmb2N1c05vZGVzWyBldmVudC50YXJnZXQubm9kZU5hbWUgXTtcbiAgaWYgKCAhaXNUb3VjaFN0YXJ0ICYmICFpc1RvdWNoUG9pbnRlciAmJiAhaXNGb2N1c05vZGUgKSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfVxufTtcblxuLy8gLS0tLS0gbW92ZSAtLS0tLSAvL1xuXG5wcm90by5oYXNEcmFnU3RhcnRlZCA9IGZ1bmN0aW9uKCBtb3ZlVmVjdG9yICkge1xuICByZXR1cm4gTWF0aC5hYnMoIG1vdmVWZWN0b3IueCApID4gdGhpcy5vcHRpb25zLmRyYWdUaHJlc2hvbGQ7XG59O1xuXG4vLyAtLS0tLSB1cCAtLS0tLSAvL1xuXG5wcm90by5wb2ludGVyVXAgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIGRlbGV0ZSB0aGlzLmlzVG91Y2hTY3JvbGxpbmc7XG4gIHRoaXMudmlld3BvcnQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtcG9pbnRlci1kb3duJyk7XG4gIHRoaXMuZGlzcGF0Y2hFdmVudCggJ3BvaW50ZXJVcCcsIGV2ZW50LCBbIHBvaW50ZXIgXSApO1xuICB0aGlzLl9kcmFnUG9pbnRlclVwKCBldmVudCwgcG9pbnRlciApO1xufTtcblxucHJvdG8ucG9pbnRlckRvbmUgPSBmdW5jdGlvbigpIHtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoICdzY3JvbGwnLCB0aGlzICk7XG4gIGRlbGV0ZSB0aGlzLnBvaW50ZXJEb3duU2Nyb2xsO1xufTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gZHJhZ2dpbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxucHJvdG8uZHJhZ1N0YXJ0ID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICBpZiAoICF0aGlzLmlzRHJhZ2dhYmxlICkge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLmRyYWdTdGFydFBvc2l0aW9uID0gdGhpcy54O1xuICB0aGlzLnN0YXJ0QW5pbWF0aW9uKCk7XG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCAnc2Nyb2xsJywgdGhpcyApO1xuICB0aGlzLmRpc3BhdGNoRXZlbnQoICdkcmFnU3RhcnQnLCBldmVudCwgWyBwb2ludGVyIF0gKTtcbn07XG5cbnByb3RvLnBvaW50ZXJNb3ZlID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB2YXIgbW92ZVZlY3RvciA9IHRoaXMuX2RyYWdQb2ludGVyTW92ZSggZXZlbnQsIHBvaW50ZXIgKTtcbiAgdGhpcy5kaXNwYXRjaEV2ZW50KCAncG9pbnRlck1vdmUnLCBldmVudCwgWyBwb2ludGVyLCBtb3ZlVmVjdG9yIF0gKTtcbiAgdGhpcy5fZHJhZ01vdmUoIGV2ZW50LCBwb2ludGVyLCBtb3ZlVmVjdG9yICk7XG59O1xuXG5wcm90by5kcmFnTW92ZSA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciwgbW92ZVZlY3RvciApIHtcbiAgaWYgKCAhdGhpcy5pc0RyYWdnYWJsZSApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICB0aGlzLnByZXZpb3VzRHJhZ1ggPSB0aGlzLmRyYWdYO1xuICAvLyByZXZlcnNlIGlmIHJpZ2h0LXRvLWxlZnRcbiAgdmFyIGRpcmVjdGlvbiA9IHRoaXMub3B0aW9ucy5yaWdodFRvTGVmdCA/IC0xIDogMTtcbiAgaWYgKCB0aGlzLm9wdGlvbnMud3JhcEFyb3VuZCApIHtcbiAgICAvLyB3cmFwIGFyb3VuZCBtb3ZlLiAjNTg5XG4gICAgbW92ZVZlY3Rvci54ID0gbW92ZVZlY3Rvci54ICUgdGhpcy5zbGlkZWFibGVXaWR0aDtcbiAgfVxuICB2YXIgZHJhZ1ggPSB0aGlzLmRyYWdTdGFydFBvc2l0aW9uICsgbW92ZVZlY3Rvci54ICogZGlyZWN0aW9uO1xuXG4gIGlmICggIXRoaXMub3B0aW9ucy53cmFwQXJvdW5kICYmIHRoaXMuc2xpZGVzLmxlbmd0aCApIHtcbiAgICAvLyBzbG93IGRyYWdcbiAgICB2YXIgb3JpZ2luQm91bmQgPSBNYXRoLm1heCggLXRoaXMuc2xpZGVzWzBdLnRhcmdldCwgdGhpcy5kcmFnU3RhcnRQb3NpdGlvbiApO1xuICAgIGRyYWdYID0gZHJhZ1ggPiBvcmlnaW5Cb3VuZCA/ICggZHJhZ1ggKyBvcmlnaW5Cb3VuZCApICogMC41IDogZHJhZ1g7XG4gICAgdmFyIGVuZEJvdW5kID0gTWF0aC5taW4oIC10aGlzLmdldExhc3RTbGlkZSgpLnRhcmdldCwgdGhpcy5kcmFnU3RhcnRQb3NpdGlvbiApO1xuICAgIGRyYWdYID0gZHJhZ1ggPCBlbmRCb3VuZCA/ICggZHJhZ1ggKyBlbmRCb3VuZCApICogMC41IDogZHJhZ1g7XG4gIH1cblxuICB0aGlzLmRyYWdYID0gZHJhZ1g7XG5cbiAgdGhpcy5kcmFnTW92ZVRpbWUgPSBuZXcgRGF0ZSgpO1xuICB0aGlzLmRpc3BhdGNoRXZlbnQoICdkcmFnTW92ZScsIGV2ZW50LCBbIHBvaW50ZXIsIG1vdmVWZWN0b3IgXSApO1xufTtcblxucHJvdG8uZHJhZ0VuZCA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgaWYgKCAhdGhpcy5pc0RyYWdnYWJsZSApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCB0aGlzLm9wdGlvbnMuZnJlZVNjcm9sbCApIHtcbiAgICB0aGlzLmlzRnJlZVNjcm9sbGluZyA9IHRydWU7XG4gIH1cbiAgLy8gc2V0IHNlbGVjdGVkSW5kZXggYmFzZWQgb24gd2hlcmUgZmxpY2sgd2lsbCBlbmQgdXBcbiAgdmFyIGluZGV4ID0gdGhpcy5kcmFnRW5kUmVzdGluZ1NlbGVjdCgpO1xuXG4gIGlmICggdGhpcy5vcHRpb25zLmZyZWVTY3JvbGwgJiYgIXRoaXMub3B0aW9ucy53cmFwQXJvdW5kICkge1xuICAgIC8vIGlmIGZyZWUtc2Nyb2xsICYgbm90IHdyYXAgYXJvdW5kXG4gICAgLy8gZG8gbm90IGZyZWUtc2Nyb2xsIGlmIGdvaW5nIG91dHNpZGUgb2YgYm91bmRpbmcgc2xpZGVzXG4gICAgLy8gc28gYm91bmRpbmcgc2xpZGVzIGNhbiBhdHRyYWN0IHNsaWRlciwgYW5kIGtlZXAgaXQgaW4gYm91bmRzXG4gICAgdmFyIHJlc3RpbmdYID0gdGhpcy5nZXRSZXN0aW5nUG9zaXRpb24oKTtcbiAgICB0aGlzLmlzRnJlZVNjcm9sbGluZyA9IC1yZXN0aW5nWCA+IHRoaXMuc2xpZGVzWzBdLnRhcmdldCAmJlxuICAgICAgLXJlc3RpbmdYIDwgdGhpcy5nZXRMYXN0U2xpZGUoKS50YXJnZXQ7XG4gIH0gZWxzZSBpZiAoICF0aGlzLm9wdGlvbnMuZnJlZVNjcm9sbCAmJiBpbmRleCA9PSB0aGlzLnNlbGVjdGVkSW5kZXggKSB7XG4gICAgLy8gYm9vc3Qgc2VsZWN0aW9uIGlmIHNlbGVjdGVkIGluZGV4IGhhcyBub3QgY2hhbmdlZFxuICAgIGluZGV4ICs9IHRoaXMuZHJhZ0VuZEJvb3N0U2VsZWN0KCk7XG4gIH1cbiAgZGVsZXRlIHRoaXMucHJldmlvdXNEcmFnWDtcbiAgLy8gYXBwbHkgc2VsZWN0aW9uXG4gIC8vIFRPRE8gcmVmYWN0b3IgdGhpcywgc2VsZWN0aW5nIGhlcmUgZmVlbHMgd2VpcmRcbiAgLy8gSEFDSywgc2V0IGZsYWcgc28gZHJhZ2dpbmcgc3RheXMgaW4gY29ycmVjdCBkaXJlY3Rpb25cbiAgdGhpcy5pc0RyYWdTZWxlY3QgPSB0aGlzLm9wdGlvbnMud3JhcEFyb3VuZDtcbiAgdGhpcy5zZWxlY3QoIGluZGV4ICk7XG4gIGRlbGV0ZSB0aGlzLmlzRHJhZ1NlbGVjdDtcbiAgdGhpcy5kaXNwYXRjaEV2ZW50KCAnZHJhZ0VuZCcsIGV2ZW50LCBbIHBvaW50ZXIgXSApO1xufTtcblxucHJvdG8uZHJhZ0VuZFJlc3RpbmdTZWxlY3QgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHJlc3RpbmdYID0gdGhpcy5nZXRSZXN0aW5nUG9zaXRpb24oKTtcbiAgLy8gaG93IGZhciBhd2F5IGZyb20gc2VsZWN0ZWQgc2xpZGVcbiAgdmFyIGRpc3RhbmNlID0gTWF0aC5hYnMoIHRoaXMuZ2V0U2xpZGVEaXN0YW5jZSggLXJlc3RpbmdYLCB0aGlzLnNlbGVjdGVkSW5kZXggKSApO1xuICAvLyBnZXQgY2xvc2V0IHJlc3RpbmcgZ29pbmcgdXAgYW5kIGdvaW5nIGRvd25cbiAgdmFyIHBvc2l0aXZlUmVzdGluZyA9IHRoaXMuX2dldENsb3Nlc3RSZXN0aW5nKCByZXN0aW5nWCwgZGlzdGFuY2UsIDEgKTtcbiAgdmFyIG5lZ2F0aXZlUmVzdGluZyA9IHRoaXMuX2dldENsb3Nlc3RSZXN0aW5nKCByZXN0aW5nWCwgZGlzdGFuY2UsIC0xICk7XG4gIC8vIHVzZSBjbG9zZXIgcmVzdGluZyBmb3Igd3JhcC1hcm91bmRcbiAgdmFyIGluZGV4ID0gcG9zaXRpdmVSZXN0aW5nLmRpc3RhbmNlIDwgbmVnYXRpdmVSZXN0aW5nLmRpc3RhbmNlID9cbiAgICBwb3NpdGl2ZVJlc3RpbmcuaW5kZXggOiBuZWdhdGl2ZVJlc3RpbmcuaW5kZXg7XG4gIHJldHVybiBpbmRleDtcbn07XG5cbi8qKlxuICogZ2l2ZW4gcmVzdGluZyBYIGFuZCBkaXN0YW5jZSB0byBzZWxlY3RlZCBjZWxsXG4gKiBnZXQgdGhlIGRpc3RhbmNlIGFuZCBpbmRleCBvZiB0aGUgY2xvc2VzdCBjZWxsXG4gKiBAcGFyYW0ge051bWJlcn0gcmVzdGluZ1ggLSBlc3RpbWF0ZWQgcG9zdC1mbGljayByZXN0aW5nIHBvc2l0aW9uXG4gKiBAcGFyYW0ge051bWJlcn0gZGlzdGFuY2UgLSBkaXN0YW5jZSB0byBzZWxlY3RlZCBjZWxsXG4gKiBAcGFyYW0ge0ludGVnZXJ9IGluY3JlbWVudCAtICsxIG9yIC0xLCBnb2luZyB1cCBvciBkb3duXG4gKiBAcmV0dXJucyB7T2JqZWN0fSAtIHsgZGlzdGFuY2U6IHtOdW1iZXJ9LCBpbmRleDoge0ludGVnZXJ9IH1cbiAqL1xucHJvdG8uX2dldENsb3Nlc3RSZXN0aW5nID0gZnVuY3Rpb24oIHJlc3RpbmdYLCBkaXN0YW5jZSwgaW5jcmVtZW50ICkge1xuICB2YXIgaW5kZXggPSB0aGlzLnNlbGVjdGVkSW5kZXg7XG4gIHZhciBtaW5EaXN0YW5jZSA9IEluZmluaXR5O1xuICB2YXIgY29uZGl0aW9uID0gdGhpcy5vcHRpb25zLmNvbnRhaW4gJiYgIXRoaXMub3B0aW9ucy53cmFwQXJvdW5kID9cbiAgICAvLyBpZiBjb250YWluLCBrZWVwIGdvaW5nIGlmIGRpc3RhbmNlIGlzIGVxdWFsIHRvIG1pbkRpc3RhbmNlXG4gICAgZnVuY3Rpb24oIGQsIG1kICkgeyByZXR1cm4gZCA8PSBtZDsgfSA6IGZ1bmN0aW9uKCBkLCBtZCApIHsgcmV0dXJuIGQgPCBtZDsgfTtcbiAgd2hpbGUgKCBjb25kaXRpb24oIGRpc3RhbmNlLCBtaW5EaXN0YW5jZSApICkge1xuICAgIC8vIG1lYXN1cmUgZGlzdGFuY2UgdG8gbmV4dCBjZWxsXG4gICAgaW5kZXggKz0gaW5jcmVtZW50O1xuICAgIG1pbkRpc3RhbmNlID0gZGlzdGFuY2U7XG4gICAgZGlzdGFuY2UgPSB0aGlzLmdldFNsaWRlRGlzdGFuY2UoIC1yZXN0aW5nWCwgaW5kZXggKTtcbiAgICBpZiAoIGRpc3RhbmNlID09PSBudWxsICkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGRpc3RhbmNlID0gTWF0aC5hYnMoIGRpc3RhbmNlICk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkaXN0YW5jZTogbWluRGlzdGFuY2UsXG4gICAgLy8gc2VsZWN0ZWQgd2FzIHByZXZpb3VzIGluZGV4XG4gICAgaW5kZXg6IGluZGV4IC0gaW5jcmVtZW50XG4gIH07XG59O1xuXG4vKipcbiAqIG1lYXN1cmUgZGlzdGFuY2UgYmV0d2VlbiB4IGFuZCBhIHNsaWRlIHRhcmdldFxuICogQHBhcmFtIHtOdW1iZXJ9IHhcbiAqIEBwYXJhbSB7SW50ZWdlcn0gaW5kZXggLSBzbGlkZSBpbmRleFxuICovXG5wcm90by5nZXRTbGlkZURpc3RhbmNlID0gZnVuY3Rpb24oIHgsIGluZGV4ICkge1xuICB2YXIgbGVuID0gdGhpcy5zbGlkZXMubGVuZ3RoO1xuICAvLyB3cmFwIGFyb3VuZCBpZiBhdCBsZWFzdCAyIHNsaWRlc1xuICB2YXIgaXNXcmFwQXJvdW5kID0gdGhpcy5vcHRpb25zLndyYXBBcm91bmQgJiYgbGVuID4gMTtcbiAgdmFyIHNsaWRlSW5kZXggPSBpc1dyYXBBcm91bmQgPyB1dGlscy5tb2R1bG8oIGluZGV4LCBsZW4gKSA6IGluZGV4O1xuICB2YXIgc2xpZGUgPSB0aGlzLnNsaWRlc1sgc2xpZGVJbmRleCBdO1xuICBpZiAoICFzbGlkZSApIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvLyBhZGQgZGlzdGFuY2UgZm9yIHdyYXAtYXJvdW5kIHNsaWRlc1xuICB2YXIgd3JhcCA9IGlzV3JhcEFyb3VuZCA/IHRoaXMuc2xpZGVhYmxlV2lkdGggKiBNYXRoLmZsb29yKCBpbmRleCAvIGxlbiApIDogMDtcbiAgcmV0dXJuIHggLSAoIHNsaWRlLnRhcmdldCArIHdyYXAgKTtcbn07XG5cbnByb3RvLmRyYWdFbmRCb29zdFNlbGVjdCA9IGZ1bmN0aW9uKCkge1xuICAvLyBkbyBub3QgYm9vc3QgaWYgbm8gcHJldmlvdXNEcmFnWCBvciBkcmFnTW92ZVRpbWVcbiAgaWYgKCB0aGlzLnByZXZpb3VzRHJhZ1ggPT09IHVuZGVmaW5lZCB8fCAhdGhpcy5kcmFnTW92ZVRpbWUgfHxcbiAgICAvLyBvciBpZiBkcmFnIHdhcyBoZWxkIGZvciAxMDAgbXNcbiAgICBuZXcgRGF0ZSgpIC0gdGhpcy5kcmFnTW92ZVRpbWUgPiAxMDAgKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICB2YXIgZGlzdGFuY2UgPSB0aGlzLmdldFNsaWRlRGlzdGFuY2UoIC10aGlzLmRyYWdYLCB0aGlzLnNlbGVjdGVkSW5kZXggKTtcbiAgdmFyIGRlbHRhID0gdGhpcy5wcmV2aW91c0RyYWdYIC0gdGhpcy5kcmFnWDtcbiAgaWYgKCBkaXN0YW5jZSA+IDAgJiYgZGVsdGEgPiAwICkge1xuICAgIC8vIGJvb3N0IHRvIG5leHQgaWYgbW92aW5nIHRvd2FyZHMgdGhlIHJpZ2h0LCBhbmQgcG9zaXRpdmUgdmVsb2NpdHlcbiAgICByZXR1cm4gMTtcbiAgfSBlbHNlIGlmICggZGlzdGFuY2UgPCAwICYmIGRlbHRhIDwgMCApIHtcbiAgICAvLyBib29zdCB0byBwcmV2aW91cyBpZiBtb3ZpbmcgdG93YXJkcyB0aGUgbGVmdCwgYW5kIG5lZ2F0aXZlIHZlbG9jaXR5XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIHJldHVybiAwO1xufTtcblxuLy8gLS0tLS0gc3RhdGljQ2xpY2sgLS0tLS0gLy9cblxucHJvdG8uc3RhdGljQ2xpY2sgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIC8vIGdldCBjbGlja2VkQ2VsbCwgaWYgY2VsbCB3YXMgY2xpY2tlZFxuICB2YXIgY2xpY2tlZENlbGwgPSB0aGlzLmdldFBhcmVudENlbGwoIGV2ZW50LnRhcmdldCApO1xuICB2YXIgY2VsbEVsZW0gPSBjbGlja2VkQ2VsbCAmJiBjbGlja2VkQ2VsbC5lbGVtZW50O1xuICB2YXIgY2VsbEluZGV4ID0gY2xpY2tlZENlbGwgJiYgdGhpcy5jZWxscy5pbmRleE9mKCBjbGlja2VkQ2VsbCApO1xuICB0aGlzLmRpc3BhdGNoRXZlbnQoICdzdGF0aWNDbGljaycsIGV2ZW50LCBbIHBvaW50ZXIsIGNlbGxFbGVtLCBjZWxsSW5kZXggXSApO1xufTtcblxuLy8gLS0tLS0gc2Nyb2xsIC0tLS0tIC8vXG5cbnByb3RvLm9uc2Nyb2xsID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzY3JvbGwgPSBnZXRTY3JvbGxQb3NpdGlvbigpO1xuICB2YXIgc2Nyb2xsTW92ZVggPSB0aGlzLnBvaW50ZXJEb3duU2Nyb2xsLnggLSBzY3JvbGwueDtcbiAgdmFyIHNjcm9sbE1vdmVZID0gdGhpcy5wb2ludGVyRG93blNjcm9sbC55IC0gc2Nyb2xsLnk7XG4gIC8vIGNhbmNlbCBjbGljay90YXAgaWYgc2Nyb2xsIGlzIHRvbyBtdWNoXG4gIGlmICggTWF0aC5hYnMoIHNjcm9sbE1vdmVYICkgPiAzIHx8IE1hdGguYWJzKCBzY3JvbGxNb3ZlWSApID4gMyApIHtcbiAgICB0aGlzLl9wb2ludGVyRG9uZSgpO1xuICB9XG59O1xuXG4vLyAtLS0tLSB1dGlscyAtLS0tLSAvL1xuXG5mdW5jdGlvbiBnZXRTY3JvbGxQb3NpdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICB4OiB3aW5kb3cucGFnZVhPZmZzZXQsXG4gICAgeTogd2luZG93LnBhZ2VZT2Zmc2V0XG4gIH07XG59XG5cbi8vIC0tLS0tICAtLS0tLSAvL1xuXG5yZXR1cm4gRmxpY2tpdHk7XG5cbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/drag.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/flickity.js":
/*!**********************************************!*\
  !*** ./node_modules/flickity/js/flickity.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Flickity main\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"),\n      __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\"),\n      __webpack_require__(/*! ./cell */ \"./node_modules/flickity/js/cell.js\"),\n      __webpack_require__(/*! ./slide */ \"./node_modules/flickity/js/slide.js\"),\n      __webpack_require__(/*! ./animate */ \"./node_modules/flickity/js/animate.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, getSize, utils, Cell, Slide, animatePrototype ) {\n      return factory( window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var _Flickity; }\n\n}( window, function factory( window, EvEmitter, getSize,\n  utils, Cell, Slide, animatePrototype ) {\n\n'use strict';\n\n// vars\nvar jQuery = window.jQuery;\nvar getComputedStyle = window.getComputedStyle;\nvar console = window.console;\n\nfunction moveElements( elems, toElem ) {\n  elems = utils.makeArray( elems );\n  while ( elems.length ) {\n    toElem.appendChild( elems.shift() );\n  }\n}\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Flickity intances\nvar instances = {};\n\nfunction Flickity( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for Flickity: ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // do not initialize twice on same element\n  if ( this.element.flickityGUID ) {\n    var instance = instances[ this.element.flickityGUID ];\n    instance.option( options );\n    return instance;\n  }\n\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  // adaptiveHeight: false,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  namespaceJQueryEvents: true,\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.createMethods = [];\n\nvar proto = Flickity.prototype;\n// inherit EventEmitter\nutils.extend( proto, EvEmitter.prototype );\n\nproto._create = function() {\n  // add id for Flickity.data\n  var id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.originSide = this.options.rightToLeft ? 'right' : 'left';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  this._createSlider();\n\n  if ( this.options.resize || this.options.watchCSS ) {\n    window.addEventListener( 'resize', this );\n  }\n\n  // add listeners from on option\n  for ( var eventName in this.options.on ) {\n    var listener = this.options.on[ eventName ];\n    this.on( eventName, listener );\n  }\n\n  Flickity.createMethods.forEach( function( method ) {\n    this[ method ]();\n  }, this );\n\n  if ( this.options.watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n\n};\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\nproto.activate = function() {\n  if ( this.isActive ) {\n    return;\n  }\n  this.isActive = true;\n  this.element.classList.add('flickity-enabled');\n  if ( this.options.rightToLeft ) {\n    this.element.classList.add('flickity-rtl');\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  var cellElems = this._filterFindCellElements( this.element.children );\n  moveElements( cellElems, this.slider );\n  this.viewport.appendChild( this.slider );\n  this.element.appendChild( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    this.element.addEventListener( 'keydown', this );\n  }\n\n  this.emitEvent('activate');\n  this.selectInitialIndex();\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n  // ready event. #493\n  this.dispatchEvent('ready');\n};\n\n// slider positions the cells\nproto._createSlider = function() {\n  // slider element does all the positioning\n  var slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  slider.style[ this.originSide ] = 0;\n  this.slider = slider;\n};\n\nproto._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nproto.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Flickity Cells\n */\nproto._makeCells = function( elems ) {\n  var cellElems = this._filterFindCellElements( elems );\n\n  // create new Flickity for collection\n  var cells = cellElems.map( function( cellElem ) {\n    return new Cell( cellElem, this );\n  }, this );\n\n  return cells;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.getLastSlide = function() {\n  return this.slides[ this.slides.length - 1 ];\n};\n\n// positions all cells\nproto.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nproto._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  var cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    var startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n  var len = this.cells.length;\n  for ( var i=index; i < len; i++ ) {\n    var cell = this.cells[i];\n    cell.setPosition( cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  }\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // slides\n  this.updateSlides();\n  // contain slides target\n  this._containSlides();\n  // update slidesWidth\n  this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells\n */\nproto._sizeCells = function( cells ) {\n  cells.forEach( function( cell ) {\n    cell.getSize();\n  });\n};\n\n// --------------------------  -------------------------- //\n\nproto.updateSlides = function() {\n  this.slides = [];\n  if ( !this.cells.length ) {\n    return;\n  }\n\n  var slide = new Slide( this );\n  this.slides.push( slide );\n  var isOriginLeft = this.originSide == 'left';\n  var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n\n  var canCellFit = this._getCanCellFit();\n\n  this.cells.forEach( function( cell, i ) {\n    // just add cell if first cell in slide\n    if ( !slide.cells.length ) {\n      slide.addCell( cell );\n      return;\n    }\n\n    var slideWidth = ( slide.outerWidth - slide.firstMargin ) +\n      ( cell.size.outerWidth - cell.size[ nextMargin ] );\n\n    if ( canCellFit.call( this, i, slideWidth ) ) {\n      slide.addCell( cell );\n    } else {\n      // doesn't fit, new slide\n      slide.updateTarget();\n\n      slide = new Slide( this );\n      this.slides.push( slide );\n      slide.addCell( cell );\n    }\n  }, this );\n  // last slide\n  slide.updateTarget();\n  // update .selectedSlide\n  this.updateSelectedSlide();\n};\n\nproto._getCanCellFit = function() {\n  var groupCells = this.options.groupCells;\n  if ( !groupCells ) {\n    return function() {\n      return false;\n    };\n  } else if ( typeof groupCells == 'number' ) {\n    // group by number. 3 -> [0,1,2], [3,4,5], ...\n    var number = parseInt( groupCells, 10 );\n    return function( i ) {\n      return ( i % number ) !== 0;\n    };\n  }\n  // default, group by width of slide\n  // parse '75%\n  var percentMatch = typeof groupCells == 'string' &&\n    groupCells.match(/^(\\d+)%$/);\n  var percent = percentMatch ? parseInt( percentMatch[1], 10 ) / 100 : 1;\n  return function( i, slideWidth ) {\n    return slideWidth <= ( this.size.innerWidth + 1 ) * percent;\n  };\n};\n\n// alias _init for jQuery plugin .flickity()\nproto._init =\nproto.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nvar cellAlignShorthands = {\n  // cell align, then based on origin side\n  center: {\n    left: 0.5,\n    right: 0.5\n  },\n  left: {\n    left: 0,\n    right: 1\n  },\n  right: {\n    right: 0,\n    left: 1\n  }\n};\n\nproto.setCellAlign = function() {\n  var shorthand = cellAlignShorthands[ this.options.cellAlign ];\n  this.cellAlign = shorthand ? shorthand[ this.originSide ] : this.options.cellAlign;\n};\n\nproto.setGallerySize = function() {\n  if ( this.options.setGallerySize ) {\n    var height = this.options.adaptiveHeight && this.selectedSlide ?\n      this.selectedSlide.height : this.maxCellHeight;\n    this.viewport.style.height = height + 'px';\n  }\n};\n\nproto._getWrapShiftCells = function() {\n  // only for wrap-around\n  if ( !this.options.wrapAround ) {\n    return;\n  }\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  var gapX = this.cursorPosition;\n  var cellIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( gapX, cellIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  gapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( gapX, 0, 1 );\n};\n\nproto._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  var cells = [];\n  while ( gapX > 0 ) {\n    var cell = this.cells[ cellIndex ];\n    if ( !cell ) {\n      break;\n    }\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain ----- //\n\n// contain cell targets so no excess sliding\nproto._containSlides = function() {\n  if ( !this.options.contain || this.options.wrapAround || !this.cells.length ) {\n    return;\n  }\n  var isRightToLeft = this.options.rightToLeft;\n  var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n  var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n  var contentWidth = this.slideableWidth - this.getLastCell().size[ endMargin ];\n  // content is less than gallery size\n  var isContentSmaller = contentWidth < this.size.innerWidth;\n  // bounds\n  var beginBound = this.cursorPosition + this.cells[0].size[ beginMargin ];\n  var endBound = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n  // contain each cell target\n  this.slides.forEach( function( slide ) {\n    if ( isContentSmaller ) {\n      // all cells fit inside gallery\n      slide.target = contentWidth * this.cellAlign;\n    } else {\n      // contain to bounds\n      slide.target = Math.max( slide.target, beginBound );\n      slide.target = Math.min( slide.target, endBound );\n    }\n  }, this );\n};\n\n// -----  ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    // default trigger with type if no event\n    type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n    var $event = type;\n    if ( event ) {\n      // create jQuery event\n      var jQEvent = jQuery.Event( event );\n      jQEvent.type = type;\n      $event = jQEvent;\n    }\n    this.$element.trigger( $event, args );\n  }\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the slide\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nproto.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) {\n    return;\n  }\n  index = parseInt( index, 10 );\n  this._wrapSelect( index );\n\n  if ( this.options.wrapAround || isWrap ) {\n    index = utils.modulo( index, this.slides.length );\n  }\n  // bail if invalid index\n  if ( !this.slides[ index ] ) {\n    return;\n  }\n  var prevIndex = this.selectedIndex;\n  this.selectedIndex = index;\n  this.updateSelectedSlide();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  if ( this.options.adaptiveHeight ) {\n    this.setGallerySize();\n  }\n  // events\n  this.dispatchEvent( 'select', null, [ index ] );\n  // change event if new index\n  if ( index != prevIndex ) {\n    this.dispatchEvent( 'change', null, [ index ] );\n  }\n  // old v1 event name, remove in v3\n  this.dispatchEvent('cellSelect');\n};\n\n// wraps position for wrapAround, to move to closest slide. #113\nproto._wrapSelect = function( index ) {\n  var len = this.slides.length;\n  var isWrapping = this.options.wrapAround && len > 1;\n  if ( !isWrapping ) {\n    return index;\n  }\n  var wrapIndex = utils.modulo( index, len );\n  // go to shortest\n  var delta = Math.abs( wrapIndex - this.selectedIndex );\n  var backWrapDelta = Math.abs( ( wrapIndex + len ) - this.selectedIndex );\n  var forewardWrapDelta = Math.abs( ( wrapIndex - len ) - this.selectedIndex );\n  if ( !this.isDragSelect && backWrapDelta < delta ) {\n    index += len;\n  } else if ( !this.isDragSelect && forewardWrapDelta < delta ) {\n    index -= len;\n  }\n  // wrap position so slider is within normal area\n  if ( index < 0 ) {\n    this.x -= this.slideableWidth;\n  } else if ( index >= len ) {\n    this.x += this.slideableWidth;\n  }\n};\n\nproto.previous = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex - 1, isWrap, isInstant );\n};\n\nproto.next = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex + 1, isWrap, isInstant );\n};\n\nproto.updateSelectedSlide = function() {\n  var slide = this.slides[ this.selectedIndex ];\n  // selectedIndex could be outside of slides, if triggered before resize()\n  if ( !slide ) {\n    return;\n  }\n  // unselect previous selected slide\n  this.unselectSelectedSlide();\n  // update new selected slide\n  this.selectedSlide = slide;\n  slide.select();\n  this.selectedCells = slide.cells;\n  this.selectedElements = slide.getCellElements();\n  // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n  // Remove in v3?\n  this.selectedCell = slide.cells[0];\n  this.selectedElement = this.selectedElements[0];\n};\n\nproto.unselectSelectedSlide = function() {\n  if ( this.selectedSlide ) {\n    this.selectedSlide.unselect();\n  }\n};\n\nproto.selectInitialIndex = function() {\n  var initialIndex = this.options.initialIndex;\n  // already activated, select previous selectedIndex\n  if ( this.isInitActivated ) {\n    this.select( this.selectedIndex, false, true );\n    return;\n  }\n  // select with selector string\n  if ( initialIndex && typeof initialIndex == 'string' ) {\n    var cell = this.queryCell( initialIndex );\n    if ( cell ) {\n      this.selectCell( initialIndex, false, true );\n      return;\n    }\n  }\n\n  var index = 0;\n  // select with number\n  if ( initialIndex && this.slides[ initialIndex ] ) {\n    index = initialIndex;\n  }\n  // select instantly\n  this.select( index, false, true );\n};\n\n/**\n * select slide from number or cell element\n * @param {Element or Number} elem\n */\nproto.selectCell = function( value, isWrap, isInstant ) {\n  // get cell\n  var cell = this.queryCell( value );\n  if ( !cell ) {\n    return;\n  }\n\n  var index = this.getCellSlideIndex( cell );\n  this.select( index, isWrap, isInstant );\n};\n\nproto.getCellSlideIndex = function( cell ) {\n  // get index of slides that has cell\n  for ( var i=0; i < this.slides.length; i++ ) {\n    var slide = this.slides[i];\n    var index = slide.cells.indexOf( cell );\n    if ( index != -1 ) {\n      return i;\n    }\n  }\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem\n * @returns {Flickity.Cell} item\n */\nproto.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( var i=0; i < this.cells.length; i++ ) {\n    var cell = this.cells[i];\n    if ( cell.element == elem ) {\n      return cell;\n    }\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {Element, Array, NodeList} elems\n * @returns {Array} cells - Flickity.Cells\n */\nproto.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  var cells = [];\n  elems.forEach( function( elem ) {\n    var cell = this.getCell( elem );\n    if ( cell ) {\n      cells.push( cell );\n    }\n  }, this );\n  return cells;\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  });\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem\n * @returns {Flickit.Cell} cell\n */\nproto.getParentCell = function( elem ) {\n  // first check if elem is cell\n  var cell = this.getCell( elem );\n  if ( cell ) {\n    return cell;\n  }\n  // try to get parent cell elem\n  elem = utils.getParent( elem, '.flickity-slider > *' );\n  return this.getCell( elem );\n};\n\n/**\n * get cells adjacent to a slide\n * @param {Integer} adjCount - number of adjacent slides\n * @param {Integer} index - index of slide to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nproto.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) {\n    return this.selectedSlide.getCellElements();\n  }\n  index = index === undefined ? this.selectedIndex : index;\n\n  var len = this.slides.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements();\n  }\n\n  var cellElems = [];\n  for ( var i = index - adjCount; i <= index + adjCount ; i++ ) {\n    var slideIndex = this.options.wrapAround ? utils.modulo( i, len ) : i;\n    var slide = this.slides[ slideIndex ];\n    if ( slide ) {\n      cellElems = cellElems.concat( slide.getCellElements() );\n    }\n  }\n  return cellElems;\n};\n\n/**\n * select slide from number or cell element\n * @param {Element, Selector String, or Number} selector\n */\nproto.queryCell = function( selector ) {\n  if ( typeof selector == 'number' ) {\n    // use number as index\n    return this.cells[ selector ];\n  }\n  if ( typeof selector == 'string' ) {\n    // do not select invalid selectors from hash: #123, #/. #791\n    if ( selector.match(/^[#\\.]?[\\d\\/]/) ) {\n      return;\n    }\n    // use string as selector, get element\n    selector = this.element.querySelector( selector );\n  }\n  // get cell from element\n  return this.getCell( selector );\n};\n\n// -------------------------- events -------------------------- //\n\nproto.uiChange = function() {\n  this.emitEvent('uiChange');\n};\n\n// keep focus on element when child UI elements are clicked\nproto.childUIPointerDown = function( event ) {\n  // HACK iOS does not allow touch events to bubble up?!\n  if ( event.type != 'touchstart' ) {\n    event.preventDefault();\n  }\n  this.focus();\n};\n\n// ----- resize ----- //\n\nproto.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nproto.resize = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.getSize();\n  // wrap values\n  if ( this.options.wrapAround ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  this.emitEvent('resize');\n  // update selected index for group slides, instant\n  // TODO: position can be lost between groups of various numbers\n  var selectedElement = this.selectedElements && this.selectedElements[0];\n  this.selectCell( selectedElement, false, true );\n};\n\n// watches the :after property, activates/deactivates\nproto.watchCSS = function() {\n  var watchOption = this.options.watchCSS;\n  if ( !watchOption ) {\n    return;\n  }\n\n  var afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.indexOf('flickity') != -1 ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nproto.onkeydown = function( event ) {\n  // only work if element is in focus\n  var isNotFocused = document.activeElement && document.activeElement != this.element;\n  if ( !this.options.accessibility ||isNotFocused ) {\n    return;\n  }\n\n  var handler = Flickity.keyboardHandlers[ event.keyCode ];\n  if ( handler ) {\n    handler.call( this );\n  }\n};\n\nFlickity.keyboardHandlers = {\n  // left arrow\n  37: function() {\n    var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this.uiChange();\n    this[ leftMethod ]();\n  },\n  // right arrow\n  39: function() {\n    var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this.uiChange();\n    this[ rightMethod ]();\n  },\n};\n\n// ----- focus ----- //\n\nproto.focus = function() {\n  // TODO remove scrollTo once focus options gets more support\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Browser_compatibility\n  var prevScrollY = window.pageYOffset;\n  this.element.focus({ preventScroll: true });\n  // hack to fix scroll jump after focus, #76\n  if ( window.pageYOffset != prevScrollY ) {\n    window.scrollTo( window.pageXOffset, prevScrollY );\n  }\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nproto.deactivate = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.element.classList.remove('flickity-enabled');\n  this.element.classList.remove('flickity-rtl');\n  this.unselectSelectedSlide();\n  // destroy cells\n  this.cells.forEach( function( cell ) {\n    cell.destroy();\n  });\n  this.element.removeChild( this.viewport );\n  // move child elements back into element\n  moveElements( this.slider.children, this.element );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    this.element.removeEventListener( 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emitEvent('deactivate');\n};\n\nproto.destroy = function() {\n  this.deactivate();\n  window.removeEventListener( 'resize', this );\n  this.allOff();\n  this.emitEvent('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nutils.extend( proto, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n/**\n * get Flickity instance from element\n * @param {Element} elem\n * @returns {Flickity}\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.flickityGUID;\n  return id && instances[ id ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nif ( jQuery && jQuery.bridget ) {\n  jQuery.bridget( 'flickity', Flickity );\n}\n\n// set internal jQuery, for Webpack + jQuery v3, #478\nFlickity.setJQuery = function( jq ) {\n  jQuery = jq;\n};\n\nFlickity.Cell = Cell;\nFlickity.Slide = Slide;\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/flickity.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/index.js":
/*!*******************************************!*\
  !*** ./node_modules/flickity/js/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Flickity v2.2.0\n * Touch, responsive, flickable carousels\n *\n * Licensed GPLv3 for open source use\n * or Flickity Commercial License for commercial use\n *\n * https://flickity.metafizzy.co\n * Copyright 2015-2018 Metafizzy\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\"),\n      __webpack_require__(/*! ./drag */ \"./node_modules/flickity/js/drag.js\"),\n      __webpack_require__(/*! ./prev-next-button */ \"./node_modules/flickity/js/prev-next-button.js\"),\n      __webpack_require__(/*! ./page-dots */ \"./node_modules/flickity/js/page-dots.js\"),\n      __webpack_require__(/*! ./player */ \"./node_modules/flickity/js/player.js\"),\n      __webpack_require__(/*! ./add-remove-cell */ \"./node_modules/flickity/js/add-remove-cell.js\"),\n      __webpack_require__(/*! ./lazyload */ \"./node_modules/flickity/js/lazyload.js\")\n    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n})( window, function factory( Flickity ) {\n  /*jshint strict: false*/\n  return Flickity;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvaW5kZXguanM/MjE3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQXlDO0FBQ2hEO0FBQ0EsSUFBSSxpQ0FBUTtBQUNaLE1BQU0sK0VBQVk7QUFDbEIsTUFBTSx1RUFBUTtBQUNkLE1BQU0sK0ZBQW9CO0FBQzFCLE1BQU0saUZBQWE7QUFDbkIsTUFBTSwyRUFBVTtBQUNoQixNQUFNLDZGQUFtQjtBQUN6QixNQUFNLCtFQUFZO0FBQ2xCLEtBQUssb0NBQUUsT0FBTztBQUFBO0FBQUE7QUFBQSxvR0FBRTtBQUNoQixHQUFHLE1BQU0sRUFXTjs7QUFFSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEZsaWNraXR5IHYyLjIuMFxuICogVG91Y2gsIHJlc3BvbnNpdmUsIGZsaWNrYWJsZSBjYXJvdXNlbHNcbiAqXG4gKiBMaWNlbnNlZCBHUEx2MyBmb3Igb3BlbiBzb3VyY2UgdXNlXG4gKiBvciBGbGlja2l0eSBDb21tZXJjaWFsIExpY2Vuc2UgZm9yIGNvbW1lcmNpYWwgdXNlXG4gKlxuICogaHR0cHM6Ly9mbGlja2l0eS5tZXRhZml6enkuY29cbiAqIENvcHlyaWdodCAyMDE1LTIwMTggTWV0YWZpenp5XG4gKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLyoganNoaW50IHN0cmljdDogZmFsc2UgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoIFtcbiAgICAgICcuL2ZsaWNraXR5JyxcbiAgICAgICcuL2RyYWcnLFxuICAgICAgJy4vcHJldi1uZXh0LWJ1dHRvbicsXG4gICAgICAnLi9wYWdlLWRvdHMnLFxuICAgICAgJy4vcGxheWVyJyxcbiAgICAgICcuL2FkZC1yZW1vdmUtY2VsbCcsXG4gICAgICAnLi9sYXp5bG9hZCdcbiAgICBdLCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICByZXF1aXJlKCcuL2ZsaWNraXR5JyksXG4gICAgICByZXF1aXJlKCcuL2RyYWcnKSxcbiAgICAgIHJlcXVpcmUoJy4vcHJldi1uZXh0LWJ1dHRvbicpLFxuICAgICAgcmVxdWlyZSgnLi9wYWdlLWRvdHMnKSxcbiAgICAgIHJlcXVpcmUoJy4vcGxheWVyJyksXG4gICAgICByZXF1aXJlKCcuL2FkZC1yZW1vdmUtY2VsbCcpLFxuICAgICAgcmVxdWlyZSgnLi9sYXp5bG9hZCcpXG4gICAgKTtcbiAgfVxuXG59KSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCBGbGlja2l0eSApIHtcbiAgLypqc2hpbnQgc3RyaWN0OiBmYWxzZSovXG4gIHJldHVybiBGbGlja2l0eTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/index.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/lazyload.js":
/*!**********************************************!*\
  !*** ./node_modules/flickity/js/lazyload.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// lazyload\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, Flickity, utils ) {\n'use strict';\n\nFlickity.createMethods.push('_createLazyload');\nvar proto = Flickity.prototype;\n\nproto._createLazyload = function() {\n  this.on( 'select', this.lazyLoad );\n};\n\nproto.lazyLoad = function() {\n  var lazyLoad = this.options.lazyLoad;\n  if ( !lazyLoad ) {\n    return;\n  }\n  // get adjacent cells, use lazyLoad option for adjacent count\n  var adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n  var cellElems = this.getAdjacentCellElements( adjCount );\n  // get lazy images in those cells\n  var lazyImages = [];\n  cellElems.forEach( function( cellElem ) {\n    var lazyCellImages = getCellLazyImages( cellElem );\n    lazyImages = lazyImages.concat( lazyCellImages );\n  });\n  // load lazy images\n  lazyImages.forEach( function( img ) {\n    new LazyLoader( img, this );\n  }, this );\n};\n\nfunction getCellLazyImages( cellElem ) {\n  // check if cell element is lazy image\n  if ( cellElem.nodeName == 'IMG' ) {\n    var lazyloadAttr = cellElem.getAttribute('data-flickity-lazyload');\n    var srcAttr = cellElem.getAttribute('data-flickity-lazyload-src');\n    var srcsetAttr = cellElem.getAttribute('data-flickity-lazyload-srcset');\n    if ( lazyloadAttr || srcAttr || srcsetAttr ) {\n      return [ cellElem ];\n    }\n  }\n  // select lazy images in cell\n  var lazySelector = 'img[data-flickity-lazyload], ' +\n    'img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]';\n  var imgs = cellElem.querySelectorAll( lazySelector );\n  return utils.makeArray( imgs );\n}\n\n// -------------------------- LazyLoader -------------------------- //\n\n/**\n * class to handle loading images\n */\nfunction LazyLoader( img, flickity ) {\n  this.img = img;\n  this.flickity = flickity;\n  this.load();\n}\n\nLazyLoader.prototype.handleEvent = utils.handleEvent;\n\nLazyLoader.prototype.load = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  // get src & srcset\n  var src = this.img.getAttribute('data-flickity-lazyload') ||\n    this.img.getAttribute('data-flickity-lazyload-src');\n  var srcset = this.img.getAttribute('data-flickity-lazyload-srcset');\n  // set src & serset\n  this.img.src = src;\n  if ( srcset ) {\n    this.img.setAttribute( 'srcset', srcset );\n  }\n  // remove attr\n  this.img.removeAttribute('data-flickity-lazyload');\n  this.img.removeAttribute('data-flickity-lazyload-src');\n  this.img.removeAttribute('data-flickity-lazyload-srcset');\n};\n\nLazyLoader.prototype.onload = function( event ) {\n  this.complete( event, 'flickity-lazyloaded' );\n};\n\nLazyLoader.prototype.onerror = function( event ) {\n  this.complete( event, 'flickity-lazyerror' );\n};\n\nLazyLoader.prototype.complete = function( event, className ) {\n  // unbind events\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n\n  var cell = this.flickity.getParentCell( this.img );\n  var cellElem = cell && cell.element;\n  this.flickity.cellSizeChange( cellElem );\n\n  this.img.classList.add( className );\n  this.flickity.dispatchEvent( 'lazyLoad', event, cellElem );\n};\n\n// -----  ----- //\n\nFlickity.LazyLoader = LazyLoader;\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvbGF6eWxvYWQuanM/OGExNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sSUFBeUM7QUFDaEQ7QUFDQSxJQUFJLGlDQUFRO0FBQ1osTUFBTSwrRUFBWTtBQUNsQixNQUFNLHlGQUFzQjtBQUM1QixLQUFLLG1DQUFFO0FBQ1A7QUFDQSxLQUFLO0FBQUEsb0dBQUM7QUFDTixHQUFHLE1BQU0sRUFjTjs7QUFFSCxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9mbGlja2l0eS9qcy9sYXp5bG9hZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGxhenlsb2FkXG4oIGZ1bmN0aW9uKCB3aW5kb3csIGZhY3RvcnkgKSB7XG4gIC8vIHVuaXZlcnNhbCBtb2R1bGUgZGVmaW5pdGlvblxuICAvKiBqc2hpbnQgc3RyaWN0OiBmYWxzZSAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRFxuICAgIGRlZmluZSggW1xuICAgICAgJy4vZmxpY2tpdHknLFxuICAgICAgJ2Zpenp5LXVpLXV0aWxzL3V0aWxzJ1xuICAgIF0sIGZ1bmN0aW9uKCBGbGlja2l0eSwgdXRpbHMgKSB7XG4gICAgICByZXR1cm4gZmFjdG9yeSggd2luZG93LCBGbGlja2l0eSwgdXRpbHMgKTtcbiAgICB9KTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KU1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShcbiAgICAgIHdpbmRvdyxcbiAgICAgIHJlcXVpcmUoJy4vZmxpY2tpdHknKSxcbiAgICAgIHJlcXVpcmUoJ2Zpenp5LXVpLXV0aWxzJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgZmFjdG9yeShcbiAgICAgIHdpbmRvdyxcbiAgICAgIHdpbmRvdy5GbGlja2l0eSxcbiAgICAgIHdpbmRvdy5maXp6eVVJVXRpbHNcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggd2luZG93LCBGbGlja2l0eSwgdXRpbHMgKSB7XG4ndXNlIHN0cmljdCc7XG5cbkZsaWNraXR5LmNyZWF0ZU1ldGhvZHMucHVzaCgnX2NyZWF0ZUxhenlsb2FkJyk7XG52YXIgcHJvdG8gPSBGbGlja2l0eS5wcm90b3R5cGU7XG5cbnByb3RvLl9jcmVhdGVMYXp5bG9hZCA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLm9uKCAnc2VsZWN0JywgdGhpcy5sYXp5TG9hZCApO1xufTtcblxucHJvdG8ubGF6eUxvYWQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGxhenlMb2FkID0gdGhpcy5vcHRpb25zLmxhenlMb2FkO1xuICBpZiAoICFsYXp5TG9hZCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gZ2V0IGFkamFjZW50IGNlbGxzLCB1c2UgbGF6eUxvYWQgb3B0aW9uIGZvciBhZGphY2VudCBjb3VudFxuICB2YXIgYWRqQ291bnQgPSB0eXBlb2YgbGF6eUxvYWQgPT0gJ251bWJlcicgPyBsYXp5TG9hZCA6IDA7XG4gIHZhciBjZWxsRWxlbXMgPSB0aGlzLmdldEFkamFjZW50Q2VsbEVsZW1lbnRzKCBhZGpDb3VudCApO1xuICAvLyBnZXQgbGF6eSBpbWFnZXMgaW4gdGhvc2UgY2VsbHNcbiAgdmFyIGxhenlJbWFnZXMgPSBbXTtcbiAgY2VsbEVsZW1zLmZvckVhY2goIGZ1bmN0aW9uKCBjZWxsRWxlbSApIHtcbiAgICB2YXIgbGF6eUNlbGxJbWFnZXMgPSBnZXRDZWxsTGF6eUltYWdlcyggY2VsbEVsZW0gKTtcbiAgICBsYXp5SW1hZ2VzID0gbGF6eUltYWdlcy5jb25jYXQoIGxhenlDZWxsSW1hZ2VzICk7XG4gIH0pO1xuICAvLyBsb2FkIGxhenkgaW1hZ2VzXG4gIGxhenlJbWFnZXMuZm9yRWFjaCggZnVuY3Rpb24oIGltZyApIHtcbiAgICBuZXcgTGF6eUxvYWRlciggaW1nLCB0aGlzICk7XG4gIH0sIHRoaXMgKTtcbn07XG5cbmZ1bmN0aW9uIGdldENlbGxMYXp5SW1hZ2VzKCBjZWxsRWxlbSApIHtcbiAgLy8gY2hlY2sgaWYgY2VsbCBlbGVtZW50IGlzIGxhenkgaW1hZ2VcbiAgaWYgKCBjZWxsRWxlbS5ub2RlTmFtZSA9PSAnSU1HJyApIHtcbiAgICB2YXIgbGF6eWxvYWRBdHRyID0gY2VsbEVsZW0uZ2V0QXR0cmlidXRlKCdkYXRhLWZsaWNraXR5LWxhenlsb2FkJyk7XG4gICAgdmFyIHNyY0F0dHIgPSBjZWxsRWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtZmxpY2tpdHktbGF6eWxvYWQtc3JjJyk7XG4gICAgdmFyIHNyY3NldEF0dHIgPSBjZWxsRWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtZmxpY2tpdHktbGF6eWxvYWQtc3Jjc2V0Jyk7XG4gICAgaWYgKCBsYXp5bG9hZEF0dHIgfHwgc3JjQXR0ciB8fCBzcmNzZXRBdHRyICkge1xuICAgICAgcmV0dXJuIFsgY2VsbEVsZW0gXTtcbiAgICB9XG4gIH1cbiAgLy8gc2VsZWN0IGxhenkgaW1hZ2VzIGluIGNlbGxcbiAgdmFyIGxhenlTZWxlY3RvciA9ICdpbWdbZGF0YS1mbGlja2l0eS1sYXp5bG9hZF0sICcgK1xuICAgICdpbWdbZGF0YS1mbGlja2l0eS1sYXp5bG9hZC1zcmNdLCBpbWdbZGF0YS1mbGlja2l0eS1sYXp5bG9hZC1zcmNzZXRdJztcbiAgdmFyIGltZ3MgPSBjZWxsRWxlbS5xdWVyeVNlbGVjdG9yQWxsKCBsYXp5U2VsZWN0b3IgKTtcbiAgcmV0dXJuIHV0aWxzLm1ha2VBcnJheSggaW1ncyApO1xufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBMYXp5TG9hZGVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbi8qKlxuICogY2xhc3MgdG8gaGFuZGxlIGxvYWRpbmcgaW1hZ2VzXG4gKi9cbmZ1bmN0aW9uIExhenlMb2FkZXIoIGltZywgZmxpY2tpdHkgKSB7XG4gIHRoaXMuaW1nID0gaW1nO1xuICB0aGlzLmZsaWNraXR5ID0gZmxpY2tpdHk7XG4gIHRoaXMubG9hZCgpO1xufVxuXG5MYXp5TG9hZGVyLnByb3RvdHlwZS5oYW5kbGVFdmVudCA9IHV0aWxzLmhhbmRsZUV2ZW50O1xuXG5MYXp5TG9hZGVyLnByb3RvdHlwZS5sb2FkID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuaW1nLmFkZEV2ZW50TGlzdGVuZXIoICdsb2FkJywgdGhpcyApO1xuICB0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKCAnZXJyb3InLCB0aGlzICk7XG4gIC8vIGdldCBzcmMgJiBzcmNzZXRcbiAgdmFyIHNyYyA9IHRoaXMuaW1nLmdldEF0dHJpYnV0ZSgnZGF0YS1mbGlja2l0eS1sYXp5bG9hZCcpIHx8XG4gICAgdGhpcy5pbWcuZ2V0QXR0cmlidXRlKCdkYXRhLWZsaWNraXR5LWxhenlsb2FkLXNyYycpO1xuICB2YXIgc3Jjc2V0ID0gdGhpcy5pbWcuZ2V0QXR0cmlidXRlKCdkYXRhLWZsaWNraXR5LWxhenlsb2FkLXNyY3NldCcpO1xuICAvLyBzZXQgc3JjICYgc2Vyc2V0XG4gIHRoaXMuaW1nLnNyYyA9IHNyYztcbiAgaWYgKCBzcmNzZXQgKSB7XG4gICAgdGhpcy5pbWcuc2V0QXR0cmlidXRlKCAnc3Jjc2V0Jywgc3Jjc2V0ICk7XG4gIH1cbiAgLy8gcmVtb3ZlIGF0dHJcbiAgdGhpcy5pbWcucmVtb3ZlQXR0cmlidXRlKCdkYXRhLWZsaWNraXR5LWxhenlsb2FkJyk7XG4gIHRoaXMuaW1nLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1mbGlja2l0eS1sYXp5bG9hZC1zcmMnKTtcbiAgdGhpcy5pbWcucmVtb3ZlQXR0cmlidXRlKCdkYXRhLWZsaWNraXR5LWxhenlsb2FkLXNyY3NldCcpO1xufTtcblxuTGF6eUxvYWRlci5wcm90b3R5cGUub25sb2FkID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB0aGlzLmNvbXBsZXRlKCBldmVudCwgJ2ZsaWNraXR5LWxhenlsb2FkZWQnICk7XG59O1xuXG5MYXp5TG9hZGVyLnByb3RvdHlwZS5vbmVycm9yID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB0aGlzLmNvbXBsZXRlKCBldmVudCwgJ2ZsaWNraXR5LWxhenllcnJvcicgKTtcbn07XG5cbkxhenlMb2FkZXIucHJvdG90eXBlLmNvbXBsZXRlID0gZnVuY3Rpb24oIGV2ZW50LCBjbGFzc05hbWUgKSB7XG4gIC8vIHVuYmluZCBldmVudHNcbiAgdGhpcy5pbWcucmVtb3ZlRXZlbnRMaXN0ZW5lciggJ2xvYWQnLCB0aGlzICk7XG4gIHRoaXMuaW1nLnJlbW92ZUV2ZW50TGlzdGVuZXIoICdlcnJvcicsIHRoaXMgKTtcblxuICB2YXIgY2VsbCA9IHRoaXMuZmxpY2tpdHkuZ2V0UGFyZW50Q2VsbCggdGhpcy5pbWcgKTtcbiAgdmFyIGNlbGxFbGVtID0gY2VsbCAmJiBjZWxsLmVsZW1lbnQ7XG4gIHRoaXMuZmxpY2tpdHkuY2VsbFNpemVDaGFuZ2UoIGNlbGxFbGVtICk7XG5cbiAgdGhpcy5pbWcuY2xhc3NMaXN0LmFkZCggY2xhc3NOYW1lICk7XG4gIHRoaXMuZmxpY2tpdHkuZGlzcGF0Y2hFdmVudCggJ2xhenlMb2FkJywgZXZlbnQsIGNlbGxFbGVtICk7XG59O1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxuRmxpY2tpdHkuTGF6eUxvYWRlciA9IExhenlMb2FkZXI7XG5cbnJldHVybiBGbGlja2l0eTtcblxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/lazyload.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/page-dots.js":
/*!***********************************************!*\
  !*** ./node_modules/flickity/js/page-dots.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// page dots\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\"),\n      __webpack_require__(/*! unipointer/unipointer */ \"./node_modules/unipointer/unipointer.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Flickity, Unipointer, utils ) {\n      return factory( window, Flickity, Unipointer, utils );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, Flickity, Unipointer, utils ) {\n\n// -------------------------- PageDots -------------------------- //\n\n'use strict';\n\nfunction PageDots( parent ) {\n  this.parent = parent;\n  this._create();\n}\n\nPageDots.prototype = Object.create( Unipointer.prototype );\n\nPageDots.prototype._create = function() {\n  // create holder element\n  this.holder = document.createElement('ol');\n  this.holder.className = 'flickity-page-dots';\n  // create dots, array of elements\n  this.dots = [];\n  // events\n  this.handleClick = this.onClick.bind( this );\n  this.on( 'pointerDown', this.parent.childUIPointerDown.bind( this.parent ) );\n};\n\nPageDots.prototype.activate = function() {\n  this.setDots();\n  this.holder.addEventListener( 'click', this.handleClick );\n  this.bindStartEvent( this.holder );\n  // add to DOM\n  this.parent.element.appendChild( this.holder );\n};\n\nPageDots.prototype.deactivate = function() {\n  this.holder.removeEventListener( 'click', this.handleClick );\n  this.unbindStartEvent( this.holder );\n  // remove from DOM\n  this.parent.element.removeChild( this.holder );\n};\n\nPageDots.prototype.setDots = function() {\n  // get difference between number of slides and number of dots\n  var delta = this.parent.slides.length - this.dots.length;\n  if ( delta > 0 ) {\n    this.addDots( delta );\n  } else if ( delta < 0 ) {\n    this.removeDots( -delta );\n  }\n};\n\nPageDots.prototype.addDots = function( count ) {\n  var fragment = document.createDocumentFragment();\n  var newDots = [];\n  var length = this.dots.length;\n  var max = length + count;\n\n  for ( var i = length; i < max; i++ ) {\n    var dot = document.createElement('li');\n    dot.className = 'dot';\n    dot.setAttribute( 'aria-label', 'Page dot ' + ( i + 1 ) );\n    fragment.appendChild( dot );\n    newDots.push( dot );\n  }\n\n  this.holder.appendChild( fragment );\n  this.dots = this.dots.concat( newDots );\n};\n\nPageDots.prototype.removeDots = function( count ) {\n  // remove from this.dots collection\n  var removeDots = this.dots.splice( this.dots.length - count, count );\n  // remove from DOM\n  removeDots.forEach( function( dot ) {\n    this.holder.removeChild( dot );\n  }, this );\n};\n\nPageDots.prototype.updateSelected = function() {\n  // remove selected class on previous\n  if ( this.selectedDot ) {\n    this.selectedDot.className = 'dot';\n    this.selectedDot.removeAttribute('aria-current');\n  }\n  // don't proceed if no dots\n  if ( !this.dots.length ) {\n    return;\n  }\n  this.selectedDot = this.dots[ this.parent.selectedIndex ];\n  this.selectedDot.className = 'dot is-selected';\n  this.selectedDot.setAttribute( 'aria-current', 'step' );\n};\n\nPageDots.prototype.onTap = // old method name, backwards-compatible\nPageDots.prototype.onClick = function( event ) {\n  var target = event.target;\n  // only care about dot clicks\n  if ( target.nodeName != 'LI' ) {\n    return;\n  }\n\n  this.parent.uiChange();\n  var index = this.dots.indexOf( target );\n  this.parent.select( index );\n};\n\nPageDots.prototype.destroy = function() {\n  this.deactivate();\n  this.allOff();\n};\n\nFlickity.PageDots = PageDots;\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pageDots: true\n});\n\nFlickity.createMethods.push('_createPageDots');\n\nvar proto = Flickity.prototype;\n\nproto._createPageDots = function() {\n  if ( !this.options.pageDots ) {\n    return;\n  }\n  this.pageDots = new PageDots( this );\n  // events\n  this.on( 'activate', this.activatePageDots );\n  this.on( 'select', this.updateSelectedPageDots );\n  this.on( 'cellChange', this.updatePageDots );\n  this.on( 'resize', this.updatePageDots );\n  this.on( 'deactivate', this.deactivatePageDots );\n};\n\nproto.activatePageDots = function() {\n  this.pageDots.activate();\n};\n\nproto.updateSelectedPageDots = function() {\n  this.pageDots.updateSelected();\n};\n\nproto.updatePageDots = function() {\n  this.pageDots.setDots();\n};\n\nproto.deactivatePageDots = function() {\n  this.pageDots.deactivate();\n};\n\n// -----  ----- //\n\nFlickity.PageDots = PageDots;\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/page-dots.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/player.js":
/*!********************************************!*\
  !*** ./node_modules/flickity/js/player.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// player & autoPlay\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\"),\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, utils, Flickity ) {\n      return factory( EvEmitter, utils, Flickity );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( EvEmitter, utils, Flickity ) {\n\n'use strict';\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( parent ) {\n  this.parent = parent;\n  this.state = 'stopped';\n  // visibility change event handler\n  this.onVisibilityChange = this.visibilityChange.bind( this );\n  this.onVisibilityPlay = this.visibilityPlay.bind( this );\n}\n\nPlayer.prototype = Object.create( EvEmitter.prototype );\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state == 'playing' ) {\n    return;\n  }\n  // do not play if page is hidden, start playing when page is visible\n  var isPageHidden = document.hidden;\n  if ( isPageHidden ) {\n    document.addEventListener( 'visibilitychange', this.onVisibilityPlay );\n    return;\n  }\n\n  this.state = 'playing';\n  // listen to visibility change\n  document.addEventListener( 'visibilitychange', this.onVisibilityChange );\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state != 'playing' ) {\n    return;\n  }\n\n  var time = this.parent.options.autoPlay;\n  // default to 3 seconds\n  time = typeof time == 'number' ? time : 3000;\n  var _this = this;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( function() {\n    _this.parent.next( true );\n    _this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  document.removeEventListener( 'visibilitychange', this.onVisibilityChange );\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state == 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if paused\n  if ( this.state == 'paused' ) {\n    this.play();\n  }\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  var isPageHidden = document.hidden;\n  this[ isPageHidden ? 'pause' : 'unpause' ]();\n};\n\nPlayer.prototype.visibilityPlay = function() {\n  this.play();\n  document.removeEventListener( 'visibilitychange', this.onVisibilityPlay );\n};\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pauseAutoPlayOnHover: true\n});\n\nFlickity.createMethods.push('_createPlayer');\nvar proto = Flickity.prototype;\n\nproto._createPlayer = function() {\n  this.player = new Player( this );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nproto.activatePlayer = function() {\n  if ( !this.options.autoPlay ) {\n    return;\n  }\n  this.player.play();\n  this.element.addEventListener( 'mouseenter', this );\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nproto.playPlayer = function() {\n  this.player.play();\n};\n\nproto.stopPlayer = function() {\n  this.player.stop();\n};\n\nproto.pausePlayer = function() {\n  this.player.pause();\n};\n\nproto.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nproto.deactivatePlayer = function() {\n  this.player.stop();\n  this.element.removeEventListener( 'mouseenter', this );\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nproto.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) {\n    return;\n  }\n  this.player.pause();\n  this.element.addEventListener( 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nproto.onmouseleave = function() {\n  this.player.unpause();\n  this.element.removeEventListener( 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvcGxheWVyLmpzP2IxOGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQXlDO0FBQ2hEO0FBQ0EsSUFBSSxpQ0FBUTtBQUNaLE1BQU0sMkZBQXVCO0FBQzdCLE1BQU0seUZBQXNCO0FBQzVCLE1BQU0sK0VBQVk7QUFDbEIsS0FBSyxtQ0FBRTtBQUNQO0FBQ0EsS0FBSztBQUFBLG9HQUFDO0FBQ04sR0FBRyxNQUFNLEVBY047O0FBRUgsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvcGxheWVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcGxheWVyICYgYXV0b1BsYXlcbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EXG4gICAgZGVmaW5lKCBbXG4gICAgICAnZXYtZW1pdHRlci9ldi1lbWl0dGVyJyxcbiAgICAgICdmaXp6eS11aS11dGlscy91dGlscycsXG4gICAgICAnLi9mbGlja2l0eSdcbiAgICBdLCBmdW5jdGlvbiggRXZFbWl0dGVyLCB1dGlscywgRmxpY2tpdHkgKSB7XG4gICAgICByZXR1cm4gZmFjdG9yeSggRXZFbWl0dGVyLCB1dGlscywgRmxpY2tpdHkgKTtcbiAgICB9KTtcbiAgfSBlbHNlIGlmICggdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyApIHtcbiAgICAvLyBDb21tb25KU1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShcbiAgICAgIHJlcXVpcmUoJ2V2LWVtaXR0ZXInKSxcbiAgICAgIHJlcXVpcmUoJ2Zpenp5LXVpLXV0aWxzJyksXG4gICAgICByZXF1aXJlKCcuL2ZsaWNraXR5JylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgZmFjdG9yeShcbiAgICAgIHdpbmRvdy5FdkVtaXR0ZXIsXG4gICAgICB3aW5kb3cuZml6enlVSVV0aWxzLFxuICAgICAgd2luZG93LkZsaWNraXR5XG4gICAgKTtcbiAgfVxuXG59KCB3aW5kb3csIGZ1bmN0aW9uIGZhY3RvcnkoIEV2RW1pdHRlciwgdXRpbHMsIEZsaWNraXR5ICkge1xuXG4ndXNlIHN0cmljdCc7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFBsYXllciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG5mdW5jdGlvbiBQbGF5ZXIoIHBhcmVudCApIHtcbiAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gIHRoaXMuc3RhdGUgPSAnc3RvcHBlZCc7XG4gIC8vIHZpc2liaWxpdHkgY2hhbmdlIGV2ZW50IGhhbmRsZXJcbiAgdGhpcy5vblZpc2liaWxpdHlDaGFuZ2UgPSB0aGlzLnZpc2liaWxpdHlDaGFuZ2UuYmluZCggdGhpcyApO1xuICB0aGlzLm9uVmlzaWJpbGl0eVBsYXkgPSB0aGlzLnZpc2liaWxpdHlQbGF5LmJpbmQoIHRoaXMgKTtcbn1cblxuUGxheWVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoIEV2RW1pdHRlci5wcm90b3R5cGUgKTtcblxuLy8gc3RhcnQgcGxheVxuUGxheWVyLnByb3RvdHlwZS5wbGF5ID0gZnVuY3Rpb24oKSB7XG4gIGlmICggdGhpcy5zdGF0ZSA9PSAncGxheWluZycgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vIGRvIG5vdCBwbGF5IGlmIHBhZ2UgaXMgaGlkZGVuLCBzdGFydCBwbGF5aW5nIHdoZW4gcGFnZSBpcyB2aXNpYmxlXG4gIHZhciBpc1BhZ2VIaWRkZW4gPSBkb2N1bWVudC5oaWRkZW47XG4gIGlmICggaXNQYWdlSGlkZGVuICkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICd2aXNpYmlsaXR5Y2hhbmdlJywgdGhpcy5vblZpc2liaWxpdHlQbGF5ICk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5zdGF0ZSA9ICdwbGF5aW5nJztcbiAgLy8gbGlzdGVuIHRvIHZpc2liaWxpdHkgY2hhbmdlXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICd2aXNpYmlsaXR5Y2hhbmdlJywgdGhpcy5vblZpc2liaWxpdHlDaGFuZ2UgKTtcbiAgLy8gc3RhcnQgdGlja2luZ1xuICB0aGlzLnRpY2soKTtcbn07XG5cblBsYXllci5wcm90b3R5cGUudGljayA9IGZ1bmN0aW9uKCkge1xuICAvLyBkbyBub3QgdGljayBpZiBub3QgcGxheWluZ1xuICBpZiAoIHRoaXMuc3RhdGUgIT0gJ3BsYXlpbmcnICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciB0aW1lID0gdGhpcy5wYXJlbnQub3B0aW9ucy5hdXRvUGxheTtcbiAgLy8gZGVmYXVsdCB0byAzIHNlY29uZHNcbiAgdGltZSA9IHR5cGVvZiB0aW1lID09ICdudW1iZXInID8gdGltZSA6IDMwMDA7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG4gIC8vIEhBQ0s6IHJlc2V0IHRpY2tzIGlmIHN0b3BwZWQgYW5kIHN0YXJ0ZWQgd2l0aGluIGludGVydmFsXG4gIHRoaXMuY2xlYXIoKTtcbiAgdGhpcy50aW1lb3V0ID0gc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG4gICAgX3RoaXMucGFyZW50Lm5leHQoIHRydWUgKTtcbiAgICBfdGhpcy50aWNrKCk7XG4gIH0sIHRpbWUgKTtcbn07XG5cblBsYXllci5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnN0YXRlID0gJ3N0b3BwZWQnO1xuICB0aGlzLmNsZWFyKCk7XG4gIC8vIHJlbW92ZSB2aXNpYmlsaXR5IGNoYW5nZSBldmVudFxuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCAndmlzaWJpbGl0eWNoYW5nZScsIHRoaXMub25WaXNpYmlsaXR5Q2hhbmdlICk7XG59O1xuXG5QbGF5ZXIucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24oKSB7XG4gIGNsZWFyVGltZW91dCggdGhpcy50aW1lb3V0ICk7XG59O1xuXG5QbGF5ZXIucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24oKSB7XG4gIGlmICggdGhpcy5zdGF0ZSA9PSAncGxheWluZycgKSB7XG4gICAgdGhpcy5zdGF0ZSA9ICdwYXVzZWQnO1xuICAgIHRoaXMuY2xlYXIoKTtcbiAgfVxufTtcblxuUGxheWVyLnByb3RvdHlwZS51bnBhdXNlID0gZnVuY3Rpb24oKSB7XG4gIC8vIHJlLXN0YXJ0IHBsYXkgaWYgcGF1c2VkXG4gIGlmICggdGhpcy5zdGF0ZSA9PSAncGF1c2VkJyApIHtcbiAgICB0aGlzLnBsYXkoKTtcbiAgfVxufTtcblxuLy8gcGF1c2UgaWYgcGFnZSB2aXNpYmlsaXR5IGlzIGhpZGRlbiwgdW5wYXVzZSBpZiB2aXNpYmxlXG5QbGF5ZXIucHJvdG90eXBlLnZpc2liaWxpdHlDaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGlzUGFnZUhpZGRlbiA9IGRvY3VtZW50LmhpZGRlbjtcbiAgdGhpc1sgaXNQYWdlSGlkZGVuID8gJ3BhdXNlJyA6ICd1bnBhdXNlJyBdKCk7XG59O1xuXG5QbGF5ZXIucHJvdG90eXBlLnZpc2liaWxpdHlQbGF5ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMucGxheSgpO1xuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCAndmlzaWJpbGl0eWNoYW5nZScsIHRoaXMub25WaXNpYmlsaXR5UGxheSApO1xufTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gRmxpY2tpdHkgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cblxudXRpbHMuZXh0ZW5kKCBGbGlja2l0eS5kZWZhdWx0cywge1xuICBwYXVzZUF1dG9QbGF5T25Ib3ZlcjogdHJ1ZVxufSk7XG5cbkZsaWNraXR5LmNyZWF0ZU1ldGhvZHMucHVzaCgnX2NyZWF0ZVBsYXllcicpO1xudmFyIHByb3RvID0gRmxpY2tpdHkucHJvdG90eXBlO1xuXG5wcm90by5fY3JlYXRlUGxheWVyID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMucGxheWVyID0gbmV3IFBsYXllciggdGhpcyApO1xuXG4gIHRoaXMub24oICdhY3RpdmF0ZScsIHRoaXMuYWN0aXZhdGVQbGF5ZXIgKTtcbiAgdGhpcy5vbiggJ3VpQ2hhbmdlJywgdGhpcy5zdG9wUGxheWVyICk7XG4gIHRoaXMub24oICdwb2ludGVyRG93bicsIHRoaXMuc3RvcFBsYXllciApO1xuICB0aGlzLm9uKCAnZGVhY3RpdmF0ZScsIHRoaXMuZGVhY3RpdmF0ZVBsYXllciApO1xufTtcblxucHJvdG8uYWN0aXZhdGVQbGF5ZXIgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCAhdGhpcy5vcHRpb25zLmF1dG9QbGF5ICkge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLnBsYXllci5wbGF5KCk7XG4gIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCAnbW91c2VlbnRlcicsIHRoaXMgKTtcbn07XG5cbi8vIFBsYXllciBBUEksIGRvbid0IGhhdGUgdGhlIC4uLiB0aGFua3MgSSBrbm93IHdoZXJlIHRoZSBkb29yIGlzXG5cbnByb3RvLnBsYXlQbGF5ZXIgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5wbGF5ZXIucGxheSgpO1xufTtcblxucHJvdG8uc3RvcFBsYXllciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnBsYXllci5zdG9wKCk7XG59O1xuXG5wcm90by5wYXVzZVBsYXllciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnBsYXllci5wYXVzZSgpO1xufTtcblxucHJvdG8udW5wYXVzZVBsYXllciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnBsYXllci51bnBhdXNlKCk7XG59O1xuXG5wcm90by5kZWFjdGl2YXRlUGxheWVyID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMucGxheWVyLnN0b3AoKTtcbiAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoICdtb3VzZWVudGVyJywgdGhpcyApO1xufTtcblxuLy8gLS0tLS0gbW91c2VlbnRlci9sZWF2ZSAtLS0tLSAvL1xuXG4vLyBwYXVzZSBhdXRvLXBsYXkgb24gaG92ZXJcbnByb3RvLm9ubW91c2VlbnRlciA9IGZ1bmN0aW9uKCkge1xuICBpZiAoICF0aGlzLm9wdGlvbnMucGF1c2VBdXRvUGxheU9uSG92ZXIgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMucGxheWVyLnBhdXNlKCk7XG4gIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCAnbW91c2VsZWF2ZScsIHRoaXMgKTtcbn07XG5cbi8vIHJlc3VtZSBhdXRvLXBsYXkgb24gaG92ZXIgb2ZmXG5wcm90by5vbm1vdXNlbGVhdmUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5wbGF5ZXIudW5wYXVzZSgpO1xuICB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggJ21vdXNlbGVhdmUnLCB0aGlzICk7XG59O1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxuRmxpY2tpdHkuUGxheWVyID0gUGxheWVyO1xuXG5yZXR1cm4gRmxpY2tpdHk7XG5cbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/player.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/prev-next-button.js":
/*!******************************************************!*\
  !*** ./node_modules/flickity/js/prev-next-button.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// prev/next buttons\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ./flickity */ \"./node_modules/flickity/js/flickity.js\"),\n      __webpack_require__(/*! unipointer/unipointer */ \"./node_modules/unipointer/unipointer.js\"),\n      __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Flickity, Unipointer, utils ) {\n      return factory( window, Flickity, Unipointer, utils );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, Flickity, Unipointer, utils ) {\n'use strict';\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\n// -------------------------- PrevNextButton -------------------------- //\n\nfunction PrevNextButton( direction, parent ) {\n  this.direction = direction;\n  this.parent = parent;\n  this._create();\n}\n\nPrevNextButton.prototype = Object.create( Unipointer.prototype );\n\nPrevNextButton.prototype._create = function() {\n  // properties\n  this.isEnabled = true;\n  this.isPrevious = this.direction == -1;\n  var leftDirection = this.parent.options.rightToLeft ? 1 : -1;\n  this.isLeft = this.direction == leftDirection;\n\n  var element = this.element = document.createElement('button');\n  element.className = 'flickity-button flickity-prev-next-button';\n  element.className += this.isPrevious ? ' previous' : ' next';\n  // prevent button from submitting form http://stackoverflow.com/a/10836076/182183\n  element.setAttribute( 'type', 'button' );\n  // init as disabled\n  this.disable();\n\n  element.setAttribute( 'aria-label', this.isPrevious ? 'Previous' : 'Next' );\n\n  // create arrow\n  var svg = this.createSVG();\n  element.appendChild( svg );\n  // events\n  this.parent.on( 'select', this.update.bind( this ) );\n  this.on( 'pointerDown', this.parent.childUIPointerDown.bind( this.parent ) );\n};\n\nPrevNextButton.prototype.activate = function() {\n  this.bindStartEvent( this.element );\n  this.element.addEventListener( 'click', this );\n  // add to DOM\n  this.parent.element.appendChild( this.element );\n};\n\nPrevNextButton.prototype.deactivate = function() {\n  // remove from DOM\n  this.parent.element.removeChild( this.element );\n  // click events\n  this.unbindStartEvent( this.element );\n  this.element.removeEventListener( 'click', this );\n};\n\nPrevNextButton.prototype.createSVG = function() {\n  var svg = document.createElementNS( svgURI, 'svg');\n  svg.setAttribute( 'class', 'flickity-button-icon' );\n  svg.setAttribute( 'viewBox', '0 0 100 100' );\n  var path = document.createElementNS( svgURI, 'path');\n  var pathMovements = getArrowMovements( this.parent.options.arrowShape );\n  path.setAttribute( 'd', pathMovements );\n  path.setAttribute( 'class', 'arrow' );\n  // rotate arrow\n  if ( !this.isLeft ) {\n    path.setAttribute( 'transform', 'translate(100, 100) rotate(180) ' );\n  }\n  svg.appendChild( path );\n  return svg;\n};\n\n// get SVG path movmement\nfunction getArrowMovements( shape ) {\n  // use shape as movement if string\n  if ( typeof shape == 'string' ) {\n    return shape;\n  }\n  // create movement string\n  return 'M ' + shape.x0 + ',50' +\n    ' L ' + shape.x1 + ',' + ( shape.y1 + 50 ) +\n    ' L ' + shape.x2 + ',' + ( shape.y2 + 50 ) +\n    ' L ' + shape.x3 + ',50 ' +\n    ' L ' + shape.x2 + ',' + ( 50 - shape.y2 ) +\n    ' L ' + shape.x1 + ',' + ( 50 - shape.y1 ) +\n    ' Z';\n}\n\nPrevNextButton.prototype.handleEvent = utils.handleEvent;\n\nPrevNextButton.prototype.onclick = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.parent.uiChange();\n  var method = this.isPrevious ? 'previous' : 'next';\n  this.parent[ method ]();\n};\n\n// -----  ----- //\n\nPrevNextButton.prototype.enable = function() {\n  if ( this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = false;\n  this.isEnabled = true;\n};\n\nPrevNextButton.prototype.disable = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = true;\n  this.isEnabled = false;\n};\n\nPrevNextButton.prototype.update = function() {\n  // index of first or last slide, if previous or next\n  var slides = this.parent.slides;\n  // enable is wrapAround and at least 2 slides\n  if ( this.parent.options.wrapAround && slides.length > 1 ) {\n    this.enable();\n    return;\n  }\n  var lastIndex = slides.length ? slides.length - 1 : 0;\n  var boundIndex = this.isPrevious ? 0 : lastIndex;\n  var method = this.parent.selectedIndex == boundIndex ? 'disable' : 'enable';\n  this[ method ]();\n};\n\nPrevNextButton.prototype.destroy = function() {\n  this.deactivate();\n  this.allOff();\n};\n\n// -------------------------- Flickity prototype -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  prevNextButtons: true,\n  arrowShape: {\n    x0: 10,\n    x1: 60, y1: 50,\n    x2: 70, y2: 40,\n    x3: 30\n  }\n});\n\nFlickity.createMethods.push('_createPrevNextButtons');\nvar proto = Flickity.prototype;\n\nproto._createPrevNextButtons = function() {\n  if ( !this.options.prevNextButtons ) {\n    return;\n  }\n\n  this.prevButton = new PrevNextButton( -1, this );\n  this.nextButton = new PrevNextButton( 1, this );\n\n  this.on( 'activate', this.activatePrevNextButtons );\n};\n\nproto.activatePrevNextButtons = function() {\n  this.prevButton.activate();\n  this.nextButton.activate();\n  this.on( 'deactivate', this.deactivatePrevNextButtons );\n};\n\nproto.deactivatePrevNextButtons = function() {\n  this.prevButton.deactivate();\n  this.nextButton.deactivate();\n  this.off( 'deactivate', this.deactivatePrevNextButtons );\n};\n\n// --------------------------  -------------------------- //\n\nFlickity.PrevNextButton = PrevNextButton;\n\nreturn Flickity;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/prev-next-button.js\n");

/***/ }),

/***/ "./node_modules/flickity/js/slide.js":
/*!*******************************************!*\
  !*** ./node_modules/flickity/js/slide.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;// slide\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory() {\n'use strict';\n\nfunction Slide( parent ) {\n  this.parent = parent;\n  this.isOriginLeft = parent.originSide == 'left';\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nvar proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length == 1 ) {\n    this.x = cell.x; // x comes from first cell\n    var beginMargin = this.isOriginLeft ? 'marginLeft' : 'marginRight';\n    this.firstMargin = cell.size[ beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  var endMargin = this.isOriginLeft ? 'marginRight' : 'marginLeft';\n  var lastCell = this.getLastCell();\n  var lastMargin = lastCell ? lastCell.size[ endMargin ] : 0;\n  var slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.parent.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.cells.forEach( function( cell ) {\n    cell.select();\n  });\n};\n\nproto.unselect = function() {\n  this.cells.forEach( function( cell ) {\n    cell.unselect();\n  });\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  });\n};\n\nreturn Slide;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxpY2tpdHkvanMvc2xpZGUuanM/NzY1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sSUFBeUM7QUFDaEQ7QUFDQSxJQUFJLG9DQUFRLE9BQU87QUFBQTtBQUFBO0FBQUE7QUFBQSxvR0FBRTtBQUNyQixHQUFHLE1BQU0sRUFPTjs7QUFFSCxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQSxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2ZsaWNraXR5L2pzL3NsaWRlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc2xpZGVcbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EXG4gICAgZGVmaW5lKCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIHdpbmRvdy5GbGlja2l0eSA9IHdpbmRvdy5GbGlja2l0eSB8fCB7fTtcbiAgICB3aW5kb3cuRmxpY2tpdHkuU2xpZGUgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCkge1xuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBTbGlkZSggcGFyZW50ICkge1xuICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgdGhpcy5pc09yaWdpbkxlZnQgPSBwYXJlbnQub3JpZ2luU2lkZSA9PSAnbGVmdCc7XG4gIHRoaXMuY2VsbHMgPSBbXTtcbiAgdGhpcy5vdXRlcldpZHRoID0gMDtcbiAgdGhpcy5oZWlnaHQgPSAwO1xufVxuXG52YXIgcHJvdG8gPSBTbGlkZS5wcm90b3R5cGU7XG5cbnByb3RvLmFkZENlbGwgPSBmdW5jdGlvbiggY2VsbCApIHtcbiAgdGhpcy5jZWxscy5wdXNoKCBjZWxsICk7XG4gIHRoaXMub3V0ZXJXaWR0aCArPSBjZWxsLnNpemUub3V0ZXJXaWR0aDtcbiAgdGhpcy5oZWlnaHQgPSBNYXRoLm1heCggY2VsbC5zaXplLm91dGVySGVpZ2h0LCB0aGlzLmhlaWdodCApO1xuICAvLyBmaXJzdCBjZWxsIHN0dWZmXG4gIGlmICggdGhpcy5jZWxscy5sZW5ndGggPT0gMSApIHtcbiAgICB0aGlzLnggPSBjZWxsLng7IC8vIHggY29tZXMgZnJvbSBmaXJzdCBjZWxsXG4gICAgdmFyIGJlZ2luTWFyZ2luID0gdGhpcy5pc09yaWdpbkxlZnQgPyAnbWFyZ2luTGVmdCcgOiAnbWFyZ2luUmlnaHQnO1xuICAgIHRoaXMuZmlyc3RNYXJnaW4gPSBjZWxsLnNpemVbIGJlZ2luTWFyZ2luIF07XG4gIH1cbn07XG5cbnByb3RvLnVwZGF0ZVRhcmdldCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZW5kTWFyZ2luID0gdGhpcy5pc09yaWdpbkxlZnQgPyAnbWFyZ2luUmlnaHQnIDogJ21hcmdpbkxlZnQnO1xuICB2YXIgbGFzdENlbGwgPSB0aGlzLmdldExhc3RDZWxsKCk7XG4gIHZhciBsYXN0TWFyZ2luID0gbGFzdENlbGwgPyBsYXN0Q2VsbC5zaXplWyBlbmRNYXJnaW4gXSA6IDA7XG4gIHZhciBzbGlkZVdpZHRoID0gdGhpcy5vdXRlcldpZHRoIC0gKCB0aGlzLmZpcnN0TWFyZ2luICsgbGFzdE1hcmdpbiApO1xuICB0aGlzLnRhcmdldCA9IHRoaXMueCArIHRoaXMuZmlyc3RNYXJnaW4gKyBzbGlkZVdpZHRoICogdGhpcy5wYXJlbnQuY2VsbEFsaWduO1xufTtcblxucHJvdG8uZ2V0TGFzdENlbGwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuY2VsbHNbIHRoaXMuY2VsbHMubGVuZ3RoIC0gMSBdO1xufTtcblxucHJvdG8uc2VsZWN0ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuY2VsbHMuZm9yRWFjaCggZnVuY3Rpb24oIGNlbGwgKSB7XG4gICAgY2VsbC5zZWxlY3QoKTtcbiAgfSk7XG59O1xuXG5wcm90by51bnNlbGVjdCA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmNlbGxzLmZvckVhY2goIGZ1bmN0aW9uKCBjZWxsICkge1xuICAgIGNlbGwudW5zZWxlY3QoKTtcbiAgfSk7XG59O1xuXG5wcm90by5nZXRDZWxsRWxlbWVudHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuY2VsbHMubWFwKCBmdW5jdGlvbiggY2VsbCApIHtcbiAgICByZXR1cm4gY2VsbC5lbGVtZW50O1xuICB9KTtcbn07XG5cbnJldHVybiBTbGlkZTtcblxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/flickity/js/slide.js\n");

/***/ }),

/***/ "./node_modules/get-size/get-size.js":
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/get-size/get-size.js\n");

/***/ }),

/***/ "./node_modules/intersection-observer/intersection-observer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/intersection-observer/intersection-observer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/intersection-observer/intersection-observer.js\n");

/***/ }),

/***/ "./node_modules/jquery-revealer/jquery.revealer.js":
/*!*********************************************************!*\
  !*** ./node_modules/jquery-revealer/jquery.revealer.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Revealer 2.0.1\n *\n * Copyright 2015, Pixel Union - http://pixelunion.net\n * Released under the MIT license\n */\n(function($){\n  // check for trend event (make sure jquery.trend is included)\n  if (typeof $.event.special.trend !== \"object\") {\n    console.warn(\"Please make sure jquery.trend is included! Otherwise revealer won't work.\");\n  }\n\n  // Simple requestAnimationFrame polyfill\n  var raf = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function(fn) { window.setTimeout(fn, 1000/60); }\n\n\n  // Public API\n  var methods = {\n    isVisible: function(el) {\n      return !!el.data(\"revealer-visible\");\n    },\n\n    show: function(el, force) {\n      // Check state\n      if (methods.isVisible(el)) {\n        el.removeClass(\"animating animating-in\");\n        el.off(\"revealer-animating revealer-show\");\n        return;\n      }\n\n      // Remove previous event listeners\n      el.data(\"revealer-visible\", true);\n      el.off(\"trend\");\n\n      if (force) {\n        el.addClass(\"visible\");\n        raf(function(){\n          el.trigger(\"revealer-animating\");\n          el.trigger(\"revealer-show\");\n        });\n        return;\n      }\n\n      raf(function(){\n        // Start animation state transition\n        el.addClass(\"animating animating-in\");\n        el.trigger(\"revealer-animating\");\n\n        raf(function(){\n          el.addClass(\"visible\");\n\n          el.one(\"trend\", function(){\n            el.removeClass(\"animating animating-in\");\n            el.trigger(\"revealer-show\");\n          });\n        });\n      });\n    },\n\n    hide: function(el, force) {\n      // Check state\n      if (!methods.isVisible(el)) {\n        el.removeClass(\"animating animating-out visible\");\n        el.off(\"revealer-animating revealer-hide\");\n        return;\n      }\n\n      // Remove previous event listeners\n      el.data(\"revealer-visible\", false);\n      el.off(\"trend\");\n\n      if (force) {\n        el.removeClass(\"visible\");\n        raf(function(){\n          el.trigger(\"revealer-animating\");\n          el.trigger(\"revealer-hide\");\n        });\n        return;\n      }\n\n      raf(function(){\n        el.addClass(\"animating animating-out\");\n        el.trigger(\"revealer-animating\");\n\n        raf(function(){\n          el.removeClass(\"visible\");\n\n          el.one(\"trend\", function(){\n            el.removeClass(\"animating animating-in animating-out\");\n            el.trigger(\"revealer-hide\");\n          });\n        });\n      });\n    },\n\n    toggle: function(el, force) {\n      if (methods.isVisible(el)) {\n        methods.hide(el, force);\n      } else {\n        methods.show(el, force);\n      }\n    }\n  };\n\n  // jQuery plugin\n  $.fn.revealer = function(method, force) {\n    // Get action\n    var action = methods[method || \"toggle\"];\n    if (!action) return this;\n\n    // Run action\n    if (method === \"isVisible\") {\n      return action(this);\n    }\n\n    return this.each(function(){\n      action($(this), force);\n    });\n  };\n})(jQuery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXJldmVhbGVyL2pxdWVyeS5yZXZlYWxlci5qcz9jN2NiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0NBQWdDOzs7QUFHbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVCxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9qcXVlcnktcmV2ZWFsZXIvanF1ZXJ5LnJldmVhbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBSZXZlYWxlciAyLjAuMVxuICpcbiAqIENvcHlyaWdodCAyMDE1LCBQaXhlbCBVbmlvbiAtIGh0dHA6Ly9waXhlbHVuaW9uLm5ldFxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKi9cbihmdW5jdGlvbigkKXtcbiAgLy8gY2hlY2sgZm9yIHRyZW5kIGV2ZW50IChtYWtlIHN1cmUganF1ZXJ5LnRyZW5kIGlzIGluY2x1ZGVkKVxuICBpZiAodHlwZW9mICQuZXZlbnQuc3BlY2lhbC50cmVuZCAhPT0gXCJvYmplY3RcIikge1xuICAgIGNvbnNvbGUud2FybihcIlBsZWFzZSBtYWtlIHN1cmUganF1ZXJ5LnRyZW5kIGlzIGluY2x1ZGVkISBPdGhlcndpc2UgcmV2ZWFsZXIgd29uJ3Qgd29yay5cIik7XG4gIH1cblxuICAvLyBTaW1wbGUgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIHBvbHlmaWxsXG4gIHZhciByYWYgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICBmdW5jdGlvbihmbikgeyB3aW5kb3cuc2V0VGltZW91dChmbiwgMTAwMC82MCk7IH1cblxuXG4gIC8vIFB1YmxpYyBBUElcbiAgdmFyIG1ldGhvZHMgPSB7XG4gICAgaXNWaXNpYmxlOiBmdW5jdGlvbihlbCkge1xuICAgICAgcmV0dXJuICEhZWwuZGF0YShcInJldmVhbGVyLXZpc2libGVcIik7XG4gICAgfSxcblxuICAgIHNob3c6IGZ1bmN0aW9uKGVsLCBmb3JjZSkge1xuICAgICAgLy8gQ2hlY2sgc3RhdGVcbiAgICAgIGlmIChtZXRob2RzLmlzVmlzaWJsZShlbCkpIHtcbiAgICAgICAgZWwucmVtb3ZlQ2xhc3MoXCJhbmltYXRpbmcgYW5pbWF0aW5nLWluXCIpO1xuICAgICAgICBlbC5vZmYoXCJyZXZlYWxlci1hbmltYXRpbmcgcmV2ZWFsZXItc2hvd1wiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBSZW1vdmUgcHJldmlvdXMgZXZlbnQgbGlzdGVuZXJzXG4gICAgICBlbC5kYXRhKFwicmV2ZWFsZXItdmlzaWJsZVwiLCB0cnVlKTtcbiAgICAgIGVsLm9mZihcInRyZW5kXCIpO1xuXG4gICAgICBpZiAoZm9yY2UpIHtcbiAgICAgICAgZWwuYWRkQ2xhc3MoXCJ2aXNpYmxlXCIpO1xuICAgICAgICByYWYoZnVuY3Rpb24oKXtcbiAgICAgICAgICBlbC50cmlnZ2VyKFwicmV2ZWFsZXItYW5pbWF0aW5nXCIpO1xuICAgICAgICAgIGVsLnRyaWdnZXIoXCJyZXZlYWxlci1zaG93XCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByYWYoZnVuY3Rpb24oKXtcbiAgICAgICAgLy8gU3RhcnQgYW5pbWF0aW9uIHN0YXRlIHRyYW5zaXRpb25cbiAgICAgICAgZWwuYWRkQ2xhc3MoXCJhbmltYXRpbmcgYW5pbWF0aW5nLWluXCIpO1xuICAgICAgICBlbC50cmlnZ2VyKFwicmV2ZWFsZXItYW5pbWF0aW5nXCIpO1xuXG4gICAgICAgIHJhZihmdW5jdGlvbigpe1xuICAgICAgICAgIGVsLmFkZENsYXNzKFwidmlzaWJsZVwiKTtcblxuICAgICAgICAgIGVsLm9uZShcInRyZW5kXCIsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBlbC5yZW1vdmVDbGFzcyhcImFuaW1hdGluZyBhbmltYXRpbmctaW5cIik7XG4gICAgICAgICAgICBlbC50cmlnZ2VyKFwicmV2ZWFsZXItc2hvd1wiKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgaGlkZTogZnVuY3Rpb24oZWwsIGZvcmNlKSB7XG4gICAgICAvLyBDaGVjayBzdGF0ZVxuICAgICAgaWYgKCFtZXRob2RzLmlzVmlzaWJsZShlbCkpIHtcbiAgICAgICAgZWwucmVtb3ZlQ2xhc3MoXCJhbmltYXRpbmcgYW5pbWF0aW5nLW91dCB2aXNpYmxlXCIpO1xuICAgICAgICBlbC5vZmYoXCJyZXZlYWxlci1hbmltYXRpbmcgcmV2ZWFsZXItaGlkZVwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBSZW1vdmUgcHJldmlvdXMgZXZlbnQgbGlzdGVuZXJzXG4gICAgICBlbC5kYXRhKFwicmV2ZWFsZXItdmlzaWJsZVwiLCBmYWxzZSk7XG4gICAgICBlbC5vZmYoXCJ0cmVuZFwiKTtcblxuICAgICAgaWYgKGZvcmNlKSB7XG4gICAgICAgIGVsLnJlbW92ZUNsYXNzKFwidmlzaWJsZVwiKTtcbiAgICAgICAgcmFmKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgZWwudHJpZ2dlcihcInJldmVhbGVyLWFuaW1hdGluZ1wiKTtcbiAgICAgICAgICBlbC50cmlnZ2VyKFwicmV2ZWFsZXItaGlkZVwiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmFmKGZ1bmN0aW9uKCl7XG4gICAgICAgIGVsLmFkZENsYXNzKFwiYW5pbWF0aW5nIGFuaW1hdGluZy1vdXRcIik7XG4gICAgICAgIGVsLnRyaWdnZXIoXCJyZXZlYWxlci1hbmltYXRpbmdcIik7XG5cbiAgICAgICAgcmFmKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgZWwucmVtb3ZlQ2xhc3MoXCJ2aXNpYmxlXCIpO1xuXG4gICAgICAgICAgZWwub25lKFwidHJlbmRcIiwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGVsLnJlbW92ZUNsYXNzKFwiYW5pbWF0aW5nIGFuaW1hdGluZy1pbiBhbmltYXRpbmctb3V0XCIpO1xuICAgICAgICAgICAgZWwudHJpZ2dlcihcInJldmVhbGVyLWhpZGVcIik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIHRvZ2dsZTogZnVuY3Rpb24oZWwsIGZvcmNlKSB7XG4gICAgICBpZiAobWV0aG9kcy5pc1Zpc2libGUoZWwpKSB7XG4gICAgICAgIG1ldGhvZHMuaGlkZShlbCwgZm9yY2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWV0aG9kcy5zaG93KGVsLCBmb3JjZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8vIGpRdWVyeSBwbHVnaW5cbiAgJC5mbi5yZXZlYWxlciA9IGZ1bmN0aW9uKG1ldGhvZCwgZm9yY2UpIHtcbiAgICAvLyBHZXQgYWN0aW9uXG4gICAgdmFyIGFjdGlvbiA9IG1ldGhvZHNbbWV0aG9kIHx8IFwidG9nZ2xlXCJdO1xuICAgIGlmICghYWN0aW9uKSByZXR1cm4gdGhpcztcblxuICAgIC8vIFJ1biBhY3Rpb25cbiAgICBpZiAobWV0aG9kID09PSBcImlzVmlzaWJsZVwiKSB7XG4gICAgICByZXR1cm4gYWN0aW9uKHRoaXMpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgIGFjdGlvbigkKHRoaXMpLCBmb3JjZSk7XG4gICAgfSk7XG4gIH07XG59KShqUXVlcnkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/jquery-revealer/jquery.revealer.js\n");

/***/ }),

/***/ "./node_modules/jquery-trend/jquery.trend.js":
/*!***************************************************!*\
  !*** ./node_modules/jquery-trend/jquery.trend.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Trend 0.2.0\n *\n * Fail-safe TransitionEnd event for jQuery.\n *\n * Adds a new \"trend\" event that can be used in browsers that don't\n * support \"transitionend\".\n *\n * NOTE: Only supports being bound with \"jQuery.one\".\n *\n * Copyright 2014, Pixel Union - http://pixelunion.net\n * Released under the MIT license\n */\n;(function($){\n\n  // Prefixed transitionend event names\n  var transitionEndEvents =\n    \"webkitTransitionEnd \" +\n    \"otransitionend \" +\n    \"oTransitionEnd \" +\n    \"msTransitionEnd \" +\n    \"transitionend\";\n\n  // Prefixed transition duration property names\n  var transitionDurationProperties = [\n    \"transition-duration\",\n    \"-moz-transition-duration\",\n    \"-webkit-transition-duration\",\n    \"-ms-transition-duration\",\n    \"-o-transition-duration\",\n    \"-khtml-transition-duration\"\n  ];\n\n  // Prefixed transition delay property names\n  var transitionDelayProperties = [\n    \"transition-delay\",\n    \"-moz-transition-delay\",\n    \"-webkit-transition-delay\",\n    \"-ms-transition-delay\",\n    \"-o-transition-delay\",\n    \"-khtml-transition-delay\"\n  ];\n\n  // Parses a CSS time value into milliseconds.\n  var parseTime = function(s) {\n    s = s.replace(/\\s/, \"\");\n    var v = window.parseFloat(s);\n\n    return s.match(/[^m]s$/i)\n      ? v * 1000\n      : v;\n  };\n\n  // Parses the longest time unit found in a series of CSS properties.\n  // Returns a value in milliseconds.\n  var parseProperties = function(el, properties) {\n    var duration = 0;\n\n    for (var i = 0; i < properties.length; i++) {\n      // Get raw CSS value\n      var value = el.css(properties[i]);\n      if (!value) continue;\n\n      // Multiple transitions--pick the longest\n      if (value.indexOf(\",\") !== -1) {\n        var values = value.split(\",\");\n        var durations = (function(){\n          var results = [];\n          for (var i = 0; i < values.length; i++) {\n            var duration = parseTime(values[i]);\n            results.push(duration);\n          }\n          return results;\n        })();\n\n        duration = Math.max.apply(Math, durations);\n      }\n\n      // Single transition\n      else {\n        duration = parseTime(value);\n      }\n\n      // Accept first vaue\n      break;\n    }\n\n    return duration;\n  };\n\n  $.event.special.trend = {\n    // Triggers an event handler when an element is done transitioning.\n    //\n    // Handles browsers that don't support transitionend by adding a\n    // timeout with the transition duration.\n    add: function(handleObj) {\n      var el = $(this);\n      var fired = false;\n\n      // Mark element as being in transition\n      el.data(\"trend\", true);\n\n      // Calculate a fallback duration. + 20 because some browsers fire\n      // timeouts faster than transitionend.\n      var time =\n        parseProperties(el, transitionDurationProperties) +\n        parseProperties(el, transitionDelayProperties) +\n        20;\n\n      var cb = function(e) {\n        // transitionend events can be sent for each property. Let's just\n        // skip all but the first. Also handles the timeout callback.\n        if (fired) return;\n\n        // Child elements that also have transitions can be fired before we\n        // complete. This will catch and ignore those. Unfortunately, we'll\n        // have to rely on the timeout in these cases.\n        if (e && e.srcElement !== el[0]) return;\n\n        // Mark element has not being in transition\n        el.data(\"trend\", false);\n\n        // Callback\n        fired = true;\n        if (handleObj.handler) handleObj.handler();\n      };\n\n      el.one(transitionEndEvents, cb);\n      el.data(\"trend-timeout\", window.setTimeout(cb, time));\n    },\n\n    remove: function(handleObj) {\n      var el = $(this);\n      el.off(transitionEndEvents);\n      window.clearTimeout(el.data(\"trend-timeout\"));\n    }\n  };\n\n})(jQuery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXRyZW5kL2pxdWVyeS50cmVuZC5qcz9jMDQwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQix1QkFBdUI7QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsbUJBQW1CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9qcXVlcnktdHJlbmQvanF1ZXJ5LnRyZW5kLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBUcmVuZCAwLjIuMFxuICpcbiAqIEZhaWwtc2FmZSBUcmFuc2l0aW9uRW5kIGV2ZW50IGZvciBqUXVlcnkuXG4gKlxuICogQWRkcyBhIG5ldyBcInRyZW5kXCIgZXZlbnQgdGhhdCBjYW4gYmUgdXNlZCBpbiBicm93c2VycyB0aGF0IGRvbid0XG4gKiBzdXBwb3J0IFwidHJhbnNpdGlvbmVuZFwiLlxuICpcbiAqIE5PVEU6IE9ubHkgc3VwcG9ydHMgYmVpbmcgYm91bmQgd2l0aCBcImpRdWVyeS5vbmVcIi5cbiAqXG4gKiBDb3B5cmlnaHQgMjAxNCwgUGl4ZWwgVW5pb24gLSBodHRwOi8vcGl4ZWx1bmlvbi5uZXRcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICovXG47KGZ1bmN0aW9uKCQpe1xuXG4gIC8vIFByZWZpeGVkIHRyYW5zaXRpb25lbmQgZXZlbnQgbmFtZXNcbiAgdmFyIHRyYW5zaXRpb25FbmRFdmVudHMgPVxuICAgIFwid2Via2l0VHJhbnNpdGlvbkVuZCBcIiArXG4gICAgXCJvdHJhbnNpdGlvbmVuZCBcIiArXG4gICAgXCJvVHJhbnNpdGlvbkVuZCBcIiArXG4gICAgXCJtc1RyYW5zaXRpb25FbmQgXCIgK1xuICAgIFwidHJhbnNpdGlvbmVuZFwiO1xuXG4gIC8vIFByZWZpeGVkIHRyYW5zaXRpb24gZHVyYXRpb24gcHJvcGVydHkgbmFtZXNcbiAgdmFyIHRyYW5zaXRpb25EdXJhdGlvblByb3BlcnRpZXMgPSBbXG4gICAgXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIsXG4gICAgXCItbW96LXRyYW5zaXRpb24tZHVyYXRpb25cIixcbiAgICBcIi13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvblwiLFxuICAgIFwiLW1zLXRyYW5zaXRpb24tZHVyYXRpb25cIixcbiAgICBcIi1vLXRyYW5zaXRpb24tZHVyYXRpb25cIixcbiAgICBcIi1raHRtbC10cmFuc2l0aW9uLWR1cmF0aW9uXCJcbiAgXTtcblxuICAvLyBQcmVmaXhlZCB0cmFuc2l0aW9uIGRlbGF5IHByb3BlcnR5IG5hbWVzXG4gIHZhciB0cmFuc2l0aW9uRGVsYXlQcm9wZXJ0aWVzID0gW1xuICAgIFwidHJhbnNpdGlvbi1kZWxheVwiLFxuICAgIFwiLW1vei10cmFuc2l0aW9uLWRlbGF5XCIsXG4gICAgXCItd2Via2l0LXRyYW5zaXRpb24tZGVsYXlcIixcbiAgICBcIi1tcy10cmFuc2l0aW9uLWRlbGF5XCIsXG4gICAgXCItby10cmFuc2l0aW9uLWRlbGF5XCIsXG4gICAgXCIta2h0bWwtdHJhbnNpdGlvbi1kZWxheVwiXG4gIF07XG5cbiAgLy8gUGFyc2VzIGEgQ1NTIHRpbWUgdmFsdWUgaW50byBtaWxsaXNlY29uZHMuXG4gIHZhciBwYXJzZVRpbWUgPSBmdW5jdGlvbihzKSB7XG4gICAgcyA9IHMucmVwbGFjZSgvXFxzLywgXCJcIik7XG4gICAgdmFyIHYgPSB3aW5kb3cucGFyc2VGbG9hdChzKTtcblxuICAgIHJldHVybiBzLm1hdGNoKC9bXm1dcyQvaSlcbiAgICAgID8gdiAqIDEwMDBcbiAgICAgIDogdjtcbiAgfTtcblxuICAvLyBQYXJzZXMgdGhlIGxvbmdlc3QgdGltZSB1bml0IGZvdW5kIGluIGEgc2VyaWVzIG9mIENTUyBwcm9wZXJ0aWVzLlxuICAvLyBSZXR1cm5zIGEgdmFsdWUgaW4gbWlsbGlzZWNvbmRzLlxuICB2YXIgcGFyc2VQcm9wZXJ0aWVzID0gZnVuY3Rpb24oZWwsIHByb3BlcnRpZXMpIHtcbiAgICB2YXIgZHVyYXRpb24gPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBHZXQgcmF3IENTUyB2YWx1ZVxuICAgICAgdmFyIHZhbHVlID0gZWwuY3NzKHByb3BlcnRpZXNbaV0pO1xuICAgICAgaWYgKCF2YWx1ZSkgY29udGludWU7XG5cbiAgICAgIC8vIE11bHRpcGxlIHRyYW5zaXRpb25zLS1waWNrIHRoZSBsb25nZXN0XG4gICAgICBpZiAodmFsdWUuaW5kZXhPZihcIixcIikgIT09IC0xKSB7XG4gICAgICAgIHZhciB2YWx1ZXMgPSB2YWx1ZS5zcGxpdChcIixcIik7XG4gICAgICAgIHZhciBkdXJhdGlvbnMgPSAoZnVuY3Rpb24oKXtcbiAgICAgICAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgZHVyYXRpb24gPSBwYXJzZVRpbWUodmFsdWVzW2ldKTtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaChkdXJhdGlvbik7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICB9KSgpO1xuXG4gICAgICAgIGR1cmF0aW9uID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgZHVyYXRpb25zKTtcbiAgICAgIH1cblxuICAgICAgLy8gU2luZ2xlIHRyYW5zaXRpb25cbiAgICAgIGVsc2Uge1xuICAgICAgICBkdXJhdGlvbiA9IHBhcnNlVGltZSh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIEFjY2VwdCBmaXJzdCB2YXVlXG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gZHVyYXRpb247XG4gIH07XG5cbiAgJC5ldmVudC5zcGVjaWFsLnRyZW5kID0ge1xuICAgIC8vIFRyaWdnZXJzIGFuIGV2ZW50IGhhbmRsZXIgd2hlbiBhbiBlbGVtZW50IGlzIGRvbmUgdHJhbnNpdGlvbmluZy5cbiAgICAvL1xuICAgIC8vIEhhbmRsZXMgYnJvd3NlcnMgdGhhdCBkb24ndCBzdXBwb3J0IHRyYW5zaXRpb25lbmQgYnkgYWRkaW5nIGFcbiAgICAvLyB0aW1lb3V0IHdpdGggdGhlIHRyYW5zaXRpb24gZHVyYXRpb24uXG4gICAgYWRkOiBmdW5jdGlvbihoYW5kbGVPYmopIHtcbiAgICAgIHZhciBlbCA9ICQodGhpcyk7XG4gICAgICB2YXIgZmlyZWQgPSBmYWxzZTtcblxuICAgICAgLy8gTWFyayBlbGVtZW50IGFzIGJlaW5nIGluIHRyYW5zaXRpb25cbiAgICAgIGVsLmRhdGEoXCJ0cmVuZFwiLCB0cnVlKTtcblxuICAgICAgLy8gQ2FsY3VsYXRlIGEgZmFsbGJhY2sgZHVyYXRpb24uICsgMjAgYmVjYXVzZSBzb21lIGJyb3dzZXJzIGZpcmVcbiAgICAgIC8vIHRpbWVvdXRzIGZhc3RlciB0aGFuIHRyYW5zaXRpb25lbmQuXG4gICAgICB2YXIgdGltZSA9XG4gICAgICAgIHBhcnNlUHJvcGVydGllcyhlbCwgdHJhbnNpdGlvbkR1cmF0aW9uUHJvcGVydGllcykgK1xuICAgICAgICBwYXJzZVByb3BlcnRpZXMoZWwsIHRyYW5zaXRpb25EZWxheVByb3BlcnRpZXMpICtcbiAgICAgICAgMjA7XG5cbiAgICAgIHZhciBjYiA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgLy8gdHJhbnNpdGlvbmVuZCBldmVudHMgY2FuIGJlIHNlbnQgZm9yIGVhY2ggcHJvcGVydHkuIExldCdzIGp1c3RcbiAgICAgICAgLy8gc2tpcCBhbGwgYnV0IHRoZSBmaXJzdC4gQWxzbyBoYW5kbGVzIHRoZSB0aW1lb3V0IGNhbGxiYWNrLlxuICAgICAgICBpZiAoZmlyZWQpIHJldHVybjtcblxuICAgICAgICAvLyBDaGlsZCBlbGVtZW50cyB0aGF0IGFsc28gaGF2ZSB0cmFuc2l0aW9ucyBjYW4gYmUgZmlyZWQgYmVmb3JlIHdlXG4gICAgICAgIC8vIGNvbXBsZXRlLiBUaGlzIHdpbGwgY2F0Y2ggYW5kIGlnbm9yZSB0aG9zZS4gVW5mb3J0dW5hdGVseSwgd2UnbGxcbiAgICAgICAgLy8gaGF2ZSB0byByZWx5IG9uIHRoZSB0aW1lb3V0IGluIHRoZXNlIGNhc2VzLlxuICAgICAgICBpZiAoZSAmJiBlLnNyY0VsZW1lbnQgIT09IGVsWzBdKSByZXR1cm47XG5cbiAgICAgICAgLy8gTWFyayBlbGVtZW50IGhhcyBub3QgYmVpbmcgaW4gdHJhbnNpdGlvblxuICAgICAgICBlbC5kYXRhKFwidHJlbmRcIiwgZmFsc2UpO1xuXG4gICAgICAgIC8vIENhbGxiYWNrXG4gICAgICAgIGZpcmVkID0gdHJ1ZTtcbiAgICAgICAgaWYgKGhhbmRsZU9iai5oYW5kbGVyKSBoYW5kbGVPYmouaGFuZGxlcigpO1xuICAgICAgfTtcblxuICAgICAgZWwub25lKHRyYW5zaXRpb25FbmRFdmVudHMsIGNiKTtcbiAgICAgIGVsLmRhdGEoXCJ0cmVuZC10aW1lb3V0XCIsIHdpbmRvdy5zZXRUaW1lb3V0KGNiLCB0aW1lKSk7XG4gICAgfSxcblxuICAgIHJlbW92ZTogZnVuY3Rpb24oaGFuZGxlT2JqKSB7XG4gICAgICB2YXIgZWwgPSAkKHRoaXMpO1xuICAgICAgZWwub2ZmKHRyYW5zaXRpb25FbmRFdmVudHMpO1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dChlbC5kYXRhKFwidHJlbmQtdGltZW91dFwiKSk7XG4gICAgfVxuICB9O1xuXG59KShqUXVlcnkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/jquery-trend/jquery.trend.js\n");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.4.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-05-01T21:04Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.4.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code, options ) {\n\t\tDOMEval( code, { nonce: options && options.nonce } );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.4\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2019-04-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t(nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\") ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 && rdescend.test( selector ) ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = (elem.ownerDocument || elem).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( typeof elem.contentDocument !== \"undefined\" ) {\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t// Support: IE 9-11 only\n\t// Also use offsetWidth/offsetHeight for when box sizing is unreliable\n\t// We use getClientRects() to check for hidden/disconnected.\n\t// In those cases, the computed value can be trusted to be border-box\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\t\tval === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url, options ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jquery/dist/jquery.js\n");

/***/ }),

/***/ "./node_modules/just-debounce/index.js":
/*!*********************************************!*\
  !*** ./node_modules/just-debounce/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = debounce\n\nfunction debounce (fn, delay, at_start, guarantee) {\n  var timeout\n  var args\n  var self\n\n  return function debounced () {\n    self = this\n    args = Array.prototype.slice.call(arguments)\n\n    if (timeout && (at_start || guarantee)) {\n      return\n    } else if (!at_start) {\n      clear()\n\n      timeout = setTimeout(run, delay)\n      return timeout\n    }\n\n    timeout = setTimeout(clear, delay)\n    fn.apply(self, args)\n\n    function run () {\n      clear()\n      fn.apply(self, args)\n    }\n\n    function clear () {\n      clearTimeout(timeout)\n      timeout = null\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanVzdC1kZWJvdW5jZS9pbmRleC5qcz80NzIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9qdXN0LWRlYm91bmNlL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBkZWJvdW5jZVxuXG5mdW5jdGlvbiBkZWJvdW5jZSAoZm4sIGRlbGF5LCBhdF9zdGFydCwgZ3VhcmFudGVlKSB7XG4gIHZhciB0aW1lb3V0XG4gIHZhciBhcmdzXG4gIHZhciBzZWxmXG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGRlYm91bmNlZCAoKSB7XG4gICAgc2VsZiA9IHRoaXNcbiAgICBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKVxuXG4gICAgaWYgKHRpbWVvdXQgJiYgKGF0X3N0YXJ0IHx8IGd1YXJhbnRlZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH0gZWxzZSBpZiAoIWF0X3N0YXJ0KSB7XG4gICAgICBjbGVhcigpXG5cbiAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KHJ1biwgZGVsYXkpXG4gICAgICByZXR1cm4gdGltZW91dFxuICAgIH1cblxuICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGNsZWFyLCBkZWxheSlcbiAgICBmbi5hcHBseShzZWxmLCBhcmdzKVxuXG4gICAgZnVuY3Rpb24gcnVuICgpIHtcbiAgICAgIGNsZWFyKClcbiAgICAgIGZuLmFwcGx5KHNlbGYsIGFyZ3MpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xlYXIgKCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpXG4gICAgICB0aW1lb3V0ID0gbnVsbFxuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/just-debounce/index.js\n");

/***/ }),

/***/ "./node_modules/photoswipe/dist/photoswipe-ui-default.js":
/*!***************************************************************!*\
  !*** ./node_modules/photoswipe/dist/photoswipe-ui-default.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! PhotoSwipe Default UI - 4.1.3 - 2019-01-08\n* http://photoswipe.com\n* Copyright (c) 2019 Dmitry Semenov; */\n/**\n*\n* UI on top of main sliding area (caption, arrows, close button, etc.).\n* Built just using public methods/properties of PhotoSwipe.\n* \n*/\n(function (root, factory) { \n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n})(this, function () {\n\n\t'use strict';\n\n\n\nvar PhotoSwipeUI_Default =\n function(pswp, framework) {\n\n\tvar ui = this;\n\tvar _overlayUIUpdated = false,\n\t\t_controlsVisible = true,\n\t\t_fullscrenAPI,\n\t\t_controls,\n\t\t_captionContainer,\n\t\t_fakeCaptionContainer,\n\t\t_indexIndicator,\n\t\t_shareButton,\n\t\t_shareModal,\n\t\t_shareModalHidden = true,\n\t\t_initalCloseOnScrollValue,\n\t\t_isIdle,\n\t\t_listen,\n\n\t\t_loadingIndicator,\n\t\t_loadingIndicatorHidden,\n\t\t_loadingIndicatorTimeout,\n\n\t\t_galleryHasOneSlide,\n\n\t\t_options,\n\t\t_defaultUIOptions = {\n\t\t\tbarsSize: {top:44, bottom:'auto'},\n\t\t\tcloseElClasses: ['item', 'caption', 'zoom-wrap', 'ui', 'top-bar'], \n\t\t\ttimeToIdle: 4000, \n\t\t\ttimeToIdleOutside: 1000,\n\t\t\tloadingIndicatorDelay: 1000, // 2s\n\t\t\t\n\t\t\taddCaptionHTMLFn: function(item, captionEl /*, isFake */) {\n\t\t\t\tif(!item.title) {\n\t\t\t\t\tcaptionEl.children[0].innerHTML = '';\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcaptionEl.children[0].innerHTML = item.title;\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tcloseEl:true,\n\t\t\tcaptionEl: true,\n\t\t\tfullscreenEl: true,\n\t\t\tzoomEl: true,\n\t\t\tshareEl: true,\n\t\t\tcounterEl: true,\n\t\t\tarrowEl: true,\n\t\t\tpreloaderEl: true,\n\n\t\t\ttapToClose: false,\n\t\t\ttapToToggleControls: true,\n\n\t\t\tclickToCloseNonZoomable: true,\n\n\t\t\tshareButtons: [\n\t\t\t\t{id:'facebook', label:'Share on Facebook', url:'https://www.facebook.com/sharer/sharer.php?u={{url}}'},\n\t\t\t\t{id:'twitter', label:'Tweet', url:'https://twitter.com/intent/tweet?text={{text}}&url={{url}}'},\n\t\t\t\t{id:'pinterest', label:'Pin it', url:'http://www.pinterest.com/pin/create/button/'+\n\t\t\t\t\t\t\t\t\t\t\t\t\t'?url={{url}}&media={{image_url}}&description={{text}}'},\n\t\t\t\t{id:'download', label:'Download image', url:'{{raw_image_url}}', download:true}\n\t\t\t],\n\t\t\tgetImageURLForShare: function( /* shareButtonData */ ) {\n\t\t\t\treturn pswp.currItem.src || '';\n\t\t\t},\n\t\t\tgetPageURLForShare: function( /* shareButtonData */ ) {\n\t\t\t\treturn window.location.href;\n\t\t\t},\n\t\t\tgetTextForShare: function( /* shareButtonData */ ) {\n\t\t\t\treturn pswp.currItem.title || '';\n\t\t\t},\n\t\t\t\t\n\t\t\tindexIndicatorSep: ' / ',\n\t\t\tfitControlsWidth: 1200\n\n\t\t},\n\t\t_blockControlsTap,\n\t\t_blockControlsTapTimeout;\n\n\n\n\tvar _onControlsTap = function(e) {\n\t\t\tif(_blockControlsTap) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\n\t\t\te = e || window.event;\n\n\t\t\tif(_options.timeToIdle && _options.mouseUsed && !_isIdle) {\n\t\t\t\t// reset idle timer\n\t\t\t\t_onIdleMouseMove();\n\t\t\t}\n\n\n\t\t\tvar target = e.target || e.srcElement,\n\t\t\t\tuiElement,\n\t\t\t\tclickedClass = target.getAttribute('class') || '',\n\t\t\t\tfound;\n\n\t\t\tfor(var i = 0; i < _uiElements.length; i++) {\n\t\t\t\tuiElement = _uiElements[i];\n\t\t\t\tif(uiElement.onTap && clickedClass.indexOf('pswp__' + uiElement.name ) > -1 ) {\n\t\t\t\t\tuiElement.onTap();\n\t\t\t\t\tfound = true;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(found) {\n\t\t\t\tif(e.stopPropagation) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t\t_blockControlsTap = true;\n\n\t\t\t\t// Some versions of Android don't prevent ghost click event \n\t\t\t\t// when preventDefault() was called on touchstart and/or touchend.\n\t\t\t\t// \n\t\t\t\t// This happens on v4.3, 4.2, 4.1, \n\t\t\t\t// older versions strangely work correctly, \n\t\t\t\t// but just in case we add delay on all of them)\t\n\t\t\t\tvar tapDelay = framework.features.isOldAndroid ? 600 : 30;\n\t\t\t\t_blockControlsTapTimeout = setTimeout(function() {\n\t\t\t\t\t_blockControlsTap = false;\n\t\t\t\t}, tapDelay);\n\t\t\t}\n\n\t\t},\n\t\t_fitControlsInViewport = function() {\n\t\t\treturn !pswp.likelyTouchDevice || _options.mouseUsed || screen.width > _options.fitControlsWidth;\n\t\t},\n\t\t_togglePswpClass = function(el, cName, add) {\n\t\t\tframework[ (add ? 'add' : 'remove') + 'Class' ](el, 'pswp__' + cName);\n\t\t},\n\n\t\t// add class when there is just one item in the gallery\n\t\t// (by default it hides left/right arrows and 1ofX counter)\n\t\t_countNumItems = function() {\n\t\t\tvar hasOneSlide = (_options.getNumItemsFn() === 1);\n\n\t\t\tif(hasOneSlide !== _galleryHasOneSlide) {\n\t\t\t\t_togglePswpClass(_controls, 'ui--one-slide', hasOneSlide);\n\t\t\t\t_galleryHasOneSlide = hasOneSlide;\n\t\t\t}\n\t\t},\n\t\t_toggleShareModalClass = function() {\n\t\t\t_togglePswpClass(_shareModal, 'share-modal--hidden', _shareModalHidden);\n\t\t},\n\t\t_toggleShareModal = function() {\n\n\t\t\t_shareModalHidden = !_shareModalHidden;\n\t\t\t\n\t\t\t\n\t\t\tif(!_shareModalHidden) {\n\t\t\t\t_toggleShareModalClass();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif(!_shareModalHidden) {\n\t\t\t\t\t\tframework.addClass(_shareModal, 'pswp__share-modal--fade-in');\n\t\t\t\t\t}\n\t\t\t\t}, 30);\n\t\t\t} else {\n\t\t\t\tframework.removeClass(_shareModal, 'pswp__share-modal--fade-in');\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif(_shareModalHidden) {\n\t\t\t\t\t\t_toggleShareModalClass();\n\t\t\t\t\t}\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t\t\n\t\t\tif(!_shareModalHidden) {\n\t\t\t\t_updateShareURLs();\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\t_openWindowPopup = function(e) {\n\t\t\te = e || window.event;\n\t\t\tvar target = e.target || e.srcElement;\n\n\t\t\tpswp.shout('shareLinkClick', e, target);\n\n\t\t\tif(!target.href) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif( target.hasAttribute('download') ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\twindow.open(target.href, 'pswp_share', 'scrollbars=yes,resizable=yes,toolbar=no,'+\n\t\t\t\t\t\t\t\t\t\t'location=yes,width=550,height=420,top=100,left=' + \n\t\t\t\t\t\t\t\t\t\t(window.screen ? Math.round(screen.width / 2 - 275) : 100)  );\n\n\t\t\tif(!_shareModalHidden) {\n\t\t\t\t_toggleShareModal();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t},\n\t\t_updateShareURLs = function() {\n\t\t\tvar shareButtonOut = '',\n\t\t\t\tshareButtonData,\n\t\t\t\tshareURL,\n\t\t\t\timage_url,\n\t\t\t\tpage_url,\n\t\t\t\tshare_text;\n\n\t\t\tfor(var i = 0; i < _options.shareButtons.length; i++) {\n\t\t\t\tshareButtonData = _options.shareButtons[i];\n\n\t\t\t\timage_url = _options.getImageURLForShare(shareButtonData);\n\t\t\t\tpage_url = _options.getPageURLForShare(shareButtonData);\n\t\t\t\tshare_text = _options.getTextForShare(shareButtonData);\n\n\t\t\t\tshareURL = shareButtonData.url.replace('{{url}}', encodeURIComponent(page_url) )\n\t\t\t\t\t\t\t\t\t.replace('{{image_url}}', encodeURIComponent(image_url) )\n\t\t\t\t\t\t\t\t\t.replace('{{raw_image_url}}', image_url )\n\t\t\t\t\t\t\t\t\t.replace('{{text}}', encodeURIComponent(share_text) );\n\n\t\t\t\tshareButtonOut += '<a href=\"' + shareURL + '\" target=\"_blank\" '+\n\t\t\t\t\t\t\t\t\t'class=\"pswp__share--' + shareButtonData.id + '\"' +\n\t\t\t\t\t\t\t\t\t(shareButtonData.download ? 'download' : '') + '>' + \n\t\t\t\t\t\t\t\t\tshareButtonData.label + '</a>';\n\n\t\t\t\tif(_options.parseShareButtonOut) {\n\t\t\t\t\tshareButtonOut = _options.parseShareButtonOut(shareButtonData, shareButtonOut);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_shareModal.children[0].innerHTML = shareButtonOut;\n\t\t\t_shareModal.children[0].onclick = _openWindowPopup;\n\n\t\t},\n\t\t_hasCloseClass = function(target) {\n\t\t\tfor(var  i = 0; i < _options.closeElClasses.length; i++) {\n\t\t\t\tif( framework.hasClass(target, 'pswp__' + _options.closeElClasses[i]) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_idleInterval,\n\t\t_idleTimer,\n\t\t_idleIncrement = 0,\n\t\t_onIdleMouseMove = function() {\n\t\t\tclearTimeout(_idleTimer);\n\t\t\t_idleIncrement = 0;\n\t\t\tif(_isIdle) {\n\t\t\t\tui.setIdle(false);\n\t\t\t}\n\t\t},\n\t\t_onMouseLeaveWindow = function(e) {\n\t\t\te = e ? e : window.event;\n\t\t\tvar from = e.relatedTarget || e.toElement;\n\t\t\tif (!from || from.nodeName === 'HTML') {\n\t\t\t\tclearTimeout(_idleTimer);\n\t\t\t\t_idleTimer = setTimeout(function() {\n\t\t\t\t\tui.setIdle(true);\n\t\t\t\t}, _options.timeToIdleOutside);\n\t\t\t}\n\t\t},\n\t\t_setupFullscreenAPI = function() {\n\t\t\tif(_options.fullscreenEl && !framework.features.isOldAndroid) {\n\t\t\t\tif(!_fullscrenAPI) {\n\t\t\t\t\t_fullscrenAPI = ui.getFullscreenAPI();\n\t\t\t\t}\n\t\t\t\tif(_fullscrenAPI) {\n\t\t\t\t\tframework.bind(document, _fullscrenAPI.eventK, ui.updateFullscreen);\n\t\t\t\t\tui.updateFullscreen();\n\t\t\t\t\tframework.addClass(pswp.template, 'pswp--supports-fs');\n\t\t\t\t} else {\n\t\t\t\t\tframework.removeClass(pswp.template, 'pswp--supports-fs');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_setupLoadingIndicator = function() {\n\t\t\t// Setup loading indicator\n\t\t\tif(_options.preloaderEl) {\n\t\t\t\n\t\t\t\t_toggleLoadingIndicator(true);\n\n\t\t\t\t_listen('beforeChange', function() {\n\n\t\t\t\t\tclearTimeout(_loadingIndicatorTimeout);\n\n\t\t\t\t\t// display loading indicator with delay\n\t\t\t\t\t_loadingIndicatorTimeout = setTimeout(function() {\n\n\t\t\t\t\t\tif(pswp.currItem && pswp.currItem.loading) {\n\n\t\t\t\t\t\t\tif( !pswp.allowProgressiveImg() || (pswp.currItem.img && !pswp.currItem.img.naturalWidth)  ) {\n\t\t\t\t\t\t\t\t// show preloader if progressive loading is not enabled, \n\t\t\t\t\t\t\t\t// or image width is not defined yet (because of slow connection)\n\t\t\t\t\t\t\t\t_toggleLoadingIndicator(false); \n\t\t\t\t\t\t\t\t// items-controller.js function allowProgressiveImg\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_toggleLoadingIndicator(true); // hide preloader\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, _options.loadingIndicatorDelay);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t_listen('imageLoadComplete', function(index, item) {\n\t\t\t\t\tif(pswp.currItem === item) {\n\t\t\t\t\t\t_toggleLoadingIndicator(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t},\n\t\t_toggleLoadingIndicator = function(hide) {\n\t\t\tif( _loadingIndicatorHidden !== hide ) {\n\t\t\t\t_togglePswpClass(_loadingIndicator, 'preloader--active', !hide);\n\t\t\t\t_loadingIndicatorHidden = hide;\n\t\t\t}\n\t\t},\n\t\t_applyNavBarGaps = function(item) {\n\t\t\tvar gap = item.vGap;\n\n\t\t\tif( _fitControlsInViewport() ) {\n\t\t\t\t\n\t\t\t\tvar bars = _options.barsSize; \n\t\t\t\tif(_options.captionEl && bars.bottom === 'auto') {\n\t\t\t\t\tif(!_fakeCaptionContainer) {\n\t\t\t\t\t\t_fakeCaptionContainer = framework.createEl('pswp__caption pswp__caption--fake');\n\t\t\t\t\t\t_fakeCaptionContainer.appendChild( framework.createEl('pswp__caption__center') );\n\t\t\t\t\t\t_controls.insertBefore(_fakeCaptionContainer, _captionContainer);\n\t\t\t\t\t\tframework.addClass(_controls, 'pswp__ui--fit');\n\t\t\t\t\t}\n\t\t\t\t\tif( _options.addCaptionHTMLFn(item, _fakeCaptionContainer, true) ) {\n\n\t\t\t\t\t\tvar captionSize = _fakeCaptionContainer.clientHeight;\n\t\t\t\t\t\tgap.bottom = parseInt(captionSize,10) || 44;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgap.bottom = bars.top; // if no caption, set size of bottom gap to size of top\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tgap.bottom = bars.bottom === 'auto' ? 0 : bars.bottom;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// height of top bar is static, no need to calculate it\n\t\t\t\tgap.top = bars.top;\n\t\t\t} else {\n\t\t\t\tgap.top = gap.bottom = 0;\n\t\t\t}\n\t\t},\n\t\t_setupIdle = function() {\n\t\t\t// Hide controls when mouse is used\n\t\t\tif(_options.timeToIdle) {\n\t\t\t\t_listen('mouseUsed', function() {\n\t\t\t\t\t\n\t\t\t\t\tframework.bind(document, 'mousemove', _onIdleMouseMove);\n\t\t\t\t\tframework.bind(document, 'mouseout', _onMouseLeaveWindow);\n\n\t\t\t\t\t_idleInterval = setInterval(function() {\n\t\t\t\t\t\t_idleIncrement++;\n\t\t\t\t\t\tif(_idleIncrement === 2) {\n\t\t\t\t\t\t\tui.setIdle(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, _options.timeToIdle / 2);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t_setupHidingControlsDuringGestures = function() {\n\n\t\t\t// Hide controls on vertical drag\n\t\t\t_listen('onVerticalDrag', function(now) {\n\t\t\t\tif(_controlsVisible && now < 0.95) {\n\t\t\t\t\tui.hideControls();\n\t\t\t\t} else if(!_controlsVisible && now >= 0.95) {\n\t\t\t\t\tui.showControls();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Hide controls when pinching to close\n\t\t\tvar pinchControlsHidden;\n\t\t\t_listen('onPinchClose' , function(now) {\n\t\t\t\tif(_controlsVisible && now < 0.9) {\n\t\t\t\t\tui.hideControls();\n\t\t\t\t\tpinchControlsHidden = true;\n\t\t\t\t} else if(pinchControlsHidden && !_controlsVisible && now > 0.9) {\n\t\t\t\t\tui.showControls();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_listen('zoomGestureEnded', function() {\n\t\t\t\tpinchControlsHidden = false;\n\t\t\t\tif(pinchControlsHidden && !_controlsVisible) {\n\t\t\t\t\tui.showControls();\n\t\t\t\t}\n\t\t\t});\n\n\t\t};\n\n\n\n\tvar _uiElements = [\n\t\t{ \n\t\t\tname: 'caption', \n\t\t\toption: 'captionEl',\n\t\t\tonInit: function(el) {  \n\t\t\t\t_captionContainer = el; \n\t\t\t} \n\t\t},\n\t\t{ \n\t\t\tname: 'share-modal', \n\t\t\toption: 'shareEl',\n\t\t\tonInit: function(el) {  \n\t\t\t\t_shareModal = el;\n\t\t\t},\n\t\t\tonTap: function() {\n\t\t\t\t_toggleShareModal();\n\t\t\t} \n\t\t},\n\t\t{ \n\t\t\tname: 'button--share', \n\t\t\toption: 'shareEl',\n\t\t\tonInit: function(el) { \n\t\t\t\t_shareButton = el;\n\t\t\t},\n\t\t\tonTap: function() {\n\t\t\t\t_toggleShareModal();\n\t\t\t} \n\t\t},\n\t\t{ \n\t\t\tname: 'button--zoom', \n\t\t\toption: 'zoomEl',\n\t\t\tonTap: pswp.toggleDesktopZoom\n\t\t},\n\t\t{ \n\t\t\tname: 'counter', \n\t\t\toption: 'counterEl',\n\t\t\tonInit: function(el) {  \n\t\t\t\t_indexIndicator = el;\n\t\t\t} \n\t\t},\n\t\t{ \n\t\t\tname: 'button--close', \n\t\t\toption: 'closeEl',\n\t\t\tonTap: pswp.close\n\t\t},\n\t\t{ \n\t\t\tname: 'button--arrow--left', \n\t\t\toption: 'arrowEl',\n\t\t\tonTap: pswp.prev\n\t\t},\n\t\t{ \n\t\t\tname: 'button--arrow--right', \n\t\t\toption: 'arrowEl',\n\t\t\tonTap: pswp.next\n\t\t},\n\t\t{ \n\t\t\tname: 'button--fs', \n\t\t\toption: 'fullscreenEl',\n\t\t\tonTap: function() {  \n\t\t\t\tif(_fullscrenAPI.isFullscreen()) {\n\t\t\t\t\t_fullscrenAPI.exit();\n\t\t\t\t} else {\n\t\t\t\t\t_fullscrenAPI.enter();\n\t\t\t\t}\n\t\t\t} \n\t\t},\n\t\t{ \n\t\t\tname: 'preloader', \n\t\t\toption: 'preloaderEl',\n\t\t\tonInit: function(el) {  \n\t\t\t\t_loadingIndicator = el;\n\t\t\t} \n\t\t}\n\n\t];\n\n\tvar _setupUIElements = function() {\n\t\tvar item,\n\t\t\tclassAttr,\n\t\t\tuiElement;\n\n\t\tvar loopThroughChildElements = function(sChildren) {\n\t\t\tif(!sChildren) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar l = sChildren.length;\n\t\t\tfor(var i = 0; i < l; i++) {\n\t\t\t\titem = sChildren[i];\n\t\t\t\tclassAttr = item.className;\n\n\t\t\t\tfor(var a = 0; a < _uiElements.length; a++) {\n\t\t\t\t\tuiElement = _uiElements[a];\n\n\t\t\t\t\tif(classAttr.indexOf('pswp__' + uiElement.name) > -1  ) {\n\n\t\t\t\t\t\tif( _options[uiElement.option] ) { // if element is not disabled from options\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tframework.removeClass(item, 'pswp__element--disabled');\n\t\t\t\t\t\t\tif(uiElement.onInit) {\n\t\t\t\t\t\t\t\tuiElement.onInit(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//item.style.display = 'block';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tframework.addClass(item, 'pswp__element--disabled');\n\t\t\t\t\t\t\t//item.style.display = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tloopThroughChildElements(_controls.children);\n\n\t\tvar topBar =  framework.getChildByClass(_controls, 'pswp__top-bar');\n\t\tif(topBar) {\n\t\t\tloopThroughChildElements( topBar.children );\n\t\t}\n\t};\n\n\n\t\n\n\tui.init = function() {\n\n\t\t// extend options\n\t\tframework.extend(pswp.options, _defaultUIOptions, true);\n\n\t\t// create local link for fast access\n\t\t_options = pswp.options;\n\n\t\t// find pswp__ui element\n\t\t_controls = framework.getChildByClass(pswp.scrollWrap, 'pswp__ui');\n\n\t\t// create local link\n\t\t_listen = pswp.listen;\n\n\n\t\t_setupHidingControlsDuringGestures();\n\n\t\t// update controls when slides change\n\t\t_listen('beforeChange', ui.update);\n\n\t\t// toggle zoom on double-tap\n\t\t_listen('doubleTap', function(point) {\n\t\t\tvar initialZoomLevel = pswp.currItem.initialZoomLevel;\n\t\t\tif(pswp.getZoomLevel() !== initialZoomLevel) {\n\t\t\t\tpswp.zoomTo(initialZoomLevel, point, 333);\n\t\t\t} else {\n\t\t\t\tpswp.zoomTo(_options.getDoubleTapZoom(false, pswp.currItem), point, 333);\n\t\t\t}\n\t\t});\n\n\t\t// Allow text selection in caption\n\t\t_listen('preventDragEvent', function(e, isDown, preventObj) {\n\t\t\tvar t = e.target || e.srcElement;\n\t\t\tif(\n\t\t\t\tt && \n\t\t\t\tt.getAttribute('class') && e.type.indexOf('mouse') > -1 && \n\t\t\t\t( t.getAttribute('class').indexOf('__caption') > 0 || (/(SMALL|STRONG|EM)/i).test(t.tagName) ) \n\t\t\t) {\n\t\t\t\tpreventObj.prevent = false;\n\t\t\t}\n\t\t});\n\n\t\t// bind events for UI\n\t\t_listen('bindEvents', function() {\n\t\t\tframework.bind(_controls, 'pswpTap click', _onControlsTap);\n\t\t\tframework.bind(pswp.scrollWrap, 'pswpTap', ui.onGlobalTap);\n\n\t\t\tif(!pswp.likelyTouchDevice) {\n\t\t\t\tframework.bind(pswp.scrollWrap, 'mouseover', ui.onMouseOver);\n\t\t\t}\n\t\t});\n\n\t\t// unbind events for UI\n\t\t_listen('unbindEvents', function() {\n\t\t\tif(!_shareModalHidden) {\n\t\t\t\t_toggleShareModal();\n\t\t\t}\n\n\t\t\tif(_idleInterval) {\n\t\t\t\tclearInterval(_idleInterval);\n\t\t\t}\n\t\t\tframework.unbind(document, 'mouseout', _onMouseLeaveWindow);\n\t\t\tframework.unbind(document, 'mousemove', _onIdleMouseMove);\n\t\t\tframework.unbind(_controls, 'pswpTap click', _onControlsTap);\n\t\t\tframework.unbind(pswp.scrollWrap, 'pswpTap', ui.onGlobalTap);\n\t\t\tframework.unbind(pswp.scrollWrap, 'mouseover', ui.onMouseOver);\n\n\t\t\tif(_fullscrenAPI) {\n\t\t\t\tframework.unbind(document, _fullscrenAPI.eventK, ui.updateFullscreen);\n\t\t\t\tif(_fullscrenAPI.isFullscreen()) {\n\t\t\t\t\t_options.hideAnimationDuration = 0;\n\t\t\t\t\t_fullscrenAPI.exit();\n\t\t\t\t}\n\t\t\t\t_fullscrenAPI = null;\n\t\t\t}\n\t\t});\n\n\n\t\t// clean up things when gallery is destroyed\n\t\t_listen('destroy', function() {\n\t\t\tif(_options.captionEl) {\n\t\t\t\tif(_fakeCaptionContainer) {\n\t\t\t\t\t_controls.removeChild(_fakeCaptionContainer);\n\t\t\t\t}\n\t\t\t\tframework.removeClass(_captionContainer, 'pswp__caption--empty');\n\t\t\t}\n\n\t\t\tif(_shareModal) {\n\t\t\t\t_shareModal.children[0].onclick = null;\n\t\t\t}\n\t\t\tframework.removeClass(_controls, 'pswp__ui--over-close');\n\t\t\tframework.addClass( _controls, 'pswp__ui--hidden');\n\t\t\tui.setIdle(false);\n\t\t});\n\t\t\n\n\t\tif(!_options.showAnimationDuration) {\n\t\t\tframework.removeClass( _controls, 'pswp__ui--hidden');\n\t\t}\n\t\t_listen('initialZoomIn', function() {\n\t\t\tif(_options.showAnimationDuration) {\n\t\t\t\tframework.removeClass( _controls, 'pswp__ui--hidden');\n\t\t\t}\n\t\t});\n\t\t_listen('initialZoomOut', function() {\n\t\t\tframework.addClass( _controls, 'pswp__ui--hidden');\n\t\t});\n\n\t\t_listen('parseVerticalMargin', _applyNavBarGaps);\n\t\t\n\t\t_setupUIElements();\n\n\t\tif(_options.shareEl && _shareButton && _shareModal) {\n\t\t\t_shareModalHidden = true;\n\t\t}\n\n\t\t_countNumItems();\n\n\t\t_setupIdle();\n\n\t\t_setupFullscreenAPI();\n\n\t\t_setupLoadingIndicator();\n\t};\n\n\tui.setIdle = function(isIdle) {\n\t\t_isIdle = isIdle;\n\t\t_togglePswpClass(_controls, 'ui--idle', isIdle);\n\t};\n\n\tui.update = function() {\n\t\t// Don't update UI if it's hidden\n\t\tif(_controlsVisible && pswp.currItem) {\n\t\t\t\n\t\t\tui.updateIndexIndicator();\n\n\t\t\tif(_options.captionEl) {\n\t\t\t\t_options.addCaptionHTMLFn(pswp.currItem, _captionContainer);\n\n\t\t\t\t_togglePswpClass(_captionContainer, 'caption--empty', !pswp.currItem.title);\n\t\t\t}\n\n\t\t\t_overlayUIUpdated = true;\n\n\t\t} else {\n\t\t\t_overlayUIUpdated = false;\n\t\t}\n\n\t\tif(!_shareModalHidden) {\n\t\t\t_toggleShareModal();\n\t\t}\n\n\t\t_countNumItems();\n\t};\n\n\tui.updateFullscreen = function(e) {\n\n\t\tif(e) {\n\t\t\t// some browsers change window scroll position during the fullscreen\n\t\t\t// so PhotoSwipe updates it just in case\n\t\t\tsetTimeout(function() {\n\t\t\t\tpswp.setScrollOffset( 0, framework.getScrollY() );\n\t\t\t}, 50);\n\t\t}\n\t\t\n\t\t// toogle pswp--fs class on root element\n\t\tframework[ (_fullscrenAPI.isFullscreen() ? 'add' : 'remove') + 'Class' ](pswp.template, 'pswp--fs');\n\t};\n\n\tui.updateIndexIndicator = function() {\n\t\tif(_options.counterEl) {\n\t\t\t_indexIndicator.innerHTML = (pswp.getCurrentIndex()+1) + \n\t\t\t\t\t\t\t\t\t\t_options.indexIndicatorSep + \n\t\t\t\t\t\t\t\t\t\t_options.getNumItemsFn();\n\t\t}\n\t};\n\t\n\tui.onGlobalTap = function(e) {\n\t\te = e || window.event;\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif(_blockControlsTap) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(e.detail && e.detail.pointerType === 'mouse') {\n\n\t\t\t// close gallery if clicked outside of the image\n\t\t\tif(_hasCloseClass(target)) {\n\t\t\t\tpswp.close();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(framework.hasClass(target, 'pswp__img')) {\n\t\t\t\tif(pswp.getZoomLevel() === 1 && pswp.getZoomLevel() <= pswp.currItem.fitRatio) {\n\t\t\t\t\tif(_options.clickToCloseNonZoomable) {\n\t\t\t\t\t\tpswp.close();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpswp.toggleDesktopZoom(e.detail.releasePoint);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} else {\n\n\t\t\t// tap anywhere (except buttons) to toggle visibility of controls\n\t\t\tif(_options.tapToToggleControls) {\n\t\t\t\tif(_controlsVisible) {\n\t\t\t\t\tui.hideControls();\n\t\t\t\t} else {\n\t\t\t\t\tui.showControls();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// tap to close gallery\n\t\t\tif(_options.tapToClose && (framework.hasClass(target, 'pswp__img') || _hasCloseClass(target)) ) {\n\t\t\t\tpswp.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t}\n\t};\n\tui.onMouseOver = function(e) {\n\t\te = e || window.event;\n\t\tvar target = e.target || e.srcElement;\n\n\t\t// add class when mouse is over an element that should close the gallery\n\t\t_togglePswpClass(_controls, 'ui--over-close', _hasCloseClass(target));\n\t};\n\n\tui.hideControls = function() {\n\t\tframework.addClass(_controls,'pswp__ui--hidden');\n\t\t_controlsVisible = false;\n\t};\n\n\tui.showControls = function() {\n\t\t_controlsVisible = true;\n\t\tif(!_overlayUIUpdated) {\n\t\t\tui.update();\n\t\t}\n\t\tframework.removeClass(_controls,'pswp__ui--hidden');\n\t};\n\n\tui.supportsFullscreen = function() {\n\t\tvar d = document;\n\t\treturn !!(d.exitFullscreen || d.mozCancelFullScreen || d.webkitExitFullscreen || d.msExitFullscreen);\n\t};\n\n\tui.getFullscreenAPI = function() {\n\t\tvar dE = document.documentElement,\n\t\t\tapi,\n\t\t\ttF = 'fullscreenchange';\n\n\t\tif (dE.requestFullscreen) {\n\t\t\tapi = {\n\t\t\t\tenterK: 'requestFullscreen',\n\t\t\t\texitK: 'exitFullscreen',\n\t\t\t\telementK: 'fullscreenElement',\n\t\t\t\teventK: tF\n\t\t\t};\n\n\t\t} else if(dE.mozRequestFullScreen ) {\n\t\t\tapi = {\n\t\t\t\tenterK: 'mozRequestFullScreen',\n\t\t\t\texitK: 'mozCancelFullScreen',\n\t\t\t\telementK: 'mozFullScreenElement',\n\t\t\t\teventK: 'moz' + tF\n\t\t\t};\n\n\t\t\t\n\n\t\t} else if(dE.webkitRequestFullscreen) {\n\t\t\tapi = {\n\t\t\t\tenterK: 'webkitRequestFullscreen',\n\t\t\t\texitK: 'webkitExitFullscreen',\n\t\t\t\telementK: 'webkitFullscreenElement',\n\t\t\t\teventK: 'webkit' + tF\n\t\t\t};\n\n\t\t} else if(dE.msRequestFullscreen) {\n\t\t\tapi = {\n\t\t\t\tenterK: 'msRequestFullscreen',\n\t\t\t\texitK: 'msExitFullscreen',\n\t\t\t\telementK: 'msFullscreenElement',\n\t\t\t\teventK: 'MSFullscreenChange'\n\t\t\t};\n\t\t}\n\n\t\tif(api) {\n\t\t\tapi.enter = function() { \n\t\t\t\t// disable close-on-scroll in fullscreen\n\t\t\t\t_initalCloseOnScrollValue = _options.closeOnScroll; \n\t\t\t\t_options.closeOnScroll = false; \n\n\t\t\t\tif(this.enterK === 'webkitRequestFullscreen') {\n\t\t\t\t\tpswp.template[this.enterK]( Element.ALLOW_KEYBOARD_INPUT );\n\t\t\t\t} else {\n\t\t\t\t\treturn pswp.template[this.enterK](); \n\t\t\t\t}\n\t\t\t};\n\t\t\tapi.exit = function() { \n\t\t\t\t_options.closeOnScroll = _initalCloseOnScrollValue;\n\n\t\t\t\treturn document[this.exitK](); \n\n\t\t\t};\n\t\t\tapi.isFullscreen = function() { return document[this.elementK]; };\n\t\t}\n\n\t\treturn api;\n\t};\n\n\n\n};\nreturn PhotoSwipeUI_Default;\n\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/photoswipe/dist/photoswipe-ui-default.js\n");

/***/ }),

/***/ "./node_modules/photoswipe/dist/photoswipe.js":
/*!****************************************************!*\
  !*** ./node_modules/photoswipe/dist/photoswipe.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! PhotoSwipe - v4.1.3 - 2019-01-08\n* http://photoswipe.com\n* Copyright (c) 2019 Dmitry Semenov; */\n(function (root, factory) { \n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n})(this, function () {\n\n\t'use strict';\n\tvar PhotoSwipe = function(template, UiClass, items, options){\n\n/*>>framework-bridge*/\n/**\n *\n * Set of generic functions used by gallery.\n * \n * You're free to modify anything here as long as functionality is kept.\n * \n */\nvar framework = {\n\tfeatures: null,\n\tbind: function(target, type, listener, unbind) {\n\t\tvar methodName = (unbind ? 'remove' : 'add') + 'EventListener';\n\t\ttype = type.split(' ');\n\t\tfor(var i = 0; i < type.length; i++) {\n\t\t\tif(type[i]) {\n\t\t\t\ttarget[methodName]( type[i], listener, false);\n\t\t\t}\n\t\t}\n\t},\n\tisArray: function(obj) {\n\t\treturn (obj instanceof Array);\n\t},\n\tcreateEl: function(classes, tag) {\n\t\tvar el = document.createElement(tag || 'div');\n\t\tif(classes) {\n\t\t\tel.className = classes;\n\t\t}\n\t\treturn el;\n\t},\n\tgetScrollY: function() {\n\t\tvar yOffset = window.pageYOffset;\n\t\treturn yOffset !== undefined ? yOffset : document.documentElement.scrollTop;\n\t},\n\tunbind: function(target, type, listener) {\n\t\tframework.bind(target,type,listener,true);\n\t},\n\tremoveClass: function(el, className) {\n\t\tvar reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n\t\tel.className = el.className.replace(reg, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); \n\t},\n\taddClass: function(el, className) {\n\t\tif( !framework.hasClass(el,className) ) {\n\t\t\tel.className += (el.className ? ' ' : '') + className;\n\t\t}\n\t},\n\thasClass: function(el, className) {\n\t\treturn el.className && new RegExp('(^|\\\\s)' + className + '(\\\\s|$)').test(el.className);\n\t},\n\tgetChildByClass: function(parentEl, childClassName) {\n\t\tvar node = parentEl.firstChild;\n\t\twhile(node) {\n\t\t\tif( framework.hasClass(node, childClassName) ) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t},\n\tarraySearch: function(array, value, key) {\n\t\tvar i = array.length;\n\t\twhile(i--) {\n\t\t\tif(array[i][key] === value) {\n\t\t\t\treturn i;\n\t\t\t} \n\t\t}\n\t\treturn -1;\n\t},\n\textend: function(o1, o2, preventOverwrite) {\n\t\tfor (var prop in o2) {\n\t\t\tif (o2.hasOwnProperty(prop)) {\n\t\t\t\tif(preventOverwrite && o1.hasOwnProperty(prop)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\to1[prop] = o2[prop];\n\t\t\t}\n\t\t}\n\t},\n\teasing: {\n\t\tsine: {\n\t\t\tout: function(k) {\n\t\t\t\treturn Math.sin(k * (Math.PI / 2));\n\t\t\t},\n\t\t\tinOut: function(k) {\n\t\t\t\treturn - (Math.cos(Math.PI * k) - 1) / 2;\n\t\t\t}\n\t\t},\n\t\tcubic: {\n\t\t\tout: function(k) {\n\t\t\t\treturn --k * k * k + 1;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t\telastic: {\n\t\t\t\tout: function ( k ) {\n\n\t\t\t\t\tvar s, a = 0.1, p = 0.4;\n\t\t\t\t\tif ( k === 0 ) return 0;\n\t\t\t\t\tif ( k === 1 ) return 1;\n\t\t\t\t\tif ( !a || a < 1 ) { a = 1; s = p / 4; }\n\t\t\t\t\telse s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n\t\t\t\t\treturn ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\n\n\t\t\t\t},\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tout: function ( k ) {\n\t\t\t\t\tvar s = 1.70158;\n\t\t\t\t\treturn --k * k * ( ( s + 1 ) * k + s ) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t*/\n\t},\n\n\t/**\n\t * \n\t * @return {object}\n\t * \n\t * {\n\t *  raf : request animation frame function\n\t *  caf : cancel animation frame function\n\t *  transfrom : transform property key (with vendor), or null if not supported\n\t *  oldIE : IE8 or below\n\t * }\n\t * \n\t */\n\tdetectFeatures: function() {\n\t\tif(framework.features) {\n\t\t\treturn framework.features;\n\t\t}\n\t\tvar helperEl = framework.createEl(),\n\t\t\thelperStyle = helperEl.style,\n\t\t\tvendor = '',\n\t\t\tfeatures = {};\n\n\t\t// IE8 and below\n\t\tfeatures.oldIE = document.all && !document.addEventListener;\n\n\t\tfeatures.touch = 'ontouchstart' in window;\n\n\t\tif(window.requestAnimationFrame) {\n\t\t\tfeatures.raf = window.requestAnimationFrame;\n\t\t\tfeatures.caf = window.cancelAnimationFrame;\n\t\t}\n\n\t\tfeatures.pointerEvent = !!(window.PointerEvent) || navigator.msPointerEnabled;\n\n\t\t// fix false-positive detection of old Android in new IE\n\t\t// (IE11 ua string contains \"Android 4.0\")\n\t\t\n\t\tif(!features.pointerEvent) { \n\n\t\t\tvar ua = navigator.userAgent;\n\n\t\t\t// Detect if device is iPhone or iPod and if it's older than iOS 8\n\t\t\t// http://stackoverflow.com/a/14223920\n\t\t\t// \n\t\t\t// This detection is made because of buggy top/bottom toolbars\n\t\t\t// that don't trigger window.resize event.\n\t\t\t// For more info refer to _isFixedPosition variable in core.js\n\n\t\t\tif (/iP(hone|od)/.test(navigator.platform)) {\n\t\t\t\tvar v = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n\t\t\t\tif(v && v.length > 0) {\n\t\t\t\t\tv = parseInt(v[1], 10);\n\t\t\t\t\tif(v >= 1 && v < 8 ) {\n\t\t\t\t\t\tfeatures.isOldIOSPhone = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Detect old Android (before KitKat)\n\t\t\t// due to bugs related to position:fixed\n\t\t\t// http://stackoverflow.com/questions/7184573/pick-up-the-android-version-in-the-browser-by-javascript\n\t\t\t\n\t\t\tvar match = ua.match(/Android\\s([0-9\\.]*)/);\n\t\t\tvar androidversion =  match ? match[1] : 0;\n\t\t\tandroidversion = parseFloat(androidversion);\n\t\t\tif(androidversion >= 1 ) {\n\t\t\t\tif(androidversion < 4.4) {\n\t\t\t\t\tfeatures.isOldAndroid = true; // for fixed position bug & performance\n\t\t\t\t}\n\t\t\t\tfeatures.androidVersion = androidversion; // for touchend bug\n\t\t\t}\t\n\t\t\tfeatures.isMobileOpera = /opera mini|opera mobi/i.test(ua);\n\n\t\t\t// p.s. yes, yes, UA sniffing is bad, propose your solution for above bugs.\n\t\t}\n\t\t\n\t\tvar styleChecks = ['transform', 'perspective', 'animationName'],\n\t\t\tvendors = ['', 'webkit','Moz','ms','O'],\n\t\t\tstyleCheckItem,\n\t\t\tstyleName;\n\n\t\tfor(var i = 0; i < 4; i++) {\n\t\t\tvendor = vendors[i];\n\n\t\t\tfor(var a = 0; a < 3; a++) {\n\t\t\t\tstyleCheckItem = styleChecks[a];\n\n\t\t\t\t// uppercase first letter of property name, if vendor is present\n\t\t\t\tstyleName = vendor + (vendor ? \n\t\t\t\t\t\t\t\t\t\tstyleCheckItem.charAt(0).toUpperCase() + styleCheckItem.slice(1) : \n\t\t\t\t\t\t\t\t\t\tstyleCheckItem);\n\t\t\t\n\t\t\t\tif(!features[styleCheckItem] && styleName in helperStyle ) {\n\t\t\t\t\tfeatures[styleCheckItem] = styleName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(vendor && !features.raf) {\n\t\t\t\tvendor = vendor.toLowerCase();\n\t\t\t\tfeatures.raf = window[vendor+'RequestAnimationFrame'];\n\t\t\t\tif(features.raf) {\n\t\t\t\t\tfeatures.caf = window[vendor+'CancelAnimationFrame'] || \n\t\t\t\t\t\t\t\t\twindow[vendor+'CancelRequestAnimationFrame'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif(!features.raf) {\n\t\t\tvar lastTime = 0;\n\t\t\tfeatures.raf = function(fn) {\n\t\t\t\tvar currTime = new Date().getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tvar id = window.setTimeout(function() { fn(currTime + timeToCall); }, timeToCall);\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn id;\n\t\t\t};\n\t\t\tfeatures.caf = function(id) { clearTimeout(id); };\n\t\t}\n\n\t\t// Detect SVG support\n\t\tfeatures.svg = !!document.createElementNS && \n\t\t\t\t\t\t!!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;\n\n\t\tframework.features = features;\n\n\t\treturn features;\n\t}\n};\n\nframework.detectFeatures();\n\n// Override addEventListener for old versions of IE\nif(framework.features.oldIE) {\n\n\tframework.bind = function(target, type, listener, unbind) {\n\t\t\n\t\ttype = type.split(' ');\n\n\t\tvar methodName = (unbind ? 'detach' : 'attach') + 'Event',\n\t\t\tevName,\n\t\t\t_handleEv = function() {\n\t\t\t\tlistener.handleEvent.call(listener);\n\t\t\t};\n\n\t\tfor(var i = 0; i < type.length; i++) {\n\t\t\tevName = type[i];\n\t\t\tif(evName) {\n\n\t\t\t\tif(typeof listener === 'object' && listener.handleEvent) {\n\t\t\t\t\tif(!unbind) {\n\t\t\t\t\t\tlistener['oldIE' + evName] = _handleEv;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(!listener['oldIE' + evName]) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttarget[methodName]( 'on' + evName, listener['oldIE' + evName]);\n\t\t\t\t} else {\n\t\t\t\t\ttarget[methodName]( 'on' + evName, listener);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t};\n\t\n}\n\n/*>>framework-bridge*/\n\n/*>>core*/\n//function(template, UiClass, items, options)\n\nvar self = this;\n\n/**\n * Static vars, don't change unless you know what you're doing.\n */\nvar DOUBLE_TAP_RADIUS = 25, \n\tNUM_HOLDERS = 3;\n\n/**\n * Options\n */\nvar _options = {\n\tallowPanToNext:true,\n\tspacing: 0.12,\n\tbgOpacity: 1,\n\tmouseUsed: false,\n\tloop: true,\n\tpinchToClose: true,\n\tcloseOnScroll: true,\n\tcloseOnVerticalDrag: true,\n\tverticalDragRange: 0.75,\n\thideAnimationDuration: 333,\n\tshowAnimationDuration: 333,\n\tshowHideOpacity: false,\n\tfocus: true,\n\tescKey: true,\n\tarrowKeys: true,\n\tmainScrollEndFriction: 0.35,\n\tpanEndFriction: 0.35,\n\tisClickableElement: function(el) {\n        return el.tagName === 'A';\n    },\n    getDoubleTapZoom: function(isMouseClick, item) {\n    \tif(isMouseClick) {\n    \t\treturn 1;\n    \t} else {\n    \t\treturn item.initialZoomLevel < 0.7 ? 1 : 1.33;\n    \t}\n    },\n    maxSpreadZoom: 1.33,\n\tmodal: true,\n\n\t// not fully implemented yet\n\tscaleMode: 'fit' // TODO\n};\nframework.extend(_options, options);\n\n\n/**\n * Private helper variables & functions\n */\n\nvar _getEmptyPoint = function() { \n\t\treturn {x:0,y:0}; \n\t};\n\nvar _isOpen,\n\t_isDestroying,\n\t_closedByScroll,\n\t_currentItemIndex,\n\t_containerStyle,\n\t_containerShiftIndex,\n\t_currPanDist = _getEmptyPoint(),\n\t_startPanOffset = _getEmptyPoint(),\n\t_panOffset = _getEmptyPoint(),\n\t_upMoveEvents, // drag move, drag end & drag cancel events array\n\t_downEvents, // drag start events array\n\t_globalEventHandlers,\n\t_viewportSize = {},\n\t_currZoomLevel,\n\t_startZoomLevel,\n\t_translatePrefix,\n\t_translateSufix,\n\t_updateSizeInterval,\n\t_itemsNeedUpdate,\n\t_currPositionIndex = 0,\n\t_offset = {},\n\t_slideSize = _getEmptyPoint(), // size of slide area, including spacing\n\t_itemHolders,\n\t_prevItemIndex,\n\t_indexDiff = 0, // difference of indexes since last content update\n\t_dragStartEvent,\n\t_dragMoveEvent,\n\t_dragEndEvent,\n\t_dragCancelEvent,\n\t_transformKey,\n\t_pointerEventEnabled,\n\t_isFixedPosition = true,\n\t_likelyTouchDevice,\n\t_modules = [],\n\t_requestAF,\n\t_cancelAF,\n\t_initalClassName,\n\t_initalWindowScrollY,\n\t_oldIE,\n\t_currentWindowScrollY,\n\t_features,\n\t_windowVisibleSize = {},\n\t_renderMaxResolution = false,\n\t_orientationChangeTimeout,\n\n\n\t// Registers PhotoSWipe module (History, Controller ...)\n\t_registerModule = function(name, module) {\n\t\tframework.extend(self, module.publicMethods);\n\t\t_modules.push(name);\n\t},\n\n\t_getLoopedId = function(index) {\n\t\tvar numSlides = _getNumItems();\n\t\tif(index > numSlides - 1) {\n\t\t\treturn index - numSlides;\n\t\t} else  if(index < 0) {\n\t\t\treturn numSlides + index;\n\t\t}\n\t\treturn index;\n\t},\n\t\n\t// Micro bind/trigger\n\t_listeners = {},\n\t_listen = function(name, fn) {\n\t\tif(!_listeners[name]) {\n\t\t\t_listeners[name] = [];\n\t\t}\n\t\treturn _listeners[name].push(fn);\n\t},\n\t_shout = function(name) {\n\t\tvar listeners = _listeners[name];\n\n\t\tif(listeners) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\targs.shift();\n\n\t\t\tfor(var i = 0; i < listeners.length; i++) {\n\t\t\t\tlisteners[i].apply(self, args);\n\t\t\t}\n\t\t}\n\t},\n\n\t_getCurrentTime = function() {\n\t\treturn new Date().getTime();\n\t},\n\t_applyBgOpacity = function(opacity) {\n\t\t_bgOpacity = opacity;\n\t\tself.bg.style.opacity = opacity * _options.bgOpacity;\n\t},\n\n\t_applyZoomTransform = function(styleObj,x,y,zoom,item) {\n\t\tif(!_renderMaxResolution || (item && item !== self.currItem) ) {\n\t\t\tzoom = zoom / (item ? item.fitRatio : self.currItem.fitRatio);\t\n\t\t}\n\t\t\t\n\t\tstyleObj[_transformKey] = _translatePrefix + x + 'px, ' + y + 'px' + _translateSufix + ' scale(' + zoom + ')';\n\t},\n\t_applyCurrentZoomPan = function( allowRenderResolution ) {\n\t\tif(_currZoomElementStyle) {\n\n\t\t\tif(allowRenderResolution) {\n\t\t\t\tif(_currZoomLevel > self.currItem.fitRatio) {\n\t\t\t\t\tif(!_renderMaxResolution) {\n\t\t\t\t\t\t_setImageSize(self.currItem, false, true);\n\t\t\t\t\t\t_renderMaxResolution = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(_renderMaxResolution) {\n\t\t\t\t\t\t_setImageSize(self.currItem);\n\t\t\t\t\t\t_renderMaxResolution = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t_applyZoomTransform(_currZoomElementStyle, _panOffset.x, _panOffset.y, _currZoomLevel);\n\t\t}\n\t},\n\t_applyZoomPanToItem = function(item) {\n\t\tif(item.container) {\n\n\t\t\t_applyZoomTransform(item.container.style, \n\t\t\t\t\t\t\t\titem.initialPosition.x, \n\t\t\t\t\t\t\t\titem.initialPosition.y, \n\t\t\t\t\t\t\t\titem.initialZoomLevel,\n\t\t\t\t\t\t\t\titem);\n\t\t}\n\t},\n\t_setTranslateX = function(x, elStyle) {\n\t\telStyle[_transformKey] = _translatePrefix + x + 'px, 0px' + _translateSufix;\n\t},\n\t_moveMainScroll = function(x, dragging) {\n\n\t\tif(!_options.loop && dragging) {\n\t\t\tvar newSlideIndexOffset = _currentItemIndex + (_slideSize.x * _currPositionIndex - x) / _slideSize.x,\n\t\t\t\tdelta = Math.round(x - _mainScrollPos.x);\n\n\t\t\tif( (newSlideIndexOffset < 0 && delta > 0) || \n\t\t\t\t(newSlideIndexOffset >= _getNumItems() - 1 && delta < 0) ) {\n\t\t\t\tx = _mainScrollPos.x + delta * _options.mainScrollEndFriction;\n\t\t\t} \n\t\t}\n\t\t\n\t\t_mainScrollPos.x = x;\n\t\t_setTranslateX(x, _containerStyle);\n\t},\n\t_calculatePanOffset = function(axis, zoomLevel) {\n\t\tvar m = _midZoomPoint[axis] - _offset[axis];\n\t\treturn _startPanOffset[axis] + _currPanDist[axis] + m - m * ( zoomLevel / _startZoomLevel );\n\t},\n\t\n\t_equalizePoints = function(p1, p2) {\n\t\tp1.x = p2.x;\n\t\tp1.y = p2.y;\n\t\tif(p2.id) {\n\t\t\tp1.id = p2.id;\n\t\t}\n\t},\n\t_roundPoint = function(p) {\n\t\tp.x = Math.round(p.x);\n\t\tp.y = Math.round(p.y);\n\t},\n\n\t_mouseMoveTimeout = null,\n\t_onFirstMouseMove = function() {\n\t\t// Wait until mouse move event is fired at least twice during 100ms\n\t\t// We do this, because some mobile browsers trigger it on touchstart\n\t\tif(_mouseMoveTimeout ) { \n\t\t\tframework.unbind(document, 'mousemove', _onFirstMouseMove);\n\t\t\tframework.addClass(template, 'pswp--has_mouse');\n\t\t\t_options.mouseUsed = true;\n\t\t\t_shout('mouseUsed');\n\t\t}\n\t\t_mouseMoveTimeout = setTimeout(function() {\n\t\t\t_mouseMoveTimeout = null;\n\t\t}, 100);\n\t},\n\n\t_bindEvents = function() {\n\t\tframework.bind(document, 'keydown', self);\n\n\t\tif(_features.transform) {\n\t\t\t// don't bind click event in browsers that don't support transform (mostly IE8)\n\t\t\tframework.bind(self.scrollWrap, 'click', self);\n\t\t}\n\t\t\n\n\t\tif(!_options.mouseUsed) {\n\t\t\tframework.bind(document, 'mousemove', _onFirstMouseMove);\n\t\t}\n\n\t\tframework.bind(window, 'resize scroll orientationchange', self);\n\n\t\t_shout('bindEvents');\n\t},\n\n\t_unbindEvents = function() {\n\t\tframework.unbind(window, 'resize scroll orientationchange', self);\n\t\tframework.unbind(window, 'scroll', _globalEventHandlers.scroll);\n\t\tframework.unbind(document, 'keydown', self);\n\t\tframework.unbind(document, 'mousemove', _onFirstMouseMove);\n\n\t\tif(_features.transform) {\n\t\t\tframework.unbind(self.scrollWrap, 'click', self);\n\t\t}\n\n\t\tif(_isDragging) {\n\t\t\tframework.unbind(window, _upMoveEvents, self);\n\t\t}\n\n\t\tclearTimeout(_orientationChangeTimeout);\n\n\t\t_shout('unbindEvents');\n\t},\n\t\n\t_calculatePanBounds = function(zoomLevel, update) {\n\t\tvar bounds = _calculateItemSize( self.currItem, _viewportSize, zoomLevel );\n\t\tif(update) {\n\t\t\t_currPanBounds = bounds;\n\t\t}\n\t\treturn bounds;\n\t},\n\t\n\t_getMinZoomLevel = function(item) {\n\t\tif(!item) {\n\t\t\titem = self.currItem;\n\t\t}\n\t\treturn item.initialZoomLevel;\n\t},\n\t_getMaxZoomLevel = function(item) {\n\t\tif(!item) {\n\t\t\titem = self.currItem;\n\t\t}\n\t\treturn item.w > 0 ? _options.maxSpreadZoom : 1;\n\t},\n\n\t// Return true if offset is out of the bounds\n\t_modifyDestPanOffset = function(axis, destPanBounds, destPanOffset, destZoomLevel) {\n\t\tif(destZoomLevel === self.currItem.initialZoomLevel) {\n\t\t\tdestPanOffset[axis] = self.currItem.initialPosition[axis];\n\t\t\treturn true;\n\t\t} else {\n\t\t\tdestPanOffset[axis] = _calculatePanOffset(axis, destZoomLevel); \n\n\t\t\tif(destPanOffset[axis] > destPanBounds.min[axis]) {\n\t\t\t\tdestPanOffset[axis] = destPanBounds.min[axis];\n\t\t\t\treturn true;\n\t\t\t} else if(destPanOffset[axis] < destPanBounds.max[axis] ) {\n\t\t\t\tdestPanOffset[axis] = destPanBounds.max[axis];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t_setupTransforms = function() {\n\n\t\tif(_transformKey) {\n\t\t\t// setup 3d transforms\n\t\t\tvar allow3dTransform = _features.perspective && !_likelyTouchDevice;\n\t\t\t_translatePrefix = 'translate' + (allow3dTransform ? '3d(' : '(');\n\t\t\t_translateSufix = _features.perspective ? ', 0px)' : ')';\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Override zoom/pan/move functions in case old browser is used (most likely IE)\n\t\t// (so they use left/top/width/height, instead of CSS transform)\n\t\n\t\t_transformKey = 'left';\n\t\tframework.addClass(template, 'pswp--ie');\n\n\t\t_setTranslateX = function(x, elStyle) {\n\t\t\telStyle.left = x + 'px';\n\t\t};\n\t\t_applyZoomPanToItem = function(item) {\n\n\t\t\tvar zoomRatio = item.fitRatio > 1 ? 1 : item.fitRatio,\n\t\t\t\ts = item.container.style,\n\t\t\t\tw = zoomRatio * item.w,\n\t\t\t\th = zoomRatio * item.h;\n\n\t\t\ts.width = w + 'px';\n\t\t\ts.height = h + 'px';\n\t\t\ts.left = item.initialPosition.x + 'px';\n\t\t\ts.top = item.initialPosition.y + 'px';\n\n\t\t};\n\t\t_applyCurrentZoomPan = function() {\n\t\t\tif(_currZoomElementStyle) {\n\n\t\t\t\tvar s = _currZoomElementStyle,\n\t\t\t\t\titem = self.currItem,\n\t\t\t\t\tzoomRatio = item.fitRatio > 1 ? 1 : item.fitRatio,\n\t\t\t\t\tw = zoomRatio * item.w,\n\t\t\t\t\th = zoomRatio * item.h;\n\n\t\t\t\ts.width = w + 'px';\n\t\t\t\ts.height = h + 'px';\n\n\n\t\t\t\ts.left = _panOffset.x + 'px';\n\t\t\t\ts.top = _panOffset.y + 'px';\n\t\t\t}\n\t\t\t\n\t\t};\n\t},\n\n\t_onKeyDown = function(e) {\n\t\tvar keydownAction = '';\n\t\tif(_options.escKey && e.keyCode === 27) { \n\t\t\tkeydownAction = 'close';\n\t\t} else if(_options.arrowKeys) {\n\t\t\tif(e.keyCode === 37) {\n\t\t\t\tkeydownAction = 'prev';\n\t\t\t} else if(e.keyCode === 39) { \n\t\t\t\tkeydownAction = 'next';\n\t\t\t}\n\t\t}\n\n\t\tif(keydownAction) {\n\t\t\t// don't do anything if special key pressed to prevent from overriding default browser actions\n\t\t\t// e.g. in Chrome on Mac cmd+arrow-left returns to previous page\n\t\t\tif( !e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey ) {\n\t\t\t\tif(e.preventDefault) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\te.returnValue = false;\n\t\t\t\t} \n\t\t\t\tself[keydownAction]();\n\t\t\t}\n\t\t}\n\t},\n\n\t_onGlobalClick = function(e) {\n\t\tif(!e) {\n\t\t\treturn;\n\t\t}\n\n\t\t// don't allow click event to pass through when triggering after drag or some other gesture\n\t\tif(_moved || _zoomStarted || _mainScrollAnimating || _verticalDragInitiated) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\n\t_updatePageScrollOffset = function() {\n\t\tself.setScrollOffset(0, framework.getScrollY());\t\t\n\t};\n\t\n\n\n\t\n\n\n\n// Micro animation engine\nvar _animations = {},\n\t_numAnimations = 0,\n\t_stopAnimation = function(name) {\n\t\tif(_animations[name]) {\n\t\t\tif(_animations[name].raf) {\n\t\t\t\t_cancelAF( _animations[name].raf );\n\t\t\t}\n\t\t\t_numAnimations--;\n\t\t\tdelete _animations[name];\n\t\t}\n\t},\n\t_registerStartAnimation = function(name) {\n\t\tif(_animations[name]) {\n\t\t\t_stopAnimation(name);\n\t\t}\n\t\tif(!_animations[name]) {\n\t\t\t_numAnimations++;\n\t\t\t_animations[name] = {};\n\t\t}\n\t},\n\t_stopAllAnimations = function() {\n\t\tfor (var prop in _animations) {\n\n\t\t\tif( _animations.hasOwnProperty( prop ) ) {\n\t\t\t\t_stopAnimation(prop);\n\t\t\t} \n\t\t\t\n\t\t}\n\t},\n\t_animateProp = function(name, b, endProp, d, easingFn, onUpdate, onComplete) {\n\t\tvar startAnimTime = _getCurrentTime(), t;\n\t\t_registerStartAnimation(name);\n\n\t\tvar animloop = function(){\n\t\t\tif ( _animations[name] ) {\n\t\t\t\t\n\t\t\t\tt = _getCurrentTime() - startAnimTime; // time diff\n\t\t\t\t//b - beginning (start prop)\n\t\t\t\t//d - anim duration\n\n\t\t\t\tif ( t >= d ) {\n\t\t\t\t\t_stopAnimation(name);\n\t\t\t\t\tonUpdate(endProp);\n\t\t\t\t\tif(onComplete) {\n\t\t\t\t\t\tonComplete();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUpdate( (endProp - b) * easingFn(t/d) + b );\n\n\t\t\t\t_animations[name].raf = _requestAF(animloop);\n\t\t\t}\n\t\t};\n\t\tanimloop();\n\t};\n\t\n\n\nvar publicMethods = {\n\n\t// make a few local variables and functions public\n\tshout: _shout,\n\tlisten: _listen,\n\tviewportSize: _viewportSize,\n\toptions: _options,\n\n\tisMainScrollAnimating: function() {\n\t\treturn _mainScrollAnimating;\n\t},\n\tgetZoomLevel: function() {\n\t\treturn _currZoomLevel;\n\t},\n\tgetCurrentIndex: function() {\n\t\treturn _currentItemIndex;\n\t},\n\tisDragging: function() {\n\t\treturn _isDragging;\n\t},\t\n\tisZooming: function() {\n\t\treturn _isZooming;\n\t},\n\tsetScrollOffset: function(x,y) {\n\t\t_offset.x = x;\n\t\t_currentWindowScrollY = _offset.y = y;\n\t\t_shout('updateScrollOffset', _offset);\n\t},\n\tapplyZoomPan: function(zoomLevel,panX,panY,allowRenderResolution) {\n\t\t_panOffset.x = panX;\n\t\t_panOffset.y = panY;\n\t\t_currZoomLevel = zoomLevel;\n\t\t_applyCurrentZoomPan( allowRenderResolution );\n\t},\n\n\tinit: function() {\n\n\t\tif(_isOpen || _isDestroying) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i;\n\n\t\tself.framework = framework; // basic functionality\n\t\tself.template = template; // root DOM element of PhotoSwipe\n\t\tself.bg = framework.getChildByClass(template, 'pswp__bg');\n\n\t\t_initalClassName = template.className;\n\t\t_isOpen = true;\n\t\t\t\t\n\t\t_features = framework.detectFeatures();\n\t\t_requestAF = _features.raf;\n\t\t_cancelAF = _features.caf;\n\t\t_transformKey = _features.transform;\n\t\t_oldIE = _features.oldIE;\n\t\t\n\t\tself.scrollWrap = framework.getChildByClass(template, 'pswp__scroll-wrap');\n\t\tself.container = framework.getChildByClass(self.scrollWrap, 'pswp__container');\n\n\t\t_containerStyle = self.container.style; // for fast access\n\n\t\t// Objects that hold slides (there are only 3 in DOM)\n\t\tself.itemHolders = _itemHolders = [\n\t\t\t{el:self.container.children[0] , wrap:0, index: -1},\n\t\t\t{el:self.container.children[1] , wrap:0, index: -1},\n\t\t\t{el:self.container.children[2] , wrap:0, index: -1}\n\t\t];\n\n\t\t// hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\n\t\t_itemHolders[0].el.style.display = _itemHolders[2].el.style.display = 'none';\n\n\t\t_setupTransforms();\n\n\t\t// Setup global events\n\t\t_globalEventHandlers = {\n\t\t\tresize: self.updateSize,\n\n\t\t\t// Fixes: iOS 10.3 resize event\n\t\t\t// does not update scrollWrap.clientWidth instantly after resize\n\t\t\t// https://github.com/dimsemenov/PhotoSwipe/issues/1315\n\t\t\torientationchange: function() {\n\t\t\t\tclearTimeout(_orientationChangeTimeout);\n\t\t\t\t_orientationChangeTimeout = setTimeout(function() {\n\t\t\t\t\tif(_viewportSize.x !== self.scrollWrap.clientWidth) {\n\t\t\t\t\t\tself.updateSize();\n\t\t\t\t\t}\n\t\t\t\t}, 500);\n\t\t\t},\n\t\t\tscroll: _updatePageScrollOffset,\n\t\t\tkeydown: _onKeyDown,\n\t\t\tclick: _onGlobalClick\n\t\t};\n\n\t\t// disable show/hide effects on old browsers that don't support CSS animations or transforms, \n\t\t// old IOS, Android and Opera mobile. Blackberry seems to work fine, even older models.\n\t\tvar oldPhone = _features.isOldIOSPhone || _features.isOldAndroid || _features.isMobileOpera;\n\t\tif(!_features.animationName || !_features.transform || oldPhone) {\n\t\t\t_options.showAnimationDuration = _options.hideAnimationDuration = 0;\n\t\t}\n\n\t\t// init modules\n\t\tfor(i = 0; i < _modules.length; i++) {\n\t\t\tself['init' + _modules[i]]();\n\t\t}\n\t\t\n\t\t// init\n\t\tif(UiClass) {\n\t\t\tvar ui = self.ui = new UiClass(self, framework);\n\t\t\tui.init();\n\t\t}\n\n\t\t_shout('firstUpdate');\n\t\t_currentItemIndex = _currentItemIndex || _options.index || 0;\n\t\t// validate index\n\t\tif( isNaN(_currentItemIndex) || _currentItemIndex < 0 || _currentItemIndex >= _getNumItems() ) {\n\t\t\t_currentItemIndex = 0;\n\t\t}\n\t\tself.currItem = _getItemAt( _currentItemIndex );\n\n\t\t\n\t\tif(_features.isOldIOSPhone || _features.isOldAndroid) {\n\t\t\t_isFixedPosition = false;\n\t\t}\n\t\t\n\t\ttemplate.setAttribute('aria-hidden', 'false');\n\t\tif(_options.modal) {\n\t\t\tif(!_isFixedPosition) {\n\t\t\t\ttemplate.style.position = 'absolute';\n\t\t\t\ttemplate.style.top = framework.getScrollY() + 'px';\n\t\t\t} else {\n\t\t\t\ttemplate.style.position = 'fixed';\n\t\t\t}\n\t\t}\n\n\t\tif(_currentWindowScrollY === undefined) {\n\t\t\t_shout('initialLayout');\n\t\t\t_currentWindowScrollY = _initalWindowScrollY = framework.getScrollY();\n\t\t}\n\t\t\n\t\t// add classes to root element of PhotoSwipe\n\t\tvar rootClasses = 'pswp--open ';\n\t\tif(_options.mainClass) {\n\t\t\trootClasses += _options.mainClass + ' ';\n\t\t}\n\t\tif(_options.showHideOpacity) {\n\t\t\trootClasses += 'pswp--animate_opacity ';\n\t\t}\n\t\trootClasses += _likelyTouchDevice ? 'pswp--touch' : 'pswp--notouch';\n\t\trootClasses += _features.animationName ? ' pswp--css_animation' : '';\n\t\trootClasses += _features.svg ? ' pswp--svg' : '';\n\t\tframework.addClass(template, rootClasses);\n\n\t\tself.updateSize();\n\n\t\t// initial update\n\t\t_containerShiftIndex = -1;\n\t\t_indexDiff = null;\n\t\tfor(i = 0; i < NUM_HOLDERS; i++) {\n\t\t\t_setTranslateX( (i+_containerShiftIndex) * _slideSize.x, _itemHolders[i].el.style);\n\t\t}\n\n\t\tif(!_oldIE) {\n\t\t\tframework.bind(self.scrollWrap, _downEvents, self); // no dragging for old IE\n\t\t}\t\n\n\t\t_listen('initialZoomInEnd', function() {\n\t\t\tself.setContent(_itemHolders[0], _currentItemIndex-1);\n\t\t\tself.setContent(_itemHolders[2], _currentItemIndex+1);\n\n\t\t\t_itemHolders[0].el.style.display = _itemHolders[2].el.style.display = 'block';\n\n\t\t\tif(_options.focus) {\n\t\t\t\t// focus causes layout, \n\t\t\t\t// which causes lag during the animation, \n\t\t\t\t// that's why we delay it untill the initial zoom transition ends\n\t\t\t\ttemplate.focus();\n\t\t\t}\n\t\t\t \n\n\t\t\t_bindEvents();\n\t\t});\n\n\t\t// set content for center slide (first time)\n\t\tself.setContent(_itemHolders[1], _currentItemIndex);\n\t\t\n\t\tself.updateCurrItem();\n\n\t\t_shout('afterInit');\n\n\t\tif(!_isFixedPosition) {\n\n\t\t\t// On all versions of iOS lower than 8.0, we check size of viewport every second.\n\t\t\t// \n\t\t\t// This is done to detect when Safari top & bottom bars appear, \n\t\t\t// as this action doesn't trigger any events (like resize). \n\t\t\t// \n\t\t\t// On iOS8 they fixed this.\n\t\t\t// \n\t\t\t// 10 Nov 2014: iOS 7 usage ~40%. iOS 8 usage 56%.\n\t\t\t\n\t\t\t_updateSizeInterval = setInterval(function() {\n\t\t\t\tif(!_numAnimations && !_isDragging && !_isZooming && (_currZoomLevel === self.currItem.initialZoomLevel)  ) {\n\t\t\t\t\tself.updateSize();\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t}\n\n\t\tframework.addClass(template, 'pswp--visible');\n\t},\n\n\t// Close the gallery, then destroy it\n\tclose: function() {\n\t\tif(!_isOpen) {\n\t\t\treturn;\n\t\t}\n\n\t\t_isOpen = false;\n\t\t_isDestroying = true;\n\t\t_shout('close');\n\t\t_unbindEvents();\n\n\t\t_showOrHide(self.currItem, null, true, self.destroy);\n\t},\n\n\t// destroys the gallery (unbinds events, cleans up intervals and timeouts to avoid memory leaks)\n\tdestroy: function() {\n\t\t_shout('destroy');\n\n\t\tif(_showOrHideTimeout) {\n\t\t\tclearTimeout(_showOrHideTimeout);\n\t\t}\n\t\t\n\t\ttemplate.setAttribute('aria-hidden', 'true');\n\t\ttemplate.className = _initalClassName;\n\n\t\tif(_updateSizeInterval) {\n\t\t\tclearInterval(_updateSizeInterval);\n\t\t}\n\n\t\tframework.unbind(self.scrollWrap, _downEvents, self);\n\n\t\t// we unbind scroll event at the end, as closing animation may depend on it\n\t\tframework.unbind(window, 'scroll', self);\n\n\t\t_stopDragUpdateLoop();\n\n\t\t_stopAllAnimations();\n\n\t\t_listeners = null;\n\t},\n\n\t/**\n\t * Pan image to position\n\t * @param {Number} x     \n\t * @param {Number} y     \n\t * @param {Boolean} force Will ignore bounds if set to true.\n\t */\n\tpanTo: function(x,y,force) {\n\t\tif(!force) {\n\t\t\tif(x > _currPanBounds.min.x) {\n\t\t\t\tx = _currPanBounds.min.x;\n\t\t\t} else if(x < _currPanBounds.max.x) {\n\t\t\t\tx = _currPanBounds.max.x;\n\t\t\t}\n\n\t\t\tif(y > _currPanBounds.min.y) {\n\t\t\t\ty = _currPanBounds.min.y;\n\t\t\t} else if(y < _currPanBounds.max.y) {\n\t\t\t\ty = _currPanBounds.max.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\t_panOffset.x = x;\n\t\t_panOffset.y = y;\n\t\t_applyCurrentZoomPan();\n\t},\n\t\n\thandleEvent: function (e) {\n\t\te = e || window.event;\n\t\tif(_globalEventHandlers[e.type]) {\n\t\t\t_globalEventHandlers[e.type](e);\n\t\t}\n\t},\n\n\n\tgoTo: function(index) {\n\n\t\tindex = _getLoopedId(index);\n\n\t\tvar diff = index - _currentItemIndex;\n\t\t_indexDiff = diff;\n\n\t\t_currentItemIndex = index;\n\t\tself.currItem = _getItemAt( _currentItemIndex );\n\t\t_currPositionIndex -= diff;\n\t\t\n\t\t_moveMainScroll(_slideSize.x * _currPositionIndex);\n\t\t\n\n\t\t_stopAllAnimations();\n\t\t_mainScrollAnimating = false;\n\n\t\tself.updateCurrItem();\n\t},\n\tnext: function() {\n\t\tself.goTo( _currentItemIndex + 1);\n\t},\n\tprev: function() {\n\t\tself.goTo( _currentItemIndex - 1);\n\t},\n\n\t// update current zoom/pan objects\n\tupdateCurrZoomItem: function(emulateSetContent) {\n\t\tif(emulateSetContent) {\n\t\t\t_shout('beforeChange', 0);\n\t\t}\n\n\t\t// itemHolder[1] is middle (current) item\n\t\tif(_itemHolders[1].el.children.length) {\n\t\t\tvar zoomElement = _itemHolders[1].el.children[0];\n\t\t\tif( framework.hasClass(zoomElement, 'pswp__zoom-wrap') ) {\n\t\t\t\t_currZoomElementStyle = zoomElement.style;\n\t\t\t} else {\n\t\t\t\t_currZoomElementStyle = null;\n\t\t\t}\n\t\t} else {\n\t\t\t_currZoomElementStyle = null;\n\t\t}\n\t\t\n\t\t_currPanBounds = self.currItem.bounds;\t\n\t\t_startZoomLevel = _currZoomLevel = self.currItem.initialZoomLevel;\n\n\t\t_panOffset.x = _currPanBounds.center.x;\n\t\t_panOffset.y = _currPanBounds.center.y;\n\n\t\tif(emulateSetContent) {\n\t\t\t_shout('afterChange');\n\t\t}\n\t},\n\n\n\tinvalidateCurrItems: function() {\n\t\t_itemsNeedUpdate = true;\n\t\tfor(var i = 0; i < NUM_HOLDERS; i++) {\n\t\t\tif( _itemHolders[i].item ) {\n\t\t\t\t_itemHolders[i].item.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t},\n\n\tupdateCurrItem: function(beforeAnimation) {\n\n\t\tif(_indexDiff === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar diffAbs = Math.abs(_indexDiff),\n\t\t\ttempHolder;\n\n\t\tif(beforeAnimation && diffAbs < 2) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tself.currItem = _getItemAt( _currentItemIndex );\n\t\t_renderMaxResolution = false;\n\t\t\n\t\t_shout('beforeChange', _indexDiff);\n\n\t\tif(diffAbs >= NUM_HOLDERS) {\n\t\t\t_containerShiftIndex += _indexDiff + (_indexDiff > 0 ? -NUM_HOLDERS : NUM_HOLDERS);\n\t\t\tdiffAbs = NUM_HOLDERS;\n\t\t}\n\t\tfor(var i = 0; i < diffAbs; i++) {\n\t\t\tif(_indexDiff > 0) {\n\t\t\t\ttempHolder = _itemHolders.shift();\n\t\t\t\t_itemHolders[NUM_HOLDERS-1] = tempHolder; // move first to last\n\n\t\t\t\t_containerShiftIndex++;\n\t\t\t\t_setTranslateX( (_containerShiftIndex+2) * _slideSize.x, tempHolder.el.style);\n\t\t\t\tself.setContent(tempHolder, _currentItemIndex - diffAbs + i + 1 + 1);\n\t\t\t} else {\n\t\t\t\ttempHolder = _itemHolders.pop();\n\t\t\t\t_itemHolders.unshift( tempHolder ); // move last to first\n\n\t\t\t\t_containerShiftIndex--;\n\t\t\t\t_setTranslateX( _containerShiftIndex * _slideSize.x, tempHolder.el.style);\n\t\t\t\tself.setContent(tempHolder, _currentItemIndex + diffAbs - i - 1 - 1);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t// reset zoom/pan on previous item\n\t\tif(_currZoomElementStyle && Math.abs(_indexDiff) === 1) {\n\n\t\t\tvar prevItem = _getItemAt(_prevItemIndex);\n\t\t\tif(prevItem.initialZoomLevel !== _currZoomLevel) {\n\t\t\t\t_calculateItemSize(prevItem , _viewportSize );\n\t\t\t\t_setImageSize(prevItem);\n\t\t\t\t_applyZoomPanToItem( prevItem ); \t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\t// reset diff after update\n\t\t_indexDiff = 0;\n\n\t\tself.updateCurrZoomItem();\n\n\t\t_prevItemIndex = _currentItemIndex;\n\n\t\t_shout('afterChange');\n\t\t\n\t},\n\n\n\n\tupdateSize: function(force) {\n\t\t\n\t\tif(!_isFixedPosition && _options.modal) {\n\t\t\tvar windowScrollY = framework.getScrollY();\n\t\t\tif(_currentWindowScrollY !== windowScrollY) {\n\t\t\t\ttemplate.style.top = windowScrollY + 'px';\n\t\t\t\t_currentWindowScrollY = windowScrollY;\n\t\t\t}\n\t\t\tif(!force && _windowVisibleSize.x === window.innerWidth && _windowVisibleSize.y === window.innerHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_windowVisibleSize.x = window.innerWidth;\n\t\t\t_windowVisibleSize.y = window.innerHeight;\n\n\t\t\t//template.style.width = _windowVisibleSize.x + 'px';\n\t\t\ttemplate.style.height = _windowVisibleSize.y + 'px';\n\t\t}\n\n\n\n\t\t_viewportSize.x = self.scrollWrap.clientWidth;\n\t\t_viewportSize.y = self.scrollWrap.clientHeight;\n\n\t\t_updatePageScrollOffset();\n\n\t\t_slideSize.x = _viewportSize.x + Math.round(_viewportSize.x * _options.spacing);\n\t\t_slideSize.y = _viewportSize.y;\n\n\t\t_moveMainScroll(_slideSize.x * _currPositionIndex);\n\n\t\t_shout('beforeResize'); // even may be used for example to switch image sources\n\n\n\t\t// don't re-calculate size on inital size update\n\t\tif(_containerShiftIndex !== undefined) {\n\n\t\t\tvar holder,\n\t\t\t\titem,\n\t\t\t\thIndex;\n\n\t\t\tfor(var i = 0; i < NUM_HOLDERS; i++) {\n\t\t\t\tholder = _itemHolders[i];\n\t\t\t\t_setTranslateX( (i+_containerShiftIndex) * _slideSize.x, holder.el.style);\n\n\t\t\t\thIndex = _currentItemIndex+i-1;\n\n\t\t\t\tif(_options.loop && _getNumItems() > 2) {\n\t\t\t\t\thIndex = _getLoopedId(hIndex);\n\t\t\t\t}\n\n\t\t\t\t// update zoom level on items and refresh source (if needsUpdate)\n\t\t\t\titem = _getItemAt( hIndex );\n\n\t\t\t\t// re-render gallery item if `needsUpdate`,\n\t\t\t\t// or doesn't have `bounds` (entirely new slide object)\n\t\t\t\tif( item && (_itemsNeedUpdate || item.needsUpdate || !item.bounds) ) {\n\n\t\t\t\t\tself.cleanSlide( item );\n\t\t\t\t\t\n\t\t\t\t\tself.setContent( holder, hIndex );\n\n\t\t\t\t\t// if \"center\" slide\n\t\t\t\t\tif(i === 1) {\n\t\t\t\t\t\tself.currItem = item;\n\t\t\t\t\t\tself.updateCurrZoomItem(true);\n\t\t\t\t\t}\n\n\t\t\t\t\titem.needsUpdate = false;\n\n\t\t\t\t} else if(holder.index === -1 && hIndex >= 0) {\n\t\t\t\t\t// add content first time\n\t\t\t\t\tself.setContent( holder, hIndex );\n\t\t\t\t}\n\t\t\t\tif(item && item.container) {\n\t\t\t\t\t_calculateItemSize(item, _viewportSize);\n\t\t\t\t\t_setImageSize(item);\n\t\t\t\t\t_applyZoomPanToItem( item );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t_itemsNeedUpdate = false;\n\t\t}\t\n\n\t\t_startZoomLevel = _currZoomLevel = self.currItem.initialZoomLevel;\n\t\t_currPanBounds = self.currItem.bounds;\n\n\t\tif(_currPanBounds) {\n\t\t\t_panOffset.x = _currPanBounds.center.x;\n\t\t\t_panOffset.y = _currPanBounds.center.y;\n\t\t\t_applyCurrentZoomPan( true );\n\t\t}\n\t\t\n\t\t_shout('resize');\n\t},\n\t\n\t// Zoom current item to\n\tzoomTo: function(destZoomLevel, centerPoint, speed, easingFn, updateFn) {\n\t\t/*\n\t\t\tif(destZoomLevel === 'fit') {\n\t\t\t\tdestZoomLevel = self.currItem.fitRatio;\n\t\t\t} else if(destZoomLevel === 'fill') {\n\t\t\t\tdestZoomLevel = self.currItem.fillRatio;\n\t\t\t}\n\t\t*/\n\n\t\tif(centerPoint) {\n\t\t\t_startZoomLevel = _currZoomLevel;\n\t\t\t_midZoomPoint.x = Math.abs(centerPoint.x) - _panOffset.x ;\n\t\t\t_midZoomPoint.y = Math.abs(centerPoint.y) - _panOffset.y ;\n\t\t\t_equalizePoints(_startPanOffset, _panOffset);\n\t\t}\n\n\t\tvar destPanBounds = _calculatePanBounds(destZoomLevel, false),\n\t\t\tdestPanOffset = {};\n\n\t\t_modifyDestPanOffset('x', destPanBounds, destPanOffset, destZoomLevel);\n\t\t_modifyDestPanOffset('y', destPanBounds, destPanOffset, destZoomLevel);\n\n\t\tvar initialZoomLevel = _currZoomLevel;\n\t\tvar initialPanOffset = {\n\t\t\tx: _panOffset.x,\n\t\t\ty: _panOffset.y\n\t\t};\n\n\t\t_roundPoint(destPanOffset);\n\n\t\tvar onUpdate = function(now) {\n\t\t\tif(now === 1) {\n\t\t\t\t_currZoomLevel = destZoomLevel;\n\t\t\t\t_panOffset.x = destPanOffset.x;\n\t\t\t\t_panOffset.y = destPanOffset.y;\n\t\t\t} else {\n\t\t\t\t_currZoomLevel = (destZoomLevel - initialZoomLevel) * now + initialZoomLevel;\n\t\t\t\t_panOffset.x = (destPanOffset.x - initialPanOffset.x) * now + initialPanOffset.x;\n\t\t\t\t_panOffset.y = (destPanOffset.y - initialPanOffset.y) * now + initialPanOffset.y;\n\t\t\t}\n\n\t\t\tif(updateFn) {\n\t\t\t\tupdateFn(now);\n\t\t\t}\n\n\t\t\t_applyCurrentZoomPan( now === 1 );\n\t\t};\n\n\t\tif(speed) {\n\t\t\t_animateProp('customZoomTo', 0, 1, speed, easingFn || framework.easing.sine.inOut, onUpdate);\n\t\t} else {\n\t\t\tonUpdate(1);\n\t\t}\n\t}\n\n\n};\n\n\n/*>>core*/\n\n/*>>gestures*/\n/**\n * Mouse/touch/pointer event handlers.\n * \n * separated from @core.js for readability\n */\n\nvar MIN_SWIPE_DISTANCE = 30,\n\tDIRECTION_CHECK_OFFSET = 10; // amount of pixels to drag to determine direction of swipe\n\nvar _gestureStartTime,\n\t_gestureCheckSpeedTime,\n\n\t// pool of objects that are used during dragging of zooming\n\tp = {}, // first point\n\tp2 = {}, // second point (for zoom gesture)\n\tdelta = {},\n\t_currPoint = {},\n\t_startPoint = {},\n\t_currPointers = [],\n\t_startMainScrollPos = {},\n\t_releaseAnimData,\n\t_posPoints = [], // array of points during dragging, used to determine type of gesture\n\t_tempPoint = {},\n\n\t_isZoomingIn,\n\t_verticalDragInitiated,\n\t_oldAndroidTouchEndTimeout,\n\t_currZoomedItemIndex = 0,\n\t_centerPoint = _getEmptyPoint(),\n\t_lastReleaseTime = 0,\n\t_isDragging, // at least one pointer is down\n\t_isMultitouch, // at least two _pointers are down\n\t_zoomStarted, // zoom level changed during zoom gesture\n\t_moved,\n\t_dragAnimFrame,\n\t_mainScrollShifted,\n\t_currentPoints, // array of current touch points\n\t_isZooming,\n\t_currPointsDistance,\n\t_startPointsDistance,\n\t_currPanBounds,\n\t_mainScrollPos = _getEmptyPoint(),\n\t_currZoomElementStyle,\n\t_mainScrollAnimating, // true, if animation after swipe gesture is running\n\t_midZoomPoint = _getEmptyPoint(),\n\t_currCenterPoint = _getEmptyPoint(),\n\t_direction,\n\t_isFirstMove,\n\t_opacityChanged,\n\t_bgOpacity,\n\t_wasOverInitialZoom,\n\n\t_isEqualPoints = function(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t},\n\t_isNearbyPoints = function(touch0, touch1) {\n\t\treturn Math.abs(touch0.x - touch1.x) < DOUBLE_TAP_RADIUS && Math.abs(touch0.y - touch1.y) < DOUBLE_TAP_RADIUS;\n\t},\n\t_calculatePointsDistance = function(p1, p2) {\n\t\t_tempPoint.x = Math.abs( p1.x - p2.x );\n\t\t_tempPoint.y = Math.abs( p1.y - p2.y );\n\t\treturn Math.sqrt(_tempPoint.x * _tempPoint.x + _tempPoint.y * _tempPoint.y);\n\t},\n\t_stopDragUpdateLoop = function() {\n\t\tif(_dragAnimFrame) {\n\t\t\t_cancelAF(_dragAnimFrame);\n\t\t\t_dragAnimFrame = null;\n\t\t}\n\t},\n\t_dragUpdateLoop = function() {\n\t\tif(_isDragging) {\n\t\t\t_dragAnimFrame = _requestAF(_dragUpdateLoop);\n\t\t\t_renderMovement();\n\t\t}\n\t},\n\t_canPan = function() {\n\t\treturn !(_options.scaleMode === 'fit' && _currZoomLevel ===  self.currItem.initialZoomLevel);\n\t},\n\t\n\t// find the closest parent DOM element\n\t_closestElement = function(el, fn) {\n\t  \tif(!el || el === document) {\n\t  \t\treturn false;\n\t  \t}\n\n\t  \t// don't search elements above pswp__scroll-wrap\n\t  \tif(el.getAttribute('class') && el.getAttribute('class').indexOf('pswp__scroll-wrap') > -1 ) {\n\t  \t\treturn false;\n\t  \t}\n\n\t  \tif( fn(el) ) {\n\t  \t\treturn el;\n\t  \t}\n\n\t  \treturn _closestElement(el.parentNode, fn);\n\t},\n\n\t_preventObj = {},\n\t_preventDefaultEventBehaviour = function(e, isDown) {\n\t    _preventObj.prevent = !_closestElement(e.target, _options.isClickableElement);\n\n\t\t_shout('preventDragEvent', e, isDown, _preventObj);\n\t\treturn _preventObj.prevent;\n\n\t},\n\t_convertTouchToPoint = function(touch, p) {\n\t\tp.x = touch.pageX;\n\t\tp.y = touch.pageY;\n\t\tp.id = touch.identifier;\n\t\treturn p;\n\t},\n\t_findCenterOfPoints = function(p1, p2, pCenter) {\n\t\tpCenter.x = (p1.x + p2.x) * 0.5;\n\t\tpCenter.y = (p1.y + p2.y) * 0.5;\n\t},\n\t_pushPosPoint = function(time, x, y) {\n\t\tif(time - _gestureCheckSpeedTime > 50) {\n\t\t\tvar o = _posPoints.length > 2 ? _posPoints.shift() : {};\n\t\t\to.x = x;\n\t\t\to.y = y; \n\t\t\t_posPoints.push(o);\n\t\t\t_gestureCheckSpeedTime = time;\n\t\t}\n\t},\n\n\t_calculateVerticalDragOpacityRatio = function() {\n\t\tvar yOffset = _panOffset.y - self.currItem.initialPosition.y; // difference between initial and current position\n\t\treturn 1 -  Math.abs( yOffset / (_viewportSize.y / 2)  );\n\t},\n\n\t\n\t// points pool, reused during touch events\n\t_ePoint1 = {},\n\t_ePoint2 = {},\n\t_tempPointsArr = [],\n\t_tempCounter,\n\t_getTouchPoints = function(e) {\n\t\t// clean up previous points, without recreating array\n\t\twhile(_tempPointsArr.length > 0) {\n\t\t\t_tempPointsArr.pop();\n\t\t}\n\n\t\tif(!_pointerEventEnabled) {\n\t\t\tif(e.type.indexOf('touch') > -1) {\n\n\t\t\t\tif(e.touches && e.touches.length > 0) {\n\t\t\t\t\t_tempPointsArr[0] = _convertTouchToPoint(e.touches[0], _ePoint1);\n\t\t\t\t\tif(e.touches.length > 1) {\n\t\t\t\t\t\t_tempPointsArr[1] = _convertTouchToPoint(e.touches[1], _ePoint2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t_ePoint1.x = e.pageX;\n\t\t\t\t_ePoint1.y = e.pageY;\n\t\t\t\t_ePoint1.id = '';\n\t\t\t\t_tempPointsArr[0] = _ePoint1;//_ePoint1;\n\t\t\t}\n\t\t} else {\n\t\t\t_tempCounter = 0;\n\t\t\t// we can use forEach, as pointer events are supported only in modern browsers\n\t\t\t_currPointers.forEach(function(p) {\n\t\t\t\tif(_tempCounter === 0) {\n\t\t\t\t\t_tempPointsArr[0] = p;\n\t\t\t\t} else if(_tempCounter === 1) {\n\t\t\t\t\t_tempPointsArr[1] = p;\n\t\t\t\t}\n\t\t\t\t_tempCounter++;\n\n\t\t\t});\n\t\t}\n\t\treturn _tempPointsArr;\n\t},\n\n\t_panOrMoveMainScroll = function(axis, delta) {\n\n\t\tvar panFriction,\n\t\t\toverDiff = 0,\n\t\t\tnewOffset = _panOffset[axis] + delta[axis],\n\t\t\tstartOverDiff,\n\t\t\tdir = delta[axis] > 0,\n\t\t\tnewMainScrollPosition = _mainScrollPos.x + delta.x,\n\t\t\tmainScrollDiff = _mainScrollPos.x - _startMainScrollPos.x,\n\t\t\tnewPanPos,\n\t\t\tnewMainScrollPos;\n\n\t\t// calculate fdistance over the bounds and friction\n\t\tif(newOffset > _currPanBounds.min[axis] || newOffset < _currPanBounds.max[axis]) {\n\t\t\tpanFriction = _options.panEndFriction;\n\t\t\t// Linear increasing of friction, so at 1/4 of viewport it's at max value. \n\t\t\t// Looks not as nice as was expected. Left for history.\n\t\t\t// panFriction = (1 - (_panOffset[axis] + delta[axis] + panBounds.min[axis]) / (_viewportSize[axis] / 4) );\n\t\t} else {\n\t\t\tpanFriction = 1;\n\t\t}\n\t\t\n\t\tnewOffset = _panOffset[axis] + delta[axis] * panFriction;\n\n\t\t// move main scroll or start panning\n\t\tif(_options.allowPanToNext || _currZoomLevel === self.currItem.initialZoomLevel) {\n\n\n\t\t\tif(!_currZoomElementStyle) {\n\t\t\t\t\n\t\t\t\tnewMainScrollPos = newMainScrollPosition;\n\n\t\t\t} else if(_direction === 'h' && axis === 'x' && !_zoomStarted ) {\n\t\t\t\t\n\t\t\t\tif(dir) {\n\t\t\t\t\tif(newOffset > _currPanBounds.min[axis]) {\n\t\t\t\t\t\tpanFriction = _options.panEndFriction;\n\t\t\t\t\t\toverDiff = _currPanBounds.min[axis] - newOffset;\n\t\t\t\t\t\tstartOverDiff = _currPanBounds.min[axis] - _startPanOffset[axis];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// drag right\n\t\t\t\t\tif( (startOverDiff <= 0 || mainScrollDiff < 0) && _getNumItems() > 1 ) {\n\t\t\t\t\t\tnewMainScrollPos = newMainScrollPosition;\n\t\t\t\t\t\tif(mainScrollDiff < 0 && newMainScrollPosition > _startMainScrollPos.x) {\n\t\t\t\t\t\t\tnewMainScrollPos = _startMainScrollPos.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(_currPanBounds.min.x !== _currPanBounds.max.x) {\n\t\t\t\t\t\t\tnewPanPos = newOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif(newOffset < _currPanBounds.max[axis] ) {\n\t\t\t\t\t\tpanFriction =_options.panEndFriction;\n\t\t\t\t\t\toverDiff = newOffset - _currPanBounds.max[axis];\n\t\t\t\t\t\tstartOverDiff = _startPanOffset[axis] - _currPanBounds.max[axis];\n\t\t\t\t\t}\n\n\t\t\t\t\tif( (startOverDiff <= 0 || mainScrollDiff > 0) && _getNumItems() > 1 ) {\n\t\t\t\t\t\tnewMainScrollPos = newMainScrollPosition;\n\n\t\t\t\t\t\tif(mainScrollDiff > 0 && newMainScrollPosition < _startMainScrollPos.x) {\n\t\t\t\t\t\t\tnewMainScrollPos = _startMainScrollPos.x;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(_currPanBounds.min.x !== _currPanBounds.max.x) {\n\t\t\t\t\t\t\tnewPanPos = newOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\t//\n\t\t\t}\n\n\t\t\tif(axis === 'x') {\n\n\t\t\t\tif(newMainScrollPos !== undefined) {\n\t\t\t\t\t_moveMainScroll(newMainScrollPos, true);\n\t\t\t\t\tif(newMainScrollPos === _startMainScrollPos.x) {\n\t\t\t\t\t\t_mainScrollShifted = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_mainScrollShifted = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(_currPanBounds.min.x !== _currPanBounds.max.x) {\n\t\t\t\t\tif(newPanPos !== undefined) {\n\t\t\t\t\t\t_panOffset.x = newPanPos;\n\t\t\t\t\t} else if(!_mainScrollShifted) {\n\t\t\t\t\t\t_panOffset.x += delta.x * panFriction;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newMainScrollPos !== undefined;\n\t\t\t}\n\n\t\t}\n\n\t\tif(!_mainScrollAnimating) {\n\t\t\t\n\t\t\tif(!_mainScrollShifted) {\n\t\t\t\tif(_currZoomLevel > self.currItem.fitRatio) {\n\t\t\t\t\t_panOffset[axis] += delta[axis] * panFriction;\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t\t\n\t},\n\n\t// Pointerdown/touchstart/mousedown handler\n\t_onDragStart = function(e) {\n\n\t\t// Allow dragging only via left mouse button.\n\t\t// As this handler is not added in IE8 - we ignore e.which\n\t\t// \n\t\t// http://www.quirksmode.org/js/events_properties.html\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/event.button\n\t\tif(e.type === 'mousedown' && e.button > 0  ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_initialZoomRunning) {\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif(_oldAndroidTouchEndTimeout && e.type === 'mousedown') {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_preventDefaultEventBehaviour(e, true)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\n\n\t\t_shout('pointerDown');\n\n\t\tif(_pointerEventEnabled) {\n\t\t\tvar pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\t\t\tif(pointerIndex < 0) {\n\t\t\t\tpointerIndex = _currPointers.length;\n\t\t\t}\n\t\t\t_currPointers[pointerIndex] = {x:e.pageX, y:e.pageY, id: e.pointerId};\n\t\t}\n\t\t\n\n\n\t\tvar startPointsList = _getTouchPoints(e),\n\t\t\tnumPoints = startPointsList.length;\n\n\t\t_currentPoints = null;\n\n\t\t_stopAllAnimations();\n\n\t\t// init drag\n\t\tif(!_isDragging || numPoints === 1) {\n\n\t\t\t\n\n\t\t\t_isDragging = _isFirstMove = true;\n\t\t\tframework.bind(window, _upMoveEvents, self);\n\n\t\t\t_isZoomingIn = \n\t\t\t\t_wasOverInitialZoom = \n\t\t\t\t_opacityChanged = \n\t\t\t\t_verticalDragInitiated = \n\t\t\t\t_mainScrollShifted = \n\t\t\t\t_moved = \n\t\t\t\t_isMultitouch = \n\t\t\t\t_zoomStarted = false;\n\n\t\t\t_direction = null;\n\n\t\t\t_shout('firstTouchStart', startPointsList);\n\n\t\t\t_equalizePoints(_startPanOffset, _panOffset);\n\n\t\t\t_currPanDist.x = _currPanDist.y = 0;\n\t\t\t_equalizePoints(_currPoint, startPointsList[0]);\n\t\t\t_equalizePoints(_startPoint, _currPoint);\n\n\t\t\t//_equalizePoints(_startMainScrollPos, _mainScrollPos);\n\t\t\t_startMainScrollPos.x = _slideSize.x * _currPositionIndex;\n\n\t\t\t_posPoints = [{\n\t\t\t\tx: _currPoint.x,\n\t\t\t\ty: _currPoint.y\n\t\t\t}];\n\n\t\t\t_gestureCheckSpeedTime = _gestureStartTime = _getCurrentTime();\n\n\t\t\t//_mainScrollAnimationEnd(true);\n\t\t\t_calculatePanBounds( _currZoomLevel, true );\n\t\t\t\n\t\t\t// Start rendering\n\t\t\t_stopDragUpdateLoop();\n\t\t\t_dragUpdateLoop();\n\t\t\t\n\t\t}\n\n\t\t// init zoom\n\t\tif(!_isZooming && numPoints > 1 && !_mainScrollAnimating && !_mainScrollShifted) {\n\t\t\t_startZoomLevel = _currZoomLevel;\n\t\t\t_zoomStarted = false; // true if zoom changed at least once\n\n\t\t\t_isZooming = _isMultitouch = true;\n\t\t\t_currPanDist.y = _currPanDist.x = 0;\n\n\t\t\t_equalizePoints(_startPanOffset, _panOffset);\n\n\t\t\t_equalizePoints(p, startPointsList[0]);\n\t\t\t_equalizePoints(p2, startPointsList[1]);\n\n\t\t\t_findCenterOfPoints(p, p2, _currCenterPoint);\n\n\t\t\t_midZoomPoint.x = Math.abs(_currCenterPoint.x) - _panOffset.x;\n\t\t\t_midZoomPoint.y = Math.abs(_currCenterPoint.y) - _panOffset.y;\n\t\t\t_currPointsDistance = _startPointsDistance = _calculatePointsDistance(p, p2);\n\t\t}\n\n\n\t},\n\n\t// Pointermove/touchmove/mousemove handler\n\t_onDragMove = function(e) {\n\n\t\te.preventDefault();\n\n\t\tif(_pointerEventEnabled) {\n\t\t\tvar pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\t\t\tif(pointerIndex > -1) {\n\t\t\t\tvar p = _currPointers[pointerIndex];\n\t\t\t\tp.x = e.pageX;\n\t\t\t\tp.y = e.pageY; \n\t\t\t}\n\t\t}\n\n\t\tif(_isDragging) {\n\t\t\tvar touchesList = _getTouchPoints(e);\n\t\t\tif(!_direction && !_moved && !_isZooming) {\n\n\t\t\t\tif(_mainScrollPos.x !== _slideSize.x * _currPositionIndex) {\n\t\t\t\t\t// if main scroll position is shifted – direction is always horizontal\n\t\t\t\t\t_direction = 'h';\n\t\t\t\t} else {\n\t\t\t\t\tvar diff = Math.abs(touchesList[0].x - _currPoint.x) - Math.abs(touchesList[0].y - _currPoint.y);\n\t\t\t\t\t// check the direction of movement\n\t\t\t\t\tif(Math.abs(diff) >= DIRECTION_CHECK_OFFSET) {\n\t\t\t\t\t\t_direction = diff > 0 ? 'h' : 'v';\n\t\t\t\t\t\t_currentPoints = touchesList;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t_currentPoints = touchesList;\n\t\t\t}\n\t\t}\t\n\t},\n\t// \n\t_renderMovement =  function() {\n\n\t\tif(!_currentPoints) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar numPoints = _currentPoints.length;\n\n\t\tif(numPoints === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t_equalizePoints(p, _currentPoints[0]);\n\n\t\tdelta.x = p.x - _currPoint.x;\n\t\tdelta.y = p.y - _currPoint.y;\n\n\t\tif(_isZooming && numPoints > 1) {\n\t\t\t// Handle behaviour for more than 1 point\n\n\t\t\t_currPoint.x = p.x;\n\t\t\t_currPoint.y = p.y;\n\t\t\n\t\t\t// check if one of two points changed\n\t\t\tif( !delta.x && !delta.y && _isEqualPoints(_currentPoints[1], p2) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_equalizePoints(p2, _currentPoints[1]);\n\n\n\t\t\tif(!_zoomStarted) {\n\t\t\t\t_zoomStarted = true;\n\t\t\t\t_shout('zoomGestureStarted');\n\t\t\t}\n\t\t\t\n\t\t\t// Distance between two points\n\t\t\tvar pointsDistance = _calculatePointsDistance(p,p2);\n\n\t\t\tvar zoomLevel = _calculateZoomLevel(pointsDistance);\n\n\t\t\t// slightly over the of initial zoom level\n\t\t\tif(zoomLevel > self.currItem.initialZoomLevel + self.currItem.initialZoomLevel / 15) {\n\t\t\t\t_wasOverInitialZoom = true;\n\t\t\t}\n\n\t\t\t// Apply the friction if zoom level is out of the bounds\n\t\t\tvar zoomFriction = 1,\n\t\t\t\tminZoomLevel = _getMinZoomLevel(),\n\t\t\t\tmaxZoomLevel = _getMaxZoomLevel();\n\n\t\t\tif ( zoomLevel < minZoomLevel ) {\n\t\t\t\t\n\t\t\t\tif(_options.pinchToClose && !_wasOverInitialZoom && _startZoomLevel <= self.currItem.initialZoomLevel) {\n\t\t\t\t\t// fade out background if zooming out\n\t\t\t\t\tvar minusDiff = minZoomLevel - zoomLevel;\n\t\t\t\t\tvar percent = 1 - minusDiff / (minZoomLevel / 1.2);\n\n\t\t\t\t\t_applyBgOpacity(percent);\n\t\t\t\t\t_shout('onPinchClose', percent);\n\t\t\t\t\t_opacityChanged = true;\n\t\t\t\t} else {\n\t\t\t\t\tzoomFriction = (minZoomLevel - zoomLevel) / minZoomLevel;\n\t\t\t\t\tif(zoomFriction > 1) {\n\t\t\t\t\t\tzoomFriction = 1;\n\t\t\t\t\t}\n\t\t\t\t\tzoomLevel = minZoomLevel - zoomFriction * (minZoomLevel / 3);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( zoomLevel > maxZoomLevel ) {\n\t\t\t\t// 1.5 - extra zoom level above the max. E.g. if max is x6, real max 6 + 1.5 = 7.5\n\t\t\t\tzoomFriction = (zoomLevel - maxZoomLevel) / ( minZoomLevel * 6 );\n\t\t\t\tif(zoomFriction > 1) {\n\t\t\t\t\tzoomFriction = 1;\n\t\t\t\t}\n\t\t\t\tzoomLevel = maxZoomLevel + zoomFriction * minZoomLevel;\n\t\t\t}\n\n\t\t\tif(zoomFriction < 0) {\n\t\t\t\tzoomFriction = 0;\n\t\t\t}\n\n\t\t\t// distance between touch points after friction is applied\n\t\t\t_currPointsDistance = pointsDistance;\n\n\t\t\t// _centerPoint - The point in the middle of two pointers\n\t\t\t_findCenterOfPoints(p, p2, _centerPoint);\n\t\t\n\t\t\t// paning with two pointers pressed\n\t\t\t_currPanDist.x += _centerPoint.x - _currCenterPoint.x;\n\t\t\t_currPanDist.y += _centerPoint.y - _currCenterPoint.y;\n\t\t\t_equalizePoints(_currCenterPoint, _centerPoint);\n\n\t\t\t_panOffset.x = _calculatePanOffset('x', zoomLevel);\n\t\t\t_panOffset.y = _calculatePanOffset('y', zoomLevel);\n\n\t\t\t_isZoomingIn = zoomLevel > _currZoomLevel;\n\t\t\t_currZoomLevel = zoomLevel;\n\t\t\t_applyCurrentZoomPan();\n\n\t\t} else {\n\n\t\t\t// handle behaviour for one point (dragging or panning)\n\n\t\t\tif(!_direction) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(_isFirstMove) {\n\t\t\t\t_isFirstMove = false;\n\n\t\t\t\t// subtract drag distance that was used during the detection direction  \n\n\t\t\t\tif( Math.abs(delta.x) >= DIRECTION_CHECK_OFFSET) {\n\t\t\t\t\tdelta.x -= _currentPoints[0].x - _startPoint.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( Math.abs(delta.y) >= DIRECTION_CHECK_OFFSET) {\n\t\t\t\t\tdelta.y -= _currentPoints[0].y - _startPoint.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_currPoint.x = p.x;\n\t\t\t_currPoint.y = p.y;\n\n\t\t\t// do nothing if pointers position hasn't changed\n\t\t\tif(delta.x === 0 && delta.y === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(_direction === 'v' && _options.closeOnVerticalDrag) {\n\t\t\t\tif(!_canPan()) {\n\t\t\t\t\t_currPanDist.y += delta.y;\n\t\t\t\t\t_panOffset.y += delta.y;\n\n\t\t\t\t\tvar opacityRatio = _calculateVerticalDragOpacityRatio();\n\n\t\t\t\t\t_verticalDragInitiated = true;\n\t\t\t\t\t_shout('onVerticalDrag', opacityRatio);\n\n\t\t\t\t\t_applyBgOpacity(opacityRatio);\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_pushPosPoint(_getCurrentTime(), p.x, p.y);\n\n\t\t\t_moved = true;\n\t\t\t_currPanBounds = self.currItem.bounds;\n\t\t\t\n\t\t\tvar mainScrollChanged = _panOrMoveMainScroll('x', delta);\n\t\t\tif(!mainScrollChanged) {\n\t\t\t\t_panOrMoveMainScroll('y', delta);\n\n\t\t\t\t_roundPoint(_panOffset);\n\t\t\t\t_applyCurrentZoomPan();\n\t\t\t}\n\n\t\t}\n\n\t},\n\t\n\t// Pointerup/pointercancel/touchend/touchcancel/mouseup event handler\n\t_onDragRelease = function(e) {\n\n\t\tif(_features.isOldAndroid ) {\n\n\t\t\tif(_oldAndroidTouchEndTimeout && e.type === 'mouseup') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// on Android (v4.1, 4.2, 4.3 & possibly older) \n\t\t\t// ghost mousedown/up event isn't preventable via e.preventDefault,\n\t\t\t// which causes fake mousedown event\n\t\t\t// so we block mousedown/up for 600ms\n\t\t\tif( e.type.indexOf('touch') > -1 ) {\n\t\t\t\tclearTimeout(_oldAndroidTouchEndTimeout);\n\t\t\t\t_oldAndroidTouchEndTimeout = setTimeout(function() {\n\t\t\t\t\t_oldAndroidTouchEndTimeout = 0;\n\t\t\t\t}, 600);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t_shout('pointerUp');\n\n\t\tif(_preventDefaultEventBehaviour(e, false)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tvar releasePoint;\n\n\t\tif(_pointerEventEnabled) {\n\t\t\tvar pointerIndex = framework.arraySearch(_currPointers, e.pointerId, 'id');\n\t\t\t\n\t\t\tif(pointerIndex > -1) {\n\t\t\t\treleasePoint = _currPointers.splice(pointerIndex, 1)[0];\n\n\t\t\t\tif(navigator.msPointerEnabled) {\n\t\t\t\t\tvar MSPOINTER_TYPES = {\n\t\t\t\t\t\t4: 'mouse', // event.MSPOINTER_TYPE_MOUSE\n\t\t\t\t\t\t2: 'touch', // event.MSPOINTER_TYPE_TOUCH \n\t\t\t\t\t\t3: 'pen' // event.MSPOINTER_TYPE_PEN\n\t\t\t\t\t};\n\t\t\t\t\treleasePoint.type = MSPOINTER_TYPES[e.pointerType];\n\n\t\t\t\t\tif(!releasePoint.type) {\n\t\t\t\t\t\treleasePoint.type = e.pointerType || 'mouse';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treleasePoint.type = e.pointerType || 'mouse';\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tvar touchList = _getTouchPoints(e),\n\t\t\tgestureType,\n\t\t\tnumPoints = touchList.length;\n\n\t\tif(e.type === 'mouseup') {\n\t\t\tnumPoints = 0;\n\t\t}\n\n\t\t// Do nothing if there were 3 touch points or more\n\t\tif(numPoints === 2) {\n\t\t\t_currentPoints = null;\n\t\t\treturn true;\n\t\t}\n\n\t\t// if second pointer released\n\t\tif(numPoints === 1) {\n\t\t\t_equalizePoints(_startPoint, touchList[0]);\n\t\t}\t\t\t\t\n\n\n\t\t// pointer hasn't moved, send \"tap release\" point\n\t\tif(numPoints === 0 && !_direction && !_mainScrollAnimating) {\n\t\t\tif(!releasePoint) {\n\t\t\t\tif(e.type === 'mouseup') {\n\t\t\t\t\treleasePoint = {x: e.pageX, y: e.pageY, type:'mouse'};\n\t\t\t\t} else if(e.changedTouches && e.changedTouches[0]) {\n\t\t\t\t\treleasePoint = {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY, type:'touch'};\n\t\t\t\t}\t\t\n\t\t\t}\n\n\t\t\t_shout('touchRelease', e, releasePoint);\n\t\t}\n\n\t\t// Difference in time between releasing of two last touch points (zoom gesture)\n\t\tvar releaseTimeDiff = -1;\n\n\t\t// Gesture completed, no pointers left\n\t\tif(numPoints === 0) {\n\t\t\t_isDragging = false;\n\t\t\tframework.unbind(window, _upMoveEvents, self);\n\n\t\t\t_stopDragUpdateLoop();\n\n\t\t\tif(_isZooming) {\n\t\t\t\t// Two points released at the same time\n\t\t\t\treleaseTimeDiff = 0;\n\t\t\t} else if(_lastReleaseTime !== -1) {\n\t\t\t\treleaseTimeDiff = _getCurrentTime() - _lastReleaseTime;\n\t\t\t}\n\t\t}\n\t\t_lastReleaseTime = numPoints === 1 ? _getCurrentTime() : -1;\n\t\t\n\t\tif(releaseTimeDiff !== -1 && releaseTimeDiff < 150) {\n\t\t\tgestureType = 'zoom';\n\t\t} else {\n\t\t\tgestureType = 'swipe';\n\t\t}\n\n\t\tif(_isZooming && numPoints < 2) {\n\t\t\t_isZooming = false;\n\n\t\t\t// Only second point released\n\t\t\tif(numPoints === 1) {\n\t\t\t\tgestureType = 'zoomPointerUp';\n\t\t\t}\n\t\t\t_shout('zoomGestureEnded');\n\t\t}\n\n\t\t_currentPoints = null;\n\t\tif(!_moved && !_zoomStarted && !_mainScrollAnimating && !_verticalDragInitiated) {\n\t\t\t// nothing to animate\n\t\t\treturn;\n\t\t}\n\t\n\t\t_stopAllAnimations();\n\n\t\t\n\t\tif(!_releaseAnimData) {\n\t\t\t_releaseAnimData = _initDragReleaseAnimationData();\n\t\t}\n\t\t\n\t\t_releaseAnimData.calculateSwipeSpeed('x');\n\n\n\t\tif(_verticalDragInitiated) {\n\n\t\t\tvar opacityRatio = _calculateVerticalDragOpacityRatio();\n\n\t\t\tif(opacityRatio < _options.verticalDragRange) {\n\t\t\t\tself.close();\n\t\t\t} else {\n\t\t\t\tvar initalPanY = _panOffset.y,\n\t\t\t\t\tinitialBgOpacity = _bgOpacity;\n\n\t\t\t\t_animateProp('verticalDrag', 0, 1, 300, framework.easing.cubic.out, function(now) {\n\t\t\t\t\t\n\t\t\t\t\t_panOffset.y = (self.currItem.initialPosition.y - initalPanY) * now + initalPanY;\n\n\t\t\t\t\t_applyBgOpacity(  (1 - initialBgOpacity) * now + initialBgOpacity );\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t});\n\n\t\t\t\t_shout('onVerticalDrag', 1);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\n\t\t// main scroll \n\t\tif(  (_mainScrollShifted || _mainScrollAnimating) && numPoints === 0) {\n\t\t\tvar itemChanged = _finishSwipeMainScrollGesture(gestureType, _releaseAnimData);\n\t\t\tif(itemChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgestureType = 'zoomPointerUp';\n\t\t}\n\n\t\t// prevent zoom/pan animation when main scroll animation runs\n\t\tif(_mainScrollAnimating) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Complete simple zoom gesture (reset zoom level if it's out of the bounds)  \n\t\tif(gestureType !== 'swipe') {\n\t\t\t_completeZoomGesture();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Complete pan gesture if main scroll is not shifted, and it's possible to pan current image\n\t\tif(!_mainScrollShifted && _currZoomLevel > self.currItem.fitRatio) {\n\t\t\t_completePanGesture(_releaseAnimData);\n\t\t}\n\t},\n\n\n\t// Returns object with data about gesture\n\t// It's created only once and then reused\n\t_initDragReleaseAnimationData  = function() {\n\t\t// temp local vars\n\t\tvar lastFlickDuration,\n\t\t\ttempReleasePos;\n\n\t\t// s = this\n\t\tvar s = {\n\t\t\tlastFlickOffset: {},\n\t\t\tlastFlickDist: {},\n\t\t\tlastFlickSpeed: {},\n\t\t\tslowDownRatio:  {},\n\t\t\tslowDownRatioReverse:  {},\n\t\t\tspeedDecelerationRatio:  {},\n\t\t\tspeedDecelerationRatioAbs:  {},\n\t\t\tdistanceOffset:  {},\n\t\t\tbackAnimDestination: {},\n\t\t\tbackAnimStarted: {},\n\t\t\tcalculateSwipeSpeed: function(axis) {\n\t\t\t\t\n\n\t\t\t\tif( _posPoints.length > 1) {\n\t\t\t\t\tlastFlickDuration = _getCurrentTime() - _gestureCheckSpeedTime + 50;\n\t\t\t\t\ttempReleasePos = _posPoints[_posPoints.length-2][axis];\n\t\t\t\t} else {\n\t\t\t\t\tlastFlickDuration = _getCurrentTime() - _gestureStartTime; // total gesture duration\n\t\t\t\t\ttempReleasePos = _startPoint[axis];\n\t\t\t\t}\n\t\t\t\ts.lastFlickOffset[axis] = _currPoint[axis] - tempReleasePos;\n\t\t\t\ts.lastFlickDist[axis] = Math.abs(s.lastFlickOffset[axis]);\n\t\t\t\tif(s.lastFlickDist[axis] > 20) {\n\t\t\t\t\ts.lastFlickSpeed[axis] = s.lastFlickOffset[axis] / lastFlickDuration;\n\t\t\t\t} else {\n\t\t\t\t\ts.lastFlickSpeed[axis] = 0;\n\t\t\t\t}\n\t\t\t\tif( Math.abs(s.lastFlickSpeed[axis]) < 0.1 ) {\n\t\t\t\t\ts.lastFlickSpeed[axis] = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ts.slowDownRatio[axis] = 0.95;\n\t\t\t\ts.slowDownRatioReverse[axis] = 1 - s.slowDownRatio[axis];\n\t\t\t\ts.speedDecelerationRatio[axis] = 1;\n\t\t\t},\n\n\t\t\tcalculateOverBoundsAnimOffset: function(axis, speed) {\n\t\t\t\tif(!s.backAnimStarted[axis]) {\n\n\t\t\t\t\tif(_panOffset[axis] > _currPanBounds.min[axis]) {\n\t\t\t\t\t\ts.backAnimDestination[axis] = _currPanBounds.min[axis];\n\t\t\t\t\t\t\n\t\t\t\t\t} else if(_panOffset[axis] < _currPanBounds.max[axis]) {\n\t\t\t\t\t\ts.backAnimDestination[axis] = _currPanBounds.max[axis];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(s.backAnimDestination[axis] !== undefined) {\n\t\t\t\t\t\ts.slowDownRatio[axis] = 0.7;\n\t\t\t\t\t\ts.slowDownRatioReverse[axis] = 1 - s.slowDownRatio[axis];\n\t\t\t\t\t\tif(s.speedDecelerationRatioAbs[axis] < 0.05) {\n\n\t\t\t\t\t\t\ts.lastFlickSpeed[axis] = 0;\n\t\t\t\t\t\t\ts.backAnimStarted[axis] = true;\n\n\t\t\t\t\t\t\t_animateProp('bounceZoomPan'+axis,_panOffset[axis], \n\t\t\t\t\t\t\t\ts.backAnimDestination[axis], \n\t\t\t\t\t\t\t\tspeed || 300, \n\t\t\t\t\t\t\t\tframework.easing.sine.out, \n\t\t\t\t\t\t\t\tfunction(pos) {\n\t\t\t\t\t\t\t\t\t_panOffset[axis] = pos;\n\t\t\t\t\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Reduces the speed by slowDownRatio (per 10ms)\n\t\t\tcalculateAnimOffset: function(axis) {\n\t\t\t\tif(!s.backAnimStarted[axis]) {\n\t\t\t\t\ts.speedDecelerationRatio[axis] = s.speedDecelerationRatio[axis] * (s.slowDownRatio[axis] + \n\t\t\t\t\t\t\t\t\t\t\t\ts.slowDownRatioReverse[axis] - \n\t\t\t\t\t\t\t\t\t\t\t\ts.slowDownRatioReverse[axis] * s.timeDiff / 10);\n\n\t\t\t\t\ts.speedDecelerationRatioAbs[axis] = Math.abs(s.lastFlickSpeed[axis] * s.speedDecelerationRatio[axis]);\n\t\t\t\t\ts.distanceOffset[axis] = s.lastFlickSpeed[axis] * s.speedDecelerationRatio[axis] * s.timeDiff;\n\t\t\t\t\t_panOffset[axis] += s.distanceOffset[axis];\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpanAnimLoop: function() {\n\t\t\t\tif ( _animations.zoomPan ) {\n\t\t\t\t\t_animations.zoomPan.raf = _requestAF(s.panAnimLoop);\n\n\t\t\t\t\ts.now = _getCurrentTime();\n\t\t\t\t\ts.timeDiff = s.now - s.lastNow;\n\t\t\t\t\ts.lastNow = s.now;\n\t\t\t\t\t\n\t\t\t\t\ts.calculateAnimOffset('x');\n\t\t\t\t\ts.calculateAnimOffset('y');\n\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\n\t\t\t\t\ts.calculateOverBoundsAnimOffset('x');\n\t\t\t\t\ts.calculateOverBoundsAnimOffset('y');\n\n\n\t\t\t\t\tif (s.speedDecelerationRatioAbs.x < 0.05 && s.speedDecelerationRatioAbs.y < 0.05) {\n\n\t\t\t\t\t\t// round pan position\n\t\t\t\t\t\t_panOffset.x = Math.round(_panOffset.x);\n\t\t\t\t\t\t_panOffset.y = Math.round(_panOffset.y);\n\t\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\t\n\t\t\t\t\t\t_stopAnimation('zoomPan');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t\treturn s;\n\t},\n\n\t_completePanGesture = function(animData) {\n\t\t// calculate swipe speed for Y axis (paanning)\n\t\tanimData.calculateSwipeSpeed('y');\n\n\t\t_currPanBounds = self.currItem.bounds;\n\t\t\n\t\tanimData.backAnimDestination = {};\n\t\tanimData.backAnimStarted = {};\n\n\t\t// Avoid acceleration animation if speed is too low\n\t\tif(Math.abs(animData.lastFlickSpeed.x) <= 0.05 && Math.abs(animData.lastFlickSpeed.y) <= 0.05 ) {\n\t\t\tanimData.speedDecelerationRatioAbs.x = animData.speedDecelerationRatioAbs.y = 0;\n\n\t\t\t// Run pan drag release animation. E.g. if you drag image and release finger without momentum.\n\t\t\tanimData.calculateOverBoundsAnimOffset('x');\n\t\t\tanimData.calculateOverBoundsAnimOffset('y');\n\t\t\treturn true;\n\t\t}\n\n\t\t// Animation loop that controls the acceleration after pan gesture ends\n\t\t_registerStartAnimation('zoomPan');\n\t\tanimData.lastNow = _getCurrentTime();\n\t\tanimData.panAnimLoop();\n\t},\n\n\n\t_finishSwipeMainScrollGesture = function(gestureType, _releaseAnimData) {\n\t\tvar itemChanged;\n\t\tif(!_mainScrollAnimating) {\n\t\t\t_currZoomedItemIndex = _currentItemIndex;\n\t\t}\n\n\n\t\t\n\t\tvar itemsDiff;\n\n\t\tif(gestureType === 'swipe') {\n\t\t\tvar totalShiftDist = _currPoint.x - _startPoint.x,\n\t\t\t\tisFastLastFlick = _releaseAnimData.lastFlickDist.x < 10;\n\n\t\t\t// if container is shifted for more than MIN_SWIPE_DISTANCE, \n\t\t\t// and last flick gesture was in right direction\n\t\t\tif(totalShiftDist > MIN_SWIPE_DISTANCE && \n\t\t\t\t(isFastLastFlick || _releaseAnimData.lastFlickOffset.x > 20) ) {\n\t\t\t\t// go to prev item\n\t\t\t\titemsDiff = -1;\n\t\t\t} else if(totalShiftDist < -MIN_SWIPE_DISTANCE && \n\t\t\t\t(isFastLastFlick || _releaseAnimData.lastFlickOffset.x < -20) ) {\n\t\t\t\t// go to next item\n\t\t\t\titemsDiff = 1;\n\t\t\t}\n\t\t}\n\n\t\tvar nextCircle;\n\n\t\tif(itemsDiff) {\n\t\t\t\n\t\t\t_currentItemIndex += itemsDiff;\n\n\t\t\tif(_currentItemIndex < 0) {\n\t\t\t\t_currentItemIndex = _options.loop ? _getNumItems()-1 : 0;\n\t\t\t\tnextCircle = true;\n\t\t\t} else if(_currentItemIndex >= _getNumItems()) {\n\t\t\t\t_currentItemIndex = _options.loop ? 0 : _getNumItems()-1;\n\t\t\t\tnextCircle = true;\n\t\t\t}\n\n\t\t\tif(!nextCircle || _options.loop) {\n\t\t\t\t_indexDiff += itemsDiff;\n\t\t\t\t_currPositionIndex -= itemsDiff;\n\t\t\t\titemChanged = true;\n\t\t\t}\n\t\t\t\n\n\t\t\t\n\t\t}\n\n\t\tvar animateToX = _slideSize.x * _currPositionIndex;\n\t\tvar animateToDist = Math.abs( animateToX - _mainScrollPos.x );\n\t\tvar finishAnimDuration;\n\n\n\t\tif(!itemChanged && animateToX > _mainScrollPos.x !== _releaseAnimData.lastFlickSpeed.x > 0) {\n\t\t\t// \"return to current\" duration, e.g. when dragging from slide 0 to -1\n\t\t\tfinishAnimDuration = 333; \n\t\t} else {\n\t\t\tfinishAnimDuration = Math.abs(_releaseAnimData.lastFlickSpeed.x) > 0 ? \n\t\t\t\t\t\t\t\t\tanimateToDist / Math.abs(_releaseAnimData.lastFlickSpeed.x) : \n\t\t\t\t\t\t\t\t\t333;\n\n\t\t\tfinishAnimDuration = Math.min(finishAnimDuration, 400);\n\t\t\tfinishAnimDuration = Math.max(finishAnimDuration, 250);\n\t\t}\n\n\t\tif(_currZoomedItemIndex === _currentItemIndex) {\n\t\t\titemChanged = false;\n\t\t}\n\t\t\n\t\t_mainScrollAnimating = true;\n\t\t\n\t\t_shout('mainScrollAnimStart');\n\n\t\t_animateProp('mainScroll', _mainScrollPos.x, animateToX, finishAnimDuration, framework.easing.cubic.out, \n\t\t\t_moveMainScroll,\n\t\t\tfunction() {\n\t\t\t\t_stopAllAnimations();\n\t\t\t\t_mainScrollAnimating = false;\n\t\t\t\t_currZoomedItemIndex = -1;\n\t\t\t\t\n\t\t\t\tif(itemChanged || _currZoomedItemIndex !== _currentItemIndex) {\n\t\t\t\t\tself.updateCurrItem();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t_shout('mainScrollAnimComplete');\n\t\t\t}\n\t\t);\n\n\t\tif(itemChanged) {\n\t\t\tself.updateCurrItem(true);\n\t\t}\n\n\t\treturn itemChanged;\n\t},\n\n\t_calculateZoomLevel = function(touchesDistance) {\n\t\treturn  1 / _startPointsDistance * touchesDistance * _startZoomLevel;\n\t},\n\n\t// Resets zoom if it's out of bounds\n\t_completeZoomGesture = function() {\n\t\tvar destZoomLevel = _currZoomLevel,\n\t\t\tminZoomLevel = _getMinZoomLevel(),\n\t\t\tmaxZoomLevel = _getMaxZoomLevel();\n\n\t\tif ( _currZoomLevel < minZoomLevel ) {\n\t\t\tdestZoomLevel = minZoomLevel;\n\t\t} else if ( _currZoomLevel > maxZoomLevel ) {\n\t\t\tdestZoomLevel = maxZoomLevel;\n\t\t}\n\n\t\tvar destOpacity = 1,\n\t\t\tonUpdate,\n\t\t\tinitialOpacity = _bgOpacity;\n\n\t\tif(_opacityChanged && !_isZoomingIn && !_wasOverInitialZoom && _currZoomLevel < minZoomLevel) {\n\t\t\t//_closedByScroll = true;\n\t\t\tself.close();\n\t\t\treturn true;\n\t\t}\n\n\t\tif(_opacityChanged) {\n\t\t\tonUpdate = function(now) {\n\t\t\t\t_applyBgOpacity(  (destOpacity - initialOpacity) * now + initialOpacity );\n\t\t\t};\n\t\t}\n\n\t\tself.zoomTo(destZoomLevel, 0, 200,  framework.easing.cubic.out, onUpdate);\n\t\treturn true;\n\t};\n\n\n_registerModule('Gestures', {\n\tpublicMethods: {\n\n\t\tinitGestures: function() {\n\n\t\t\t// helper function that builds touch/pointer/mouse events\n\t\t\tvar addEventNames = function(pref, down, move, up, cancel) {\n\t\t\t\t_dragStartEvent = pref + down;\n\t\t\t\t_dragMoveEvent = pref + move;\n\t\t\t\t_dragEndEvent = pref + up;\n\t\t\t\tif(cancel) {\n\t\t\t\t\t_dragCancelEvent = pref + cancel;\n\t\t\t\t} else {\n\t\t\t\t\t_dragCancelEvent = '';\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_pointerEventEnabled = _features.pointerEvent;\n\t\t\tif(_pointerEventEnabled && _features.touch) {\n\t\t\t\t// we don't need touch events, if browser supports pointer events\n\t\t\t\t_features.touch = false;\n\t\t\t}\n\n\t\t\tif(_pointerEventEnabled) {\n\t\t\t\tif(navigator.msPointerEnabled) {\n\t\t\t\t\t// IE10 pointer events are case-sensitive\n\t\t\t\t\taddEventNames('MSPointer', 'Down', 'Move', 'Up', 'Cancel');\n\t\t\t\t} else {\n\t\t\t\t\taddEventNames('pointer', 'down', 'move', 'up', 'cancel');\n\t\t\t\t}\n\t\t\t} else if(_features.touch) {\n\t\t\t\taddEventNames('touch', 'start', 'move', 'end', 'cancel');\n\t\t\t\t_likelyTouchDevice = true;\n\t\t\t} else {\n\t\t\t\taddEventNames('mouse', 'down', 'move', 'up');\t\n\t\t\t}\n\n\t\t\t_upMoveEvents = _dragMoveEvent + ' ' + _dragEndEvent  + ' ' +  _dragCancelEvent;\n\t\t\t_downEvents = _dragStartEvent;\n\n\t\t\tif(_pointerEventEnabled && !_likelyTouchDevice) {\n\t\t\t\t_likelyTouchDevice = (navigator.maxTouchPoints > 1) || (navigator.msMaxTouchPoints > 1);\n\t\t\t}\n\t\t\t// make variable public\n\t\t\tself.likelyTouchDevice = _likelyTouchDevice; \n\t\t\t\n\t\t\t_globalEventHandlers[_dragStartEvent] = _onDragStart;\n\t\t\t_globalEventHandlers[_dragMoveEvent] = _onDragMove;\n\t\t\t_globalEventHandlers[_dragEndEvent] = _onDragRelease; // the Kraken\n\n\t\t\tif(_dragCancelEvent) {\n\t\t\t\t_globalEventHandlers[_dragCancelEvent] = _globalEventHandlers[_dragEndEvent];\n\t\t\t}\n\n\t\t\t// Bind mouse events on device with detected hardware touch support, in case it supports multiple types of input.\n\t\t\tif(_features.touch) {\n\t\t\t\t_downEvents += ' mousedown';\n\t\t\t\t_upMoveEvents += ' mousemove mouseup';\n\t\t\t\t_globalEventHandlers.mousedown = _globalEventHandlers[_dragStartEvent];\n\t\t\t\t_globalEventHandlers.mousemove = _globalEventHandlers[_dragMoveEvent];\n\t\t\t\t_globalEventHandlers.mouseup = _globalEventHandlers[_dragEndEvent];\n\t\t\t}\n\n\t\t\tif(!_likelyTouchDevice) {\n\t\t\t\t// don't allow pan to next slide from zoomed state on Desktop\n\t\t\t\t_options.allowPanToNext = false;\n\t\t\t}\n\t\t}\n\n\t}\n});\n\n\n/*>>gestures*/\n\n/*>>show-hide-transition*/\n/**\n * show-hide-transition.js:\n *\n * Manages initial opening or closing transition.\n *\n * If you're not planning to use transition for gallery at all,\n * you may set options hideAnimationDuration and showAnimationDuration to 0,\n * and just delete startAnimation function.\n * \n */\n\n\nvar _showOrHideTimeout,\n\t_showOrHide = function(item, img, out, completeFn) {\n\n\t\tif(_showOrHideTimeout) {\n\t\t\tclearTimeout(_showOrHideTimeout);\n\t\t}\n\n\t\t_initialZoomRunning = true;\n\t\t_initialContentSet = true;\n\t\t\n\t\t// dimensions of small thumbnail {x:,y:,w:}.\n\t\t// Height is optional, as calculated based on large image.\n\t\tvar thumbBounds; \n\t\tif(item.initialLayout) {\n\t\t\tthumbBounds = item.initialLayout;\n\t\t\titem.initialLayout = null;\n\t\t} else {\n\t\t\tthumbBounds = _options.getThumbBoundsFn && _options.getThumbBoundsFn(_currentItemIndex);\n\t\t}\n\n\t\tvar duration = out ? _options.hideAnimationDuration : _options.showAnimationDuration;\n\n\t\tvar onComplete = function() {\n\t\t\t_stopAnimation('initialZoom');\n\t\t\tif(!out) {\n\t\t\t\t_applyBgOpacity(1);\n\t\t\t\tif(img) {\n\t\t\t\t\timg.style.display = 'block';\n\t\t\t\t}\n\t\t\t\tframework.addClass(template, 'pswp--animated-in');\n\t\t\t\t_shout('initialZoom' + (out ? 'OutEnd' : 'InEnd'));\n\t\t\t} else {\n\t\t\t\tself.template.removeAttribute('style');\n\t\t\t\tself.bg.removeAttribute('style');\n\t\t\t}\n\n\t\t\tif(completeFn) {\n\t\t\t\tcompleteFn();\n\t\t\t}\n\t\t\t_initialZoomRunning = false;\n\t\t};\n\n\t\t// if bounds aren't provided, just open gallery without animation\n\t\tif(!duration || !thumbBounds || thumbBounds.x === undefined) {\n\n\t\t\t_shout('initialZoom' + (out ? 'Out' : 'In') );\n\n\t\t\t_currZoomLevel = item.initialZoomLevel;\n\t\t\t_equalizePoints(_panOffset,  item.initialPosition );\n\t\t\t_applyCurrentZoomPan();\n\n\t\t\ttemplate.style.opacity = out ? 0 : 1;\n\t\t\t_applyBgOpacity(1);\n\n\t\t\tif(duration) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tonComplete();\n\t\t\t\t}, duration);\n\t\t\t} else {\n\t\t\t\tonComplete();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar startAnimation = function() {\n\t\t\tvar closeWithRaf = _closedByScroll,\n\t\t\t\tfadeEverything = !self.currItem.src || self.currItem.loadError || _options.showHideOpacity;\n\t\t\t\n\t\t\t// apply hw-acceleration to image\n\t\t\tif(item.miniImg) {\n\t\t\t\titem.miniImg.style.webkitBackfaceVisibility = 'hidden';\n\t\t\t}\n\n\t\t\tif(!out) {\n\t\t\t\t_currZoomLevel = thumbBounds.w / item.w;\n\t\t\t\t_panOffset.x = thumbBounds.x;\n\t\t\t\t_panOffset.y = thumbBounds.y - _initalWindowScrollY;\n\n\t\t\t\tself[fadeEverything ? 'template' : 'bg'].style.opacity = 0.001;\n\t\t\t\t_applyCurrentZoomPan();\n\t\t\t}\n\n\t\t\t_registerStartAnimation('initialZoom');\n\t\t\t\n\t\t\tif(out && !closeWithRaf) {\n\t\t\t\tframework.removeClass(template, 'pswp--animated-in');\n\t\t\t}\n\n\t\t\tif(fadeEverything) {\n\t\t\t\tif(out) {\n\t\t\t\t\tframework[ (closeWithRaf ? 'remove' : 'add') + 'Class' ](template, 'pswp--animate_opacity');\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tframework.addClass(template, 'pswp--animate_opacity');\n\t\t\t\t\t}, 30);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_showOrHideTimeout = setTimeout(function() {\n\n\t\t\t\t_shout('initialZoom' + (out ? 'Out' : 'In') );\n\t\t\t\t\n\n\t\t\t\tif(!out) {\n\n\t\t\t\t\t// \"in\" animation always uses CSS transitions (instead of rAF).\n\t\t\t\t\t// CSS transition work faster here, \n\t\t\t\t\t// as developer may also want to animate other things, \n\t\t\t\t\t// like ui on top of sliding area, which can be animated just via CSS\n\t\t\t\t\t\n\t\t\t\t\t_currZoomLevel = item.initialZoomLevel;\n\t\t\t\t\t_equalizePoints(_panOffset,  item.initialPosition );\n\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t_applyBgOpacity(1);\n\n\t\t\t\t\tif(fadeEverything) {\n\t\t\t\t\t\ttemplate.style.opacity = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_applyBgOpacity(1);\n\t\t\t\t\t}\n\n\t\t\t\t\t_showOrHideTimeout = setTimeout(onComplete, duration + 20);\n\t\t\t\t} else {\n\n\t\t\t\t\t// \"out\" animation uses rAF only when PhotoSwipe is closed by browser scroll, to recalculate position\n\t\t\t\t\tvar destZoomLevel = thumbBounds.w / item.w,\n\t\t\t\t\t\tinitialPanOffset = {\n\t\t\t\t\t\t\tx: _panOffset.x,\n\t\t\t\t\t\t\ty: _panOffset.y\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinitialZoomLevel = _currZoomLevel,\n\t\t\t\t\t\tinitalBgOpacity = _bgOpacity,\n\t\t\t\t\t\tonUpdate = function(now) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(now === 1) {\n\t\t\t\t\t\t\t\t_currZoomLevel = destZoomLevel;\n\t\t\t\t\t\t\t\t_panOffset.x = thumbBounds.x;\n\t\t\t\t\t\t\t\t_panOffset.y = thumbBounds.y  - _currentWindowScrollY;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_currZoomLevel = (destZoomLevel - initialZoomLevel) * now + initialZoomLevel;\n\t\t\t\t\t\t\t\t_panOffset.x = (thumbBounds.x - initialPanOffset.x) * now + initialPanOffset.x;\n\t\t\t\t\t\t\t\t_panOffset.y = (thumbBounds.y - _currentWindowScrollY - initialPanOffset.y) * now + initialPanOffset.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t_applyCurrentZoomPan();\n\t\t\t\t\t\t\tif(fadeEverything) {\n\t\t\t\t\t\t\t\ttemplate.style.opacity = 1 - now;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_applyBgOpacity( initalBgOpacity - now * initalBgOpacity );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(closeWithRaf) {\n\t\t\t\t\t\t_animateProp('initialZoom', 0, 1, duration, framework.easing.cubic.out, onUpdate, onComplete);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonUpdate(1);\n\t\t\t\t\t\t_showOrHideTimeout = setTimeout(onComplete, duration + 20);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t}, out ? 25 : 90); // Main purpose of this delay is to give browser time to paint and\n\t\t\t\t\t// create composite layers of PhotoSwipe UI parts (background, controls, caption, arrows).\n\t\t\t\t\t// Which avoids lag at the beginning of scale transition.\n\t\t};\n\t\tstartAnimation();\n\n\t\t\n\t};\n\n/*>>show-hide-transition*/\n\n/*>>items-controller*/\n/**\n*\n* Controller manages gallery items, their dimensions, and their content.\n* \n*/\n\nvar _items,\n\t_tempPanAreaSize = {},\n\t_imagesToAppendPool = [],\n\t_initialContentSet,\n\t_initialZoomRunning,\n\t_controllerDefaultOptions = {\n\t\tindex: 0,\n\t\terrorMsg: '<div class=\"pswp__error-msg\"><a href=\"%url%\" target=\"_blank\">The image</a> could not be loaded.</div>',\n\t\tforceProgressiveLoading: false, // TODO\n\t\tpreload: [1,1],\n\t\tgetNumItemsFn: function() {\n\t\t\treturn _items.length;\n\t\t}\n\t};\n\n\nvar _getItemAt,\n\t_getNumItems,\n\t_initialIsLoop,\n\t_getZeroBounds = function() {\n\t\treturn {\n\t\t\tcenter:{x:0,y:0}, \n\t\t\tmax:{x:0,y:0}, \n\t\t\tmin:{x:0,y:0}\n\t\t};\n\t},\n\t_calculateSingleItemPanBounds = function(item, realPanElementW, realPanElementH ) {\n\t\tvar bounds = item.bounds;\n\n\t\t// position of element when it's centered\n\t\tbounds.center.x = Math.round((_tempPanAreaSize.x - realPanElementW) / 2);\n\t\tbounds.center.y = Math.round((_tempPanAreaSize.y - realPanElementH) / 2) + item.vGap.top;\n\n\t\t// maximum pan position\n\t\tbounds.max.x = (realPanElementW > _tempPanAreaSize.x) ? \n\t\t\t\t\t\t\tMath.round(_tempPanAreaSize.x - realPanElementW) : \n\t\t\t\t\t\t\tbounds.center.x;\n\t\t\n\t\tbounds.max.y = (realPanElementH > _tempPanAreaSize.y) ? \n\t\t\t\t\t\t\tMath.round(_tempPanAreaSize.y - realPanElementH) + item.vGap.top : \n\t\t\t\t\t\t\tbounds.center.y;\n\t\t\n\t\t// minimum pan position\n\t\tbounds.min.x = (realPanElementW > _tempPanAreaSize.x) ? 0 : bounds.center.x;\n\t\tbounds.min.y = (realPanElementH > _tempPanAreaSize.y) ? item.vGap.top : bounds.center.y;\n\t},\n\t_calculateItemSize = function(item, viewportSize, zoomLevel) {\n\n\t\tif (item.src && !item.loadError) {\n\t\t\tvar isInitial = !zoomLevel;\n\t\t\t\n\t\t\tif(isInitial) {\n\t\t\t\tif(!item.vGap) {\n\t\t\t\t\titem.vGap = {top:0,bottom:0};\n\t\t\t\t}\n\t\t\t\t// allows overriding vertical margin for individual items\n\t\t\t\t_shout('parseVerticalMargin', item);\n\t\t\t}\n\n\n\t\t\t_tempPanAreaSize.x = viewportSize.x;\n\t\t\t_tempPanAreaSize.y = viewportSize.y - item.vGap.top - item.vGap.bottom;\n\n\t\t\tif (isInitial) {\n\t\t\t\tvar hRatio = _tempPanAreaSize.x / item.w;\n\t\t\t\tvar vRatio = _tempPanAreaSize.y / item.h;\n\n\t\t\t\titem.fitRatio = hRatio < vRatio ? hRatio : vRatio;\n\t\t\t\t//item.fillRatio = hRatio > vRatio ? hRatio : vRatio;\n\n\t\t\t\tvar scaleMode = _options.scaleMode;\n\n\t\t\t\tif (scaleMode === 'orig') {\n\t\t\t\t\tzoomLevel = 1;\n\t\t\t\t} else if (scaleMode === 'fit') {\n\t\t\t\t\tzoomLevel = item.fitRatio;\n\t\t\t\t}\n\n\t\t\t\tif (zoomLevel > 1) {\n\t\t\t\t\tzoomLevel = 1;\n\t\t\t\t}\n\n\t\t\t\titem.initialZoomLevel = zoomLevel;\n\t\t\t\t\n\t\t\t\tif(!item.bounds) {\n\t\t\t\t\t// reuse bounds object\n\t\t\t\t\titem.bounds = _getZeroBounds(); \n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!zoomLevel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_calculateSingleItemPanBounds(item, item.w * zoomLevel, item.h * zoomLevel);\n\n\t\t\tif (isInitial && zoomLevel === item.initialZoomLevel) {\n\t\t\t\titem.initialPosition = item.bounds.center;\n\t\t\t}\n\n\t\t\treturn item.bounds;\n\t\t} else {\n\t\t\titem.w = item.h = 0;\n\t\t\titem.initialZoomLevel = item.fitRatio = 1;\n\t\t\titem.bounds = _getZeroBounds();\n\t\t\titem.initialPosition = item.bounds.center;\n\n\t\t\t// if it's not image, we return zero bounds (content is not zoomable)\n\t\t\treturn item.bounds;\n\t\t}\n\t\t\n\t},\n\n\t\n\n\n\t_appendImage = function(index, item, baseDiv, img, preventAnimation, keepPlaceholder) {\n\t\t\n\n\t\tif(item.loadError) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(img) {\n\n\t\t\titem.imageAppended = true;\n\t\t\t_setImageSize(item, img, (item === self.currItem && _renderMaxResolution) );\n\t\t\t\n\t\t\tbaseDiv.appendChild(img);\n\n\t\t\tif(keepPlaceholder) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif(item && item.loaded && item.placeholder) {\n\t\t\t\t\t\titem.placeholder.style.display = 'none';\n\t\t\t\t\t\titem.placeholder = null;\n\t\t\t\t\t}\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t}\n\t},\n\t\n\n\n\t_preloadImage = function(item) {\n\t\titem.loading = true;\n\t\titem.loaded = false;\n\t\tvar img = item.img = framework.createEl('pswp__img', 'img');\n\t\tvar onComplete = function() {\n\t\t\titem.loading = false;\n\t\t\titem.loaded = true;\n\n\t\t\tif(item.loadComplete) {\n\t\t\t\titem.loadComplete(item);\n\t\t\t} else {\n\t\t\t\titem.img = null; // no need to store image object\n\t\t\t}\n\t\t\timg.onload = img.onerror = null;\n\t\t\timg = null;\n\t\t};\n\t\timg.onload = onComplete;\n\t\timg.onerror = function() {\n\t\t\titem.loadError = true;\n\t\t\tonComplete();\n\t\t};\t\t\n\n\t\timg.src = item.src;// + '?a=' + Math.random();\n\n\t\treturn img;\n\t},\n\t_checkForError = function(item, cleanUp) {\n\t\tif(item.src && item.loadError && item.container) {\n\n\t\t\tif(cleanUp) {\n\t\t\t\titem.container.innerHTML = '';\n\t\t\t}\n\n\t\t\titem.container.innerHTML = _options.errorMsg.replace('%url%',  item.src );\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t},\n\t_setImageSize = function(item, img, maxRes) {\n\t\tif(!item.src) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(!img) {\n\t\t\timg = item.container.lastChild;\n\t\t}\n\n\t\tvar w = maxRes ? item.w : Math.round(item.w * item.fitRatio),\n\t\t\th = maxRes ? item.h : Math.round(item.h * item.fitRatio);\n\t\t\n\t\tif(item.placeholder && !item.loaded) {\n\t\t\titem.placeholder.style.width = w + 'px';\n\t\t\titem.placeholder.style.height = h + 'px';\n\t\t}\n\n\t\timg.style.width = w + 'px';\n\t\timg.style.height = h + 'px';\n\t},\n\t_appendImagesPool = function() {\n\n\t\tif(_imagesToAppendPool.length) {\n\t\t\tvar poolItem;\n\n\t\t\tfor(var i = 0; i < _imagesToAppendPool.length; i++) {\n\t\t\t\tpoolItem = _imagesToAppendPool[i];\n\t\t\t\tif( poolItem.holder.index === poolItem.index ) {\n\t\t\t\t\t_appendImage(poolItem.index, poolItem.item, poolItem.baseDiv, poolItem.img, false, poolItem.clearPlaceholder);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_imagesToAppendPool = [];\n\t\t}\n\t};\n\t\n\n\n_registerModule('Controller', {\n\n\tpublicMethods: {\n\n\t\tlazyLoadItem: function(index) {\n\t\t\tindex = _getLoopedId(index);\n\t\t\tvar item = _getItemAt(index);\n\n\t\t\tif(!item || ((item.loaded || item.loading) && !_itemsNeedUpdate)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_shout('gettingData', index, item);\n\n\t\t\tif (!item.src) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_preloadImage(item);\n\t\t},\n\t\tinitController: function() {\n\t\t\tframework.extend(_options, _controllerDefaultOptions, true);\n\t\t\tself.items = _items = items;\n\t\t\t_getItemAt = self.getItemAt;\n\t\t\t_getNumItems = _options.getNumItemsFn; //self.getNumItems;\n\n\n\n\t\t\t_initialIsLoop = _options.loop;\n\t\t\tif(_getNumItems() < 3) {\n\t\t\t\t_options.loop = false; // disable loop if less then 3 items\n\t\t\t}\n\n\t\t\t_listen('beforeChange', function(diff) {\n\n\t\t\t\tvar p = _options.preload,\n\t\t\t\t\tisNext = diff === null ? true : (diff >= 0),\n\t\t\t\t\tpreloadBefore = Math.min(p[0], _getNumItems() ),\n\t\t\t\t\tpreloadAfter = Math.min(p[1], _getNumItems() ),\n\t\t\t\t\ti;\n\n\n\t\t\t\tfor(i = 1; i <= (isNext ? preloadAfter : preloadBefore); i++) {\n\t\t\t\t\tself.lazyLoadItem(_currentItemIndex+i);\n\t\t\t\t}\n\t\t\t\tfor(i = 1; i <= (isNext ? preloadBefore : preloadAfter); i++) {\n\t\t\t\t\tself.lazyLoadItem(_currentItemIndex-i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_listen('initialLayout', function() {\n\t\t\t\tself.currItem.initialLayout = _options.getThumbBoundsFn && _options.getThumbBoundsFn(_currentItemIndex);\n\t\t\t});\n\n\t\t\t_listen('mainScrollAnimComplete', _appendImagesPool);\n\t\t\t_listen('initialZoomInEnd', _appendImagesPool);\n\n\n\n\t\t\t_listen('destroy', function() {\n\t\t\t\tvar item;\n\t\t\t\tfor(var i = 0; i < _items.length; i++) {\n\t\t\t\t\titem = _items[i];\n\t\t\t\t\t// remove reference to DOM elements, for GC\n\t\t\t\t\tif(item.container) {\n\t\t\t\t\t\titem.container = null; \n\t\t\t\t\t}\n\t\t\t\t\tif(item.placeholder) {\n\t\t\t\t\t\titem.placeholder = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.img) {\n\t\t\t\t\t\titem.img = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.preloader) {\n\t\t\t\t\t\titem.preloader = null;\n\t\t\t\t\t}\n\t\t\t\t\tif(item.loadError) {\n\t\t\t\t\t\titem.loaded = item.loadError = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_imagesToAppendPool = null;\n\t\t\t});\n\t\t},\n\n\n\t\tgetItemAt: function(index) {\n\t\t\tif (index >= 0) {\n\t\t\t\treturn _items[index] !== undefined ? _items[index] : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tallowProgressiveImg: function() {\n\t\t\t// 1. Progressive image loading isn't working on webkit/blink \n\t\t\t//    when hw-acceleration (e.g. translateZ) is applied to IMG element.\n\t\t\t//    That's why in PhotoSwipe parent element gets zoom transform, not image itself.\n\t\t\t//    \n\t\t\t// 2. Progressive image loading sometimes blinks in webkit/blink when applying animation to parent element.\n\t\t\t//    That's why it's disabled on touch devices (mainly because of swipe transition)\n\t\t\t//    \n\t\t\t// 3. Progressive image loading sometimes doesn't work in IE (up to 11).\n\n\t\t\t// Don't allow progressive loading on non-large touch devices\n\t\t\treturn _options.forceProgressiveLoading || !_likelyTouchDevice || _options.mouseUsed || screen.width > 1200; \n\t\t\t// 1200 - to eliminate touch devices with large screen (like Chromebook Pixel)\n\t\t},\n\n\t\tsetContent: function(holder, index) {\n\n\t\t\tif(_options.loop) {\n\t\t\t\tindex = _getLoopedId(index);\n\t\t\t}\n\n\t\t\tvar prevItem = self.getItemAt(holder.index);\n\t\t\tif(prevItem) {\n\t\t\t\tprevItem.container = null;\n\t\t\t}\n\t\n\t\t\tvar item = self.getItemAt(index),\n\t\t\t\timg;\n\t\t\t\n\t\t\tif(!item) {\n\t\t\t\tholder.el.innerHTML = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// allow to override data\n\t\t\t_shout('gettingData', index, item);\n\n\t\t\tholder.index = index;\n\t\t\tholder.item = item;\n\n\t\t\t// base container DIV is created only once for each of 3 holders\n\t\t\tvar baseDiv = item.container = framework.createEl('pswp__zoom-wrap'); \n\n\t\t\t\n\n\t\t\tif(!item.src && item.html) {\n\t\t\t\tif(item.html.tagName) {\n\t\t\t\t\tbaseDiv.appendChild(item.html);\n\t\t\t\t} else {\n\t\t\t\t\tbaseDiv.innerHTML = item.html;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_checkForError(item);\n\n\t\t\t_calculateItemSize(item, _viewportSize);\n\t\t\t\n\t\t\tif(item.src && !item.loadError && !item.loaded) {\n\n\t\t\t\titem.loadComplete = function(item) {\n\n\t\t\t\t\t// gallery closed before image finished loading\n\t\t\t\t\tif(!_isOpen) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if holder hasn't changed while image was loading\n\t\t\t\t\tif(holder && holder.index === index ) {\n\t\t\t\t\t\tif( _checkForError(item, true) ) {\n\t\t\t\t\t\t\titem.loadComplete = item.img = null;\n\t\t\t\t\t\t\t_calculateItemSize(item, _viewportSize);\n\t\t\t\t\t\t\t_applyZoomPanToItem(item);\n\n\t\t\t\t\t\t\tif(holder.index === _currentItemIndex) {\n\t\t\t\t\t\t\t\t// recalculate dimensions\n\t\t\t\t\t\t\t\tself.updateCurrZoomItem();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( !item.imageAppended ) {\n\t\t\t\t\t\t\tif(_features.transform && (_mainScrollAnimating || _initialZoomRunning) ) {\n\t\t\t\t\t\t\t\t_imagesToAppendPool.push({\n\t\t\t\t\t\t\t\t\titem:item,\n\t\t\t\t\t\t\t\t\tbaseDiv:baseDiv,\n\t\t\t\t\t\t\t\t\timg:item.img,\n\t\t\t\t\t\t\t\t\tindex:index,\n\t\t\t\t\t\t\t\t\tholder:holder,\n\t\t\t\t\t\t\t\t\tclearPlaceholder:true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_appendImage(index, item, baseDiv, item.img, _mainScrollAnimating || _initialZoomRunning, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// remove preloader & mini-img\n\t\t\t\t\t\t\tif(!_initialZoomRunning && item.placeholder) {\n\t\t\t\t\t\t\t\titem.placeholder.style.display = 'none';\n\t\t\t\t\t\t\t\titem.placeholder = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\titem.loadComplete = null;\n\t\t\t\t\titem.img = null; // no need to store image element after it's added\n\n\t\t\t\t\t_shout('imageLoadComplete', index, item);\n\t\t\t\t};\n\n\t\t\t\tif(framework.features.transform) {\n\t\t\t\t\t\n\t\t\t\t\tvar placeholderClassName = 'pswp__img pswp__img--placeholder'; \n\t\t\t\t\tplaceholderClassName += (item.msrc ? '' : ' pswp__img--placeholder--blank');\n\n\t\t\t\t\tvar placeholder = framework.createEl(placeholderClassName, item.msrc ? 'img' : '');\n\t\t\t\t\tif(item.msrc) {\n\t\t\t\t\t\tplaceholder.src = item.msrc;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t_setImageSize(item, placeholder);\n\n\t\t\t\t\tbaseDiv.appendChild(placeholder);\n\t\t\t\t\titem.placeholder = placeholder;\n\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t\n\n\t\t\t\tif(!item.loading) {\n\t\t\t\t\t_preloadImage(item);\n\t\t\t\t}\n\n\n\t\t\t\tif( self.allowProgressiveImg() ) {\n\t\t\t\t\t// just append image\n\t\t\t\t\tif(!_initialContentSet && _features.transform) {\n\t\t\t\t\t\t_imagesToAppendPool.push({\n\t\t\t\t\t\t\titem:item, \n\t\t\t\t\t\t\tbaseDiv:baseDiv, \n\t\t\t\t\t\t\timg:item.img, \n\t\t\t\t\t\t\tindex:index, \n\t\t\t\t\t\t\tholder:holder\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_appendImage(index, item, baseDiv, item.img, true, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if(item.src && !item.loadError) {\n\t\t\t\t// image object is created every time, due to bugs of image loading & delay when switching images\n\t\t\t\timg = framework.createEl('pswp__img', 'img');\n\t\t\t\timg.style.opacity = 1;\n\t\t\t\timg.src = item.src;\n\t\t\t\t_setImageSize(item, img);\n\t\t\t\t_appendImage(index, item, baseDiv, img, true);\n\t\t\t}\n\t\t\t\n\n\t\t\tif(!_initialContentSet && index === _currentItemIndex) {\n\t\t\t\t_currZoomElementStyle = baseDiv.style;\n\t\t\t\t_showOrHide(item, (img ||item.img) );\n\t\t\t} else {\n\t\t\t\t_applyZoomPanToItem(item);\n\t\t\t}\n\n\t\t\tholder.el.innerHTML = '';\n\t\t\tholder.el.appendChild(baseDiv);\n\t\t},\n\n\t\tcleanSlide: function( item ) {\n\t\t\tif(item.img ) {\n\t\t\t\titem.img.onload = item.img.onerror = null;\n\t\t\t}\n\t\t\titem.loaded = item.loading = item.img = item.imageAppended = false;\n\t\t}\n\n\t}\n});\n\n/*>>items-controller*/\n\n/*>>tap*/\n/**\n * tap.js:\n *\n * Displatches tap and double-tap events.\n * \n */\n\nvar tapTimer,\n\ttapReleasePoint = {},\n\t_dispatchTapEvent = function(origEvent, releasePoint, pointerType) {\t\t\n\t\tvar e = document.createEvent( 'CustomEvent' ),\n\t\t\teDetail = {\n\t\t\t\torigEvent:origEvent, \n\t\t\t\ttarget:origEvent.target, \n\t\t\t\treleasePoint: releasePoint, \n\t\t\t\tpointerType:pointerType || 'touch'\n\t\t\t};\n\n\t\te.initCustomEvent( 'pswpTap', true, true, eDetail );\n\t\torigEvent.target.dispatchEvent(e);\n\t};\n\n_registerModule('Tap', {\n\tpublicMethods: {\n\t\tinitTap: function() {\n\t\t\t_listen('firstTouchStart', self.onTapStart);\n\t\t\t_listen('touchRelease', self.onTapRelease);\n\t\t\t_listen('destroy', function() {\n\t\t\t\ttapReleasePoint = {};\n\t\t\t\ttapTimer = null;\n\t\t\t});\n\t\t},\n\t\tonTapStart: function(touchList) {\n\t\t\tif(touchList.length > 1) {\n\t\t\t\tclearTimeout(tapTimer);\n\t\t\t\ttapTimer = null;\n\t\t\t}\n\t\t},\n\t\tonTapRelease: function(e, releasePoint) {\n\t\t\tif(!releasePoint) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!_moved && !_isMultitouch && !_numAnimations) {\n\t\t\t\tvar p0 = releasePoint;\n\t\t\t\tif(tapTimer) {\n\t\t\t\t\tclearTimeout(tapTimer);\n\t\t\t\t\ttapTimer = null;\n\n\t\t\t\t\t// Check if taped on the same place\n\t\t\t\t\tif ( _isNearbyPoints(p0, tapReleasePoint) ) {\n\t\t\t\t\t\t_shout('doubleTap', p0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(releasePoint.type === 'mouse') {\n\t\t\t\t\t_dispatchTapEvent(e, releasePoint, 'mouse');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar clickedTagName = e.target.tagName.toUpperCase();\n\t\t\t\t// avoid double tap delay on buttons and elements that have class pswp__single-tap\n\t\t\t\tif(clickedTagName === 'BUTTON' || framework.hasClass(e.target, 'pswp__single-tap') ) {\n\t\t\t\t\t_dispatchTapEvent(e, releasePoint);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t_equalizePoints(tapReleasePoint, p0);\n\n\t\t\t\ttapTimer = setTimeout(function() {\n\t\t\t\t\t_dispatchTapEvent(e, releasePoint);\n\t\t\t\t\ttapTimer = null;\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/*>>tap*/\n\n/*>>desktop-zoom*/\n/**\n *\n * desktop-zoom.js:\n *\n * - Binds mousewheel event for paning zoomed image.\n * - Manages \"dragging\", \"zoomed-in\", \"zoom-out\" classes.\n *   (which are used for cursors and zoom icon)\n * - Adds toggleDesktopZoom function.\n * \n */\n\nvar _wheelDelta;\n\t\n_registerModule('DesktopZoom', {\n\n\tpublicMethods: {\n\n\t\tinitDesktopZoom: function() {\n\n\t\t\tif(_oldIE) {\n\t\t\t\t// no zoom for old IE (<=8)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(_likelyTouchDevice) {\n\t\t\t\t// if detected hardware touch support, we wait until mouse is used,\n\t\t\t\t// and only then apply desktop-zoom features\n\t\t\t\t_listen('mouseUsed', function() {\n\t\t\t\t\tself.setupDesktopZoom();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tself.setupDesktopZoom(true);\n\t\t\t}\n\n\t\t},\n\n\t\tsetupDesktopZoom: function(onInit) {\n\n\t\t\t_wheelDelta = {};\n\n\t\t\tvar events = 'wheel mousewheel DOMMouseScroll';\n\t\t\t\n\t\t\t_listen('bindEvents', function() {\n\t\t\t\tframework.bind(template, events,  self.handleMouseWheel);\n\t\t\t});\n\n\t\t\t_listen('unbindEvents', function() {\n\t\t\t\tif(_wheelDelta) {\n\t\t\t\t\tframework.unbind(template, events, self.handleMouseWheel);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tself.mouseZoomedIn = false;\n\n\t\t\tvar hasDraggingClass,\n\t\t\t\tupdateZoomable = function() {\n\t\t\t\t\tif(self.mouseZoomedIn) {\n\t\t\t\t\t\tframework.removeClass(template, 'pswp--zoomed-in');\n\t\t\t\t\t\tself.mouseZoomedIn = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(_currZoomLevel < 1) {\n\t\t\t\t\t\tframework.addClass(template, 'pswp--zoom-allowed');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tframework.removeClass(template, 'pswp--zoom-allowed');\n\t\t\t\t\t}\n\t\t\t\t\tremoveDraggingClass();\n\t\t\t\t},\n\t\t\t\tremoveDraggingClass = function() {\n\t\t\t\t\tif(hasDraggingClass) {\n\t\t\t\t\t\tframework.removeClass(template, 'pswp--dragging');\n\t\t\t\t\t\thasDraggingClass = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t_listen('resize' , updateZoomable);\n\t\t\t_listen('afterChange' , updateZoomable);\n\t\t\t_listen('pointerDown', function() {\n\t\t\t\tif(self.mouseZoomedIn) {\n\t\t\t\t\thasDraggingClass = true;\n\t\t\t\t\tframework.addClass(template, 'pswp--dragging');\n\t\t\t\t}\n\t\t\t});\n\t\t\t_listen('pointerUp', removeDraggingClass);\n\n\t\t\tif(!onInit) {\n\t\t\t\tupdateZoomable();\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\thandleMouseWheel: function(e) {\n\n\t\t\tif(_currZoomLevel <= self.currItem.fitRatio) {\n\t\t\t\tif( _options.modal ) {\n\n\t\t\t\t\tif (!_options.closeOnScroll || _numAnimations || _isDragging) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else if(_transformKey && Math.abs(e.deltaY) > 2) {\n\t\t\t\t\t\t// close PhotoSwipe\n\t\t\t\t\t\t// if browser supports transforms & scroll changed enough\n\t\t\t\t\t\t_closedByScroll = true;\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// allow just one event to fire\n\t\t\te.stopPropagation();\n\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t\t\t_wheelDelta.x = 0;\n\n\t\t\tif('deltaX' in e) {\n\t\t\t\tif(e.deltaMode === 1 /* DOM_DELTA_LINE */) {\n\t\t\t\t\t// 18 - average line height\n\t\t\t\t\t_wheelDelta.x = e.deltaX * 18;\n\t\t\t\t\t_wheelDelta.y = e.deltaY * 18;\n\t\t\t\t} else {\n\t\t\t\t\t_wheelDelta.x = e.deltaX;\n\t\t\t\t\t_wheelDelta.y = e.deltaY;\n\t\t\t\t}\n\t\t\t} else if('wheelDelta' in e) {\n\t\t\t\tif(e.wheelDeltaX) {\n\t\t\t\t\t_wheelDelta.x = -0.16 * e.wheelDeltaX;\n\t\t\t\t}\n\t\t\t\tif(e.wheelDeltaY) {\n\t\t\t\t\t_wheelDelta.y = -0.16 * e.wheelDeltaY;\n\t\t\t\t} else {\n\t\t\t\t\t_wheelDelta.y = -0.16 * e.wheelDelta;\n\t\t\t\t}\n\t\t\t} else if('detail' in e) {\n\t\t\t\t_wheelDelta.y = e.detail;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_calculatePanBounds(_currZoomLevel, true);\n\n\t\t\tvar newPanX = _panOffset.x - _wheelDelta.x,\n\t\t\t\tnewPanY = _panOffset.y - _wheelDelta.y;\n\n\t\t\t// only prevent scrolling in nonmodal mode when not at edges\n\t\t\tif (_options.modal ||\n\t\t\t\t(\n\t\t\t\tnewPanX <= _currPanBounds.min.x && newPanX >= _currPanBounds.max.x &&\n\t\t\t\tnewPanY <= _currPanBounds.min.y && newPanY >= _currPanBounds.max.y\n\t\t\t\t) ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\t// TODO: use rAF instead of mousewheel?\n\t\t\tself.panTo(newPanX, newPanY);\n\t\t},\n\n\t\ttoggleDesktopZoom: function(centerPoint) {\n\t\t\tcenterPoint = centerPoint || {x:_viewportSize.x/2 + _offset.x, y:_viewportSize.y/2 + _offset.y };\n\n\t\t\tvar doubleTapZoomLevel = _options.getDoubleTapZoom(true, self.currItem);\n\t\t\tvar zoomOut = _currZoomLevel === doubleTapZoomLevel;\n\t\t\t\n\t\t\tself.mouseZoomedIn = !zoomOut;\n\n\t\t\tself.zoomTo(zoomOut ? self.currItem.initialZoomLevel : doubleTapZoomLevel, centerPoint, 333);\n\t\t\tframework[ (!zoomOut ? 'add' : 'remove') + 'Class'](template, 'pswp--zoomed-in');\n\t\t}\n\n\t}\n});\n\n\n/*>>desktop-zoom*/\n\n/*>>history*/\n/**\n *\n * history.js:\n *\n * - Back button to close gallery.\n * \n * - Unique URL for each slide: example.com/&pid=1&gid=3\n *   (where PID is picture index, and GID and gallery index)\n *   \n * - Switch URL when slides change.\n * \n */\n\n\nvar _historyDefaultOptions = {\n\thistory: true,\n\tgalleryUID: 1\n};\n\nvar _historyUpdateTimeout,\n\t_hashChangeTimeout,\n\t_hashAnimCheckTimeout,\n\t_hashChangedByScript,\n\t_hashChangedByHistory,\n\t_hashReseted,\n\t_initialHash,\n\t_historyChanged,\n\t_closedFromURL,\n\t_urlChangedOnce,\n\t_windowLoc,\n\n\t_supportsPushState,\n\n\t_getHash = function() {\n\t\treturn _windowLoc.hash.substring(1);\n\t},\n\t_cleanHistoryTimeouts = function() {\n\n\t\tif(_historyUpdateTimeout) {\n\t\t\tclearTimeout(_historyUpdateTimeout);\n\t\t}\n\n\t\tif(_hashAnimCheckTimeout) {\n\t\t\tclearTimeout(_hashAnimCheckTimeout);\n\t\t}\n\t},\n\n\t// pid - Picture index\n\t// gid - Gallery index\n\t_parseItemIndexFromURL = function() {\n\t\tvar hash = _getHash(),\n\t\t\tparams = {};\n\n\t\tif(hash.length < 5) { // pid=1\n\t\t\treturn params;\n\t\t}\n\n\t\tvar i, vars = hash.split('&');\n\t\tfor (i = 0; i < vars.length; i++) {\n\t\t\tif(!vars[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar pair = vars[i].split('=');\t\n\t\t\tif(pair.length < 2) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tparams[pair[0]] = pair[1];\n\t\t}\n\t\tif(_options.galleryPIDs) {\n\t\t\t// detect custom pid in hash and search for it among the items collection\n\t\t\tvar searchfor = params.pid;\n\t\t\tparams.pid = 0; // if custom pid cannot be found, fallback to the first item\n\t\t\tfor(i = 0; i < _items.length; i++) {\n\t\t\t\tif(_items[i].pid === searchfor) {\n\t\t\t\t\tparams.pid = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tparams.pid = parseInt(params.pid,10)-1;\n\t\t}\n\t\tif( params.pid < 0 ) {\n\t\t\tparams.pid = 0;\n\t\t}\n\t\treturn params;\n\t},\n\t_updateHash = function() {\n\n\t\tif(_hashAnimCheckTimeout) {\n\t\t\tclearTimeout(_hashAnimCheckTimeout);\n\t\t}\n\n\n\t\tif(_numAnimations || _isDragging) {\n\t\t\t// changing browser URL forces layout/paint in some browsers, which causes noticable lag during animation\n\t\t\t// that's why we update hash only when no animations running\n\t\t\t_hashAnimCheckTimeout = setTimeout(_updateHash, 500);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(_hashChangedByScript) {\n\t\t\tclearTimeout(_hashChangeTimeout);\n\t\t} else {\n\t\t\t_hashChangedByScript = true;\n\t\t}\n\n\n\t\tvar pid = (_currentItemIndex + 1);\n\t\tvar item = _getItemAt( _currentItemIndex );\n\t\tif(item.hasOwnProperty('pid')) {\n\t\t\t// carry forward any custom pid assigned to the item\n\t\t\tpid = item.pid;\n\t\t}\n\t\tvar newHash = _initialHash + '&'  +  'gid=' + _options.galleryUID + '&' + 'pid=' + pid;\n\n\t\tif(!_historyChanged) {\n\t\t\tif(_windowLoc.hash.indexOf(newHash) === -1) {\n\t\t\t\t_urlChangedOnce = true;\n\t\t\t}\n\t\t\t// first time - add new hisory record, then just replace\n\t\t}\n\n\t\tvar newURL = _windowLoc.href.split('#')[0] + '#' +  newHash;\n\n\t\tif( _supportsPushState ) {\n\n\t\t\tif('#' + newHash !== window.location.hash) {\n\t\t\t\thistory[_historyChanged ? 'replaceState' : 'pushState']('', document.title, newURL);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif(_historyChanged) {\n\t\t\t\t_windowLoc.replace( newURL );\n\t\t\t} else {\n\t\t\t\t_windowLoc.hash = newHash;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\n\t\t_historyChanged = true;\n\t\t_hashChangeTimeout = setTimeout(function() {\n\t\t\t_hashChangedByScript = false;\n\t\t}, 60);\n\t};\n\n\n\n\t\n\n_registerModule('History', {\n\n\t\n\n\tpublicMethods: {\n\t\tinitHistory: function() {\n\n\t\t\tframework.extend(_options, _historyDefaultOptions, true);\n\n\t\t\tif( !_options.history ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t_windowLoc = window.location;\n\t\t\t_urlChangedOnce = false;\n\t\t\t_closedFromURL = false;\n\t\t\t_historyChanged = false;\n\t\t\t_initialHash = _getHash();\n\t\t\t_supportsPushState = ('pushState' in history);\n\n\n\t\t\tif(_initialHash.indexOf('gid=') > -1) {\n\t\t\t\t_initialHash = _initialHash.split('&gid=')[0];\n\t\t\t\t_initialHash = _initialHash.split('?gid=')[0];\n\t\t\t}\n\t\t\t\n\n\t\t\t_listen('afterChange', self.updateURL);\n\t\t\t_listen('unbindEvents', function() {\n\t\t\t\tframework.unbind(window, 'hashchange', self.onHashChange);\n\t\t\t});\n\n\n\t\t\tvar returnToOriginal = function() {\n\t\t\t\t_hashReseted = true;\n\t\t\t\tif(!_closedFromURL) {\n\n\t\t\t\t\tif(_urlChangedOnce) {\n\t\t\t\t\t\thistory.back();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif(_initialHash) {\n\t\t\t\t\t\t\t_windowLoc.hash = _initialHash;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_supportsPushState) {\n\n\t\t\t\t\t\t\t\t// remove hash from url without refreshing it or scrolling to top\n\t\t\t\t\t\t\t\thistory.pushState('', document.title,  _windowLoc.pathname + _windowLoc.search );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_windowLoc.hash = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t_cleanHistoryTimeouts();\n\t\t\t};\n\n\n\t\t\t_listen('unbindEvents', function() {\n\t\t\t\tif(_closedByScroll) {\n\t\t\t\t\t// if PhotoSwipe is closed by scroll, we go \"back\" before the closing animation starts\n\t\t\t\t\t// this is done to keep the scroll position\n\t\t\t\t\treturnToOriginal();\n\t\t\t\t}\n\t\t\t});\n\t\t\t_listen('destroy', function() {\n\t\t\t\tif(!_hashReseted) {\n\t\t\t\t\treturnToOriginal();\n\t\t\t\t}\n\t\t\t});\n\t\t\t_listen('firstUpdate', function() {\n\t\t\t\t_currentItemIndex = _parseItemIndexFromURL().pid;\n\t\t\t});\n\n\t\t\t\n\n\t\t\t\n\t\t\tvar index = _initialHash.indexOf('pid=');\n\t\t\tif(index > -1) {\n\t\t\t\t_initialHash = _initialHash.substring(0, index);\n\t\t\t\tif(_initialHash.slice(-1) === '&') {\n\t\t\t\t\t_initialHash = _initialHash.slice(0, -1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\tsetTimeout(function() {\n\t\t\t\tif(_isOpen) { // hasn't destroyed yet\n\t\t\t\t\tframework.bind(window, 'hashchange', self.onHashChange);\n\t\t\t\t}\n\t\t\t}, 40);\n\t\t\t\n\t\t},\n\t\tonHashChange: function() {\n\n\t\t\tif(_getHash() === _initialHash) {\n\n\t\t\t\t_closedFromURL = true;\n\t\t\t\tself.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!_hashChangedByScript) {\n\n\t\t\t\t_hashChangedByHistory = true;\n\t\t\t\tself.goTo( _parseItemIndexFromURL().pid );\n\t\t\t\t_hashChangedByHistory = false;\n\t\t\t}\n\t\t\t\n\t\t},\n\t\tupdateURL: function() {\n\n\t\t\t// Delay the update of URL, to avoid lag during transition, \n\t\t\t// and to not to trigger actions like \"refresh page sound\" or \"blinking favicon\" to often\n\t\t\t\n\t\t\t_cleanHistoryTimeouts();\n\t\t\t\n\n\t\t\tif(_hashChangedByHistory) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!_historyChanged) {\n\t\t\t\t_updateHash(); // first time\n\t\t\t} else {\n\t\t\t\t_historyUpdateTimeout = setTimeout(_updateHash, 800);\n\t\t\t}\n\t\t}\n\t\n\t}\n});\n\n\n/*>>history*/\n\tframework.extend(self, publicMethods); };\n\treturn PhotoSwipe;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/photoswipe/dist/photoswipe.js\n");

/***/ }),

/***/ "./node_modules/rimg-shopify/dist/index.es.js":
/*!****************************************************!*\
  !*** ./node_modules/rimg-shopify/dist/index.es.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var rimg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rimg */ \"./node_modules/rimg/dist/index.es.js\");\n/*!\n * rimg-shopify v2.4.0\n * (c) 2019 Pixel Union\n */\n\n\n/**\n * Polyfill for Element.matches().\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this) {}\n    return i > -1;\n  };\n}\n\nvar state = {\n  init: init,\n  watch: watch,\n  unwatch: unwatch\n};\n\nfunction init() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  state.selector = selector;\n  state.instance = Object(rimg__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(selector, options);\n  state.loadedWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Listen for Shopify theme editor events\n  document.addEventListener('shopify:section:load', function (event) {\n    return watch(event.target);\n  });\n\n  window.addEventListener('resize', function () {\n    return _update();\n  });\n\n  document.addEventListener('shopify:section:unload', function (event) {\n    return unwatch(event.target);\n  });\n\n  // Listen for custom events to allow themes to hook into rimg\n  document.addEventListener('theme:rimg:watch', function (event) {\n    return watch(event.target);\n  });\n\n  document.addEventListener('theme:rimg:unwatch', function (event) {\n    return unwatch(event.target);\n  });\n\n  // Support custom events triggered through jQuery\n  // See: https://github.com/jquery/jquery/issues/3347\n  if (window.jQuery) {\n    jQuery(document).on({\n      'theme:rimg:watch': function themeRimgWatch(event) {\n        return watch(event.target);\n      },\n      'theme:rimg:unwatch': function themeRimgUnwatch(event) {\n        return unwatch(event.target);\n      }\n    });\n  }\n}\n\n/**\n * Track an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction watch(el) {\n  // Track element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.track(el);\n  }\n\n  // Track element's children\n  state.instance.track(el.querySelectorAll(state.selector));\n}\n\n/**\n * Untrack an element, and its children\n *\n * @param {HTMLElement} el\n * @private\n */\nfunction unwatch(el) {\n  // Untrack element's children\n  state.instance.untrack(el.querySelectorAll(state.selector));\n\n  // Untrack element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.untrack(el);\n  }\n}\n\n/**\n * Update an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction _update() {\n  var currentWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Return if we're not 2x smaller, or larger than the existing loading size\n  if (currentWidth / state.loadedWidth > 0.5 && currentWidth / state.loadedWidth < 2) {\n    return;\n  }\n\n  state.loadedWidth = currentWidth;\n  state.instance.update();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (state);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmltZy1zaG9waWZ5L2Rpc3QvaW5kZXguZXMuanM/OWYwYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDd0I7O0FBRXhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLG9EQUFJO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFZSxvRUFBSyxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JpbWctc2hvcGlmeS9kaXN0L2luZGV4LmVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiByaW1nLXNob3BpZnkgdjIuNC4wXG4gKiAoYykgMjAxOSBQaXhlbCBVbmlvblxuICovXG5pbXBvcnQgcmltZyBmcm9tICdyaW1nJztcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgRWxlbWVudC5tYXRjaGVzKCkuXG4gKlxuICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRWxlbWVudC9tYXRjaGVzXG4gKi9cbmlmICghRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlcykge1xuICBFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzID0gRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc1NlbGVjdG9yIHx8IEVsZW1lbnQucHJvdG90eXBlLm1vek1hdGNoZXNTZWxlY3RvciB8fCBFbGVtZW50LnByb3RvdHlwZS5tc01hdGNoZXNTZWxlY3RvciB8fCBFbGVtZW50LnByb3RvdHlwZS5vTWF0Y2hlc1NlbGVjdG9yIHx8IEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fCBmdW5jdGlvbiAocykge1xuICAgIHZhciBtYXRjaGVzID0gKHRoaXMuZG9jdW1lbnQgfHwgdGhpcy5vd25lckRvY3VtZW50KS5xdWVyeVNlbGVjdG9yQWxsKHMpLFxuICAgICAgICBpID0gbWF0Y2hlcy5sZW5ndGg7XG4gICAgd2hpbGUgKC0taSA+PSAwICYmIG1hdGNoZXMuaXRlbShpKSAhPT0gdGhpcykge31cbiAgICByZXR1cm4gaSA+IC0xO1xuICB9O1xufVxuXG52YXIgc3RhdGUgPSB7XG4gIGluaXQ6IGluaXQsXG4gIHdhdGNoOiB3YXRjaCxcbiAgdW53YXRjaDogdW53YXRjaFxufTtcblxuZnVuY3Rpb24gaW5pdCgpIHtcbiAgdmFyIHNlbGVjdG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnW2RhdGEtcmltZz1cImxhenlcIl0nO1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgc3RhdGUuc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgc3RhdGUuaW5zdGFuY2UgPSByaW1nKHNlbGVjdG9yLCBvcHRpb25zKTtcbiAgc3RhdGUubG9hZGVkV2lkdGggPSBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsIHdpbmRvdy5pbm5lcldpZHRoIHx8IDApO1xuXG4gIC8vIExpc3RlbiBmb3IgU2hvcGlmeSB0aGVtZSBlZGl0b3IgZXZlbnRzXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3BpZnk6c2VjdGlvbjpsb2FkJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgcmV0dXJuIHdhdGNoKGV2ZW50LnRhcmdldCk7XG4gIH0pO1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF91cGRhdGUoKTtcbiAgfSk7XG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2hvcGlmeTpzZWN0aW9uOnVubG9hZCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIHJldHVybiB1bndhdGNoKGV2ZW50LnRhcmdldCk7XG4gIH0pO1xuXG4gIC8vIExpc3RlbiBmb3IgY3VzdG9tIGV2ZW50cyB0byBhbGxvdyB0aGVtZXMgdG8gaG9vayBpbnRvIHJpbWdcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndGhlbWU6cmltZzp3YXRjaCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIHJldHVybiB3YXRjaChldmVudC50YXJnZXQpO1xuICB9KTtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0aGVtZTpyaW1nOnVud2F0Y2gnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICByZXR1cm4gdW53YXRjaChldmVudC50YXJnZXQpO1xuICB9KTtcblxuICAvLyBTdXBwb3J0IGN1c3RvbSBldmVudHMgdHJpZ2dlcmVkIHRocm91Z2ggalF1ZXJ5XG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvaXNzdWVzLzMzNDdcbiAgaWYgKHdpbmRvdy5qUXVlcnkpIHtcbiAgICBqUXVlcnkoZG9jdW1lbnQpLm9uKHtcbiAgICAgICd0aGVtZTpyaW1nOndhdGNoJzogZnVuY3Rpb24gdGhlbWVSaW1nV2F0Y2goZXZlbnQpIHtcbiAgICAgICAgcmV0dXJuIHdhdGNoKGV2ZW50LnRhcmdldCk7XG4gICAgICB9LFxuICAgICAgJ3RoZW1lOnJpbWc6dW53YXRjaCc6IGZ1bmN0aW9uIHRoZW1lUmltZ1Vud2F0Y2goZXZlbnQpIHtcbiAgICAgICAgcmV0dXJuIHVud2F0Y2goZXZlbnQudGFyZ2V0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIFRyYWNrIGFuIGVsZW1lbnQsIGFuZCBpdHMgY2hpbGRyZW4uXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxcbiAqL1xuZnVuY3Rpb24gd2F0Y2goZWwpIHtcbiAgLy8gVHJhY2sgZWxlbWVudFxuICBpZiAodHlwZW9mIGVsLm1hdGNoZXMgPT09ICdmdW5jdGlvbicgJiYgZWwubWF0Y2hlcyhzdGF0ZS5zZWxlY3RvcikpIHtcbiAgICBzdGF0ZS5pbnN0YW5jZS50cmFjayhlbCk7XG4gIH1cblxuICAvLyBUcmFjayBlbGVtZW50J3MgY2hpbGRyZW5cbiAgc3RhdGUuaW5zdGFuY2UudHJhY2soZWwucXVlcnlTZWxlY3RvckFsbChzdGF0ZS5zZWxlY3RvcikpO1xufVxuXG4vKipcbiAqIFVudHJhY2sgYW4gZWxlbWVudCwgYW5kIGl0cyBjaGlsZHJlblxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiB1bndhdGNoKGVsKSB7XG4gIC8vIFVudHJhY2sgZWxlbWVudCdzIGNoaWxkcmVuXG4gIHN0YXRlLmluc3RhbmNlLnVudHJhY2soZWwucXVlcnlTZWxlY3RvckFsbChzdGF0ZS5zZWxlY3RvcikpO1xuXG4gIC8vIFVudHJhY2sgZWxlbWVudFxuICBpZiAodHlwZW9mIGVsLm1hdGNoZXMgPT09ICdmdW5jdGlvbicgJiYgZWwubWF0Y2hlcyhzdGF0ZS5zZWxlY3RvcikpIHtcbiAgICBzdGF0ZS5pbnN0YW5jZS51bnRyYWNrKGVsKTtcbiAgfVxufVxuXG4vKipcbiAqIFVwZGF0ZSBhbiBlbGVtZW50LCBhbmQgaXRzIGNoaWxkcmVuLlxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsXG4gKi9cbmZ1bmN0aW9uIF91cGRhdGUoKSB7XG4gIHZhciBjdXJyZW50V2lkdGggPSBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsIHdpbmRvdy5pbm5lcldpZHRoIHx8IDApO1xuXG4gIC8vIFJldHVybiBpZiB3ZSdyZSBub3QgMnggc21hbGxlciwgb3IgbGFyZ2VyIHRoYW4gdGhlIGV4aXN0aW5nIGxvYWRpbmcgc2l6ZVxuICBpZiAoY3VycmVudFdpZHRoIC8gc3RhdGUubG9hZGVkV2lkdGggPiAwLjUgJiYgY3VycmVudFdpZHRoIC8gc3RhdGUubG9hZGVkV2lkdGggPCAyKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3RhdGUubG9hZGVkV2lkdGggPSBjdXJyZW50V2lkdGg7XG4gIHN0YXRlLmluc3RhbmNlLnVwZGF0ZSgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdGF0ZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/rimg-shopify/dist/index.es.js\n");

/***/ }),

/***/ "./node_modules/rimg/dist/index.es.js":
/*!********************************************!*\
  !*** ./node_modules/rimg/dist/index.es.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * rimg v2.1.7\n * (c) 2018 Pixel Union\n */\n/**\n * The default template render function. Turns a template string into an image\n * URL.\n *\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\nfunction defaultTemplateRender(template, size) {\n  return template.replace('{size}', size.width + 'x' + size.height);\n}\n\n/**\n * @type Settings\n */\nvar defaults = {\n  scale: 1,\n  template: false,\n  templateRender: defaultTemplateRender,\n  max: { width: Infinity, height: Infinity },\n  round: 32,\n  placeholder: false,\n  crop: null\n};\n\n/**\n * Get a data attribute value from an element, with a default fallback and\n * sanitization step.\n *\n * @param {Element} el\n *\n * @param {String} name\n *        The data attribute name.\n *\n * @param {Object} options\n *        An object holding fallback values if the data attribute does not\n *        exist. If this object doesn't have the property, we further fallback\n *        to our defaults.\n *\n * @param {Function} [sanitize]\n *        A function to sanitize the data attribute value with.\n *\n * @returns {String|*}\n */\nfunction getData(el, name, options, sanitize) {\n  var attr = 'data-rimg-' + name;\n  if (!el.hasAttribute(attr)) return options[name] || defaults[name];\n\n  var value = el.getAttribute(attr);\n\n  return sanitize ? sanitize(value) : value;\n}\n\n/**\n * Sanitize data attributes that represent a size (in the form of `10x10`).\n *\n * @param {String} value\n * @returns {Object} An object with `width` and `height` properties.\n */\nfunction parseSize(value) {\n  value = value.split('x');\n  return { width: parseInt(value[0], 10), height: parseInt(value[1], 10) };\n}\n\n/**\n * Loads information about an element.\n *\n * Options can be set on the element itself using data attributes, or through\n * the `options` parameter. Data attributes take priority.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n * @returns {Item}\n */\nfunction parseItem(el) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var isImage = el.hasAttribute('data-rimg-template');\n\n  /**\n   * @typedef {Settings} Item\n   */\n  return {\n    el: el,\n\n    // Type of element\n    isImage: isImage,\n    isBackgroundImage: isImage && el.tagName !== 'IMG',\n\n    // Image scale\n    scale: getData(el, 'scale', options),\n\n    // Device density\n    density: window.devicePixelRatio || 1,\n\n    // Image template URL\n    template: getData(el, 'template', options),\n    templateRender: options.templateRender || defaults.templateRender,\n\n    // Maximum image dimensions\n    max: getData(el, 'max', options, parseSize),\n\n    // Round image dimensions to the nearest multiple\n    round: getData(el, 'round', options),\n\n    // Placeholder image dimensions\n    placeholder: getData(el, 'placeholder', options, parseSize),\n\n    // Crop value; null if image is uncropped, otherwise equal to the Shopify crop parameter ('center', 'top', etc.)\n    crop: getData(el, 'crop', options, function (value) {\n      return value === '' ? null : value;\n    })\n  };\n}\n\n/**\n * Round to the nearest multiple.\n *\n * This is so we don't tax the image server too much.\n *\n * @param {Number} size The size, in pixels.\n * @param {Number} [multiple] The multiple to round to the nearest.\n * @param {Number} [maxLimit] Maximum allowed value - value to return if rounded multiple is above this limit\n * @returns {Number}\n */\nfunction roundSize(size) {\n  var multiple = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n  var maxLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n\n  return size === 0 ? multiple : Math.min(Math.ceil(size / multiple) * multiple, maxLimit);\n}\n\n/**\n * Get the size of an element.\n *\n * If it is too small, it's parent element is checked, and so on. This helps\n * avoid the situation where an element doesn't have a size yet or is positioned\n * out of the layout.\n *\n * @param {HTMLElement} el\n * @return {Object} size\n * @return {Number} size.width The width, in pixels.\n * @return {Number} size.height The height, in pixels.\n */\nfunction getElementSize(el) {\n  var size = { width: 0, height: 0 };\n\n  while (el) {\n    size.width = el.offsetWidth;\n    size.height = el.offsetHeight;\n    if (size.width > 20 && size.height > 20) break;\n    el = el.parentNode;\n  }\n\n  return size;\n}\n\n/**\n * Trigger a custom event.\n *\n * Note: this approach is deprecated, but still required to support older\n * browsers such as IE 10.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n *\n * @param {HTMLElement} el\n *        The element to trigger the event on.\n *\n * @param {String} name\n *        The event name.\n *\n * @returns {Boolean}\n *          True if the event was canceled.\n */\nfunction trigger(el, name) {\n  var event = document.createEvent('Event');\n  event.initEvent(name, true, true);\n  return !el.dispatchEvent(event);\n}\n\n/**\n * Return the maximum supported density of the image, given the container.\n *\n * @param {Item} item\n * @param {Size} size\n */\nfunction supportedDensity(item, size) {\n  return Math.min(Math.min(Math.max(item.max.width / size.width, 1), item.density), Math.min(Math.max(item.max.height / size.height, 1), item.density)).toFixed(2);\n}\n\n/**\n * Set the image URL on the element. Supports background images and `srcset`.\n *\n * @param {Item} item\n * @param {Size} size\n * @param {Boolean} isPlaceholder\n */\nfunction setImage(item, size, isPlaceholder, onLoad) {\n  var render = item.templateRender;\n  var density = isPlaceholder ? 1 : supportedDensity(item, size);\n  var round = isPlaceholder ? 1 : item.round;\n\n  // Calculate the final display size, taking into account the image's\n  // maximum dimensions.\n  var targetWidth = size.width * density;\n  var targetHeight = size.height * density;\n\n  var displaySize = void 0;\n\n  if (item.crop) {\n    displaySize = {\n      width: roundSize(targetWidth, round, item.max.width),\n      height: roundSize(targetHeight, round, item.max.height)\n    };\n  } else {\n    // Shopify serves images clamped by the requested dimensions (fitted to the smallest dimension).\n    // To get the desired and expected pixel density we need to request cover dimensions (fitted to largest dimension).\n    // This isn't a problem with cropped images which are served at the exact dimension requested.\n    var containerAspectRatio = size.width / size.height;\n    var imageAspectRatio = item.max.width / item.max.height;\n\n    if (containerAspectRatio > imageAspectRatio) {\n      // fit width\n      displaySize = {\n        width: roundSize(targetWidth, round, item.max.width),\n        height: roundSize(targetWidth / imageAspectRatio, round, item.max.height)\n      };\n    } else {\n      // fit height\n      displaySize = {\n        width: roundSize(targetHeight * imageAspectRatio, round, item.max.width),\n        height: roundSize(targetHeight, round, item.max.height)\n      };\n    }\n  }\n\n  var url = render(item.template, displaySize);\n\n  // On load callback\n  var image = new Image();\n  image.onload = onLoad;\n  image.src = url;\n\n  // Set image\n  if (item.isBackgroundImage) {\n    item.el.style.backgroundImage = 'url(\\'' + url + '\\')';\n  } else {\n    item.el.setAttribute('srcset', url + ' ' + density + 'x');\n  }\n}\n\n/**\n * Load the image, set loaded status, and trigger the load event.\n *\n * @fires rimg:load\n * @fires rimg:error\n * @param {Item} item\n * @param {Size} size\n */\nfunction loadFullImage(item, size) {\n  var el = item.el;\n\n  setImage(item, size, false, function (event) {\n    if (event.type === 'load') {\n      el.setAttribute('data-rimg', 'loaded');\n    } else {\n      el.setAttribute('data-rimg', 'error');\n      trigger(el, 'rimg:error');\n    }\n\n    trigger(el, 'rimg:load');\n  });\n}\n\n/**\n * Load in a responsive image.\n *\n * Sets the image's `srcset` attribute to the final image URLs, calculated based\n * on the actual size the image is being shown at.\n *\n * @fires rimg:loading\n *        The image URLs have been set and we are waiting for them to load.\n *\n * @fires rimg:loaded\n *        The final image has loaded.\n *\n * @fires rimg:error\n *        The final image failed loading.\n *\n * @param {Item} item\n */\nfunction loadImage(item) {\n  var el = item.el;\n\n  // Already loaded?\n  var status = el.getAttribute('data-rimg');\n  if (status === 'loading' || status === 'loaded') return;\n\n  // Is the SVG loaded?\n  if (!el.complete && !item.isBackgroundImage) {\n    // Wait for the load event, then call load image\n    el.addEventListener('load', function cb() {\n      el.removeEventListener('load', cb);\n      loadImage(item);\n    });\n\n    return;\n  }\n\n  // Trigger loading event, and stop if cancelled\n  if (trigger(el, 'rimg:loading')) return;\n\n  // Mark as loading\n  el.setAttribute('data-rimg', 'loading');\n\n  // Get element size. This is used as the ideal display size.\n  var size = getElementSize(item.el);\n\n  size.width *= item.scale;\n  size.height *= item.scale;\n\n  if (item.placeholder) {\n    // Load a placeholder image first, followed by the full image. Force the\n    // element to keep its dimensions while it loads. If the image is smaller\n    // than the element size, use the image's size. Density is taken into account\n    // for HiDPI devices to avoid blurry images.\n    if (!item.isBackgroundImage) {\n      el.setAttribute('width', Math.min(Math.floor(item.max.width / item.density), size.width));\n      el.setAttribute('height', Math.min(Math.floor(item.max.height / item.density), size.height));\n    }\n\n    setImage(item, item.placeholder, true, function () {\n      return loadFullImage(item, size);\n    });\n  } else {\n    loadFullImage(item, size);\n  }\n}\n\n/**\n * Prepare an element to be displayed on the screen.\n *\n * Images have special logic applied to them to swap out the different sources.\n *\n * @fires rimg:enter\n *        The element is entering the viewport.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nfunction load(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:enter');\n\n  var item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg-template-svg', el.getAttribute('srcset'));\n    }\n\n    loadImage(item);\n  }\n}\n\n/**\n * Reset an element's state so that its image can be recalculated.\n *\n * @fires rimg:update\n *        The element is being updated.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nfunction update(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:update');\n\n  var item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg', 'lazy');\n      el.setAttribute('srcset', el.getAttribute('data-rimg-template-svg'));\n    }\n\n    loadImage(item);\n  }\n}\n\n/**\n * Returns true if the element is within the viewport.\n * @param {HTMLElement} el\n * @returns {Boolean}\n */\nfunction inViewport(el) {\n  if (!el.offsetWidth || !el.offsetHeight || !el.getClientRects().length) {\n    return false;\n  }\n\n  var root = document.documentElement;\n  var width = Math.min(root.clientWidth, window.innerWidth);\n  var height = Math.min(root.clientHeight, window.innerHeight);\n  var rect = el.getBoundingClientRect();\n\n  return rect.bottom >= 0 && rect.right >= 0 && rect.top <= height && rect.left <= width;\n}\n\n/**\n * @typedef {Object} Size\n * @property {Number} width\n * @property {Number} height\n */\n\n/**\n * A function to turn a template string into a URL.\n *\n * @callback TemplateRenderer\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\n\n/**\n * @typedef {Object} Settings\n *\n * @property {String} [template]\n *           A template string used to generate URLs for an image. This allows us to\n *           dynamically load images with sizes to match the container's size.\n *\n * @property {TemplateRenderer} [templateRender]\n *           A function to turn a template string into a URL.\n *\n * @property {Size} [max]\n *           The maximum available size for the image. This ensures we don't\n *           try to load an image larger than is possible.\n *\n * @property {Number} [scale]\n *           A number to scale the final image dimensions by.\n *           Only applies to lazy-loaded images. Defaults to 1.\n *\n * @property {Number} [round]\n *           Round image dimensions to the nearest multiple. This is intended to\n *           tax the image server less by lowering the number of possible image\n *           sizes requested.\n *\n * @property {Size} [placeholder]\n *           The size of the lo-fi image to load before the full image.\n *\n * @property {String} [crop]\n *           Crop value; null if image is uncropped, otherwise equal\n *           to the Shopify crop parameter ('center', 'top', etc.).\n */\n\n/**\n * Initialize the responsive image handler.\n *\n * @param {String|HTMLElement|NodeList} selector\n *        The CSS selector, element, or elements to track for lazy-loading.\n *\n * @param {Settings} options\n *\n * @returns {PublicApi}\n */\nfunction rimg() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Intersections\n  var io = new IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        io.unobserve(entry.target);\n        load(entry.target, options);\n      }\n    });\n  }, {\n    // Watch the viewport, with 20% vertical margins\n    rootMargin: '20% 0px'\n  });\n\n  /**\n   * @typedef {Object} PublicApi\n   */\n  var api = {\n    /**\n     * Track a new selector, element, or nodelist for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    track: function track() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n\n      var els = querySelector(selector);\n\n      for (var i = 0; i < els.length; i++) {\n        // If an element is already in the viewport, load it right away. This\n        // fixes a race-condition with dynamically added elements.\n        if (inViewport(els[i])) {\n          load(els[i], options);\n        } else {\n          io.observe(els[i]);\n        }\n      }\n    },\n\n\n    /**\n     * Update element(s) that have already been loaded to force their images\n     * to be recalculated.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    update: function update$$1() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"loaded\"]';\n\n      var els = querySelector(selector);\n      for (var i = 0; i < els.length; i++) {\n        update(els[i], options);\n      }\n    },\n\n\n    /**\n     * Stop tracking element(s) for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    untrack: function untrack() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg]';\n\n      var els = querySelector(selector);\n      for (var i = 0; i < els.length; i++) {\n        io.unobserve(els[i]);\n      }\n    },\n\n\n    /**\n     * Unload all event handlers and observers.\n     * @type Function\n     */\n    unload: function unload() {\n      io.disconnect();\n    }\n  };\n\n  // Add initial elements\n  api.track(selector);\n\n  return api;\n}\n\n/**\n * Finds a group of elements on the page.\n *\n * @param {String|HTMLElement|NodeList} selector\n * @returns {Object} An array-like object.\n */\nfunction querySelector(selector) {\n  if (typeof selector === 'string') {\n    return document.querySelectorAll(selector);\n  }\n\n  if (selector instanceof HTMLElement) {\n    return [selector];\n  }\n\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n\n  return [];\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (rimg);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rimg/dist/index.es.js\n");

/***/ }),

/***/ "./node_modules/scriptjs/dist/script.js":
/*!**********************************************!*\
  !*** ./node_modules/scriptjs/dist/script.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if ( true && module.exports) module.exports = definition()\n  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else {}\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      fn(el)\n      return 1\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NyaXB0anMvZGlzdC9zY3JpcHQuanM/YTIzYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxLQUE0QjtBQUNsQyxXQUFXLElBQXlDLEVBQUUsb0NBQU8sVUFBVTtBQUFBO0FBQUE7QUFBQTtBQUFBLG9HQUFDO0FBQ3hFLE9BQU8sRUFBeUI7QUFDaEMsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDLE9BQU87QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZFQUE2RSxzQkFBc0I7QUFDbkc7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlDQUFpQyxpQkFBaUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NjcmlwdGpzL2Rpc3Qvc2NyaXB0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gICogJHNjcmlwdC5qcyBKUyBsb2FkZXIgJiBkZXBlbmRlbmN5IG1hbmFnZXJcbiAgKiBodHRwczovL2dpdGh1Yi5jb20vZGVkL3NjcmlwdC5qc1xuICAqIChjKSBEdXN0aW4gRGlheiAyMDE0IHwgTGljZW5zZSBNSVRcbiAgKi9cblxuKGZ1bmN0aW9uIChuYW1lLCBkZWZpbml0aW9uKSB7XG4gIGlmICh0eXBlb2YgbW9kdWxlICE9ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSBtb2R1bGUuZXhwb3J0cyA9IGRlZmluaXRpb24oKVxuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgZGVmaW5lKGRlZmluaXRpb24pXG4gIGVsc2UgdGhpc1tuYW1lXSA9IGRlZmluaXRpb24oKVxufSkoJyRzY3JpcHQnLCBmdW5jdGlvbiAoKSB7XG4gIHZhciBkb2MgPSBkb2N1bWVudFxuICAgICwgaGVhZCA9IGRvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdXG4gICAgLCBzID0gJ3N0cmluZydcbiAgICAsIGYgPSBmYWxzZVxuICAgICwgcHVzaCA9ICdwdXNoJ1xuICAgICwgcmVhZHlTdGF0ZSA9ICdyZWFkeVN0YXRlJ1xuICAgICwgb25yZWFkeXN0YXRlY2hhbmdlID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSdcbiAgICAsIGxpc3QgPSB7fVxuICAgICwgaWRzID0ge31cbiAgICAsIGRlbGF5ID0ge31cbiAgICAsIHNjcmlwdHMgPSB7fVxuICAgICwgc2NyaXB0cGF0aFxuICAgICwgdXJsQXJnc1xuXG4gIGZ1bmN0aW9uIGV2ZXJ5KGFyLCBmbikge1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gYXIubGVuZ3RoOyBpIDwgajsgKytpKSBpZiAoIWZuKGFyW2ldKSkgcmV0dXJuIGZcbiAgICByZXR1cm4gMVxuICB9XG4gIGZ1bmN0aW9uIGVhY2goYXIsIGZuKSB7XG4gICAgZXZlcnkoYXIsIGZ1bmN0aW9uIChlbCkge1xuICAgICAgZm4oZWwpXG4gICAgICByZXR1cm4gMVxuICAgIH0pXG4gIH1cblxuICBmdW5jdGlvbiAkc2NyaXB0KHBhdGhzLCBpZE9yRG9uZSwgb3B0RG9uZSkge1xuICAgIHBhdGhzID0gcGF0aHNbcHVzaF0gPyBwYXRocyA6IFtwYXRoc11cbiAgICB2YXIgaWRPckRvbmVJc0RvbmUgPSBpZE9yRG9uZSAmJiBpZE9yRG9uZS5jYWxsXG4gICAgICAsIGRvbmUgPSBpZE9yRG9uZUlzRG9uZSA/IGlkT3JEb25lIDogb3B0RG9uZVxuICAgICAgLCBpZCA9IGlkT3JEb25lSXNEb25lID8gcGF0aHMuam9pbignJykgOiBpZE9yRG9uZVxuICAgICAgLCBxdWV1ZSA9IHBhdGhzLmxlbmd0aFxuICAgIGZ1bmN0aW9uIGxvb3BGbihpdGVtKSB7XG4gICAgICByZXR1cm4gaXRlbS5jYWxsID8gaXRlbSgpIDogbGlzdFtpdGVtXVxuICAgIH1cbiAgICBmdW5jdGlvbiBjYWxsYmFjaygpIHtcbiAgICAgIGlmICghLS1xdWV1ZSkge1xuICAgICAgICBsaXN0W2lkXSA9IDFcbiAgICAgICAgZG9uZSAmJiBkb25lKClcbiAgICAgICAgZm9yICh2YXIgZHNldCBpbiBkZWxheSkge1xuICAgICAgICAgIGV2ZXJ5KGRzZXQuc3BsaXQoJ3wnKSwgbG9vcEZuKSAmJiAhZWFjaChkZWxheVtkc2V0XSwgbG9vcEZuKSAmJiAoZGVsYXlbZHNldF0gPSBbXSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGVhY2gocGF0aHMsIGZ1bmN0aW9uIGxvYWRpbmcocGF0aCwgZm9yY2UpIHtcbiAgICAgICAgaWYgKHBhdGggPT09IG51bGwpIHJldHVybiBjYWxsYmFjaygpXG4gICAgICAgIFxuICAgICAgICBpZiAoIWZvcmNlICYmICEvXmh0dHBzPzpcXC9cXC8vLnRlc3QocGF0aCkgJiYgc2NyaXB0cGF0aCkge1xuICAgICAgICAgIHBhdGggPSAocGF0aC5pbmRleE9mKCcuanMnKSA9PT0gLTEpID8gc2NyaXB0cGF0aCArIHBhdGggKyAnLmpzJyA6IHNjcmlwdHBhdGggKyBwYXRoO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoc2NyaXB0c1twYXRoXSkge1xuICAgICAgICAgIGlmIChpZCkgaWRzW2lkXSA9IDFcbiAgICAgICAgICByZXR1cm4gKHNjcmlwdHNbcGF0aF0gPT0gMikgPyBjYWxsYmFjaygpIDogc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IGxvYWRpbmcocGF0aCwgdHJ1ZSkgfSwgMClcbiAgICAgICAgfVxuXG4gICAgICAgIHNjcmlwdHNbcGF0aF0gPSAxXG4gICAgICAgIGlmIChpZCkgaWRzW2lkXSA9IDFcbiAgICAgICAgY3JlYXRlKHBhdGgsIGNhbGxiYWNrKVxuICAgICAgfSlcbiAgICB9LCAwKVxuICAgIHJldHVybiAkc2NyaXB0XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGUocGF0aCwgZm4pIHtcbiAgICB2YXIgZWwgPSBkb2MuY3JlYXRlRWxlbWVudCgnc2NyaXB0JyksIGxvYWRlZFxuICAgIGVsLm9ubG9hZCA9IGVsLm9uZXJyb3IgPSBlbFtvbnJlYWR5c3RhdGVjaGFuZ2VdID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKChlbFtyZWFkeVN0YXRlXSAmJiAhKC9eY3xsb2FkZS8udGVzdChlbFtyZWFkeVN0YXRlXSkpKSB8fCBsb2FkZWQpIHJldHVybjtcbiAgICAgIGVsLm9ubG9hZCA9IGVsW29ucmVhZHlzdGF0ZWNoYW5nZV0gPSBudWxsXG4gICAgICBsb2FkZWQgPSAxXG4gICAgICBzY3JpcHRzW3BhdGhdID0gMlxuICAgICAgZm4oKVxuICAgIH1cbiAgICBlbC5hc3luYyA9IDFcbiAgICBlbC5zcmMgPSB1cmxBcmdzID8gcGF0aCArIChwYXRoLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgdXJsQXJncyA6IHBhdGg7XG4gICAgaGVhZC5pbnNlcnRCZWZvcmUoZWwsIGhlYWQubGFzdENoaWxkKVxuICB9XG5cbiAgJHNjcmlwdC5nZXQgPSBjcmVhdGVcblxuICAkc2NyaXB0Lm9yZGVyID0gZnVuY3Rpb24gKHNjcmlwdHMsIGlkLCBkb25lKSB7XG4gICAgKGZ1bmN0aW9uIGNhbGxiYWNrKHMpIHtcbiAgICAgIHMgPSBzY3JpcHRzLnNoaWZ0KClcbiAgICAgICFzY3JpcHRzLmxlbmd0aCA/ICRzY3JpcHQocywgaWQsIGRvbmUpIDogJHNjcmlwdChzLCBjYWxsYmFjaylcbiAgICB9KCkpXG4gIH1cblxuICAkc2NyaXB0LnBhdGggPSBmdW5jdGlvbiAocCkge1xuICAgIHNjcmlwdHBhdGggPSBwXG4gIH1cbiAgJHNjcmlwdC51cmxBcmdzID0gZnVuY3Rpb24gKHN0cikge1xuICAgIHVybEFyZ3MgPSBzdHI7XG4gIH1cbiAgJHNjcmlwdC5yZWFkeSA9IGZ1bmN0aW9uIChkZXBzLCByZWFkeSwgcmVxKSB7XG4gICAgZGVwcyA9IGRlcHNbcHVzaF0gPyBkZXBzIDogW2RlcHNdXG4gICAgdmFyIG1pc3NpbmcgPSBbXTtcbiAgICAhZWFjaChkZXBzLCBmdW5jdGlvbiAoZGVwKSB7XG4gICAgICBsaXN0W2RlcF0gfHwgbWlzc2luZ1twdXNoXShkZXApO1xuICAgIH0pICYmIGV2ZXJ5KGRlcHMsIGZ1bmN0aW9uIChkZXApIHtyZXR1cm4gbGlzdFtkZXBdfSkgP1xuICAgICAgcmVhZHkoKSA6ICFmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBkZWxheVtrZXldID0gZGVsYXlba2V5XSB8fCBbXVxuICAgICAgZGVsYXlba2V5XVtwdXNoXShyZWFkeSlcbiAgICAgIHJlcSAmJiByZXEobWlzc2luZylcbiAgICB9KGRlcHMuam9pbignfCcpKVxuICAgIHJldHVybiAkc2NyaXB0XG4gIH1cblxuICAkc2NyaXB0LmRvbmUgPSBmdW5jdGlvbiAoaWRPckRvbmUpIHtcbiAgICAkc2NyaXB0KFtudWxsXSwgaWRPckRvbmUpXG4gIH1cblxuICByZXR1cm4gJHNjcmlwdFxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/scriptjs/dist/script.js\n");

/***/ }),

/***/ "./node_modules/shopify-asyncview/dist/index.es.js":
/*!*********************************************************!*\
  !*** ./node_modules/shopify-asyncview/dist/index.es.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n  /*!\n   * shopify-asyncview v2.0.3\n   * (c) 2019 Pixel Union\n  */\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar deferred = {};\n\nvar AsyncView =\n/*#__PURE__*/\nfunction () {\n  function AsyncView() {\n    _classCallCheck(this, AsyncView);\n  }\n\n  _createClass(AsyncView, null, [{\n    key: \"load\",\n\n    /**\n     * Load the template given by the provided URL into the provided\n     * view\n     *\n     * @param {string} url - The url to load\n     * @param {object} query - An object containing additional query parameters of the URL\n     * @param {string} query.view - A required query parameter indicating which view to load\n     * @param {object} [options] - Config options\n     * @param {string} [options.hash] - A hash of the current page content\n     */\n    value: function load(url) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!('view' in query)) {\n        return Promise.reject(new Error('\\'view\\' not found in \\'query\\' parameter'));\n      }\n\n      var querylessUrl = url.replace(/\\?[^#]+/, '');\n      var queryParamsString = new RegExp(/.+\\?([^#]+)/).exec(url);\n      var queryParams = query;\n\n      if (queryParamsString && queryParamsString.length >= 2) {\n        queryParamsString[1].split('&').forEach(function (param) {\n          var _param$split = param.split('='),\n              _param$split2 = _slicedToArray(_param$split, 2),\n              key = _param$split2[0],\n              value = _param$split2[1];\n\n          queryParams[key] = value;\n        });\n      } // NOTE: We're adding an additional timestamp to the query.\n      // This is to prevent certain browsers from returning cached\n      // versions of the url we are requesting.\n      // See this PR for more info: https://github.com/pixelunion/shopify-asyncview/pull/4\n\n\n      var cachebustingParams = _objectSpread2({}, queryParams, {\n        _: new Date().getTime()\n      });\n\n      var hashUrl = querylessUrl.replace(/([^#]+)(.*)/, function (match, address, hash) {\n        return \"\".concat(address, \"?\").concat(Object.keys(queryParams).sort().map(function (key) {\n          return \"\".concat(key, \"=\").concat(encodeURIComponent(queryParams[key]));\n        }).join('&')).concat(hash);\n      });\n      var requestUrl = querylessUrl.replace(/([^#]+)(.*)/, function (match, address, hash) {\n        return \"\".concat(address, \"?\").concat(Object.keys(cachebustingParams).sort().map(function (key) {\n          return \"\".concat(key, \"=\").concat(encodeURIComponent(cachebustingParams[key]));\n        }).join('&')).concat(hash);\n      });\n      var promise = new Promise(function (resolve, reject) {\n        var data;\n\n        if (hashUrl in deferred) {\n          resolve(deferred[hashUrl]);\n          return;\n        }\n\n        deferred[hashUrl] = promise;\n\n        if (options.hash) {\n          data = sessionStorage.getItem(hashUrl);\n\n          if (data) {\n            var deserialized = JSON.parse(data);\n\n            if (options.hash === deserialized.options.hash) {\n              delete deferred[hashUrl];\n              resolve(deserialized);\n              return;\n            }\n          }\n        }\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', requestUrl, true);\n\n        xhr.onload = function () {\n          var el = xhr.response;\n          var newOptions = {};\n          var optionsEl = el.querySelector('[data-options]');\n\n          if (optionsEl && optionsEl.innerHTML) {\n            newOptions = JSON.parse(el.querySelector('[data-options]').innerHTML);\n          }\n\n          var htmlEls = el.querySelectorAll('[data-html]');\n          var newHtml = {};\n\n          if (htmlEls.length === 1 && htmlEls[0].getAttribute('data-html') === '') {\n            newHtml = htmlEls[0].innerHTML;\n          } else {\n            for (var i = 0; i < htmlEls.length; i++) {\n              newHtml[htmlEls[i].getAttribute('data-html')] = htmlEls[i].innerHTML;\n            }\n          }\n\n          var dataEls = el.querySelectorAll('[data-data]');\n          var newData = {};\n\n          if (dataEls.length === 1 && dataEls[0].getAttribute('data-data') === '') {\n            newData = JSON.parse(dataEls[0].innerHTML);\n          } else {\n            for (var _i = 0; _i < dataEls.length; _i++) {\n              newData[dataEls[_i].getAttribute('data-data')] = JSON.parse(dataEls[_i].innerHTML);\n            }\n          }\n\n          if (options.hash) {\n            try {\n              sessionStorage.setItem(hashUrl, JSON.stringify({\n                options: newOptions,\n                data: newData,\n                html: newHtml\n              }));\n            } catch (error) {\n              console.error(error);\n            }\n          }\n\n          delete deferred[hashUrl];\n          resolve({\n            data: newData,\n            html: newHtml\n          });\n        };\n\n        xhr.onerror = function () {\n          delete deferred[hashUrl];\n          reject();\n        };\n\n        xhr.responseType = 'document';\n        xhr.send();\n      });\n      return promise;\n    }\n  }]);\n\n  return AsyncView;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AsyncView);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/shopify-asyncview/dist/index.es.js\n");

/***/ }),

/***/ "./node_modules/shopify-variants/dist/shopify-variants.es.js":
/*!*******************************************************************!*\
  !*** ./node_modules/shopify-variants/dist/shopify-variants.es.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n/*!\n * shopify-variants v1.4.1\n * (c) 2019 Pixel Union\n */\n\n\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  function Node(variant) {\n    _classCallCheck(this, Node);\n\n    this.variant = variant;\n    this.optionsCount = this.variant.options.length;\n    this.neighbors = [];\n\n    for (var i = 0; i < this.optionsCount; i++) {\n      this.neighbors.push([]);\n    }\n  }\n\n  _createClass(Node, [{\n    key: \"addNeighbor\",\n    value: function addNeighbor(variant) {\n      for (var i = 0; i < this.optionsCount; i++) {\n        if (this.variant.options[i] !== variant.options[i]) {\n          this.neighbors[i].push(variant);\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getValidOptions\",\n    value: function getValidOptions() {\n      var _this = this;\n\n      var options = [];\n\n      var _loop = function _loop(i) {\n        var variants = [_this.variant].concat(_toConsumableArray(_this.neighbors[i]));\n        options[i] = {};\n        variants.forEach(function (item) {\n          var variant = item;\n          var option = variant.options[i];\n          options[i][option] = {\n            available: options[i][option] && options[i][option].available || variant.available\n          };\n        });\n      };\n\n      for (var i = 0; i < this.optionsCount; i++) {\n        _loop(i);\n      }\n\n      return options;\n    }\n  }]);\n\n  return Node;\n}();\n\nfunction getVariantFromOptions(variants, options) {\n  var variant = null;\n  variants.forEach(function (potentialVariant) {\n    var found = true;\n\n    for (var i = 0; i < potentialVariant.options.length; i++) {\n      if (options[i] !== potentialVariant.options[i]) {\n        found = false;\n      }\n    }\n\n    if (found) {\n      variant = potentialVariant;\n    }\n  });\n  return variant || false;\n}\n\nfunction getClosestVariantFromOptions(variants, options) {\n  var closestVariant = null;\n  var matchingValues = 0;\n  variants.forEach(function (variant) {\n    var tempMatchingValues = 0;\n\n    for (var i = 0; i < variant.options.length; i++) {\n      if (options[i] === variant.options[i]) {\n        tempMatchingValues++;\n      } else {\n        break;\n      }\n    }\n\n    if (tempMatchingValues >= matchingValues) {\n      closestVariant = variant;\n      matchingValues = tempMatchingValues;\n    }\n  });\n  return closestVariant || false;\n}\n\nfunction getVariantOrClosestFromOptions(variants, options) {\n  return getVariantFromOptions(variants, options) || getClosestVariantFromOptions(variants, options);\n}\n\nfunction getAvailableOptionsFromVariant(variants, variant) {\n  var nodeMap = {};\n  variants.forEach(function (v) {\n    nodeMap[v.id] = new Node(v);\n    variants.forEach(function (v2) {\n      nodeMap[v.id].addNeighbor(v2);\n    });\n  });\n  return nodeMap[variant.id].getValidOptions();\n}\n\nvar Variants =\n/*#__PURE__*/\nfunction () {\n  function Variants(product, $variants, $options, config) {\n    var _this = this;\n\n    _classCallCheck(this, Variants);\n\n    var defaultConfig = {\n      disableUnavailableVariants: true,\n      switchCallback: function switchCallback() {},\n      mixedControls: false,\n      optionDataAttribute: 'data-product-option'\n    };\n    this.optionsTypes = {\n      select: 'select',\n      radio: 'input[type=\"radio\"]'\n    };\n    this.events = [];\n    this.product = product;\n    this.optionsCount = this.product.options.length;\n    this.variants = $variants.get(0);\n    this.options = $options.get();\n    this.selectOptions = this.options.filter(function (option) {\n      return option.matches(_this.optionsTypes.select);\n    });\n    this.radioOptions = this.options.filter(function (option) {\n      return option.matches(_this.optionsTypes.radio);\n    });\n    this.config = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend(defaultConfig, config);\n\n    if (this.selectOptions.length === 0 && this.radioOptions.length === 0) {\n      console.warn('Shopify Variants: Option set is not a valid type');\n    }\n\n    this._bindEvents();\n\n    this._switchVariant(this._getSelectedOptions(), true);\n  }\n\n  _createClass(Variants, [{\n    key: \"isDefault\",\n    value: function isDefault() {\n      return this.product.variants[0].public_title === null;\n    }\n  }, {\n    key: \"getSelectedVariant\",\n    value: function getSelectedVariant() {\n      if (this.isDefault()) {\n        return this.product.variants[0];\n      }\n\n      return getVariantFromOptions(this.product.variants, this._getSelectedOptions());\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this._unbindEvents();\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this2 = this;\n\n      for (var i = 0; i < this.options.length; i++) {\n        var option = this.options[i];\n\n        var fn = function fn(event) {\n          var target = event.target;\n\n          if (_this2.config.mixedControls) {\n            _this2._switchVariant(_this2._getSelectedOptionsMixed());\n          } else if (target.matches(_this2.optionsTypes.select)) {\n            _this2._switchVariant(_this2._getSelectedOptionsSelect());\n          } else if (target.matches(_this2.optionsTypes.radio)) {\n            _this2._switchVariant(_this2._getSelectedOptionsRadio());\n          }\n        };\n\n        option.addEventListener('change', fn);\n        this.events.push({\n          el: option,\n          fn: fn\n        });\n      }\n    }\n  }, {\n    key: \"_unbindEvents\",\n    value: function _unbindEvents() {\n      this.events.forEach(function (_ref) {\n        var el = _ref.el,\n            fn = _ref.fn;\n        return el.removeEventListener('change', fn);\n      });\n    }\n  }, {\n    key: \"_getSelectedOptions\",\n    value: function _getSelectedOptions() {\n      // Note that we only support 1 mixed set of controls, or multiple complete sets\n      // of selects and/or radios but not multiple mixed sets.\n      if (this.config.mixedControls) {\n        return this._getSelectedOptionsMixed();\n      } // If multiple complete sets are present, we can can/do assume that all controls\n      // are in sync, because shopify-variants keeps them that way.\n\n\n      if (this.selectOptions.length > 0) {\n        return this._getSelectedOptionsSelect();\n      }\n\n      if (this.radioOptions.length > 0) {\n        return this._getSelectedOptionsRadio();\n      }\n\n      return [];\n    }\n  }, {\n    key: \"_getSelectedOptionsMixed\",\n    value: function _getSelectedOptionsMixed() {\n      var options = [];\n      this.selectOptions.forEach(function (option) {\n        var optionNumber = parseInt(option.dataset.productOption, 10);\n        options[optionNumber] = option.value;\n      });\n      this.radioOptions.forEach(function (option) {\n        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(option).is(':checked')) {\n          var optionNumber = parseInt(option.dataset.productOption, 10);\n          options[optionNumber] = option.value;\n        }\n      });\n      return options;\n    }\n  }, {\n    key: \"_getSelectedOptionsSelect\",\n    value: function _getSelectedOptionsSelect() {\n      var options = [];\n\n      for (var i = 0; i < this.selectOptions.length; i++) {\n        var option = this.selectOptions[i];\n        options.push(option.value);\n      }\n\n      return options;\n    }\n  }, {\n    key: \"_getSelectedOptionsRadio\",\n    value: function _getSelectedOptionsRadio() {\n      var options = [];\n\n      for (var i = 0; i < this.radioOptions.length; i++) {\n        var option = this.radioOptions[i];\n\n        if (option.checked) {\n          options.push(option.value);\n        }\n      }\n\n      return options;\n    }\n  }, {\n    key: \"selectVariant\",\n    value: function selectVariant(id) {\n      var targetVariant = this.product.variants.filter(function (variant) {\n        return variant.id === id;\n      })[0];\n\n      if (targetVariant) {\n        this._switchVariant(targetVariant.options);\n      }\n    }\n  }, {\n    key: \"_switchVariant\",\n    value: function _switchVariant() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._getSelectedOptions();\n      var firstLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var product = this.product;\n      var variant = null;\n      var availableOptions = null;\n      variant = getVariantOrClosestFromOptions(product.variants, options);\n\n      if (!variant) {\n        return;\n      }\n\n      availableOptions = getAvailableOptionsFromVariant(product.variants, variant);\n\n      this._switchVariantSelect(variant, availableOptions);\n\n      this._switchVariantRadio(variant, availableOptions);\n\n      this.variants.value = variant.id; // Trigger event, IE11 compatible but could be deprecated in the future\n\n      var event = document.createEvent('Event');\n      event.initEvent('change', true, false);\n      this.variants.dispatchEvent(event);\n      var data = {\n        product: product,\n        variant: variant,\n        firstLoad: firstLoad\n      };\n      this.config.switchCallback(data);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).trigger('shopify-variants:switch-variant', data);\n    }\n  }, {\n    key: \"_switchVariantSelect\",\n    value: function _switchVariantSelect(variant, availableOptions) {\n      if (this.selectOptions.length === 0) {\n        return;\n      } // Iterate over each option type\n\n\n      for (var i = 0; i < this.product.options.length; i++) {\n        // Corresponding select dropdown, if it exists\n        var input = null;\n\n        if (this.config.mixedControls) {\n          for (var j = 0; j < this.selectOptions.length; j++) {\n            var option = this.selectOptions[j];\n\n            if (option.matches(\"[\".concat(this.config.optionDataAttribute, \"=\\\"\").concat(i, \"\\\"]\"))) {\n              input = option;\n              break;\n            }\n          }\n        } else {\n          // For non-mixed controls, we assume select elements match the order and number of options\n          input = this.selectOptions[i];\n        }\n\n        if (input) {\n          // Iterate over each option on dropdown\n          var options = input.querySelectorAll('option');\n\n          for (var _j = 0; _j < options.length; _j++) {\n            var _option = options[_j];\n            var value = _option.value; // Not an available option\n\n            _option.disabled = !availableOptions[i][value] || !availableOptions[i][value].available && this.config.disableUnavailableVariants;\n            _option.selected = false; // Dropdown option matches variant option\n\n            if (variant.options[i] === value) {\n              _option.disabled = false;\n              _option.selected = true;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_switchVariantRadio\",\n    value: function _switchVariantRadio(variant, availableOptions) {\n      var _this3 = this;\n\n      if (this.radioOptions.length === 0) {\n        return;\n      }\n\n      for (var i = 0; i < this.radioOptions.length; i++) {\n        var option = this.radioOptions[i];\n        option.disabled = true;\n        option.checked = false;\n        option.setAttribute('data-soldout', false);\n      }\n\n      var _loop = function _loop(_i) {\n        var selector = encodeURIComponent(_this3.product.options[_i]).replace(/%20/g, '+').replace(/[!'()*]/g, function (_char) {\n          return \"%\".concat(_char.charCodeAt(0).toString(16).toUpperCase());\n        });\n\n        var options = _this3.radioOptions.filter(function (option) {\n          return option.matches(\"[name=\\\"\".concat(selector, \"\\\"]\"));\n        });\n\n        for (var j = 0; j < options.length; j++) {\n          var _option2 = options[j];\n\n          if (variant.options[_i] === _option2.value) {\n            _option2.checked = true;\n          }\n\n          if (availableOptions[_i][_option2.value]) {\n            _option2.disabled = false;\n\n            if (!availableOptions[_i][_option2.value].available && _this3.config.disableUnavailableVariants) {\n              _option2.disabled = true;\n\n              _option2.setAttribute('data-soldout', true);\n            }\n          }\n        }\n      };\n\n      for (var _i = 0; _i < this.product.options.length; _i++) {\n        _loop(_i);\n      }\n    }\n  }]);\n\n  return Variants;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Variants);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2hvcGlmeS12YXJpYW50cy9kaXN0L3Nob3BpZnktdmFyaWFudHMuZXMuanM/NWFmZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVCOztBQUV2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaURBQWlELGdCQUFnQjs7QUFFakU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLHVCQUF1QjtBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVCQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQSxxQkFBcUIsdUJBQXVCO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixxQ0FBcUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsNEJBQTRCO0FBQy9DO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMLGtCQUFrQiw2Q0FBQzs7QUFFbkI7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBLHFCQUFxQix5QkFBeUI7QUFDOUM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxZQUFZLDZDQUFDO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBLHFCQUFxQiwrQkFBK0I7QUFDcEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBLHFCQUFxQiw4QkFBOEI7QUFDbkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDZDQUFDO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOzs7QUFHUCxxQkFBcUIsaUNBQWlDO0FBQ3REO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsK0JBQStCO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEIscUJBQXFCO0FBQy9DO0FBQ0Esc0NBQXNDOztBQUV0QztBQUNBLHFDQUFxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHFCQUFxQiw4QkFBOEI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxTQUFTOztBQUVULHVCQUF1QixvQkFBb0I7QUFDM0M7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixrQ0FBa0M7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRWMsdUVBQVEsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zaG9waWZ5LXZhcmlhbnRzL2Rpc3Qvc2hvcGlmeS12YXJpYW50cy5lcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyohXG4gKiBzaG9waWZ5LXZhcmlhbnRzIHYxLjQuMVxuICogKGMpIDIwMTkgUGl4ZWwgVW5pb25cbiAqL1xuXG5pbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbnZhciBOb2RlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTm9kZSh2YXJpYW50KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vZGUpO1xuXG4gICAgdGhpcy52YXJpYW50ID0gdmFyaWFudDtcbiAgICB0aGlzLm9wdGlvbnNDb3VudCA9IHRoaXMudmFyaWFudC5vcHRpb25zLmxlbmd0aDtcbiAgICB0aGlzLm5laWdoYm9ycyA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm9wdGlvbnNDb3VudDsgaSsrKSB7XG4gICAgICB0aGlzLm5laWdoYm9ycy5wdXNoKFtdKTtcbiAgICB9XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTm9kZSwgW3tcbiAgICBrZXk6IFwiYWRkTmVpZ2hib3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkTmVpZ2hib3IodmFyaWFudCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm9wdGlvbnNDb3VudDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnZhcmlhbnQub3B0aW9uc1tpXSAhPT0gdmFyaWFudC5vcHRpb25zW2ldKSB7XG4gICAgICAgICAgdGhpcy5uZWlnaGJvcnNbaV0ucHVzaCh2YXJpYW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRWYWxpZE9wdGlvbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VmFsaWRPcHRpb25zKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIG9wdGlvbnMgPSBbXTtcblxuICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSkge1xuICAgICAgICB2YXIgdmFyaWFudHMgPSBbX3RoaXMudmFyaWFudF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfdGhpcy5uZWlnaGJvcnNbaV0pKTtcbiAgICAgICAgb3B0aW9uc1tpXSA9IHt9O1xuICAgICAgICB2YXJpYW50cy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgdmFyIHZhcmlhbnQgPSBpdGVtO1xuICAgICAgICAgIHZhciBvcHRpb24gPSB2YXJpYW50Lm9wdGlvbnNbaV07XG4gICAgICAgICAgb3B0aW9uc1tpXVtvcHRpb25dID0ge1xuICAgICAgICAgICAgYXZhaWxhYmxlOiBvcHRpb25zW2ldW29wdGlvbl0gJiYgb3B0aW9uc1tpXVtvcHRpb25dLmF2YWlsYWJsZSB8fCB2YXJpYW50LmF2YWlsYWJsZVxuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm9wdGlvbnNDb3VudDsgaSsrKSB7XG4gICAgICAgIF9sb29wKGkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gb3B0aW9ucztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTm9kZTtcbn0oKTtcblxuZnVuY3Rpb24gZ2V0VmFyaWFudEZyb21PcHRpb25zKHZhcmlhbnRzLCBvcHRpb25zKSB7XG4gIHZhciB2YXJpYW50ID0gbnVsbDtcbiAgdmFyaWFudHMuZm9yRWFjaChmdW5jdGlvbiAocG90ZW50aWFsVmFyaWFudCkge1xuICAgIHZhciBmb3VuZCA9IHRydWU7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBvdGVudGlhbFZhcmlhbnQub3B0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG9wdGlvbnNbaV0gIT09IHBvdGVudGlhbFZhcmlhbnQub3B0aW9uc1tpXSkge1xuICAgICAgICBmb3VuZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChmb3VuZCkge1xuICAgICAgdmFyaWFudCA9IHBvdGVudGlhbFZhcmlhbnQ7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHZhcmlhbnQgfHwgZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGdldENsb3Nlc3RWYXJpYW50RnJvbU9wdGlvbnModmFyaWFudHMsIG9wdGlvbnMpIHtcbiAgdmFyIGNsb3Nlc3RWYXJpYW50ID0gbnVsbDtcbiAgdmFyIG1hdGNoaW5nVmFsdWVzID0gMDtcbiAgdmFyaWFudHMuZm9yRWFjaChmdW5jdGlvbiAodmFyaWFudCkge1xuICAgIHZhciB0ZW1wTWF0Y2hpbmdWYWx1ZXMgPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YXJpYW50Lm9wdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChvcHRpb25zW2ldID09PSB2YXJpYW50Lm9wdGlvbnNbaV0pIHtcbiAgICAgICAgdGVtcE1hdGNoaW5nVmFsdWVzKys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGVtcE1hdGNoaW5nVmFsdWVzID49IG1hdGNoaW5nVmFsdWVzKSB7XG4gICAgICBjbG9zZXN0VmFyaWFudCA9IHZhcmlhbnQ7XG4gICAgICBtYXRjaGluZ1ZhbHVlcyA9IHRlbXBNYXRjaGluZ1ZhbHVlcztcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY2xvc2VzdFZhcmlhbnQgfHwgZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGdldFZhcmlhbnRPckNsb3Nlc3RGcm9tT3B0aW9ucyh2YXJpYW50cywgb3B0aW9ucykge1xuICByZXR1cm4gZ2V0VmFyaWFudEZyb21PcHRpb25zKHZhcmlhbnRzLCBvcHRpb25zKSB8fCBnZXRDbG9zZXN0VmFyaWFudEZyb21PcHRpb25zKHZhcmlhbnRzLCBvcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gZ2V0QXZhaWxhYmxlT3B0aW9uc0Zyb21WYXJpYW50KHZhcmlhbnRzLCB2YXJpYW50KSB7XG4gIHZhciBub2RlTWFwID0ge307XG4gIHZhcmlhbnRzLmZvckVhY2goZnVuY3Rpb24gKHYpIHtcbiAgICBub2RlTWFwW3YuaWRdID0gbmV3IE5vZGUodik7XG4gICAgdmFyaWFudHMuZm9yRWFjaChmdW5jdGlvbiAodjIpIHtcbiAgICAgIG5vZGVNYXBbdi5pZF0uYWRkTmVpZ2hib3IodjIpO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG5vZGVNYXBbdmFyaWFudC5pZF0uZ2V0VmFsaWRPcHRpb25zKCk7XG59XG5cbnZhciBWYXJpYW50cyA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFZhcmlhbnRzKHByb2R1Y3QsICR2YXJpYW50cywgJG9wdGlvbnMsIGNvbmZpZykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmFyaWFudHMpO1xuXG4gICAgdmFyIGRlZmF1bHRDb25maWcgPSB7XG4gICAgICBkaXNhYmxlVW5hdmFpbGFibGVWYXJpYW50czogdHJ1ZSxcbiAgICAgIHN3aXRjaENhbGxiYWNrOiBmdW5jdGlvbiBzd2l0Y2hDYWxsYmFjaygpIHt9LFxuICAgICAgbWl4ZWRDb250cm9sczogZmFsc2UsXG4gICAgICBvcHRpb25EYXRhQXR0cmlidXRlOiAnZGF0YS1wcm9kdWN0LW9wdGlvbidcbiAgICB9O1xuICAgIHRoaXMub3B0aW9uc1R5cGVzID0ge1xuICAgICAgc2VsZWN0OiAnc2VsZWN0JyxcbiAgICAgIHJhZGlvOiAnaW5wdXRbdHlwZT1cInJhZGlvXCJdJ1xuICAgIH07XG4gICAgdGhpcy5ldmVudHMgPSBbXTtcbiAgICB0aGlzLnByb2R1Y3QgPSBwcm9kdWN0O1xuICAgIHRoaXMub3B0aW9uc0NvdW50ID0gdGhpcy5wcm9kdWN0Lm9wdGlvbnMubGVuZ3RoO1xuICAgIHRoaXMudmFyaWFudHMgPSAkdmFyaWFudHMuZ2V0KDApO1xuICAgIHRoaXMub3B0aW9ucyA9ICRvcHRpb25zLmdldCgpO1xuICAgIHRoaXMuc2VsZWN0T3B0aW9ucyA9IHRoaXMub3B0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKG9wdGlvbikge1xuICAgICAgcmV0dXJuIG9wdGlvbi5tYXRjaGVzKF90aGlzLm9wdGlvbnNUeXBlcy5zZWxlY3QpO1xuICAgIH0pO1xuICAgIHRoaXMucmFkaW9PcHRpb25zID0gdGhpcy5vcHRpb25zLmZpbHRlcihmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICByZXR1cm4gb3B0aW9uLm1hdGNoZXMoX3RoaXMub3B0aW9uc1R5cGVzLnJhZGlvKTtcbiAgICB9KTtcbiAgICB0aGlzLmNvbmZpZyA9ICQuZXh0ZW5kKGRlZmF1bHRDb25maWcsIGNvbmZpZyk7XG5cbiAgICBpZiAodGhpcy5zZWxlY3RPcHRpb25zLmxlbmd0aCA9PT0gMCAmJiB0aGlzLnJhZGlvT3B0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNvbnNvbGUud2FybignU2hvcGlmeSBWYXJpYW50czogT3B0aW9uIHNldCBpcyBub3QgYSB2YWxpZCB0eXBlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5fYmluZEV2ZW50cygpO1xuXG4gICAgdGhpcy5fc3dpdGNoVmFyaWFudCh0aGlzLl9nZXRTZWxlY3RlZE9wdGlvbnMoKSwgdHJ1ZSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVmFyaWFudHMsIFt7XG4gICAga2V5OiBcImlzRGVmYXVsdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc0RlZmF1bHQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9kdWN0LnZhcmlhbnRzWzBdLnB1YmxpY190aXRsZSA9PT0gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0U2VsZWN0ZWRWYXJpYW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNlbGVjdGVkVmFyaWFudCgpIHtcbiAgICAgIGlmICh0aGlzLmlzRGVmYXVsdCgpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2R1Y3QudmFyaWFudHNbMF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBnZXRWYXJpYW50RnJvbU9wdGlvbnModGhpcy5wcm9kdWN0LnZhcmlhbnRzLCB0aGlzLl9nZXRTZWxlY3RlZE9wdGlvbnMoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVubG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1bmxvYWQoKSB7XG4gICAgICB0aGlzLl91bmJpbmRFdmVudHMoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX2JpbmRFdmVudHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2JpbmRFdmVudHMoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm9wdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIG9wdGlvbiA9IHRoaXMub3B0aW9uc1tpXTtcblxuICAgICAgICB2YXIgZm4gPSBmdW5jdGlvbiBmbihldmVudCkge1xuICAgICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cbiAgICAgICAgICBpZiAoX3RoaXMyLmNvbmZpZy5taXhlZENvbnRyb2xzKSB7XG4gICAgICAgICAgICBfdGhpczIuX3N3aXRjaFZhcmlhbnQoX3RoaXMyLl9nZXRTZWxlY3RlZE9wdGlvbnNNaXhlZCgpKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHRhcmdldC5tYXRjaGVzKF90aGlzMi5vcHRpb25zVHlwZXMuc2VsZWN0KSkge1xuICAgICAgICAgICAgX3RoaXMyLl9zd2l0Y2hWYXJpYW50KF90aGlzMi5fZ2V0U2VsZWN0ZWRPcHRpb25zU2VsZWN0KCkpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0Lm1hdGNoZXMoX3RoaXMyLm9wdGlvbnNUeXBlcy5yYWRpbykpIHtcbiAgICAgICAgICAgIF90aGlzMi5fc3dpdGNoVmFyaWFudChfdGhpczIuX2dldFNlbGVjdGVkT3B0aW9uc1JhZGlvKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBvcHRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZm4pO1xuICAgICAgICB0aGlzLmV2ZW50cy5wdXNoKHtcbiAgICAgICAgICBlbDogb3B0aW9uLFxuICAgICAgICAgIGZuOiBmblxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX3VuYmluZEV2ZW50c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfdW5iaW5kRXZlbnRzKCkge1xuICAgICAgdGhpcy5ldmVudHMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIgZWwgPSBfcmVmLmVsLFxuICAgICAgICAgICAgZm4gPSBfcmVmLmZuO1xuICAgICAgICByZXR1cm4gZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZm4pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9nZXRTZWxlY3RlZE9wdGlvbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2dldFNlbGVjdGVkT3B0aW9ucygpIHtcbiAgICAgIC8vIE5vdGUgdGhhdCB3ZSBvbmx5IHN1cHBvcnQgMSBtaXhlZCBzZXQgb2YgY29udHJvbHMsIG9yIG11bHRpcGxlIGNvbXBsZXRlIHNldHNcbiAgICAgIC8vIG9mIHNlbGVjdHMgYW5kL29yIHJhZGlvcyBidXQgbm90IG11bHRpcGxlIG1peGVkIHNldHMuXG4gICAgICBpZiAodGhpcy5jb25maWcubWl4ZWRDb250cm9scykge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0U2VsZWN0ZWRPcHRpb25zTWl4ZWQoKTtcbiAgICAgIH0gLy8gSWYgbXVsdGlwbGUgY29tcGxldGUgc2V0cyBhcmUgcHJlc2VudCwgd2UgY2FuIGNhbi9kbyBhc3N1bWUgdGhhdCBhbGwgY29udHJvbHNcbiAgICAgIC8vIGFyZSBpbiBzeW5jLCBiZWNhdXNlIHNob3BpZnktdmFyaWFudHMga2VlcHMgdGhlbSB0aGF0IHdheS5cblxuXG4gICAgICBpZiAodGhpcy5zZWxlY3RPcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFNlbGVjdGVkT3B0aW9uc1NlbGVjdCgpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5yYWRpb09wdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0U2VsZWN0ZWRPcHRpb25zUmFkaW8oKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfZ2V0U2VsZWN0ZWRPcHRpb25zTWl4ZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2dldFNlbGVjdGVkT3B0aW9uc01peGVkKCkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBbXTtcbiAgICAgIHRoaXMuc2VsZWN0T3B0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICAgICAgdmFyIG9wdGlvbk51bWJlciA9IHBhcnNlSW50KG9wdGlvbi5kYXRhc2V0LnByb2R1Y3RPcHRpb24sIDEwKTtcbiAgICAgICAgb3B0aW9uc1tvcHRpb25OdW1iZXJdID0gb3B0aW9uLnZhbHVlO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnJhZGlvT3B0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICAgICAgaWYgKCQob3B0aW9uKS5pcygnOmNoZWNrZWQnKSkge1xuICAgICAgICAgIHZhciBvcHRpb25OdW1iZXIgPSBwYXJzZUludChvcHRpb24uZGF0YXNldC5wcm9kdWN0T3B0aW9uLCAxMCk7XG4gICAgICAgICAgb3B0aW9uc1tvcHRpb25OdW1iZXJdID0gb3B0aW9uLnZhbHVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfZ2V0U2VsZWN0ZWRPcHRpb25zU2VsZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRTZWxlY3RlZE9wdGlvbnNTZWxlY3QoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuc2VsZWN0T3B0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgb3B0aW9uID0gdGhpcy5zZWxlY3RPcHRpb25zW2ldO1xuICAgICAgICBvcHRpb25zLnB1c2gob3B0aW9uLnZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9nZXRTZWxlY3RlZE9wdGlvbnNSYWRpb1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0U2VsZWN0ZWRPcHRpb25zUmFkaW8oKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmFkaW9PcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLnJhZGlvT3B0aW9uc1tpXTtcblxuICAgICAgICBpZiAob3B0aW9uLmNoZWNrZWQpIHtcbiAgICAgICAgICBvcHRpb25zLnB1c2gob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gb3B0aW9ucztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2VsZWN0VmFyaWFudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZWxlY3RWYXJpYW50KGlkKSB7XG4gICAgICB2YXIgdGFyZ2V0VmFyaWFudCA9IHRoaXMucHJvZHVjdC52YXJpYW50cy5maWx0ZXIoZnVuY3Rpb24gKHZhcmlhbnQpIHtcbiAgICAgICAgcmV0dXJuIHZhcmlhbnQuaWQgPT09IGlkO1xuICAgICAgfSlbMF07XG5cbiAgICAgIGlmICh0YXJnZXRWYXJpYW50KSB7XG4gICAgICAgIHRoaXMuX3N3aXRjaFZhcmlhbnQodGFyZ2V0VmFyaWFudC5vcHRpb25zKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX3N3aXRjaFZhcmlhbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3N3aXRjaFZhcmlhbnQoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogdGhpcy5fZ2V0U2VsZWN0ZWRPcHRpb25zKCk7XG4gICAgICB2YXIgZmlyc3RMb2FkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcbiAgICAgIHZhciBwcm9kdWN0ID0gdGhpcy5wcm9kdWN0O1xuICAgICAgdmFyIHZhcmlhbnQgPSBudWxsO1xuICAgICAgdmFyIGF2YWlsYWJsZU9wdGlvbnMgPSBudWxsO1xuICAgICAgdmFyaWFudCA9IGdldFZhcmlhbnRPckNsb3Nlc3RGcm9tT3B0aW9ucyhwcm9kdWN0LnZhcmlhbnRzLCBvcHRpb25zKTtcblxuICAgICAgaWYgKCF2YXJpYW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXZhaWxhYmxlT3B0aW9ucyA9IGdldEF2YWlsYWJsZU9wdGlvbnNGcm9tVmFyaWFudChwcm9kdWN0LnZhcmlhbnRzLCB2YXJpYW50KTtcblxuICAgICAgdGhpcy5fc3dpdGNoVmFyaWFudFNlbGVjdCh2YXJpYW50LCBhdmFpbGFibGVPcHRpb25zKTtcblxuICAgICAgdGhpcy5fc3dpdGNoVmFyaWFudFJhZGlvKHZhcmlhbnQsIGF2YWlsYWJsZU9wdGlvbnMpO1xuXG4gICAgICB0aGlzLnZhcmlhbnRzLnZhbHVlID0gdmFyaWFudC5pZDsgLy8gVHJpZ2dlciBldmVudCwgSUUxMSBjb21wYXRpYmxlIGJ1dCBjb3VsZCBiZSBkZXByZWNhdGVkIGluIHRoZSBmdXR1cmVcblxuICAgICAgdmFyIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgICBldmVudC5pbml0RXZlbnQoJ2NoYW5nZScsIHRydWUsIGZhbHNlKTtcbiAgICAgIHRoaXMudmFyaWFudHMuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgcHJvZHVjdDogcHJvZHVjdCxcbiAgICAgICAgdmFyaWFudDogdmFyaWFudCxcbiAgICAgICAgZmlyc3RMb2FkOiBmaXJzdExvYWRcbiAgICAgIH07XG4gICAgICB0aGlzLmNvbmZpZy5zd2l0Y2hDYWxsYmFjayhkYXRhKTtcbiAgICAgICQod2luZG93KS50cmlnZ2VyKCdzaG9waWZ5LXZhcmlhbnRzOnN3aXRjaC12YXJpYW50JywgZGF0YSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9zd2l0Y2hWYXJpYW50U2VsZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9zd2l0Y2hWYXJpYW50U2VsZWN0KHZhcmlhbnQsIGF2YWlsYWJsZU9wdGlvbnMpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdE9wdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gLy8gSXRlcmF0ZSBvdmVyIGVhY2ggb3B0aW9uIHR5cGVcblxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucHJvZHVjdC5vcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIENvcnJlc3BvbmRpbmcgc2VsZWN0IGRyb3Bkb3duLCBpZiBpdCBleGlzdHNcbiAgICAgICAgdmFyIGlucHV0ID0gbnVsbDtcblxuICAgICAgICBpZiAodGhpcy5jb25maWcubWl4ZWRDb250cm9scykge1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5zZWxlY3RPcHRpb25zLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICB2YXIgb3B0aW9uID0gdGhpcy5zZWxlY3RPcHRpb25zW2pdO1xuXG4gICAgICAgICAgICBpZiAob3B0aW9uLm1hdGNoZXMoXCJbXCIuY29uY2F0KHRoaXMuY29uZmlnLm9wdGlvbkRhdGFBdHRyaWJ1dGUsIFwiPVxcXCJcIikuY29uY2F0KGksIFwiXFxcIl1cIikpKSB7XG4gICAgICAgICAgICAgIGlucHV0ID0gb3B0aW9uO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gRm9yIG5vbi1taXhlZCBjb250cm9scywgd2UgYXNzdW1lIHNlbGVjdCBlbGVtZW50cyBtYXRjaCB0aGUgb3JkZXIgYW5kIG51bWJlciBvZiBvcHRpb25zXG4gICAgICAgICAgaW5wdXQgPSB0aGlzLnNlbGVjdE9wdGlvbnNbaV07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBvcHRpb24gb24gZHJvcGRvd25cbiAgICAgICAgICB2YXIgb3B0aW9ucyA9IGlucHV0LnF1ZXJ5U2VsZWN0b3JBbGwoJ29wdGlvbicpO1xuXG4gICAgICAgICAgZm9yICh2YXIgX2ogPSAwOyBfaiA8IG9wdGlvbnMubGVuZ3RoOyBfaisrKSB7XG4gICAgICAgICAgICB2YXIgX29wdGlvbiA9IG9wdGlvbnNbX2pdO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gX29wdGlvbi52YWx1ZTsgLy8gTm90IGFuIGF2YWlsYWJsZSBvcHRpb25cblxuICAgICAgICAgICAgX29wdGlvbi5kaXNhYmxlZCA9ICFhdmFpbGFibGVPcHRpb25zW2ldW3ZhbHVlXSB8fCAhYXZhaWxhYmxlT3B0aW9uc1tpXVt2YWx1ZV0uYXZhaWxhYmxlICYmIHRoaXMuY29uZmlnLmRpc2FibGVVbmF2YWlsYWJsZVZhcmlhbnRzO1xuICAgICAgICAgICAgX29wdGlvbi5zZWxlY3RlZCA9IGZhbHNlOyAvLyBEcm9wZG93biBvcHRpb24gbWF0Y2hlcyB2YXJpYW50IG9wdGlvblxuXG4gICAgICAgICAgICBpZiAodmFyaWFudC5vcHRpb25zW2ldID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgICBfb3B0aW9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgIF9vcHRpb24uc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfc3dpdGNoVmFyaWFudFJhZGlvXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9zd2l0Y2hWYXJpYW50UmFkaW8odmFyaWFudCwgYXZhaWxhYmxlT3B0aW9ucykge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLnJhZGlvT3B0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmFkaW9PcHRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLnJhZGlvT3B0aW9uc1tpXTtcbiAgICAgICAgb3B0aW9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgb3B0aW9uLmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZSgnZGF0YS1zb2xkb3V0JywgZmFsc2UpO1xuICAgICAgfVxuXG4gICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChfaSkge1xuICAgICAgICB2YXIgc2VsZWN0b3IgPSBlbmNvZGVVUklDb21wb25lbnQoX3RoaXMzLnByb2R1Y3Qub3B0aW9uc1tfaV0pLnJlcGxhY2UoLyUyMC9nLCAnKycpLnJlcGxhY2UoL1shJygpKl0vZywgZnVuY3Rpb24gKF9jaGFyKSB7XG4gICAgICAgICAgcmV0dXJuIFwiJVwiLmNvbmNhdChfY2hhci5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIG9wdGlvbnMgPSBfdGhpczMucmFkaW9PcHRpb25zLmZpbHRlcihmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuIG9wdGlvbi5tYXRjaGVzKFwiW25hbWU9XFxcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJcXFwiXVwiKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgb3B0aW9ucy5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHZhciBfb3B0aW9uMiA9IG9wdGlvbnNbal07XG5cbiAgICAgICAgICBpZiAodmFyaWFudC5vcHRpb25zW19pXSA9PT0gX29wdGlvbjIudmFsdWUpIHtcbiAgICAgICAgICAgIF9vcHRpb24yLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChhdmFpbGFibGVPcHRpb25zW19pXVtfb3B0aW9uMi52YWx1ZV0pIHtcbiAgICAgICAgICAgIF9vcHRpb24yLmRpc2FibGVkID0gZmFsc2U7XG5cbiAgICAgICAgICAgIGlmICghYXZhaWxhYmxlT3B0aW9uc1tfaV1bX29wdGlvbjIudmFsdWVdLmF2YWlsYWJsZSAmJiBfdGhpczMuY29uZmlnLmRpc2FibGVVbmF2YWlsYWJsZVZhcmlhbnRzKSB7XG4gICAgICAgICAgICAgIF9vcHRpb24yLmRpc2FibGVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgICBfb3B0aW9uMi5zZXRBdHRyaWJ1dGUoJ2RhdGEtc29sZG91dCcsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHRoaXMucHJvZHVjdC5vcHRpb25zLmxlbmd0aDsgX2krKykge1xuICAgICAgICBfbG9vcChfaSk7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFZhcmlhbnRzO1xufSgpO1xuXG5leHBvcnQgZGVmYXVsdCBWYXJpYW50cztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/shopify-variants/dist/shopify-variants.es.js\n");

/***/ }),

/***/ "./node_modules/twitter-fetcher/js/twitterFetcher_min.js":
/*!***************************************************************!*\
  !*** ./node_modules/twitter-fetcher/js/twitterFetcher_min.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*********************************************************************\n * @license\n*  #### Twitter Post Fetcher v17.1.0 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n!function(e,t){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined}(0,function(){var _=\"\",y=20,T=!0,k=[],C=!1,x=!0,E=!0,N=null,A=!0,I=!0,B=null,L=!0,M=!1,i=!1,R=!1,H=!0,a=\"en\",j=!0,q=!1,n=null;function P(e){return e.replace(/<b[^>]*>(.*?)<\\/b>/gi,function(e,t){return t}).replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,\"\")}function S(e){for(var t=e.getElementsByTagName(\"a\"),i=t.length-1;0<=i;i--)t[i].setAttribute(\"target\",\"_blank\")}function U(e,t){for(var i=[],a=new RegExp(\"(^| )\"+t+\"( |$)\"),n=e.getElementsByTagName(\"*\"),s=0,l=n.length;s<l;s++)a.test(n[s].className)&&i.push(n[s]);return i}function F(e){if(void 0!==e&&0<=e.innerHTML.indexOf(\"data-image\")){var t=e.innerHTML.split('data-image=\"')[1].split('\"')[0];return decodeURIComponent(t)+\".jpg\"}}var O={fetch:function(e){if(void 0===e.maxTweets&&(e.maxTweets=20),void 0===e.enableLinks&&(e.enableLinks=!0),void 0===e.showUser&&(e.showUser=!0),void 0===e.showTime&&(e.showTime=!0),void 0===e.dateFunction&&(e.dateFunction=\"default\"),void 0===e.showRetweet&&(e.showRetweet=!0),void 0===e.customCallback&&(e.customCallback=null),void 0===e.showInteraction&&(e.showInteraction=!0),void 0===e.showImages&&(e.showImages=!1),void 0===e.showReplies&&(e.showReplies=!1),void 0===e.useEmoji&&(e.useEmoji=!1),void 0===e.linksInNewWindow&&(e.linksInNewWindow=!0),void 0===e.showPermalinks&&(e.showPermalinks=!0),void 0===e.dataOnly&&(e.dataOnly=!1),C)k.push(e);else{C=!0,_=e.domId,y=e.maxTweets,T=e.enableLinks,E=e.showUser,x=e.showTime,I=e.showRetweet,N=e.dateFunction,B=e.customCallback,L=e.showInteraction,M=e.showImages,i=e.showReplies,R=e.useEmoji,H=e.linksInNewWindow,j=e.showPermalinks,q=e.dataOnly;var t=document.getElementsByTagName(\"head\")[0];null!==n&&t.removeChild(n),(n=document.createElement(\"script\")).type=\"text/javascript\",void 0!==e.list?n.src=\"https://syndication.twitter.com/timeline/list?callback=__twttrf.callback&dnt=false&list_slug=\"+e.list.listSlug+\"&screen_name=\"+e.list.screenName+\"&suppress_response_codes=true&lang=\"+(e.lang||a)+\"&rnd=\"+Math.random():void 0!==e.profile?n.src=\"https://syndication.twitter.com/timeline/profile?callback=__twttrf.callback&dnt=false&screen_name=\"+e.profile.screenName+\"&with_replies=\"+i+\"&suppress_response_codes=true&lang=\"+(e.lang||a)+\"&rnd=\"+Math.random():void 0!==e.likes?n.src=\"https://syndication.twitter.com/timeline/likes?callback=__twttrf.callback&dnt=false&screen_name=\"+e.likes.screenName+\"&suppress_response_codes=true&lang=\"+(e.lang||a)+\"&rnd=\"+Math.random():n.src=\"https://cdn.syndication.twimg.com/widgets/timelines/\"+e.id+\"?&lang=\"+(e.lang||a)+\"&callback=__twttrf.callback&suppress_response_codes=true&rnd=\"+Math.random(),t.appendChild(n)}},callback:function(e){if(void 0===e||void 0===e.body)return C=!1,void(0<k.length&&(O.fetch(k[0]),k.splice(0,1)));R||(e.body=e.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g,\"\")),M||(e.body=e.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g,\"\")),E||(e.body=e.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g,\"\"));var t=document.createElement(\"div\");function i(e){var t=e.getElementsByTagName(\"img\")[0];return t&&t.length&&(t.src=t.getAttribute(\"data-src-2x\")),e}t.innerHTML=e.body,void 0===t.getElementsByClassName&&(A=!1);var a=[],n=[],s=[],l=[],r=[],o=[],c=[],d=0;if(A)for(var m=t.getElementsByClassName(\"timeline-Tweet\");d<m.length;)0<m[d].getElementsByClassName(\"timeline-Tweet-retweetCredit\").length?r.push(!0):r.push(!1),(!r[d]||r[d]&&I)&&(a.push(m[d].getElementsByClassName(\"timeline-Tweet-text\")[0]),o.push(m[d].getAttribute(\"data-tweet-id\")),E&&n.push(i(m[d].getElementsByClassName(\"timeline-Tweet-author\")[0])),s.push(m[d].getElementsByClassName(\"dt-updated\")[0]),c.push(m[d].getElementsByClassName(\"timeline-Tweet-timestamp\")[0]),void 0!==m[d].getElementsByClassName(\"timeline-Tweet-media\")[0]?l.push(m[d].getElementsByClassName(\"timeline-Tweet-media\")[0]):l.push(void 0)),d++;else for(m=U(t,\"timeline-Tweet\");d<m.length;)0<U(m[d],\"timeline-Tweet-retweetCredit\").length?r.push(!0):r.push(!1),(!r[d]||r[d]&&I)&&(a.push(U(m[d],\"timeline-Tweet-text\")[0]),o.push(m[d].getAttribute(\"data-tweet-id\")),E&&n.push(i(U(m[d],\"timeline-Tweet-author\")[0])),s.push(U(m[d],\"dt-updated\")[0]),c.push(U(m[d],\"timeline-Tweet-timestamp\")[0]),void 0!==U(m[d],\"timeline-Tweet-media\")[0]?l.push(U(m[d],\"timeline-Tweet-media\")[0]):l.push(void 0)),d++;a.length>y&&(a.splice(y,a.length-y),n.splice(y,n.length-y),s.splice(y,s.length-y),r.splice(y,r.length-y),l.splice(y,l.length-y),c.splice(y,c.length-y));var p=[],u=(d=a.length,0);if(q)for(;u<d;)p.push({tweet:a[u].innerHTML,author:n[u]?n[u].innerHTML:\"Unknown Author\",author_data:{profile_url:n[u]?n[u].querySelector('[data-scribe=\"element:user_link\"]').href:null,profile_image:n[u]?n[u].querySelector('[data-scribe=\"element:avatar\"]').getAttribute(\"data-src-1x\"):null,profile_image_2x:n[u]?n[u].querySelector('[data-scribe=\"element:avatar\"]').getAttribute(\"data-src-2x\"):null,screen_name:n[u]?n[u].querySelector('[data-scribe=\"element:screen_name\"]').title:null,name:n[u]?n[u].querySelector('[data-scribe=\"element:name\"]').title:null},time:s[u].textContent,timestamp:s[u].getAttribute(\"datetime\").replace(\"+0000\",\"Z\").replace(/([\\+\\-])(\\d\\d)(\\d\\d)/,\"$1$2:$3\"),image:F(l[u]),rt:r[u],tid:o[u],permalinkURL:void 0===c[u]?\"\":c[u].href}),u++;else for(;u<d;){if(\"string\"!=typeof N){var h=s[u].getAttribute(\"datetime\"),g=new Date(s[u].getAttribute(\"datetime\").replace(/-/g,\"/\").replace(\"T\",\" \").split(\"+\")[0]),w=N(g,h);if(s[u].setAttribute(\"aria-label\",w),a[u].textContent)if(A)s[u].textContent=w;else{var f=document.createElement(\"p\"),v=document.createTextNode(w);f.appendChild(v),f.setAttribute(\"aria-label\",w),s[u]=f}else s[u].textContent=w}var b=\"\";T?(H&&(S(a[u]),E&&S(n[u])),E&&(b+='<div class=\"user\">'+P(n[u].innerHTML)+\"</div>\"),b+='<p class=\"tweet\">'+P(a[u].innerHTML)+\"</p>\",x&&(b+=j?'<p class=\"timePosted\"><a href=\"'+c[u]+'\">'+s[u].getAttribute(\"aria-label\")+\"</a></p>\":'<p class=\"timePosted\">'+s[u].getAttribute(\"aria-label\")+\"</p>\")):(a[u].textContent,E&&(b+='<p class=\"user\">'+n[u].textContent+\"</p>\"),b+='<p class=\"tweet\">'+a[u].textContent+\"</p>\",x&&(b+='<p class=\"timePosted\">'+s[u].textContent+\"</p>\")),L&&(b+='<p class=\"interact\"><a href=\"https://twitter.com/intent/tweet?in_reply_to='+o[u]+'\" class=\"twitter_reply_icon\"'+(H?' target=\"_blank\">':\">\")+'Reply</a><a href=\"https://twitter.com/intent/retweet?tweet_id='+o[u]+'\" class=\"twitter_retweet_icon\"'+(H?' target=\"_blank\">':\">\")+'Retweet</a><a href=\"https://twitter.com/intent/favorite?tweet_id='+o[u]+'\" class=\"twitter_fav_icon\"'+(H?' target=\"_blank\">':\">\")+\"Favorite</a></p>\"),M&&void 0!==l[u]&&void 0!==F(l[u])&&(b+='<div class=\"media\"><img src=\"'+F(l[u])+'\" alt=\"Image from tweet\" /></div>'),M?p.push(b):!M&&a[u].textContent.length&&p.push(b),u++}!function(e){if(null===B){for(var t=e.length,i=0,a=document.getElementById(_),n=\"<ul>\";i<t;)n+=\"<li>\"+e[i]+\"</li>\",i++;n+=\"</ul>\",a.innerHTML=n}else B(e)}(p),C=!1,0<k.length&&(O.fetch(k[0]),k.splice(0,1))}};return window.__twttrf=O,window.twitterFetcher=O});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twitter-fetcher/js/twitterFetcher_min.js\n");

/***/ }),

/***/ "./node_modules/unidragger/unidragger.js":
/*!***********************************************!*\
  !*** ./node_modules/unidragger/unidragger.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Unidragger v2.3.0\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! unipointer/unipointer */ \"./node_modules/unipointer/unipointer.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( Unipointer ) {\n      return factory( window, Unipointer );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, Unipointer ) {\n\n'use strict';\n\n// -------------------------- Unidragger -------------------------- //\n\nfunction Unidragger() {}\n\n// inherit Unipointer & EvEmitter\nvar proto = Unidragger.prototype = Object.create( Unipointer.prototype );\n\n// ----- bind start ----- //\n\nproto.bindHandles = function() {\n  this._bindHandles( true );\n};\n\nproto.unbindHandles = function() {\n  this._bindHandles( false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd\n */\nproto._bindHandles = function( isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  // bind each handle\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n  var touchAction = isAdd ? this._touchActionValue : '';\n  for ( var i=0; i < this.handles.length; i++ ) {\n    var handle = this.handles[i];\n    this._bindStartEvent( handle, isAdd );\n    handle[ bindMethod ]( 'click', this );\n    // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n    if ( window.PointerEvent ) {\n      handle.style.touchAction = touchAction;\n    }\n  }\n};\n\n// prototype so it can be overwriteable by Flickity\nproto._touchActionValue = 'none';\n\n// ----- start event ----- //\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerDown = function( event, pointer ) {\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n  // track start event position\n  this.pointerDownPointer = pointer;\n\n  event.preventDefault();\n  this.pointerDownBlur();\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// nodes that have text fields\nvar cursorNodes = {\n  TEXTAREA: true,\n  INPUT: true,\n  SELECT: true,\n  OPTION: true,\n};\n\n// input types that do not have text fields\nvar clickTypes = {\n  radio: true,\n  checkbox: true,\n  button: true,\n  submit: true,\n  image: true,\n  file: true,\n};\n\n// dismiss inputs with text fields. flickity#403, flickity#404\nproto.okayPointerDown = function( event ) {\n  var isCursorNode = cursorNodes[ event.target.nodeName ];\n  var isClickType = clickTypes[ event.target.type ];\n  var isOkay = !isCursorNode || isClickType;\n  if ( !isOkay ) {\n    this._pointerReset();\n  }\n  return isOkay;\n};\n\n// kludge to blur previously focused input\nproto.pointerDownBlur = function() {\n  var focused = document.activeElement;\n  // do not blur body for IE10, metafizzy/flickity#117\n  var canBlur = focused && focused.blur && focused != document.body;\n  if ( canBlur ) {\n    focused.blur();\n  }\n};\n\n// ----- move event ----- //\n\n/**\n * drag move\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\n// base pointer move logic\nproto._dragPointerMove = function( event, pointer ) {\n  var moveVector = {\n    x: pointer.pageX - this.pointerDownPointer.pageX,\n    y: pointer.pageY - this.pointerDownPointer.pageY\n  };\n  // start drag if pointer has moved far enough to start drag\n  if ( !this.isDragging && this.hasDragStarted( moveVector ) ) {\n    this._dragStart( event, pointer );\n  }\n  return moveVector;\n};\n\n// condition if pointer has moved far enough to start drag\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n// ----- end event ----- //\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto._dragPointerUp = function( event, pointer ) {\n  if ( this.isDragging ) {\n    this._dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this._staticClick( event, pointer );\n  }\n};\n\n// -------------------------- drag -------------------------- //\n\n// dragStart\nproto._dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  // prevent clicks\n  this.isPreventingClicks = true;\n  this.dragStart( event, pointer );\n};\n\nproto.dragStart = function( event, pointer ) {\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\n// dragMove\nproto._dragMove = function( event, pointer, moveVector ) {\n  // do not drag if not dragging yet\n  if ( !this.isDragging ) {\n    return;\n  }\n\n  this.dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  event.preventDefault();\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// dragEnd\nproto._dragEnd = function( event, pointer ) {\n  // set flags\n  this.isDragging = false;\n  // re-enable clicking async\n  setTimeout( function() {\n    delete this.isPreventingClicks;\n  }.bind( this ) );\n\n  this.dragEnd( event, pointer );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\n// ----- onclick ----- //\n\n// handle all clicks and prevent clicks when dragging\nproto.onclick = function( event ) {\n  if ( this.isPreventingClicks ) {\n    event.preventDefault();\n  }\n};\n\n// ----- staticClick ----- //\n\n// triggered after pointer down & up with no/tiny movement\nproto._staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  this.staticClick( event, pointer );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 300ms\n    setTimeout( function() {\n      delete this.isIgnoringMouseUp;\n    }.bind( this ), 400 );\n  }\n};\n\nproto.staticClick = function( event, pointer ) {\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n};\n\n// ----- utils ----- //\n\nUnidragger.getPointerPoint = Unipointer.getPointerPoint;\n\n// -----  ----- //\n\nreturn Unidragger;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/unidragger/unidragger.js\n");

/***/ }),

/***/ "./node_modules/unipointer/unipointer.js":
/*!***********************************************!*\
  !*** ./node_modules/unipointer/unipointer.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Unipointer v2.3.0\n * base class for doing one thing with pointer event\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*global define, module, require */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, EvEmitter ) {\n\n'use strict';\n\nfunction noop() {}\n\nfunction Unipointer() {}\n\n// inherit EvEmitter\nvar proto = Unipointer.prototype = Object.create( EvEmitter.prototype );\n\nproto.bindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, true );\n};\n\nproto.unbindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, false );\n};\n\n/**\n * Add or remove start event\n * @param {Boolean} isAdd - remove if falsey\n */\nproto._bindStartEvent = function( elem, isAdd ) {\n  // munge isAdd, default to true\n  isAdd = isAdd === undefined ? true : isAdd;\n  var bindMethod = isAdd ? 'addEventListener' : 'removeEventListener';\n\n  // default to mouse events\n  var startEvent = 'mousedown';\n  if ( window.PointerEvent ) {\n    // Pointer Events\n    startEvent = 'pointerdown';\n  } else if ( 'ontouchstart' in window ) {\n    // Touch Events. iOS Safari\n    startEvent = 'touchstart';\n  }\n  elem[ bindMethod ]( startEvent, this );\n};\n\n// trigger handler methods for events\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// returns the touch that we're keeping track of\nproto.getTouch = function( touches ) {\n  for ( var i=0; i < touches.length; i++ ) {\n    var touch = touches[i];\n    if ( touch.identifier == this.pointerIdentifier ) {\n      return touch;\n    }\n  }\n};\n\n// ----- start event ----- //\n\nproto.onmousedown = function( event ) {\n  // dismiss clicks from right or middle buttons\n  var button = event.button;\n  if ( button && ( button !== 0 && button !== 1 ) ) {\n    return;\n  }\n  this._pointerDown( event, event );\n};\n\nproto.ontouchstart = function( event ) {\n  this._pointerDown( event, event.changedTouches[0] );\n};\n\nproto.onpointerdown = function( event ) {\n  this._pointerDown( event, event );\n};\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nproto._pointerDown = function( event, pointer ) {\n  // dismiss right click and other pointers\n  // button = 0 is okay, 1-4 not\n  if ( event.button || this.isPointerDown ) {\n    return;\n  }\n\n  this.isPointerDown = true;\n  // save pointer identifier to match up touch events\n  this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n\n  this.pointerDown( event, pointer );\n};\n\nproto.pointerDown = function( event, pointer ) {\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// hash of events to be bound after start event\nvar postStartEvents = {\n  mousedown: [ 'mousemove', 'mouseup' ],\n  touchstart: [ 'touchmove', 'touchend', 'touchcancel' ],\n  pointerdown: [ 'pointermove', 'pointerup', 'pointercancel' ],\n};\n\nproto._bindPostStartEvents = function( event ) {\n  if ( !event ) {\n    return;\n  }\n  // get proper events to match start event\n  var events = postStartEvents[ event.type ];\n  // bind events to node\n  events.forEach( function( eventName ) {\n    window.addEventListener( eventName, this );\n  }, this );\n  // save these arguments\n  this._boundPointerEvents = events;\n};\n\nproto._unbindPostStartEvents = function() {\n  // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\n  if ( !this._boundPointerEvents ) {\n    return;\n  }\n  this._boundPointerEvents.forEach( function( eventName ) {\n    window.removeEventListener( eventName, this );\n  }, this );\n\n  delete this._boundPointerEvents;\n};\n\n// ----- move event ----- //\n\nproto.onmousemove = function( event ) {\n  this._pointerMove( event, event );\n};\n\nproto.onpointermove = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerMove( event, event );\n  }\n};\n\nproto.ontouchmove = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerMove( event, touch );\n  }\n};\n\n/**\n * pointer move\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerMove = function( event, pointer ) {\n  this.pointerMove( event, pointer );\n};\n\n// public\nproto.pointerMove = function( event, pointer ) {\n  this.emitEvent( 'pointerMove', [ event, pointer ] );\n};\n\n// ----- end event ----- //\n\n\nproto.onmouseup = function( event ) {\n  this._pointerUp( event, event );\n};\n\nproto.onpointerup = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerUp( event, event );\n  }\n};\n\nproto.ontouchend = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerUp( event, touch );\n  }\n};\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerUp = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerUp( event, pointer );\n};\n\n// public\nproto.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n};\n\n// ----- pointer done ----- //\n\n// triggered on pointer up & pointer cancel\nproto._pointerDone = function() {\n  this._pointerReset();\n  this._unbindPostStartEvents();\n  this.pointerDone();\n};\n\nproto._pointerReset = function() {\n  // reset properties\n  this.isPointerDown = false;\n  delete this.pointerIdentifier;\n};\n\nproto.pointerDone = noop;\n\n// ----- pointer cancel ----- //\n\nproto.onpointercancel = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerCancel( event, event );\n  }\n};\n\nproto.ontouchcancel = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerCancel( event, touch );\n  }\n};\n\n/**\n * pointer cancel\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nproto._pointerCancel = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerCancel( event, pointer );\n};\n\n// public\nproto.pointerCancel = function( event, pointer ) {\n  this.emitEvent( 'pointerCancel', [ event, pointer ] );\n};\n\n// -----  ----- //\n\n// utility function for getting x/y coords from event\nUnipointer.getPointerPoint = function( pointer ) {\n  return {\n    x: pointer.pageX,\n    y: pointer.pageY\n  };\n};\n\n// -----  ----- //\n\nreturn Unipointer;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdW5pcG9pbnRlci91bmlwb2ludGVyLmpzP2UwZjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQXlDO0FBQ2hEO0FBQ0EsSUFBSSxpQ0FBUTtBQUNaLE1BQU0sMkZBQXVCO0FBQzdCLEtBQUssbUNBQUU7QUFDUDtBQUNBLEtBQUs7QUFBQSxvR0FBQztBQUNOLEdBQUcsTUFBTSxFQVlOOztBQUVILENBQUM7O0FBRUQ7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQixvQkFBb0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLGVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBLENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdW5pcG9pbnRlci91bmlwb2ludGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBVbmlwb2ludGVyIHYyLjMuMFxuICogYmFzZSBjbGFzcyBmb3IgZG9pbmcgb25lIHRoaW5nIHdpdGggcG9pbnRlciBldmVudFxuICogTUlUIGxpY2Vuc2VcbiAqL1xuXG4vKmpzaGludCBicm93c2VyOiB0cnVlLCB1bmRlZjogdHJ1ZSwgdW51c2VkOiB0cnVlLCBzdHJpY3Q6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLyoganNoaW50IHN0cmljdDogZmFsc2UgKi8gLypnbG9iYWwgZGVmaW5lLCBtb2R1bGUsIHJlcXVpcmUgKi9cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoIFtcbiAgICAgICdldi1lbWl0dGVyL2V2LWVtaXR0ZXInXG4gICAgXSwgZnVuY3Rpb24oIEV2RW1pdHRlciApIHtcbiAgICAgIHJldHVybiBmYWN0b3J5KCB3aW5kb3csIEV2RW1pdHRlciApO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgcmVxdWlyZSgnZXYtZW1pdHRlcicpXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIHdpbmRvdy5Vbmlwb2ludGVyID0gZmFjdG9yeShcbiAgICAgIHdpbmRvdyxcbiAgICAgIHdpbmRvdy5FdkVtaXR0ZXJcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggd2luZG93LCBFdkVtaXR0ZXIgKSB7XG5cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbmZ1bmN0aW9uIFVuaXBvaW50ZXIoKSB7fVxuXG4vLyBpbmhlcml0IEV2RW1pdHRlclxudmFyIHByb3RvID0gVW5pcG9pbnRlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCBFdkVtaXR0ZXIucHJvdG90eXBlICk7XG5cbnByb3RvLmJpbmRTdGFydEV2ZW50ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG4gIHRoaXMuX2JpbmRTdGFydEV2ZW50KCBlbGVtLCB0cnVlICk7XG59O1xuXG5wcm90by51bmJpbmRTdGFydEV2ZW50ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG4gIHRoaXMuX2JpbmRTdGFydEV2ZW50KCBlbGVtLCBmYWxzZSApO1xufTtcblxuLyoqXG4gKiBBZGQgb3IgcmVtb3ZlIHN0YXJ0IGV2ZW50XG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlzQWRkIC0gcmVtb3ZlIGlmIGZhbHNleVxuICovXG5wcm90by5fYmluZFN0YXJ0RXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgaXNBZGQgKSB7XG4gIC8vIG11bmdlIGlzQWRkLCBkZWZhdWx0IHRvIHRydWVcbiAgaXNBZGQgPSBpc0FkZCA9PT0gdW5kZWZpbmVkID8gdHJ1ZSA6IGlzQWRkO1xuICB2YXIgYmluZE1ldGhvZCA9IGlzQWRkID8gJ2FkZEV2ZW50TGlzdGVuZXInIDogJ3JlbW92ZUV2ZW50TGlzdGVuZXInO1xuXG4gIC8vIGRlZmF1bHQgdG8gbW91c2UgZXZlbnRzXG4gIHZhciBzdGFydEV2ZW50ID0gJ21vdXNlZG93bic7XG4gIGlmICggd2luZG93LlBvaW50ZXJFdmVudCApIHtcbiAgICAvLyBQb2ludGVyIEV2ZW50c1xuICAgIHN0YXJ0RXZlbnQgPSAncG9pbnRlcmRvd24nO1xuICB9IGVsc2UgaWYgKCAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgKSB7XG4gICAgLy8gVG91Y2ggRXZlbnRzLiBpT1MgU2FmYXJpXG4gICAgc3RhcnRFdmVudCA9ICd0b3VjaHN0YXJ0JztcbiAgfVxuICBlbGVtWyBiaW5kTWV0aG9kIF0oIHN0YXJ0RXZlbnQsIHRoaXMgKTtcbn07XG5cbi8vIHRyaWdnZXIgaGFuZGxlciBtZXRob2RzIGZvciBldmVudHNcbnByb3RvLmhhbmRsZUV2ZW50ID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB2YXIgbWV0aG9kID0gJ29uJyArIGV2ZW50LnR5cGU7XG4gIGlmICggdGhpc1sgbWV0aG9kIF0gKSB7XG4gICAgdGhpc1sgbWV0aG9kIF0oIGV2ZW50ICk7XG4gIH1cbn07XG5cbi8vIHJldHVybnMgdGhlIHRvdWNoIHRoYXQgd2UncmUga2VlcGluZyB0cmFjayBvZlxucHJvdG8uZ2V0VG91Y2ggPSBmdW5jdGlvbiggdG91Y2hlcyApIHtcbiAgZm9yICggdmFyIGk9MDsgaSA8IHRvdWNoZXMubGVuZ3RoOyBpKysgKSB7XG4gICAgdmFyIHRvdWNoID0gdG91Y2hlc1tpXTtcbiAgICBpZiAoIHRvdWNoLmlkZW50aWZpZXIgPT0gdGhpcy5wb2ludGVySWRlbnRpZmllciApIHtcbiAgICAgIHJldHVybiB0b3VjaDtcbiAgICB9XG4gIH1cbn07XG5cbi8vIC0tLS0tIHN0YXJ0IGV2ZW50IC0tLS0tIC8vXG5cbnByb3RvLm9ubW91c2Vkb3duID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICAvLyBkaXNtaXNzIGNsaWNrcyBmcm9tIHJpZ2h0IG9yIG1pZGRsZSBidXR0b25zXG4gIHZhciBidXR0b24gPSBldmVudC5idXR0b247XG4gIGlmICggYnV0dG9uICYmICggYnV0dG9uICE9PSAwICYmIGJ1dHRvbiAhPT0gMSApICkge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLl9wb2ludGVyRG93biggZXZlbnQsIGV2ZW50ICk7XG59O1xuXG5wcm90by5vbnRvdWNoc3RhcnQgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIHRoaXMuX3BvaW50ZXJEb3duKCBldmVudCwgZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0gKTtcbn07XG5cbnByb3RvLm9ucG9pbnRlcmRvd24gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIHRoaXMuX3BvaW50ZXJEb3duKCBldmVudCwgZXZlbnQgKTtcbn07XG5cbi8qKlxuICogcG9pbnRlciBzdGFydFxuICogQHBhcmFtIHtFdmVudH0gZXZlbnRcbiAqIEBwYXJhbSB7RXZlbnQgb3IgVG91Y2h9IHBvaW50ZXJcbiAqL1xucHJvdG8uX3BvaW50ZXJEb3duID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICAvLyBkaXNtaXNzIHJpZ2h0IGNsaWNrIGFuZCBvdGhlciBwb2ludGVyc1xuICAvLyBidXR0b24gPSAwIGlzIG9rYXksIDEtNCBub3RcbiAgaWYgKCBldmVudC5idXR0b24gfHwgdGhpcy5pc1BvaW50ZXJEb3duICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuaXNQb2ludGVyRG93biA9IHRydWU7XG4gIC8vIHNhdmUgcG9pbnRlciBpZGVudGlmaWVyIHRvIG1hdGNoIHVwIHRvdWNoIGV2ZW50c1xuICB0aGlzLnBvaW50ZXJJZGVudGlmaWVyID0gcG9pbnRlci5wb2ludGVySWQgIT09IHVuZGVmaW5lZCA/XG4gICAgLy8gcG9pbnRlcklkIGZvciBwb2ludGVyIGV2ZW50cywgdG91Y2guaW5kZW50aWZpZXIgZm9yIHRvdWNoIGV2ZW50c1xuICAgIHBvaW50ZXIucG9pbnRlcklkIDogcG9pbnRlci5pZGVudGlmaWVyO1xuXG4gIHRoaXMucG9pbnRlckRvd24oIGV2ZW50LCBwb2ludGVyICk7XG59O1xuXG5wcm90by5wb2ludGVyRG93biA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgdGhpcy5fYmluZFBvc3RTdGFydEV2ZW50cyggZXZlbnQgKTtcbiAgdGhpcy5lbWl0RXZlbnQoICdwb2ludGVyRG93bicsIFsgZXZlbnQsIHBvaW50ZXIgXSApO1xufTtcblxuLy8gaGFzaCBvZiBldmVudHMgdG8gYmUgYm91bmQgYWZ0ZXIgc3RhcnQgZXZlbnRcbnZhciBwb3N0U3RhcnRFdmVudHMgPSB7XG4gIG1vdXNlZG93bjogWyAnbW91c2Vtb3ZlJywgJ21vdXNldXAnIF0sXG4gIHRvdWNoc3RhcnQ6IFsgJ3RvdWNobW92ZScsICd0b3VjaGVuZCcsICd0b3VjaGNhbmNlbCcgXSxcbiAgcG9pbnRlcmRvd246IFsgJ3BvaW50ZXJtb3ZlJywgJ3BvaW50ZXJ1cCcsICdwb2ludGVyY2FuY2VsJyBdLFxufTtcblxucHJvdG8uX2JpbmRQb3N0U3RhcnRFdmVudHMgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIGlmICggIWV2ZW50ICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBnZXQgcHJvcGVyIGV2ZW50cyB0byBtYXRjaCBzdGFydCBldmVudFxuICB2YXIgZXZlbnRzID0gcG9zdFN0YXJ0RXZlbnRzWyBldmVudC50eXBlIF07XG4gIC8vIGJpbmQgZXZlbnRzIHRvIG5vZGVcbiAgZXZlbnRzLmZvckVhY2goIGZ1bmN0aW9uKCBldmVudE5hbWUgKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIGV2ZW50TmFtZSwgdGhpcyApO1xuICB9LCB0aGlzICk7XG4gIC8vIHNhdmUgdGhlc2UgYXJndW1lbnRzXG4gIHRoaXMuX2JvdW5kUG9pbnRlckV2ZW50cyA9IGV2ZW50cztcbn07XG5cbnByb3RvLl91bmJpbmRQb3N0U3RhcnRFdmVudHMgPSBmdW5jdGlvbigpIHtcbiAgLy8gY2hlY2sgZm9yIF9ib3VuZEV2ZW50cywgaW4gY2FzZSBkcmFnRW5kIHRyaWdnZXJlZCB0d2ljZSAob2xkIElFOCBidWcpXG4gIGlmICggIXRoaXMuX2JvdW5kUG9pbnRlckV2ZW50cyApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5fYm91bmRQb2ludGVyRXZlbnRzLmZvckVhY2goIGZ1bmN0aW9uKCBldmVudE5hbWUgKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIGV2ZW50TmFtZSwgdGhpcyApO1xuICB9LCB0aGlzICk7XG5cbiAgZGVsZXRlIHRoaXMuX2JvdW5kUG9pbnRlckV2ZW50cztcbn07XG5cbi8vIC0tLS0tIG1vdmUgZXZlbnQgLS0tLS0gLy9cblxucHJvdG8ub25tb3VzZW1vdmUgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIHRoaXMuX3BvaW50ZXJNb3ZlKCBldmVudCwgZXZlbnQgKTtcbn07XG5cbnByb3RvLm9ucG9pbnRlcm1vdmUgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIGlmICggZXZlbnQucG9pbnRlcklkID09IHRoaXMucG9pbnRlcklkZW50aWZpZXIgKSB7XG4gICAgdGhpcy5fcG9pbnRlck1vdmUoIGV2ZW50LCBldmVudCApO1xuICB9XG59O1xuXG5wcm90by5vbnRvdWNobW92ZSA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgdmFyIHRvdWNoID0gdGhpcy5nZXRUb3VjaCggZXZlbnQuY2hhbmdlZFRvdWNoZXMgKTtcbiAgaWYgKCB0b3VjaCApIHtcbiAgICB0aGlzLl9wb2ludGVyTW92ZSggZXZlbnQsIHRvdWNoICk7XG4gIH1cbn07XG5cbi8qKlxuICogcG9pbnRlciBtb3ZlXG4gKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuICogQHBhcmFtIHtFdmVudCBvciBUb3VjaH0gcG9pbnRlclxuICogQHByaXZhdGVcbiAqL1xucHJvdG8uX3BvaW50ZXJNb3ZlID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB0aGlzLnBvaW50ZXJNb3ZlKCBldmVudCwgcG9pbnRlciApO1xufTtcblxuLy8gcHVibGljXG5wcm90by5wb2ludGVyTW92ZSA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgdGhpcy5lbWl0RXZlbnQoICdwb2ludGVyTW92ZScsIFsgZXZlbnQsIHBvaW50ZXIgXSApO1xufTtcblxuLy8gLS0tLS0gZW5kIGV2ZW50IC0tLS0tIC8vXG5cblxucHJvdG8ub25tb3VzZXVwID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuICB0aGlzLl9wb2ludGVyVXAoIGV2ZW50LCBldmVudCApO1xufTtcblxucHJvdG8ub25wb2ludGVydXAgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIGlmICggZXZlbnQucG9pbnRlcklkID09IHRoaXMucG9pbnRlcklkZW50aWZpZXIgKSB7XG4gICAgdGhpcy5fcG9pbnRlclVwKCBldmVudCwgZXZlbnQgKTtcbiAgfVxufTtcblxucHJvdG8ub250b3VjaGVuZCA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgdmFyIHRvdWNoID0gdGhpcy5nZXRUb3VjaCggZXZlbnQuY2hhbmdlZFRvdWNoZXMgKTtcbiAgaWYgKCB0b3VjaCApIHtcbiAgICB0aGlzLl9wb2ludGVyVXAoIGV2ZW50LCB0b3VjaCApO1xuICB9XG59O1xuXG4vKipcbiAqIHBvaW50ZXIgdXBcbiAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG4gKiBAcGFyYW0ge0V2ZW50IG9yIFRvdWNofSBwb2ludGVyXG4gKiBAcHJpdmF0ZVxuICovXG5wcm90by5fcG9pbnRlclVwID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB0aGlzLl9wb2ludGVyRG9uZSgpO1xuICB0aGlzLnBvaW50ZXJVcCggZXZlbnQsIHBvaW50ZXIgKTtcbn07XG5cbi8vIHB1YmxpY1xucHJvdG8ucG9pbnRlclVwID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB0aGlzLmVtaXRFdmVudCggJ3BvaW50ZXJVcCcsIFsgZXZlbnQsIHBvaW50ZXIgXSApO1xufTtcblxuLy8gLS0tLS0gcG9pbnRlciBkb25lIC0tLS0tIC8vXG5cbi8vIHRyaWdnZXJlZCBvbiBwb2ludGVyIHVwICYgcG9pbnRlciBjYW5jZWxcbnByb3RvLl9wb2ludGVyRG9uZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9wb2ludGVyUmVzZXQoKTtcbiAgdGhpcy5fdW5iaW5kUG9zdFN0YXJ0RXZlbnRzKCk7XG4gIHRoaXMucG9pbnRlckRvbmUoKTtcbn07XG5cbnByb3RvLl9wb2ludGVyUmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgLy8gcmVzZXQgcHJvcGVydGllc1xuICB0aGlzLmlzUG9pbnRlckRvd24gPSBmYWxzZTtcbiAgZGVsZXRlIHRoaXMucG9pbnRlcklkZW50aWZpZXI7XG59O1xuXG5wcm90by5wb2ludGVyRG9uZSA9IG5vb3A7XG5cbi8vIC0tLS0tIHBvaW50ZXIgY2FuY2VsIC0tLS0tIC8vXG5cbnByb3RvLm9ucG9pbnRlcmNhbmNlbCA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgaWYgKCBldmVudC5wb2ludGVySWQgPT0gdGhpcy5wb2ludGVySWRlbnRpZmllciApIHtcbiAgICB0aGlzLl9wb2ludGVyQ2FuY2VsKCBldmVudCwgZXZlbnQgKTtcbiAgfVxufTtcblxucHJvdG8ub250b3VjaGNhbmNlbCA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgdmFyIHRvdWNoID0gdGhpcy5nZXRUb3VjaCggZXZlbnQuY2hhbmdlZFRvdWNoZXMgKTtcbiAgaWYgKCB0b3VjaCApIHtcbiAgICB0aGlzLl9wb2ludGVyQ2FuY2VsKCBldmVudCwgdG91Y2ggKTtcbiAgfVxufTtcblxuLyoqXG4gKiBwb2ludGVyIGNhbmNlbFxuICogQHBhcmFtIHtFdmVudH0gZXZlbnRcbiAqIEBwYXJhbSB7RXZlbnQgb3IgVG91Y2h9IHBvaW50ZXJcbiAqIEBwcml2YXRlXG4gKi9cbnByb3RvLl9wb2ludGVyQ2FuY2VsID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB0aGlzLl9wb2ludGVyRG9uZSgpO1xuICB0aGlzLnBvaW50ZXJDYW5jZWwoIGV2ZW50LCBwb2ludGVyICk7XG59O1xuXG4vLyBwdWJsaWNcbnByb3RvLnBvaW50ZXJDYW5jZWwgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIHRoaXMuZW1pdEV2ZW50KCAncG9pbnRlckNhbmNlbCcsIFsgZXZlbnQsIHBvaW50ZXIgXSApO1xufTtcblxuLy8gLS0tLS0gIC0tLS0tIC8vXG5cbi8vIHV0aWxpdHkgZnVuY3Rpb24gZm9yIGdldHRpbmcgeC95IGNvb3JkcyBmcm9tIGV2ZW50XG5Vbmlwb2ludGVyLmdldFBvaW50ZXJQb2ludCA9IGZ1bmN0aW9uKCBwb2ludGVyICkge1xuICByZXR1cm4ge1xuICAgIHg6IHBvaW50ZXIucGFnZVgsXG4gICAgeTogcG9pbnRlci5wYWdlWVxuICB9O1xufTtcblxuLy8gLS0tLS0gIC0tLS0tIC8vXG5cbnJldHVybiBVbmlwb2ludGVyO1xuXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/unipointer/unipointer.js\n");

/***/ }),

/***/ "./node_modules/vanilla-modal/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/vanilla-modal/dist/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var mod; }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var defaults = {\n    modal: '.modal',\n    modalInner: '.modal-inner',\n    modalContent: '.modal-content',\n    open: '[data-modal-open]',\n    close: '[data-modal-close]',\n    page: 'body',\n    class: 'modal-visible',\n    loadClass: 'vanilla-modal',\n    clickOutside: true,\n    closeKeys: [27],\n    transitions: true,\n    transitionEnd: null,\n    onBeforeOpen: null,\n    onBeforeClose: null,\n    onOpen: null,\n    onClose: null\n  };\n\n  function throwError(message) {\n    // eslint-disable-next-line no-console\n    console.error('VanillaModal: ' + message);\n  }\n\n  function find(arr, callback) {\n    return function (key) {\n      var filteredArray = arr.filter(callback);\n      return filteredArray[0] ? filteredArray[0][key] : undefined;\n    };\n  }\n\n  function transitionEndVendorSniff() {\n    var el = document.createElement('div');\n    var transitions = [{ key: 'transition', value: 'transitionend' }, { key: 'OTransition', value: 'otransitionend' }, { key: 'MozTransition', value: 'transitionend' }, { key: 'WebkitTransition', value: 'webkitTransitionEnd' }];\n    return find(transitions, function (_ref) {\n      var key = _ref.key;\n      return typeof el.style[key] !== 'undefined';\n    })('value');\n  }\n\n  function isPopulatedArray(arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]' && arr.length;\n  }\n\n  function getNode(selector, parent) {\n    var targetNode = parent || document;\n    var node = targetNode.querySelector(selector);\n    if (!node) {\n      throwError(selector + ' not found in document.');\n    }\n    return node;\n  }\n\n  function addClass(el, className) {\n    if (!(el instanceof HTMLElement)) {\n      throwError('Not a valid HTML element.');\n    }\n    el.setAttribute('class', el.className.split(' ').filter(function (cn) {\n      return cn !== className;\n    }).concat(className).join(' '));\n  }\n\n  function removeClass(el, className) {\n    if (!(el instanceof HTMLElement)) {\n      throwError('Not a valid HTML element.');\n    }\n    el.setAttribute('class', el.className.split(' ').filter(function (cn) {\n      return cn !== className;\n    }).join(' '));\n  }\n\n  function getElementContext(e) {\n    if (e && typeof e.hash === 'string') {\n      return document.querySelector(e.hash);\n    } else if (typeof e === 'string') {\n      return document.querySelector(e);\n    }\n    throwError('No selector supplied to open()');\n    return null;\n  }\n\n  function applyUserSettings(settings) {\n    return _extends({}, defaults, settings, {\n      transitionEnd: transitionEndVendorSniff()\n    });\n  }\n\n  function matches(e, selector) {\n    var allMatches = (e.target.document || e.target.ownerDocument).querySelectorAll(selector);\n    for (var i = 0; i < allMatches.length; i += 1) {\n      var node = e.target;\n      while (node && node !== document.body) {\n        if (node === allMatches[i]) {\n          return node;\n        }\n        node = node.parentNode;\n      }\n    }\n    return null;\n  }\n\n  var VanillaModal = function () {\n    function VanillaModal(settings) {\n      _classCallCheck(this, VanillaModal);\n\n      this.isOpen = false;\n      this.current = null;\n      this.isListening = false;\n\n      this.settings = applyUserSettings(settings);\n      this.dom = this.getDomNodes();\n\n      this.open = this.open.bind(this);\n      this.close = this.close.bind(this);\n      this.closeKeyHandler = this.closeKeyHandler.bind(this);\n      this.outsideClickHandler = this.outsideClickHandler.bind(this);\n      this.delegateOpen = this.delegateOpen.bind(this);\n      this.delegateClose = this.delegateClose.bind(this);\n      this.listen = this.listen.bind(this);\n      this.destroy = this.destroy.bind(this);\n\n      this.addLoadedCssClass();\n      this.listen();\n    }\n\n    _createClass(VanillaModal, [{\n      key: 'getDomNodes',\n      value: function getDomNodes() {\n        var _settings = this.settings,\n            modal = _settings.modal,\n            page = _settings.page,\n            modalInner = _settings.modalInner,\n            modalContent = _settings.modalContent;\n\n        return {\n          modal: getNode(modal),\n          page: getNode(page),\n          modalInner: getNode(modalInner, getNode(modal)),\n          modalContent: getNode(modalContent, getNode(modal))\n        };\n      }\n    }, {\n      key: 'addLoadedCssClass',\n      value: function addLoadedCssClass() {\n        addClass(this.dom.page, this.settings.loadClass);\n      }\n    }, {\n      key: 'setOpenId',\n      value: function setOpenId(id) {\n        var page = this.dom.page;\n\n        page.setAttribute('data-current-modal', id || 'anonymous');\n      }\n    }, {\n      key: 'removeOpenId',\n      value: function removeOpenId() {\n        var page = this.dom.page;\n\n        page.removeAttribute('data-current-modal');\n      }\n    }, {\n      key: 'open',\n      value: function open(allMatches, e) {\n        var page = this.dom.page;\n        var _settings2 = this.settings,\n            onBeforeOpen = _settings2.onBeforeOpen,\n            onOpen = _settings2.onOpen;\n\n        if (!(this.current instanceof HTMLElement === false)) {\n          throwError('VanillaModal target must exist on page.');\n          return;\n        }\n        this.releaseNode(this.current);\n        this.current = getElementContext(allMatches);\n        if (typeof onBeforeOpen === 'function') {\n          onBeforeOpen.call(this, e);\n        }\n        this.captureNode(this.current);\n        addClass(page, this.settings.class);\n        this.setOpenId(this.current.id);\n        this.isOpen = true;\n        if (typeof onOpen === 'function') {\n          onOpen.call(this, e);\n        }\n      }\n    }, {\n      key: 'detectTransition',\n      value: function detectTransition() {\n        var modal = this.dom.modal;\n\n        var css = window.getComputedStyle(modal, null);\n        return Boolean(['transitionDuration', 'oTransitionDuration', 'MozTransitionDuration', 'webkitTransitionDuration'].filter(function (i) {\n          return typeof css[i] === 'string' && parseFloat(css[i]) > 0;\n        }).length);\n      }\n    }, {\n      key: 'close',\n      value: function close(e) {\n        var _settings3 = this.settings,\n            transitions = _settings3.transitions,\n            transitionEnd = _settings3.transitionEnd,\n            onBeforeClose = _settings3.onBeforeClose;\n\n        var hasTransition = this.detectTransition();\n        if (this.isOpen) {\n          this.isOpen = false;\n          if (typeof onBeforeClose === 'function') {\n            onBeforeClose.call(this, e);\n          }\n          removeClass(this.dom.page, this.settings.class);\n          if (transitions && transitionEnd && hasTransition) {\n            this.closeModalWithTransition(e);\n          } else {\n            this.closeModal(e);\n          }\n        }\n      }\n    }, {\n      key: 'closeModal',\n      value: function closeModal(e) {\n        var onClose = this.settings.onClose;\n\n        this.removeOpenId(this.dom.page);\n        this.releaseNode(this.current);\n        this.isOpen = false;\n        this.current = null;\n        if (typeof onClose === 'function') {\n          onClose.call(this, e);\n        }\n      }\n    }, {\n      key: 'closeModalWithTransition',\n      value: function closeModalWithTransition(e) {\n        var _this = this;\n\n        var modal = this.dom.modal;\n        var transitionEnd = this.settings.transitionEnd;\n\n        var closeTransitionHandler = function closeTransitionHandler() {\n          modal.removeEventListener(transitionEnd, closeTransitionHandler);\n          _this.closeModal(e);\n        };\n        modal.addEventListener(transitionEnd, closeTransitionHandler);\n      }\n    }, {\n      key: 'captureNode',\n      value: function captureNode(node) {\n        var modalContent = this.dom.modalContent;\n\n        while (node.childNodes.length) {\n          modalContent.appendChild(node.childNodes[0]);\n        }\n      }\n    }, {\n      key: 'releaseNode',\n      value: function releaseNode(node) {\n        var modalContent = this.dom.modalContent;\n\n        while (modalContent.childNodes.length) {\n          node.appendChild(modalContent.childNodes[0]);\n        }\n      }\n    }, {\n      key: 'closeKeyHandler',\n      value: function closeKeyHandler(e) {\n        var closeKeys = this.settings.closeKeys;\n\n        if (isPopulatedArray(closeKeys) && closeKeys.indexOf(e.which) > -1 && this.isOpen === true) {\n          e.preventDefault();\n          this.close(e);\n        }\n      }\n    }, {\n      key: 'outsideClickHandler',\n      value: function outsideClickHandler(e) {\n        var clickOutside = this.settings.clickOutside;\n        var modalInner = this.dom.modalInner;\n\n        if (clickOutside) {\n          var node = e.target;\n          while (node && node !== document.body) {\n            if (node === modalInner) {\n              return;\n            }\n            node = node.parentNode;\n          }\n          this.close(e);\n        }\n      }\n    }, {\n      key: 'delegateOpen',\n      value: function delegateOpen(e) {\n        var open = this.settings.open;\n\n        var matchedNode = matches(e, open);\n        if (matchedNode) {\n          e.preventDefault();\n          this.open(matchedNode, e);\n        }\n      }\n    }, {\n      key: 'delegateClose',\n      value: function delegateClose(e) {\n        var close = this.settings.close;\n\n        if (matches(e, close)) {\n          e.preventDefault();\n          this.close(e);\n        }\n      }\n    }, {\n      key: 'listen',\n      value: function listen() {\n        var modal = this.dom.modal;\n\n        if (!this.isListening) {\n          modal.addEventListener('click', this.outsideClickHandler, false);\n          document.addEventListener('keydown', this.closeKeyHandler, false);\n          document.addEventListener('click', this.delegateOpen, false);\n          document.addEventListener('click', this.delegateClose, false);\n          this.isListening = true;\n        } else {\n          throwError('Event listeners already applied.');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var modal = this.dom.modal;\n\n        if (this.isListening) {\n          this.close();\n          modal.removeEventListener('click', this.outsideClickHandler);\n          document.removeEventListener('keydown', this.closeKeyHandler);\n          document.removeEventListener('click', this.delegateOpen);\n          document.removeEventListener('click', this.delegateClose);\n          this.isListening = false;\n        } else {\n          throwError('Event listeners already removed.');\n        }\n      }\n    }]);\n\n    return VanillaModal;\n  }();\n\n  exports.default = VanillaModal;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vanilla-modal/dist/index.js\n");

/***/ }),

/***/ "./source/scripts/Accordion.js":
/*!*************************************!*\
  !*** ./source/scripts/Accordion.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Accordion; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // IE does not correctly apply CSS transforms to svg elements, which are used\n// in this theme to transform  icon-chevron-down to a minus/close icon.\n// We need to manually get the calculated transform value and apply it to the\n// transform attribute, which is properly supported. Yuck.\n\nfunction fixIEsetTransformAttribute($block) {\n  if (navigator.userAgent.match(/(Trident\\/7\\.)|(MSIE)/) === null) {\n    return;\n  }\n\n  var $paths = $block.parent().find('path');\n  $paths.each(function (index, path) {\n    var transform = window.getComputedStyle(path).getPropertyValue('transform');\n    path.setAttribute('transform', transform);\n  });\n}\n\nvar Accordion = /*#__PURE__*/function () {\n  function Accordion($el) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Accordion);\n\n    this.$el = $el;\n    this.options = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend({}, {\n      activeClass: 'accordion--active',\n      autoCollapse: false,\n      content: '[data-accordion-content]',\n      eligibleClass: 'has-accordion'\n    }, options);\n  }\n\n  _createClass(Accordion, [{\n    key: \"toggle\",\n    value: function toggle($block) {\n      var open = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (open || !$block.hasClass(this.options.activeClass)) {\n        if (this.options.autoCollapse) this.closeOpen();\n\n        this._open($block);\n      } else {\n        this._close($block);\n      }\n    }\n  }, {\n    key: \"closeOpen\",\n    value: function closeOpen() {\n      var _this = this;\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el.find(\".\".concat(this.options.activeClass))).each(function (i, block) {\n        var $block = jquery__WEBPACK_IMPORTED_MODULE_0___default()(block);\n\n        if ($block.hasClass(_this.options.activeClass)) {\n          _this._close($block);\n        }\n      });\n    }\n  }, {\n    key: \"openAll\",\n    value: function openAll() {\n      var _this2 = this;\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.$el.find(\".\".concat(this.options.eligibleClass))).each(function (i, block) {\n        _this2._open(jquery__WEBPACK_IMPORTED_MODULE_0___default()(block), 0);\n      });\n    }\n  }, {\n    key: \"_open\",\n    value: function _open($block) {\n      $block.addClass(this.options.activeClass);\n      fixIEsetTransformAttribute($block);\n    }\n  }, {\n    key: \"_close\",\n    value: function _close($block) {\n      $block.removeClass(this.options.activeClass);\n      fixIEsetTransformAttribute($block);\n    }\n  }]);\n\n  return Accordion;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9BY2NvcmRpb24uanM/NzZmMiJdLCJuYW1lcyI6WyJmaXhJRXNldFRyYW5zZm9ybUF0dHJpYnV0ZSIsIiRibG9jayIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm1hdGNoIiwiJHBhdGhzIiwicGFyZW50IiwiZmluZCIsImVhY2giLCJpbmRleCIsInBhdGgiLCJ0cmFuc2Zvcm0iLCJ3aW5kb3ciLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInNldEF0dHJpYnV0ZSIsIkFjY29yZGlvbiIsIiRlbCIsIm9wdGlvbnMiLCIkIiwiZXh0ZW5kIiwiYWN0aXZlQ2xhc3MiLCJhdXRvQ29sbGFwc2UiLCJjb250ZW50IiwiZWxpZ2libGVDbGFzcyIsIm9wZW4iLCJoYXNDbGFzcyIsImNsb3NlT3BlbiIsIl9vcGVuIiwiX2Nsb3NlIiwiaSIsImJsb2NrIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztDQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLFNBQVNBLDBCQUFULENBQW9DQyxNQUFwQyxFQUE0QztBQUMxQyxNQUFJQyxTQUFTLENBQUNDLFNBQVYsQ0FBb0JDLEtBQXBCLENBQTBCLHVCQUExQixNQUF1RCxJQUEzRCxFQUFpRTtBQUMvRDtBQUNEOztBQUVELE1BQU1DLE1BQU0sR0FBR0osTUFBTSxDQUFDSyxNQUFQLEdBQWdCQyxJQUFoQixDQUFxQixNQUFyQixDQUFmO0FBRUFGLFFBQU0sQ0FBQ0csSUFBUCxDQUFZLFVBQUNDLEtBQUQsRUFBUUMsSUFBUixFQUFpQjtBQUMzQixRQUFNQyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0JILElBQXhCLEVBQThCSSxnQkFBOUIsQ0FBK0MsV0FBL0MsQ0FBbEI7QUFDQUosUUFBSSxDQUFDSyxZQUFMLENBQWtCLFdBQWxCLEVBQStCSixTQUEvQjtBQUNELEdBSEQ7QUFJRDs7SUFFb0JLLFM7QUFDbkIscUJBQVlDLEdBQVosRUFBK0I7QUFBQSxRQUFkQyxPQUFjLHVFQUFKLEVBQUk7O0FBQUE7O0FBQzdCLFNBQUtELEdBQUwsR0FBV0EsR0FBWDtBQUVBLFNBQUtDLE9BQUwsR0FBZUMsNkNBQUMsQ0FBQ0MsTUFBRixDQUFTLEVBQVQsRUFBYTtBQUMxQkMsaUJBQVcsRUFBRSxtQkFEYTtBQUUxQkMsa0JBQVksRUFBRSxLQUZZO0FBRzFCQyxhQUFPLEVBQUUsMEJBSGlCO0FBSTFCQyxtQkFBYSxFQUFFO0FBSlcsS0FBYixFQUtaTixPQUxZLENBQWY7QUFNRDs7OzsyQkFFTWpCLE0sRUFBc0I7QUFBQSxVQUFkd0IsSUFBYyx1RUFBUCxLQUFPOztBQUMzQixVQUFJQSxJQUFJLElBQUksQ0FBQ3hCLE1BQU0sQ0FBQ3lCLFFBQVAsQ0FBZ0IsS0FBS1IsT0FBTCxDQUFhRyxXQUE3QixDQUFiLEVBQXdEO0FBQ3RELFlBQUksS0FBS0gsT0FBTCxDQUFhSSxZQUFqQixFQUErQixLQUFLSyxTQUFMOztBQUMvQixhQUFLQyxLQUFMLENBQVczQixNQUFYO0FBQ0QsT0FIRCxNQUdPO0FBQ0wsYUFBSzRCLE1BQUwsQ0FBWTVCLE1BQVo7QUFDRDtBQUNGOzs7Z0NBRVc7QUFBQTs7QUFDVmtCLG1EQUFDLENBQUMsS0FBS0YsR0FBTCxDQUFTVixJQUFULFlBQWtCLEtBQUtXLE9BQUwsQ0FBYUcsV0FBL0IsRUFBRCxDQUFELENBQWlEYixJQUFqRCxDQUFzRCxVQUFDc0IsQ0FBRCxFQUFJQyxLQUFKLEVBQWM7QUFDbEUsWUFBTTlCLE1BQU0sR0FBR2tCLDZDQUFDLENBQUNZLEtBQUQsQ0FBaEI7O0FBQ0EsWUFBSTlCLE1BQU0sQ0FBQ3lCLFFBQVAsQ0FBZ0IsS0FBSSxDQUFDUixPQUFMLENBQWFHLFdBQTdCLENBQUosRUFBK0M7QUFDN0MsZUFBSSxDQUFDUSxNQUFMLENBQVk1QixNQUFaO0FBQ0Q7QUFDRixPQUxEO0FBTUQ7Ozs4QkFFUztBQUFBOztBQUNSa0IsbURBQUMsQ0FBQyxLQUFLRixHQUFMLENBQVNWLElBQVQsWUFBa0IsS0FBS1csT0FBTCxDQUFhTSxhQUEvQixFQUFELENBQUQsQ0FBbURoQixJQUFuRCxDQUF3RCxVQUFDc0IsQ0FBRCxFQUFJQyxLQUFKLEVBQWM7QUFDcEUsY0FBSSxDQUFDSCxLQUFMLENBQVdULDZDQUFDLENBQUNZLEtBQUQsQ0FBWixFQUFxQixDQUFyQjtBQUNELE9BRkQ7QUFHRDs7OzBCQUVLOUIsTSxFQUFRO0FBQ1pBLFlBQU0sQ0FBQytCLFFBQVAsQ0FBZ0IsS0FBS2QsT0FBTCxDQUFhRyxXQUE3QjtBQUNBckIsZ0NBQTBCLENBQUNDLE1BQUQsQ0FBMUI7QUFDRDs7OzJCQUVNQSxNLEVBQVE7QUFDYkEsWUFBTSxDQUFDZ0MsV0FBUCxDQUFtQixLQUFLZixPQUFMLENBQWFHLFdBQWhDO0FBQ0FyQixnQ0FBMEIsQ0FBQ0MsTUFBRCxDQUExQjtBQUNEIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvQWNjb3JkaW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuLy8gSUUgZG9lcyBub3QgY29ycmVjdGx5IGFwcGx5IENTUyB0cmFuc2Zvcm1zIHRvIHN2ZyBlbGVtZW50cywgd2hpY2ggYXJlIHVzZWRcbi8vIGluIHRoaXMgdGhlbWUgdG8gdHJhbnNmb3JtICBpY29uLWNoZXZyb24tZG93biB0byBhIG1pbnVzL2Nsb3NlIGljb24uXG4vLyBXZSBuZWVkIHRvIG1hbnVhbGx5IGdldCB0aGUgY2FsY3VsYXRlZCB0cmFuc2Zvcm0gdmFsdWUgYW5kIGFwcGx5IGl0IHRvIHRoZVxuLy8gdHJhbnNmb3JtIGF0dHJpYnV0ZSwgd2hpY2ggaXMgcHJvcGVybHkgc3VwcG9ydGVkLiBZdWNrLlxuZnVuY3Rpb24gZml4SUVzZXRUcmFuc2Zvcm1BdHRyaWJ1dGUoJGJsb2NrKSB7XG4gIGlmIChuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC8oVHJpZGVudFxcLzdcXC4pfChNU0lFKS8pID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgJHBhdGhzID0gJGJsb2NrLnBhcmVudCgpLmZpbmQoJ3BhdGgnKTtcblxuICAkcGF0aHMuZWFjaCgoaW5kZXgsIHBhdGgpID0+IHtcbiAgICBjb25zdCB0cmFuc2Zvcm0gPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShwYXRoKS5nZXRQcm9wZXJ0eVZhbHVlKCd0cmFuc2Zvcm0nKTtcbiAgICBwYXRoLnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJywgdHJhbnNmb3JtKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjY29yZGlvbiB7XG4gIGNvbnN0cnVjdG9yKCRlbCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy4kZWwgPSAkZWw7XG5cbiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwge1xuICAgICAgYWN0aXZlQ2xhc3M6ICdhY2NvcmRpb24tLWFjdGl2ZScsXG4gICAgICBhdXRvQ29sbGFwc2U6IGZhbHNlLFxuICAgICAgY29udGVudDogJ1tkYXRhLWFjY29yZGlvbi1jb250ZW50XScsXG4gICAgICBlbGlnaWJsZUNsYXNzOiAnaGFzLWFjY29yZGlvbicsXG4gICAgfSwgb3B0aW9ucyk7XG4gIH1cblxuICB0b2dnbGUoJGJsb2NrLCBvcGVuID0gZmFsc2UpIHtcbiAgICBpZiAob3BlbiB8fCAhJGJsb2NrLmhhc0NsYXNzKHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcykpIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXV0b0NvbGxhcHNlKSB0aGlzLmNsb3NlT3BlbigpO1xuICAgICAgdGhpcy5fb3BlbigkYmxvY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9jbG9zZSgkYmxvY2spO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlT3BlbigpIHtcbiAgICAkKHRoaXMuJGVsLmZpbmQoYC4ke3RoaXMub3B0aW9ucy5hY3RpdmVDbGFzc31gKSkuZWFjaCgoaSwgYmxvY2spID0+IHtcbiAgICAgIGNvbnN0ICRibG9jayA9ICQoYmxvY2spO1xuICAgICAgaWYgKCRibG9jay5oYXNDbGFzcyh0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MpKSB7XG4gICAgICAgIHRoaXMuX2Nsb3NlKCRibG9jayk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBvcGVuQWxsKCkge1xuICAgICQodGhpcy4kZWwuZmluZChgLiR7dGhpcy5vcHRpb25zLmVsaWdpYmxlQ2xhc3N9YCkpLmVhY2goKGksIGJsb2NrKSA9PiB7XG4gICAgICB0aGlzLl9vcGVuKCQoYmxvY2spLCAwKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9vcGVuKCRibG9jaykge1xuICAgICRibG9jay5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MpO1xuICAgIGZpeElFc2V0VHJhbnNmb3JtQXR0cmlidXRlKCRibG9jayk7XG4gIH1cblxuICBfY2xvc2UoJGJsb2NrKSB7XG4gICAgJGJsb2NrLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyk7XG4gICAgZml4SUVzZXRUcmFuc2Zvcm1BdHRyaWJ1dGUoJGJsb2NrKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/Accordion.js\n");

/***/ }),

/***/ "./source/scripts/Forms.js":
/*!*********************************!*\
  !*** ./source/scripts/Forms.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Forms; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helpers_Quantity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/Quantity */ \"./source/scripts/helpers/Quantity.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Forms = /*#__PURE__*/function () {\n  function Forms(el) {\n    var _this = this;\n\n    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.form-field-input';\n\n    _classCallCheck(this, Forms);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n    this.filledClass = 'form-field-filled';\n    this.fieldSelector = selector;\n    this.quantityItems = [];\n    this.$quantityWrapper = this.$el.find('[data-quantity-wrapper]');\n    this._toggleFilled = this._toggleFilled.bind(this);\n    this.$el.on('focus.forms', this.fieldSelector, this._toggleFilled);\n    this.$el.on('blur.forms', this.fieldSelector, this._toggleFilled);\n\n    this._checkFilled();\n\n    if (this.$quantityWrapper.length) {\n      this.$quantityWrapper.each(function (i, element) {\n        _this.quantityItems.push(new _helpers_Quantity__WEBPACK_IMPORTED_MODULE_1__[\"default\"](element));\n      });\n    }\n  }\n\n  _createClass(Forms, [{\n    key: \"unload\",\n    value: function unload() {\n      this.$el.off('.forms');\n      this.quantityItems.forEach(function (quantityItem) {\n        quantityItem.unload();\n      });\n    }\n  }, {\n    key: \"_checkFilled\",\n    value: function _checkFilled() {\n      var _this2 = this;\n\n      this.$el.find(this.fieldSelector).each(function (i, el) {\n        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(el).hasClass(_this2.filledClass)) return;\n\n        _this2._toggleFilled(null, el);\n      });\n    }\n  }, {\n    key: \"_toggleFilled\",\n    value: function _toggleFilled() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var target = event ? event.currentTarget : el;\n      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target);\n      var value = target.value;\n      var isFilled = value.length > 0;\n\n      try {\n        isFilled = isFilled || $target.is(':-webkit-autofill');\n        $target.toggleClass(this.filledClass, isFilled);\n      } catch (e) {\n        $target.toggleClass(this.filledClass, isFilled);\n      }\n    }\n  }]);\n\n  return Forms;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9Gb3Jtcy5qcz85MGU3Il0sIm5hbWVzIjpbIkZvcm1zIiwiZWwiLCJzZWxlY3RvciIsIiRlbCIsIiQiLCJmaWxsZWRDbGFzcyIsImZpZWxkU2VsZWN0b3IiLCJxdWFudGl0eUl0ZW1zIiwiJHF1YW50aXR5V3JhcHBlciIsImZpbmQiLCJfdG9nZ2xlRmlsbGVkIiwiYmluZCIsIm9uIiwiX2NoZWNrRmlsbGVkIiwibGVuZ3RoIiwiZWFjaCIsImkiLCJlbGVtZW50IiwicHVzaCIsIlF1YW50aXR5Iiwib2ZmIiwiZm9yRWFjaCIsInF1YW50aXR5SXRlbSIsInVubG9hZCIsImhhc0NsYXNzIiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiJHRhcmdldCIsInZhbHVlIiwiaXNGaWxsZWQiLCJpcyIsInRvZ2dsZUNsYXNzIiwiZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztJQUVxQkEsSztBQUNuQixpQkFBWUMsRUFBWixFQUFnRDtBQUFBOztBQUFBLFFBQWhDQyxRQUFnQyx1RUFBckIsbUJBQXFCOztBQUFBOztBQUM5QyxTQUFLQyxHQUFMLEdBQVdDLDZDQUFDLENBQUNILEVBQUQsQ0FBWjtBQUNBLFNBQUtJLFdBQUwsR0FBbUIsbUJBQW5CO0FBQ0EsU0FBS0MsYUFBTCxHQUFxQkosUUFBckI7QUFFQSxTQUFLSyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0IsS0FBS0wsR0FBTCxDQUFTTSxJQUFULENBQWMseUJBQWQsQ0FBeEI7QUFFQSxTQUFLQyxhQUFMLEdBQXFCLEtBQUtBLGFBQUwsQ0FBbUJDLElBQW5CLENBQXdCLElBQXhCLENBQXJCO0FBQ0EsU0FBS1IsR0FBTCxDQUFTUyxFQUFULENBQVksYUFBWixFQUEyQixLQUFLTixhQUFoQyxFQUErQyxLQUFLSSxhQUFwRDtBQUNBLFNBQUtQLEdBQUwsQ0FBU1MsRUFBVCxDQUFZLFlBQVosRUFBMEIsS0FBS04sYUFBL0IsRUFBOEMsS0FBS0ksYUFBbkQ7O0FBRUEsU0FBS0csWUFBTDs7QUFFQSxRQUFJLEtBQUtMLGdCQUFMLENBQXNCTSxNQUExQixFQUFrQztBQUNoQyxXQUFLTixnQkFBTCxDQUFzQk8sSUFBdEIsQ0FBMkIsVUFBQ0MsQ0FBRCxFQUFJQyxPQUFKLEVBQWdCO0FBQ3pDLGFBQUksQ0FBQ1YsYUFBTCxDQUFtQlcsSUFBbkIsQ0FDRSxJQUFJQyx5REFBSixDQUFhRixPQUFiLENBREY7QUFHRCxPQUpEO0FBS0Q7QUFDRjs7Ozs2QkFFUTtBQUNQLFdBQUtkLEdBQUwsQ0FBU2lCLEdBQVQsQ0FBYSxRQUFiO0FBRUEsV0FBS2IsYUFBTCxDQUFtQmMsT0FBbkIsQ0FBMkIsVUFBQUMsWUFBWSxFQUFJO0FBQ3pDQSxvQkFBWSxDQUFDQyxNQUFiO0FBQ0QsT0FGRDtBQUdEOzs7bUNBRWM7QUFBQTs7QUFDYixXQUFLcEIsR0FBTCxDQUFTTSxJQUFULENBQWMsS0FBS0gsYUFBbkIsRUFBa0NTLElBQWxDLENBQXVDLFVBQUNDLENBQUQsRUFBSWYsRUFBSixFQUFXO0FBQ2hELFlBQUlHLDZDQUFDLENBQUNILEVBQUQsQ0FBRCxDQUFNdUIsUUFBTixDQUFlLE1BQUksQ0FBQ25CLFdBQXBCLENBQUosRUFBc0M7O0FBRXRDLGNBQUksQ0FBQ0ssYUFBTCxDQUFtQixJQUFuQixFQUF5QlQsRUFBekI7QUFDRCxPQUpEO0FBS0Q7OztvQ0FFdUM7QUFBQSxVQUExQndCLEtBQTBCLHVFQUFsQixJQUFrQjtBQUFBLFVBQVp4QixFQUFZLHVFQUFQLEtBQU87QUFDdEMsVUFBTXlCLE1BQU0sR0FBR0QsS0FBSyxHQUFHQSxLQUFLLENBQUNFLGFBQVQsR0FBeUIxQixFQUE3QztBQUNBLFVBQU0yQixPQUFPLEdBQUd4Qiw2Q0FBQyxDQUFDc0IsTUFBRCxDQUFqQjtBQUZzQyxVQUc5QkcsS0FIOEIsR0FHcEJILE1BSG9CLENBRzlCRyxLQUg4QjtBQUt0QyxVQUFJQyxRQUFRLEdBQUdELEtBQUssQ0FBQ2YsTUFBTixHQUFlLENBQTlCOztBQUVBLFVBQUk7QUFDRmdCLGdCQUFRLEdBQUdBLFFBQVEsSUFBSUYsT0FBTyxDQUFDRyxFQUFSLENBQVcsbUJBQVgsQ0FBdkI7QUFDQUgsZUFBTyxDQUFDSSxXQUFSLENBQW9CLEtBQUszQixXQUF6QixFQUFzQ3lCLFFBQXRDO0FBQ0QsT0FIRCxDQUdFLE9BQU9HLENBQVAsRUFBVTtBQUNWTCxlQUFPLENBQUNJLFdBQVIsQ0FBb0IsS0FBSzNCLFdBQXpCLEVBQXNDeUIsUUFBdEM7QUFDRDtBQUNGIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvRm9ybXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IFF1YW50aXR5IGZyb20gJy4vaGVscGVycy9RdWFudGl0eSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1zIHtcbiAgY29uc3RydWN0b3IoZWwsIHNlbGVjdG9yID0gJy5mb3JtLWZpZWxkLWlucHV0Jykge1xuICAgIHRoaXMuJGVsID0gJChlbCk7XG4gICAgdGhpcy5maWxsZWRDbGFzcyA9ICdmb3JtLWZpZWxkLWZpbGxlZCc7XG4gICAgdGhpcy5maWVsZFNlbGVjdG9yID0gc2VsZWN0b3I7XG5cbiAgICB0aGlzLnF1YW50aXR5SXRlbXMgPSBbXTtcbiAgICB0aGlzLiRxdWFudGl0eVdyYXBwZXIgPSB0aGlzLiRlbC5maW5kKCdbZGF0YS1xdWFudGl0eS13cmFwcGVyXScpO1xuXG4gICAgdGhpcy5fdG9nZ2xlRmlsbGVkID0gdGhpcy5fdG9nZ2xlRmlsbGVkLmJpbmQodGhpcyk7XG4gICAgdGhpcy4kZWwub24oJ2ZvY3VzLmZvcm1zJywgdGhpcy5maWVsZFNlbGVjdG9yLCB0aGlzLl90b2dnbGVGaWxsZWQpO1xuICAgIHRoaXMuJGVsLm9uKCdibHVyLmZvcm1zJywgdGhpcy5maWVsZFNlbGVjdG9yLCB0aGlzLl90b2dnbGVGaWxsZWQpO1xuXG4gICAgdGhpcy5fY2hlY2tGaWxsZWQoKTtcblxuICAgIGlmICh0aGlzLiRxdWFudGl0eVdyYXBwZXIubGVuZ3RoKSB7XG4gICAgICB0aGlzLiRxdWFudGl0eVdyYXBwZXIuZWFjaCgoaSwgZWxlbWVudCkgPT4ge1xuICAgICAgICB0aGlzLnF1YW50aXR5SXRlbXMucHVzaChcbiAgICAgICAgICBuZXcgUXVhbnRpdHkoZWxlbWVudCksXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICB1bmxvYWQoKSB7XG4gICAgdGhpcy4kZWwub2ZmKCcuZm9ybXMnKTtcblxuICAgIHRoaXMucXVhbnRpdHlJdGVtcy5mb3JFYWNoKHF1YW50aXR5SXRlbSA9PiB7XG4gICAgICBxdWFudGl0eUl0ZW0udW5sb2FkKCk7XG4gICAgfSk7XG4gIH1cblxuICBfY2hlY2tGaWxsZWQoKSB7XG4gICAgdGhpcy4kZWwuZmluZCh0aGlzLmZpZWxkU2VsZWN0b3IpLmVhY2goKGksIGVsKSA9PiB7XG4gICAgICBpZiAoJChlbCkuaGFzQ2xhc3ModGhpcy5maWxsZWRDbGFzcykpIHJldHVybjtcblxuICAgICAgdGhpcy5fdG9nZ2xlRmlsbGVkKG51bGwsIGVsKTtcbiAgICB9KTtcbiAgfVxuXG4gIF90b2dnbGVGaWxsZWQoZXZlbnQgPSBudWxsLCBlbCA9IGZhbHNlKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQgPyBldmVudC5jdXJyZW50VGFyZ2V0IDogZWw7XG4gICAgY29uc3QgJHRhcmdldCA9ICQodGFyZ2V0KTtcbiAgICBjb25zdCB7IHZhbHVlIH0gPSB0YXJnZXQ7XG5cbiAgICBsZXQgaXNGaWxsZWQgPSB2YWx1ZS5sZW5ndGggPiAwO1xuXG4gICAgdHJ5IHtcbiAgICAgIGlzRmlsbGVkID0gaXNGaWxsZWQgfHwgJHRhcmdldC5pcygnOi13ZWJraXQtYXV0b2ZpbGwnKTtcbiAgICAgICR0YXJnZXQudG9nZ2xlQ2xhc3ModGhpcy5maWxsZWRDbGFzcywgaXNGaWxsZWQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICR0YXJnZXQudG9nZ2xlQ2xhc3ModGhpcy5maWxsZWRDbGFzcywgaXNGaWxsZWQpO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/Forms.js\n");

/***/ }),

/***/ "./source/scripts/Layout.js":
/*!**********************************!*\
  !*** ./source/scripts/Layout.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar eventHandlers = [];\nvar breakpointSequence = ['XS', 'S', 'M', 'L', 'L+', 'XL', 'XXL'];\n\nfunction getBreakpoint() {\n  return window.getComputedStyle(document.documentElement, ':after').getPropertyValue('content').replace(/\"/g, '');\n}\n\nfunction isBreakpoint() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (getBreakpoint() === (i < 0 || arguments.length <= i ? undefined : arguments[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isLessThanBreakpoint(breakpoint, inclusive) {\n  var currentBreakpointIndex = breakpointSequence.indexOf(getBreakpoint());\n  return currentBreakpointIndex < breakpointSequence.indexOf(breakpoint) || inclusive && currentBreakpointIndex <= breakpointSequence.indexOf(breakpoint);\n}\n\nfunction isGreaterThanBreakpoint(breakpoint, inclusive) {\n  var currentBreakpointIndex = breakpointSequence.indexOf(getBreakpoint());\n  return currentBreakpointIndex > breakpointSequence.indexOf(breakpoint) || inclusive && currentBreakpointIndex >= breakpointSequence.indexOf(breakpoint);\n}\n\nfunction onBreakpointChange(eventHandler) {\n  if (eventHandlers.indexOf(eventHandler) === -1) {\n    eventHandlers.push(eventHandler);\n  }\n}\n\nfunction offBreakpointChange(eventHandler) {\n  var index = eventHandlers.indexOf(eventHandler);\n\n  if (index !== -1) {\n    eventHandlers.splice(index, 1);\n  }\n}\n\nvar previousBreakpoint = getBreakpoint();\nwindow.addEventListener('resize', function (event) {\n  var currentBreakpoint = getBreakpoint();\n\n  if (previousBreakpoint !== currentBreakpoint) {\n    eventHandlers.forEach(function (eventHandler) {\n      return eventHandler(event, {\n        previous: previousBreakpoint,\n        current: currentBreakpoint\n      });\n    });\n  }\n\n  previousBreakpoint = currentBreakpoint;\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getBreakpoint: getBreakpoint,\n  isBreakpoint: isBreakpoint,\n  isLessThanBreakpoint: isLessThanBreakpoint,\n  isGreaterThanBreakpoint: isGreaterThanBreakpoint,\n  onBreakpointChange: onBreakpointChange,\n  offBreakpointChange: offBreakpointChange\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9MYXlvdXQuanM/M2EzNiJdLCJuYW1lcyI6WyJldmVudEhhbmRsZXJzIiwiYnJlYWtwb2ludFNlcXVlbmNlIiwiZ2V0QnJlYWtwb2ludCIsIndpbmRvdyIsImdldENvbXB1dGVkU3R5bGUiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImdldFByb3BlcnR5VmFsdWUiLCJyZXBsYWNlIiwiaXNCcmVha3BvaW50IiwiaSIsImxlbmd0aCIsImlzTGVzc1RoYW5CcmVha3BvaW50IiwiYnJlYWtwb2ludCIsImluY2x1c2l2ZSIsImN1cnJlbnRCcmVha3BvaW50SW5kZXgiLCJpbmRleE9mIiwiaXNHcmVhdGVyVGhhbkJyZWFrcG9pbnQiLCJvbkJyZWFrcG9pbnRDaGFuZ2UiLCJldmVudEhhbmRsZXIiLCJwdXNoIiwib2ZmQnJlYWtwb2ludENoYW5nZSIsImluZGV4Iiwic3BsaWNlIiwicHJldmlvdXNCcmVha3BvaW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiY3VycmVudEJyZWFrcG9pbnQiLCJmb3JFYWNoIiwicHJldmlvdXMiLCJjdXJyZW50Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLElBQU1BLGFBQWEsR0FBRyxFQUF0QjtBQUNBLElBQU1DLGtCQUFrQixHQUFHLENBQUMsSUFBRCxFQUFPLEdBQVAsRUFBWSxHQUFaLEVBQWlCLEdBQWpCLEVBQXNCLElBQXRCLEVBQTRCLElBQTVCLEVBQWtDLEtBQWxDLENBQTNCOztBQUVBLFNBQVNDLGFBQVQsR0FBeUI7QUFDdkIsU0FBT0MsTUFBTSxDQUNWQyxnQkFESSxDQUNhQyxRQUFRLENBQUNDLGVBRHRCLEVBQ3VDLFFBRHZDLEVBRUpDLGdCQUZJLENBRWEsU0FGYixFQUdKQyxPQUhJLENBR0ksSUFISixFQUdVLEVBSFYsQ0FBUDtBQUlEOztBQUVELFNBQVNDLFlBQVQsR0FBc0M7QUFDcEMsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLFVBQVlDLE1BQWhDLEVBQXdDRCxDQUFDLEVBQXpDLEVBQTZDO0FBQzNDLFFBQUlSLGFBQWEsUUFBbUJRLENBQW5CLDRCQUFtQkEsQ0FBbkIseUJBQW1CQSxDQUFuQixFQUFqQixFQUF3QztBQUN0QyxhQUFPLElBQVA7QUFDRDtBQUNGOztBQUVELFNBQU8sS0FBUDtBQUNEOztBQUVELFNBQVNFLG9CQUFULENBQThCQyxVQUE5QixFQUEwQ0MsU0FBMUMsRUFBcUQ7QUFDbkQsTUFBTUMsc0JBQXNCLEdBQUdkLGtCQUFrQixDQUFDZSxPQUFuQixDQUEyQmQsYUFBYSxFQUF4QyxDQUEvQjtBQUVBLFNBQU9hLHNCQUFzQixHQUFHZCxrQkFBa0IsQ0FBQ2UsT0FBbkIsQ0FBMkJILFVBQTNCLENBQXpCLElBQ0RDLFNBQVMsSUFBSUMsc0JBQXNCLElBQUlkLGtCQUFrQixDQUFDZSxPQUFuQixDQUEyQkgsVUFBM0IsQ0FEN0M7QUFFRDs7QUFFRCxTQUFTSSx1QkFBVCxDQUFpQ0osVUFBakMsRUFBNkNDLFNBQTdDLEVBQXdEO0FBQ3RELE1BQU1DLHNCQUFzQixHQUFHZCxrQkFBa0IsQ0FBQ2UsT0FBbkIsQ0FBMkJkLGFBQWEsRUFBeEMsQ0FBL0I7QUFFQSxTQUFPYSxzQkFBc0IsR0FBR2Qsa0JBQWtCLENBQUNlLE9BQW5CLENBQTJCSCxVQUEzQixDQUF6QixJQUNEQyxTQUFTLElBQUlDLHNCQUFzQixJQUFJZCxrQkFBa0IsQ0FBQ2UsT0FBbkIsQ0FBMkJILFVBQTNCLENBRDdDO0FBRUQ7O0FBRUQsU0FBU0ssa0JBQVQsQ0FBNEJDLFlBQTVCLEVBQTBDO0FBQ3hDLE1BQUluQixhQUFhLENBQUNnQixPQUFkLENBQXNCRyxZQUF0QixNQUF3QyxDQUFDLENBQTdDLEVBQWdEO0FBQzlDbkIsaUJBQWEsQ0FBQ29CLElBQWQsQ0FBbUJELFlBQW5CO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTRSxtQkFBVCxDQUE2QkYsWUFBN0IsRUFBMkM7QUFDekMsTUFBTUcsS0FBSyxHQUFHdEIsYUFBYSxDQUFDZ0IsT0FBZCxDQUFzQkcsWUFBdEIsQ0FBZDs7QUFFQSxNQUFJRyxLQUFLLEtBQUssQ0FBQyxDQUFmLEVBQWtCO0FBQ2hCdEIsaUJBQWEsQ0FBQ3VCLE1BQWQsQ0FBcUJELEtBQXJCLEVBQTRCLENBQTVCO0FBQ0Q7QUFDRjs7QUFFRCxJQUFJRSxrQkFBa0IsR0FBR3RCLGFBQWEsRUFBdEM7QUFFQUMsTUFBTSxDQUFDc0IsZ0JBQVAsQ0FBd0IsUUFBeEIsRUFBa0MsVUFBQUMsS0FBSyxFQUFJO0FBQ3pDLE1BQU1DLGlCQUFpQixHQUFHekIsYUFBYSxFQUF2Qzs7QUFFQSxNQUFJc0Isa0JBQWtCLEtBQUtHLGlCQUEzQixFQUE4QztBQUM1QzNCLGlCQUFhLENBQUM0QixPQUFkLENBQXNCLFVBQUFULFlBQVk7QUFBQSxhQUFJQSxZQUFZLENBQUNPLEtBQUQsRUFBUTtBQUN4REcsZ0JBQVEsRUFBRUwsa0JBRDhDO0FBRXhETSxlQUFPLEVBQUVIO0FBRitDLE9BQVIsQ0FBaEI7QUFBQSxLQUFsQztBQUlEOztBQUVESCxvQkFBa0IsR0FBR0csaUJBQXJCO0FBQ0QsQ0FYRDtBQWFlO0FBQ2J6QixlQUFhLEVBQWJBLGFBRGE7QUFFYk8sY0FBWSxFQUFaQSxZQUZhO0FBR2JHLHNCQUFvQixFQUFwQkEsb0JBSGE7QUFJYksseUJBQXVCLEVBQXZCQSx1QkFKYTtBQUtiQyxvQkFBa0IsRUFBbEJBLGtCQUxhO0FBTWJHLHFCQUFtQixFQUFuQkE7QUFOYSxDQUFmIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvTGF5b3V0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXZlbnRIYW5kbGVycyA9IFtdO1xuY29uc3QgYnJlYWtwb2ludFNlcXVlbmNlID0gWydYUycsICdTJywgJ00nLCAnTCcsICdMKycsICdYTCcsICdYWEwnXTtcblxuZnVuY3Rpb24gZ2V0QnJlYWtwb2ludCgpIHtcbiAgcmV0dXJuIHdpbmRvd1xuICAgIC5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgJzphZnRlcicpXG4gICAgLmdldFByb3BlcnR5VmFsdWUoJ2NvbnRlbnQnKVxuICAgIC5yZXBsYWNlKC9cIi9nLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGlzQnJlYWtwb2ludCguLi5icmVha3BvaW50cykge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJyZWFrcG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGdldEJyZWFrcG9pbnQoKSA9PT0gYnJlYWtwb2ludHNbaV0pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaXNMZXNzVGhhbkJyZWFrcG9pbnQoYnJlYWtwb2ludCwgaW5jbHVzaXZlKSB7XG4gIGNvbnN0IGN1cnJlbnRCcmVha3BvaW50SW5kZXggPSBicmVha3BvaW50U2VxdWVuY2UuaW5kZXhPZihnZXRCcmVha3BvaW50KCkpO1xuXG4gIHJldHVybiBjdXJyZW50QnJlYWtwb2ludEluZGV4IDwgYnJlYWtwb2ludFNlcXVlbmNlLmluZGV4T2YoYnJlYWtwb2ludClcbiAgICB8fCAoaW5jbHVzaXZlICYmIGN1cnJlbnRCcmVha3BvaW50SW5kZXggPD0gYnJlYWtwb2ludFNlcXVlbmNlLmluZGV4T2YoYnJlYWtwb2ludCkpO1xufVxuXG5mdW5jdGlvbiBpc0dyZWF0ZXJUaGFuQnJlYWtwb2ludChicmVha3BvaW50LCBpbmNsdXNpdmUpIHtcbiAgY29uc3QgY3VycmVudEJyZWFrcG9pbnRJbmRleCA9IGJyZWFrcG9pbnRTZXF1ZW5jZS5pbmRleE9mKGdldEJyZWFrcG9pbnQoKSk7XG5cbiAgcmV0dXJuIGN1cnJlbnRCcmVha3BvaW50SW5kZXggPiBicmVha3BvaW50U2VxdWVuY2UuaW5kZXhPZihicmVha3BvaW50KVxuICAgIHx8IChpbmNsdXNpdmUgJiYgY3VycmVudEJyZWFrcG9pbnRJbmRleCA+PSBicmVha3BvaW50U2VxdWVuY2UuaW5kZXhPZihicmVha3BvaW50KSk7XG59XG5cbmZ1bmN0aW9uIG9uQnJlYWtwb2ludENoYW5nZShldmVudEhhbmRsZXIpIHtcbiAgaWYgKGV2ZW50SGFuZGxlcnMuaW5kZXhPZihldmVudEhhbmRsZXIpID09PSAtMSkge1xuICAgIGV2ZW50SGFuZGxlcnMucHVzaChldmVudEhhbmRsZXIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG9mZkJyZWFrcG9pbnRDaGFuZ2UoZXZlbnRIYW5kbGVyKSB7XG4gIGNvbnN0IGluZGV4ID0gZXZlbnRIYW5kbGVycy5pbmRleE9mKGV2ZW50SGFuZGxlcik7XG5cbiAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgIGV2ZW50SGFuZGxlcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgfVxufVxuXG5sZXQgcHJldmlvdXNCcmVha3BvaW50ID0gZ2V0QnJlYWtwb2ludCgpO1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZXZlbnQgPT4ge1xuICBjb25zdCBjdXJyZW50QnJlYWtwb2ludCA9IGdldEJyZWFrcG9pbnQoKTtcblxuICBpZiAocHJldmlvdXNCcmVha3BvaW50ICE9PSBjdXJyZW50QnJlYWtwb2ludCkge1xuICAgIGV2ZW50SGFuZGxlcnMuZm9yRWFjaChldmVudEhhbmRsZXIgPT4gZXZlbnRIYW5kbGVyKGV2ZW50LCB7XG4gICAgICBwcmV2aW91czogcHJldmlvdXNCcmVha3BvaW50LFxuICAgICAgY3VycmVudDogY3VycmVudEJyZWFrcG9pbnQsXG4gICAgfSkpO1xuICB9XG5cbiAgcHJldmlvdXNCcmVha3BvaW50ID0gY3VycmVudEJyZWFrcG9pbnQ7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXRCcmVha3BvaW50LFxuICBpc0JyZWFrcG9pbnQsXG4gIGlzTGVzc1RoYW5CcmVha3BvaW50LFxuICBpc0dyZWF0ZXJUaGFuQnJlYWtwb2ludCxcbiAgb25CcmVha3BvaW50Q2hhbmdlLFxuICBvZmZCcmVha3BvaW50Q2hhbmdlLFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/Layout.js\n");

/***/ }),

/***/ "./source/scripts/Search.js":
/*!**********************************!*\
  !*** ./source/scripts/Search.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Search; });\n/* harmony import */ var eventemitter2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter2 */ \"./node_modules/eventemitter2/lib/eventemitter2.js\");\n/* harmony import */ var eventemitter2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter2__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n/**\n * Search API Class\n */\n\nvar Search = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Search, _EventEmitter);\n\n  var _super = _createSuper(Search);\n\n  /**\n   * Create a new Search instance, and override defaults\n   *\n   * @param options\n   * @property {string} options.type - Search restriction. Use 'article', 'page', 'product', or ''\n   * @property {string} options.view - Search template suffix. Specify different templates as needed\n   */\n  function Search() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this);\n    _this.searchType = options.type || '';\n    _this.view = options.view || 'json';\n    _this.inProgress = false;\n    _this.xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\n    _this._xhrLoad = _this._xhrLoad.bind(_assertThisInitialized(_this));\n    _this._xhrError = _this._xhrError.bind(_assertThisInitialized(_this));\n    _this._xhrAbort = _this._xhrAbort.bind(_assertThisInitialized(_this));\n\n    _this._bindEvents();\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      this.xhr.addEventListener('load', this._xhrLoad);\n      this.xhr.addEventListener('error', this._xhrError);\n      this.xhr.addEventListener('abort', this._xhrAbort);\n    }\n    /**\n     * XHR was successfull\n     *\n     * @description XHR completed successfully\n     * @param {object} event\n     * @fires Search#complete\n     * @private\n     */\n\n  }, {\n    key: \"_xhrLoad\",\n    value: function _xhrLoad(event) {\n      var response = {};\n      var readyState = event.target.readyState;\n      var status = event.target.status;\n\n      try {\n        if (readyState > 3 && status == 200) {\n          response = JSON.parse(event.target.responseText);\n          this.emit('complete', response);\n        } else {\n          var message = \"Invalid readyState: \".concat(readyState, \", or status: \").concat(status, \".\");\n          return this._xhrError(event, message);\n        }\n      } catch (error) {\n        return this._xhrError(event, 'Invalid JSON', error);\n      }\n\n      this.inProgress = false;\n    }\n    /**\n     * XHR contains an error\n     *\n     * @description XHR has contained an error, and was unable to complete\n     * @param {object} event\n     * @param {object|string} message\n     * @param {object} error\n     * @fires Search#error\n     * @private\n     */\n\n  }, {\n    key: \"_xhrError\",\n    value: function _xhrError(event) {\n      var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      this.inProgress = false;\n      this.emit('error', {\n        event: event,\n        message: message,\n        error: error\n      });\n    }\n    /**\n     * XHR has been aborted\n     *\n     * @description This event only fires if there is an active XHR request that has been terminated\n     * @fires Search#aborted\n     * @private\n     */\n\n  }, {\n    key: \"_xhrAbort\",\n    value: function _xhrAbort() {\n      this.emit('aborted');\n    }\n    /**\n     * Perform the search\n     *\n     * @param {string} term - Search term(s)\n     * @fires Search#initialized\n     * @fires Search#cancelled\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(term) {\n      this.emit('initialized', {\n        term: term\n      });\n\n      if (this.inProgress) {\n        this.emit('cancelled');\n        this.xhr.abort();\n      }\n\n      this.inProgress = true;\n      var url = window.Theme.routes.search_url;\n      var params = {\n        q: term,\n        type: this.searchType,\n        view: this.view\n      };\n      var searchParams = Object.keys(params).map(function (key) {\n        var value = params[key];\n        return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n      }).join('&');\n      this.xhr.open('get', \"\".concat(url, \"?\").concat(searchParams));\n      this.xhr.setRequestHeader('Accept', 'application/json');\n      this.xhr.send();\n    }\n  }]);\n\n  return Search;\n}(eventemitter2__WEBPACK_IMPORTED_MODULE_0___default.a);\n/**\n * @description XHR initialized\n * @event Search#initialized\n * @type {object}\n */\n\n/**\n * @description XHR completed\n * @event Search#complete\n * @property {object} response - JSON response from end point\n */\n\n/**\n * @description XHR had an error\n * @event Search#error\n */\n\n/**\n * @description XHR cancelled due to user interaction. If an XHR is being processed, this does not terminate it\n * @event Search#cancelled\n */\n\n/**\n * @description XHR aborted due to user interaction, terminating previously executed XHR.\n * @event Search#aborted\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/Search.js\n");

/***/ }),

/***/ "./source/scripts/Sections.js":
/*!************************************!*\
  !*** ./source/scripts/Sections.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Sections; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Sections = /*#__PURE__*/function () {\n  function Sections() {\n    _classCallCheck(this, Sections);\n\n    this.handlers = {};\n    this.instances = {};\n    this._onSectionEvent = this._onSectionEvent.bind(this);\n    document.addEventListener('shopify:section:load', this._onSectionEvent);\n    document.addEventListener('shopify:section:unload', this._onSectionEvent);\n    document.addEventListener('shopify:section:select', this._onSectionEvent);\n    document.addEventListener('shopify:section:deselect', this._onSectionEvent);\n    document.addEventListener('shopify:block:select', this._onSectionEvent);\n    document.addEventListener('shopify:block:deselect', this._onSectionEvent);\n  }\n  /**\n   * Stop listening for section events, and unbind all handlers.\n   */\n\n\n  _createClass(Sections, [{\n    key: \"unbind\",\n    value: function unbind() {\n      document.removeEventListener('shopify:section:load', this._onSectionEvent);\n      document.removeEventListener('shopify:section:unload', this._onSectionEvent);\n      document.removeEventListener('shopify:section:select', this._onSectionEvent);\n      document.removeEventListener('shopify:section:deselect', this._onSectionEvent);\n      document.removeEventListener('shopify:block:select', this._onSectionEvent);\n      document.removeEventListener('shopify:block:deselect', this._onSectionEvent); // Unload all instances\n\n      for (var i = 0; i < this.instances.length; i++) {\n        this._triggerInstanceEvent(this.instances[i], 'onSectionUnload');\n      }\n\n      this.handlers = {};\n      this.instances = {};\n    }\n    /**\n     * Register a section handler.\n     *\n     * @param {string} type\n     *        The section type to handle. The handler will be called for all\n     *        sections with this type.\n     *\n     * @param {function} handler\n     *        The handler function is passed information about a specific section\n     *        instance. The handler is expected to return an object that will be\n     *        associated with the section instance.\n     *\n     *        Section handlers are passed an object with the following parameters:\n     *          {string} id\n     *          An ID that maps to a specific section instance. Typically the\n     *          section's filename for static sections, or a generated ID for\n     *          dynamic sections.\n     *\n     *          {string} type\n     *          The section type, as supplied when registered.\n     *\n     *          {Element} el\n     *          The root DOM element for the section instance.\n     *\n     *          {Object} data\n     *          Data loaded from the section script element. Defaults to an\n     *          empty object.\n     *\n     *          {Function} postMessage\n     *          A function that can be called to pass messages between sections.\n     *          The function should be called with a message \"name\", and\n     *          optionally some data.\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(type, handler) {\n      if (this.handlers[type]) {\n        console.warn(\"Sections: section handler already exists of type '\".concat(type, \"'.\"));\n      } // Store the section handler\n\n\n      this.handlers[type] = handler; // Init sections for this type\n\n      this._initSections(type);\n    }\n    /**\n     * Initialize sections already on the page.\n     */\n\n  }, {\n    key: \"_initSections\",\n    value: function _initSections(type) {\n      // Fetch all existing sections of our type on the page\n      var dataEls = document.querySelectorAll(\"[data-section-type=\\\"\".concat(type, \"\\\"]\"));\n      if (!dataEls) return; // Create an instance for each section\n\n      for (var i = 0; i < dataEls.length; i++) {\n        var dataEl = dataEls[i];\n        var el = dataEl.parentNode; // Get instance ID\n\n        var idEl = el.querySelector('[data-section-id]');\n\n        if (!idEl) {\n          console.warn(\"Sections: unable to find section id for '\".concat(type, \"'.\"), el);\n          continue;\n        }\n\n        var sectionId = idEl.getAttribute('data-section-id');\n\n        if (!sectionId) {\n          console.warn(\"Sections: unable to find section id for '\".concat(type, \"'.\"), el);\n          continue;\n        }\n\n        this._createInstance(sectionId, el);\n      }\n    }\n  }, {\n    key: \"_onSectionEvent\",\n    value: function _onSectionEvent(event) {\n      var el = event.target;\n      var sectionId = event.detail.sectionId;\n      var blockId = event.detail.blockId;\n      var instance = this.instances[sectionId];\n\n      switch (event.type) {\n        case 'shopify:section:load':\n          this._createInstance(sectionId, el);\n\n          break;\n\n        case 'shopify:section:unload':\n          this._triggerInstanceEvent(instance, 'onSectionUnload', {\n            el: el,\n            id: sectionId\n          });\n\n          delete this.instances[sectionId];\n          break;\n\n        case 'shopify:section:select':\n          this._triggerInstanceEvent(instance, 'onSectionSelect', {\n            el: el,\n            id: sectionId\n          });\n\n          break;\n\n        case 'shopify:section:deselect':\n          this._triggerInstanceEvent(instance, 'onSectionDeselect', {\n            el: el,\n            id: sectionId\n          });\n\n          break;\n\n        case 'shopify:block:select':\n          this._triggerInstanceEvent(instance, 'onSectionBlockSelect', {\n            el: el,\n            id: blockId\n          });\n\n          break;\n\n        case 'shopify:block:deselect':\n          this._triggerInstanceEvent(instance, 'onSectionBlockDeselect', {\n            el: el,\n            id: blockId\n          });\n\n          break;\n      }\n    }\n  }, {\n    key: \"_triggerInstanceEvent\",\n    value: function _triggerInstanceEvent(instance, eventName) {\n      if (instance && instance[eventName]) {\n        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        instance[eventName].apply(instance, args);\n      }\n    }\n  }, {\n    key: \"_postMessage\",\n    value: function _postMessage(name, data) {\n      var _this = this;\n\n      Object.keys(this.instances).forEach(function (id) {\n        _this._triggerInstanceEvent(_this.instances[id], 'onSectionMessage', name, data);\n      });\n    }\n  }, {\n    key: \"_createInstance\",\n    value: function _createInstance(id, el) {\n      var typeEl = el.querySelector('[data-section-type]');\n      if (!typeEl) return;\n      var type = typeEl.getAttribute('data-section-type');\n      if (!type) return;\n      var handler = this.handlers[type];\n      if (!handler) return console.warn(\"Sections: unable to find section handler for type '\".concat(type, \"'.\"));\n\n      var data = this._loadData(el);\n\n      var postMessage = this._postMessage.bind(this);\n\n      this.instances[id] = handler({\n        id: id,\n        type: type,\n        el: el,\n        data: data,\n        postMessage: postMessage\n      });\n    }\n  }, {\n    key: \"_loadData\",\n    value: function _loadData(el) {\n      var dataEl = el.querySelector('[data-section-data]');\n      if (!dataEl) return {}; // Load data from attribute, or innerHTML\n\n      var data = dataEl.getAttribute('data-section-data') || dataEl.innerHTML;\n\n      try {\n        return JSON.parse(data);\n      } catch (error) {\n        console.warn(\"Sections: invalid section data found. \".concat(error.message));\n        return {};\n      }\n    }\n  }]);\n\n  return Sections;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/Sections.js\n");

/***/ }),

/***/ "./source/scripts/Superstore.js":
/*!**************************************!*\
  !*** ./source/scripts/Superstore.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _globals_jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globals/jquery */ \"./source/scripts/globals/jquery.js\");\n/* harmony import */ var jquery_trend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery-trend */ \"./node_modules/jquery-trend/jquery.trend.js\");\n/* harmony import */ var jquery_trend__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery_trend__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery_revealer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery-revealer */ \"./node_modules/jquery-revealer/jquery.revealer.js\");\n/* harmony import */ var jquery_revealer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery_revealer__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var _templates_Account__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./templates/Account */ \"./source/scripts/templates/Account.js\");\n/* harmony import */ var _templates_Contact__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./templates/Contact */ \"./source/scripts/templates/Contact.js\");\n/* harmony import */ var _templates_Page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./templates/Page */ \"./source/scripts/templates/Page.js\");\n/* harmony import */ var _templates_GiftCard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./templates/GiftCard */ \"./source/scripts/templates/GiftCard.js\");\n/* harmony import */ var _Sections__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Sections */ \"./source/scripts/Sections.js\");\n/* harmony import */ var _sections_DynamicBlogPosts__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sections/DynamicBlogPosts */ \"./source/scripts/sections/DynamicBlogPosts.js\");\n/* harmony import */ var _sections_DynamicCollectionList__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./sections/DynamicCollectionList */ \"./source/scripts/sections/DynamicCollectionList.js\");\n/* harmony import */ var _sections_DynamicFeaturedCollection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sections/DynamicFeaturedCollection */ \"./source/scripts/sections/DynamicFeaturedCollection.js\");\n/* harmony import */ var _sections_DynamicHighlightsBanners__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sections/DynamicHighlightsBanners */ \"./source/scripts/sections/DynamicHighlightsBanners.js\");\n/* harmony import */ var _sections_DynamicMap__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sections/DynamicMap */ \"./source/scripts/sections/DynamicMap.js\");\n/* harmony import */ var _sections_DynamicMenuList__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./sections/DynamicMenuList */ \"./source/scripts/sections/DynamicMenuList.js\");\n/* harmony import */ var _sections_DynamicNewsletter__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./sections/DynamicNewsletter */ \"./source/scripts/sections/DynamicNewsletter.js\");\n/* harmony import */ var _sections_DynamicPromoBlocks__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./sections/DynamicPromoBlocks */ \"./source/scripts/sections/DynamicPromoBlocks.js\");\n/* harmony import */ var _sections_DynamicRichText__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sections/DynamicRichText */ \"./source/scripts/sections/DynamicRichText.js\");\n/* harmony import */ var _sections_DynamicSearch__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./sections/DynamicSearch */ \"./source/scripts/sections/DynamicSearch.js\");\n/* harmony import */ var _sections_DynamicTestimonials__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sections/DynamicTestimonials */ \"./source/scripts/sections/DynamicTestimonials.js\");\n/* harmony import */ var _sections_DynamicTwitterFeed__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sections/DynamicTwitterFeed */ \"./source/scripts/sections/DynamicTwitterFeed.js\");\n/* harmony import */ var _sections_DynamicVideo__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sections/DynamicVideo */ \"./source/scripts/sections/DynamicVideo.js\");\n/* harmony import */ var _sections_StaticAnnouncement__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./sections/StaticAnnouncement */ \"./source/scripts/sections/StaticAnnouncement.js\");\n/* harmony import */ var _sections_StaticArticle__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sections/StaticArticle */ \"./source/scripts/sections/StaticArticle.js\");\n/* harmony import */ var _sections_StaticBlog__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./sections/StaticBlog */ \"./source/scripts/sections/StaticBlog.js\");\n/* harmony import */ var _sections_StaticCart__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sections/StaticCart */ \"./source/scripts/sections/StaticCart.js\");\n/* harmony import */ var _sections_StaticCollection__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./sections/StaticCollection */ \"./source/scripts/sections/StaticCollection.js\");\n/* harmony import */ var _sections_StaticCollectionMinimal__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./sections/StaticCollectionMinimal */ \"./source/scripts/sections/StaticCollectionMinimal.js\");\n/* harmony import */ var _sections_StaticPassword__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./sections/StaticPassword */ \"./source/scripts/sections/StaticPassword.js\");\n/* harmony import */ var _sections_StaticProduct__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./sections/StaticProduct */ \"./source/scripts/sections/StaticProduct.js\");\n/* harmony import */ var _sections_StaticProductRecommendations__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./sections/StaticProductRecommendations */ \"./source/scripts/sections/StaticProductRecommendations.js\");\n/* harmony import */ var _sections_StaticRecentlyViewed__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./sections/StaticRecentlyViewed */ \"./source/scripts/sections/StaticRecentlyViewed.js\");\n/* harmony import */ var _sections_StaticSearch__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./sections/StaticSearch */ \"./source/scripts/sections/StaticSearch.js\");\n/* harmony import */ var _sections_StaticSectionFooter__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sections/StaticSectionFooter */ \"./source/scripts/sections/StaticSectionFooter.js\");\n/* harmony import */ var _sections_StaticSectionHeader__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sections/StaticSectionHeader */ \"./source/scripts/sections/StaticSectionHeader.js\");\n/* harmony import */ var _sections_StaticSlideshow__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./sections/StaticSlideshow */ \"./source/scripts/sections/StaticSlideshow.js\");\n/* harmony import */ var _sections_StaticUtilityBar__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sections/StaticUtilityBar */ \"./source/scripts/sections/StaticUtilityBar.js\");\n/* harmony import */ var _checkPolyfills__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./checkPolyfills */ \"./source/scripts/checkPolyfills.js\");\n/* harmony import */ var _helpers_ContainSwatchTooltips__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./helpers/ContainSwatchTooltips */ \"./source/scripts/helpers/ContainSwatchTooltips.js\");\n/* harmony import */ var _helpers_FlickityTouchFix__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./helpers/FlickityTouchFix */ \"./source/scripts/helpers/FlickityTouchFix.js\");\n// jQuery plugins\n\n // eslint-disable-line\n\n // eslint-disable-line\n\n\n // Template imports\n\n\n\n\n // Section imports\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar initTheme = function initTheme() {\n  rimg_shopify__WEBPACK_IMPORTED_MODULE_4__[\"default\"].init('[data-rimg=\"lazy\"]', {\n    round: 1\n  });\n  var sections = new _Sections__WEBPACK_IMPORTED_MODULE_9__[\"default\"]();\n  sections.register('dynamic-blog-posts', function (section) {\n    return new _sections_DynamicBlogPosts__WEBPACK_IMPORTED_MODULE_10__[\"default\"](section);\n  });\n  sections.register('dynamic-collection-list', function (section) {\n    return new _sections_DynamicCollectionList__WEBPACK_IMPORTED_MODULE_11__[\"default\"](section);\n  });\n  sections.register('dynamic-featured-collection', function (section) {\n    return new _sections_DynamicFeaturedCollection__WEBPACK_IMPORTED_MODULE_12__[\"default\"](section);\n  });\n  sections.register('dynamic-featured-product', function (section) {\n    return new _sections_StaticProduct__WEBPACK_IMPORTED_MODULE_30__[\"default\"](section);\n  });\n  sections.register('dynamic-highlights-banners', function (section) {\n    return new _sections_DynamicHighlightsBanners__WEBPACK_IMPORTED_MODULE_13__[\"default\"](section);\n  });\n  sections.register('dynamic-map', function (section) {\n    return new _sections_DynamicMap__WEBPACK_IMPORTED_MODULE_14__[\"default\"](section);\n  });\n  sections.register('dynamic-menu-list', function (section) {\n    return new _sections_DynamicMenuList__WEBPACK_IMPORTED_MODULE_15__[\"default\"](section);\n  });\n  sections.register('dynamic-newsletter', function (section) {\n    return new _sections_DynamicNewsletter__WEBPACK_IMPORTED_MODULE_16__[\"default\"](section);\n  });\n  sections.register('dynamic-promo-grid', function (section) {\n    return new _sections_DynamicPromoBlocks__WEBPACK_IMPORTED_MODULE_17__[\"default\"](section);\n  });\n  sections.register('dynamic-promo-mosaic', function (section) {\n    return new _sections_DynamicPromoBlocks__WEBPACK_IMPORTED_MODULE_17__[\"default\"](section);\n  });\n  sections.register('dynamic-rich-text', function (section) {\n    return new _sections_DynamicRichText__WEBPACK_IMPORTED_MODULE_18__[\"default\"](section);\n  });\n  sections.register('dynamic-search', function (section) {\n    return new _sections_DynamicSearch__WEBPACK_IMPORTED_MODULE_19__[\"default\"](section);\n  });\n  sections.register('dynamic-testimonials', function (section) {\n    return new _sections_DynamicTestimonials__WEBPACK_IMPORTED_MODULE_20__[\"default\"](section);\n  });\n  sections.register('dynamic-twitter-feed', function (section) {\n    return new _sections_DynamicTwitterFeed__WEBPACK_IMPORTED_MODULE_21__[\"default\"](section);\n  });\n  sections.register('dynamic-video', function (section) {\n    return new _sections_DynamicVideo__WEBPACK_IMPORTED_MODULE_22__[\"default\"](section);\n  });\n  sections.register('static-announcement', function (section) {\n    return new _sections_StaticAnnouncement__WEBPACK_IMPORTED_MODULE_23__[\"default\"](section);\n  });\n  sections.register('static-article', function (section) {\n    return new _sections_StaticArticle__WEBPACK_IMPORTED_MODULE_24__[\"default\"](section);\n  });\n  sections.register('static-blog', function (section) {\n    return new _sections_StaticBlog__WEBPACK_IMPORTED_MODULE_25__[\"default\"](section);\n  });\n  sections.register('static-cart', function (section) {\n    return new _sections_StaticCart__WEBPACK_IMPORTED_MODULE_26__[\"default\"](section);\n  });\n  sections.register('static-collection', function (section) {\n    return new _sections_StaticCollection__WEBPACK_IMPORTED_MODULE_27__[\"default\"](section);\n  });\n  sections.register('static-collection-minimal', function (section) {\n    return new _sections_StaticCollectionMinimal__WEBPACK_IMPORTED_MODULE_28__[\"default\"](section);\n  });\n  sections.register('static-footer', function (section) {\n    return new _sections_StaticSectionFooter__WEBPACK_IMPORTED_MODULE_34__[\"default\"](section);\n  });\n  sections.register('static-header', function (section) {\n    return new _sections_StaticSectionHeader__WEBPACK_IMPORTED_MODULE_35__[\"default\"](section);\n  });\n  sections.register('static-password', function (section) {\n    return new _sections_StaticPassword__WEBPACK_IMPORTED_MODULE_29__[\"default\"](section);\n  });\n  sections.register('static-product', function (section) {\n    return new _sections_StaticProduct__WEBPACK_IMPORTED_MODULE_30__[\"default\"](section);\n  });\n  sections.register('static-product-recommendations', function (section) {\n    return new _sections_StaticProductRecommendations__WEBPACK_IMPORTED_MODULE_31__[\"default\"](section);\n  });\n  sections.register('static-recently-viewed', function (section) {\n    return new _sections_StaticRecentlyViewed__WEBPACK_IMPORTED_MODULE_32__[\"default\"](section);\n  });\n  sections.register('static-search', function (section) {\n    return new _sections_StaticSearch__WEBPACK_IMPORTED_MODULE_33__[\"default\"](section);\n  });\n  sections.register('static-slideshow', function (section) {\n    return new _sections_StaticSlideshow__WEBPACK_IMPORTED_MODULE_36__[\"default\"](section);\n  });\n  sections.register('static-utility-bar', function (section) {\n    return new _sections_StaticUtilityBar__WEBPACK_IMPORTED_MODULE_37__[\"default\"](section);\n  });\n  new _helpers_ContainSwatchTooltips__WEBPACK_IMPORTED_MODULE_39__[\"default\"]();\n\n  if (Object(_globals_jquery__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('body.giftcard').length) {\n    new _templates_GiftCard__WEBPACK_IMPORTED_MODULE_8__[\"default\"]();\n  }\n\n  new _templates_Account__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n  new _templates_Contact__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n  new _templates_Page__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n  Object(_helpers_FlickityTouchFix__WEBPACK_IMPORTED_MODULE_40__[\"default\"])();\n};\n\nif (_checkPolyfills__WEBPACK_IMPORTED_MODULE_38__[\"default\"].length) {\n  scriptjs__WEBPACK_IMPORTED_MODULE_3___default()(_checkPolyfills__WEBPACK_IMPORTED_MODULE_38__[\"default\"], initTheme);\n} else {\n  initTheme();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/Superstore.js\n");

/***/ }),

/***/ "./source/scripts/checkPolyfills.js":
/*!******************************************!*\
  !*** ./source/scripts/checkPolyfills.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar _this = undefined;\n\nvar polyfillUrls = []; // Checks if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\n\nif (!('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) || !('open' in document.createElement('details'))) {\n  polyfillUrls.push(document.querySelector('[data-scripts]').dataset.pxuPolyfills);\n} // Polyfill NodeList.forEach if required.\n// Polyfill is so small it doesn't need to load any external code.\n\n\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach;\n}\n\nif (!Element.prototype.toggleAttribute) {\n  Element.prototype.toggleAttribute = function (name, force) {\n    if (force !== undefined) {\n      force = !!force;\n    }\n\n    if (_this.hasAttribute(name)) {\n      if (force) return true;\n\n      _this.removeAttribute(name);\n\n      return false;\n    }\n\n    if (force === false) return false;\n\n    _this.setAttribute(name, '');\n\n    return true;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (polyfillUrls);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jaGVja1BvbHlmaWxscy5qcz9kMGZkIl0sIm5hbWVzIjpbInBvbHlmaWxsVXJscyIsIndpbmRvdyIsIkludGVyc2VjdGlvbk9ic2VydmVyRW50cnkiLCJwcm90b3R5cGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJwdXNoIiwicXVlcnlTZWxlY3RvciIsImRhdGFzZXQiLCJweHVQb2x5ZmlsbHMiLCJOb2RlTGlzdCIsImZvckVhY2giLCJBcnJheSIsIkVsZW1lbnQiLCJ0b2dnbGVBdHRyaWJ1dGUiLCJuYW1lIiwiZm9yY2UiLCJ1bmRlZmluZWQiLCJoYXNBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQU1BLFlBQVksR0FBRyxFQUFyQixDLENBRUE7QUFDQTs7QUFDQSxJQUFJLEVBQ0YsMEJBQTBCQyxNQUExQixJQUNHLCtCQUErQkEsTUFEbEMsSUFFRyx1QkFBdUJBLE1BQU0sQ0FBQ0MseUJBQVAsQ0FBaUNDLFNBSHpELEtBSUMsRUFBRSxVQUFVQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsU0FBdkIsQ0FBWixDQUpMLEVBSXFEO0FBQ25ETCxjQUFZLENBQUNNLElBQWIsQ0FBa0JGLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixnQkFBdkIsRUFBeUNDLE9BQXpDLENBQWlEQyxZQUFuRTtBQUNELEMsQ0FFRDtBQUNBOzs7QUFDQSxJQUFJUixNQUFNLENBQUNTLFFBQVAsSUFBbUIsQ0FBQ0EsUUFBUSxDQUFDUCxTQUFULENBQW1CUSxPQUEzQyxFQUFvRDtBQUNsREQsVUFBUSxDQUFDUCxTQUFULENBQW1CUSxPQUFuQixHQUE2QkMsS0FBSyxDQUFDVCxTQUFOLENBQWdCUSxPQUE3QztBQUNEOztBQUVELElBQUksQ0FBQ0UsT0FBTyxDQUFDVixTQUFSLENBQWtCVyxlQUF2QixFQUF3QztBQUN0Q0QsU0FBTyxDQUFDVixTQUFSLENBQWtCVyxlQUFsQixHQUFvQyxVQUFDQyxJQUFELEVBQU9DLEtBQVAsRUFBaUI7QUFDbkQsUUFBSUEsS0FBSyxLQUFLQyxTQUFkLEVBQXlCO0FBQ3ZCRCxXQUFLLEdBQUcsQ0FBQyxDQUFDQSxLQUFWO0FBQ0Q7O0FBRUQsUUFBSSxLQUFJLENBQUNFLFlBQUwsQ0FBa0JILElBQWxCLENBQUosRUFBNkI7QUFDM0IsVUFBSUMsS0FBSixFQUFXLE9BQU8sSUFBUDs7QUFFWCxXQUFJLENBQUNHLGVBQUwsQ0FBcUJKLElBQXJCOztBQUNBLGFBQU8sS0FBUDtBQUNEOztBQUNELFFBQUlDLEtBQUssS0FBSyxLQUFkLEVBQXFCLE9BQU8sS0FBUDs7QUFFckIsU0FBSSxDQUFDSSxZQUFMLENBQWtCTCxJQUFsQixFQUF3QixFQUF4Qjs7QUFDQSxXQUFPLElBQVA7QUFDRCxHQWZEO0FBZ0JEOztBQUVjZiwyRUFBZiIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NoZWNrUG9seWZpbGxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcG9seWZpbGxVcmxzID0gW107XG5cbi8vIENoZWNrcyBpZiBhbGwgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgYW5kIEludGVyc2VjdGlvbk9ic2VydmVyRW50cnlcbi8vIGZlYXR1cmVzIGFyZSBuYXRpdmVseSBzdXBwb3J0ZWQuXG5pZiAoIShcbiAgJ0ludGVyc2VjdGlvbk9ic2VydmVyJyBpbiB3aW5kb3dcbiAgJiYgJ0ludGVyc2VjdGlvbk9ic2VydmVyRW50cnknIGluIHdpbmRvd1xuICAmJiAnaW50ZXJzZWN0aW9uUmF0aW8nIGluIHdpbmRvdy5JbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5LnByb3RvdHlwZVxuKSB8fCAhKCdvcGVuJyBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkZXRhaWxzJykpKSB7XG4gIHBvbHlmaWxsVXJscy5wdXNoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXNjcmlwdHNdJykuZGF0YXNldC5weHVQb2x5ZmlsbHMpO1xufVxuXG4vLyBQb2x5ZmlsbCBOb2RlTGlzdC5mb3JFYWNoIGlmIHJlcXVpcmVkLlxuLy8gUG9seWZpbGwgaXMgc28gc21hbGwgaXQgZG9lc24ndCBuZWVkIHRvIGxvYWQgYW55IGV4dGVybmFsIGNvZGUuXG5pZiAod2luZG93Lk5vZGVMaXN0ICYmICFOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCkge1xuICBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCA9IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoO1xufVxuXG5pZiAoIUVsZW1lbnQucHJvdG90eXBlLnRvZ2dsZUF0dHJpYnV0ZSkge1xuICBFbGVtZW50LnByb3RvdHlwZS50b2dnbGVBdHRyaWJ1dGUgPSAobmFtZSwgZm9yY2UpID0+IHtcbiAgICBpZiAoZm9yY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZm9yY2UgPSAhIWZvcmNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZShuYW1lKSkge1xuICAgICAgaWYgKGZvcmNlKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChmb3JjZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsICcnKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcG9seWZpbGxVcmxzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/checkPolyfills.js\n");

/***/ }),

/***/ "./source/scripts/components/AddToCartFlyout.js":
/*!******************************************************!*\
  !*** ./source/scripts/components/AddToCartFlyout.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shopify/theme-a11y */ \"./node_modules/@shopify/theme-a11y/theme-a11y.js\");\n/* harmony import */ var _MessageBanner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MessageBanner */ \"./source/scripts/components/MessageBanner.js\");\n/* harmony import */ var _helpers_Images__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/Images */ \"./source/scripts/helpers/Images.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar AddToCartFlyout = /*#__PURE__*/function () {\n  function AddToCartFlyout() {\n    _classCallCheck(this, AddToCartFlyout);\n\n    this.formData = {};\n    this.settings = {};\n    this.events = [];\n    this.Images = new _helpers_Images__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    this.flyOutSelector = '[data-atc-banner]';\n    this.$atcTemplate = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-templates] \".concat(this.flyOutSelector));\n    this.activeElement = null;\n    this.atcFlyOut = document.querySelector(this.flyOutSelector);\n    this._onInit = this._onInit.bind(this);\n    this._onError = this._onError.bind(this);\n    this._onSuccess = this._onSuccess.bind(this);\n    this._onCloseAll = this._onCloseAll.bind(this);\n    this._handleDocumentClick = this._handleDocumentClick.bind(this);\n    this._closeEsc = this._closeEsc.bind(this);\n    this.messageBanner = new _MessageBanner__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.header = document.querySelector('[data-site-header]');\n    this.$header = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.header);\n    this.$headerMain = this.$header.find('[data-site-header-main]');\n    this.$body = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body);\n  }\n\n  _createClass(AddToCartFlyout, [{\n    key: \"init\",\n    value: function init(formData, product, options) {\n      var callbacks = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      this.formData = formData;\n      this.product = product; // Allows ATC Flow to be overridden\n\n      this.callbacks = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend({\n        onInit: this._onInit,\n        onError: this._onError,\n        onSuccess: this._onSuccess,\n        onClose: this._onCloseAll\n      }, callbacks);\n      var $atcButton = options.$atcButton;\n      this.settings = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend({\n        moneyFormat: null,\n        cartRedirection: false\n      }, options.settings); // If any FlyOuts are fully open, close them\n\n      this._closeFlyOuts();\n\n      this.callbacks.onInit();\n      this.activeElement = document.activeElement;\n\n      this._disableButton($atcButton);\n\n      this._updateCart($atcButton);\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.messageBanner.dismissBanners();\n\n      this._removeFlyOuts();\n\n      delete this.Images;\n    }\n  }, {\n    key: \"_updateCart\",\n    value: function _updateCart($atcButton) {\n      var _this = this;\n\n      var $flyOut = this.$atcTemplate.clone();\n      var idField = this.formData.filter(function (data) {\n        return data.name === 'id';\n      });\n      var id = parseInt(idField[0].value, 10);\n      var variants = this.product.variants.filter(function (variant) {\n        return variant.id === id;\n      });\n      var variant = variants[0];\n      var quantityField = this.formData.filter(function (data) {\n        return data.name === 'quantity';\n      });\n      var quantity = parseInt(quantityField[0].value, 10);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n        type: 'POST',\n        url: \"\".concat(window.Theme.routes.cart_add_url, \".js\"),\n        data: jquery__WEBPACK_IMPORTED_MODULE_0___default.a.param(this.formData),\n        dataType: 'json'\n      }).done(function (response) {\n        window.api.theme.triggerEvent('cart:updated', {\n          cancel: function cancel() {}\n        });\n\n        if (response.image) {\n          var imageUrl = _this.Images.getSizedImageUrl(response.image, '200x');\n\n          var image = _this.Images.loadImage(imageUrl);\n\n          $flyOut.find('[data-atc-banner-product-image]').html(\"<img src=\\\"\".concat(image, \"\\\" alt=\\\"\").concat(response.product_title, \"\\\">\"));\n        }\n\n        $flyOut.find('[data-atc-banner-product-title]').text(response.product_title);\n        /*\n          TODO: Bring in `variant.options`, iterate through to get option\n            name for: <strong>Option name:</strong> Option\n        */\n\n        if (response.variant_options[0] !== 'Title' && response.variant_options[0] !== 'Default Title') {\n          $flyOut.find('[data-atc-banner-product-options]').text(response.variant_options.join(', '));\n        }\n        /*\n          TODO: Bring in variant, and use that to check compare_at_price\n            to see if the item is on sale\n        */\n\n\n        var $productPriceQuantity = $flyOut.find('[data-atc-banner-product-price-quantity]');\n        $productPriceQuantity.text(\"\".concat(quantity, \" \\xD7 \"));\n        var $productPriceValue = $flyOut.find('[data-atc-banner-product-price-value]');\n        $productPriceValue.text(Shopify.formatMoney(variant.price, _this.settings.moneyFormat)); // Price Per Unit\n\n        var unitPrice = $flyOut[0].querySelector('[data-atc-banner-unit-price]');\n        var unitPriceString = unitPrice.innerHTML;\n\n        if (unitPrice && variant.unit_price_measurement) {\n          unitPriceString = unitPriceString.replace('** total_quantity **', \"\".concat(variant.unit_price_measurement.quantity_value).concat(variant.unit_price_measurement.quantity_unit));\n          unitPriceString = unitPriceString.replace('** unit_price **', Shopify.formatMoney(variant.unit_price, _this.settings.money_format));\n\n          if (variant.unit_price_measurement.reference_value === 1) {\n            unitPriceString = unitPriceString.replace('** unit_measure **', variant.unit_price_measurement.reference_unit);\n          } else {\n            unitPriceString = unitPriceString.replace('** unit_measure **', \"\".concat(variant.unit_price_measurement.reference_value).concat(variant.unit_price_measurement.reference_unit));\n          }\n\n          unitPrice.innerHTML = unitPriceString;\n          unitPrice.classList.remove('hidden');\n        }\n\n        jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n          type: 'GET',\n          url: \"\".concat(window.Theme.routes.cart_url, \".js\"),\n          dataType: 'json'\n        }).done(function (response) {\n          if (_this.settings.cartRedirection) {\n            return location.href = window.Theme.routes.cart_url;\n          }\n\n          _this.callbacks.onSuccess(); // Reset formData in case instance is never cleared\n\n\n          _this.formData = {};\n          var $subTotal = $flyOut.find('[data-atc-banner-cart-subtotal]');\n\n          var cartTotalValueListener = function cartTotalValueListener(_ref) {\n            var price = _ref.price;\n\n            if ($subTotal) {\n              $subTotal[0].innerHTML = Shopify.formatMoney(price, _this.settings.moneyFormat);\n            }\n          };\n\n          _this.cartTotalValue = window.api.theme.useValue({\n            name: 'cart:total',\n            handler: cartTotalValueListener,\n            initialValue: {\n              price: response.total_price,\n              compare_at_price: response.total_price\n            }\n          });\n          $flyOut.find('[data-atc-banner-cart-button]').find('span').text(response.item_count);\n\n          _this.$header.append($flyOut); // Notifiy Header of new cart count\n\n\n          _this.$headerMain.trigger('cartcount:update', {\n            response: response\n          });\n\n          _this._bindEvents($flyOut);\n\n          _this._openFlyOut($flyOut, $atcButton);\n        });\n      }).fail(function (response) {\n        var errorText;\n\n        try {\n          var responseText = JSON.parse(response.responseText);\n          errorText = responseText.description;\n        } catch (error) {\n          errorText = \"\".concat(response.status, \" \").concat(response.statusText);\n\n          if (response.status === 401) {\n            errorText = \"\".concat(errorText, \". Try refreshing and logging in.\");\n          }\n        }\n\n        _this._enableButton($atcButton);\n\n        _this.callbacks.onError(errorText);\n      });\n    }\n  }, {\n    key: \"_onError\",\n    value: function _onError(error) {\n      this.messageBanner.message(error, 'error');\n    }\n  }, {\n    key: \"_onInit\",\n    value: function _onInit() {\n      this.messageBanner.dismissBanners();\n    }\n  }, {\n    key: \"_onSuccess\",\n    value: function _onSuccess() {\n      /*\n        By default, the ATC Flyout doesn't need any additional success callbacks\n         The `this.callbacks.onSuccess` is used to allow other views to initiate\n        behaviour when a product has been added to the cart\n       */\n    }\n  }, {\n    key: \"_onCloseAll\",\n    value: function _onCloseAll() {\n      /*\n        By default, the ATC Flyout doesn't need any additional close callbacks\n         The `this.callbacks.onClose` is used to allow other views to initiate\n        behaviour when the atc banner has been closed\n       */\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents($flyOut) {\n      var _this2 = this;\n\n      this.events.push([$flyOut.on('click.atc-banner', '[data-atc-banner-close]', function (event) {\n        event.preventDefault();\n\n        _this2._closeFlyOut($flyOut);\n      }), jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-atc-button-checkout]', $flyOut).on('click.atc-banner', function (event) {\n        return window.api.theme.triggerEvent('cart:checkout', {\n          cancel: function cancel() {\n            return event.preventDefault();\n          }\n        });\n      })]);\n    }\n    /**\n     * Trigger any existing open FlyOuts to close\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_closeFlyOuts\",\n    value: function _closeFlyOuts() {\n      var _this3 = this;\n\n      var $excludeFlyOut = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.flyOutSelector).filter('[data-flyout-active]').each(function (index, el) {\n        var $flyOut = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n\n        if ($excludeFlyOut && $flyOut.is($excludeFlyOut)) {\n          return;\n        }\n\n        _this3._closeFlyOut($flyOut, index);\n      });\n\n      if (!$excludeFlyOut) {\n        this.callbacks.onClose();\n      }\n\n      window.removeEventListener('keydown', this._closeEsc);\n      window.removeEventListener('click', this._handleDocumentClick);\n    }\n  }, {\n    key: \"_openFlyOut\",\n    value: function _openFlyOut($flyOut, $atcButton) {\n      var _this4 = this;\n\n      /*\n       If user has initiated a new ATC Flow before the first has finished,\n       the first FlyOut could have opened after the first attempt to close open flyouts\n      */\n      this._closeFlyOuts($flyOut);\n\n      $flyOut.addClass('animating animating-in').one('trend', function () {\n        $flyOut.removeClass('animating animating-in').addClass('visible').off('trend');\n        $flyOut.attr('data-flyout-active', true);\n        Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_1__[\"trapFocus\"])($flyOut[0]);\n        window.addEventListener('keydown', _this4._closeEsc);\n        window.addEventListener('click', _this4._handleDocumentClick);\n\n        _this4._enableButton($atcButton);\n      });\n    }\n  }, {\n    key: \"_closeEsc\",\n    value: function _closeEsc(e) {\n      if (e.key === 'Escape') {\n        this._closeFlyOuts();\n      }\n    }\n    /**\n     * Close an open FlyOut\n     *\n     * @param $flyOut\n     * @param index\n     * @private\n     */\n\n  }, {\n    key: \"_closeFlyOut\",\n    value: function _closeFlyOut() {\n      var _this5 = this;\n\n      var $flyOut = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (!$flyOut) {\n        return;\n      }\n\n      $flyOut.addClass('animating animating-out').one('trend', function () {\n        $flyOut.removeClass('animating animating-out visible').one('trend', function () {\n          $flyOut.off('trend');\n\n          _this5._removeFlyOut($flyOut, index); // if the user clicked onto the search box, close the atc flyout and move focus\n          // to the search instead of going to the previous active element.\n\n\n          if (_this5.documentClickEventTarget && 'liveSearchInput' in _this5.documentClickEventTarget.dataset) {\n            _this5.documentClickEventTarget.focus();\n          } else if (_this5.activeElement) {\n            _this5.activeElement.focus();\n          }\n\n          Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_1__[\"removeTrapFocus\"])($flyOut[0]);\n\n          _this5.callbacks.onClose();\n        });\n      });\n    }\n  }, {\n    key: \"_removeFlyOuts\",\n    value: function _removeFlyOuts() {\n      var _this6 = this;\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.flyOutSelector).filter('[data-flyout-active]').each(function (index, el) {\n        _this6._removeFlyOut(jquery__WEBPACK_IMPORTED_MODULE_0___default()(el), index);\n      });\n    }\n    /**\n     * Remove the Flyout from the DOM, and clean up listeners\n     *\n     * @param $flyOut\n     * @param index\n     * @private\n     */\n\n  }, {\n    key: \"_removeFlyOut\",\n    value: function _removeFlyOut($flyOut, index) {\n      if (this.events[index]) {\n        this.events[index].forEach(function ($el) {\n          return $el.off('.atc-banner');\n        });\n        this.events.splice(index, 1);\n      }\n\n      if (this.cartTotalValue) {\n        this.cartTotalValue.unload();\n        this.cartTotalValue = null;\n      }\n\n      if ($flyOut) {\n        $flyOut.remove();\n      }\n    }\n  }, {\n    key: \"_disableButton\",\n    value: function _disableButton($atcButton) {\n      $atcButton.addClass('processing').prop('disabled', true);\n    }\n  }, {\n    key: \"_enableButton\",\n    value: function _enableButton($atcButton) {\n      $atcButton.prop('disabled', false).removeClass('processing');\n    }\n  }, {\n    key: \"_handleDocumentClick\",\n    value: function _handleDocumentClick(event) {\n      var target = event.target;\n      var $parent = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).parents('[data-atc-banner]');\n\n      if ($parent.length) {\n        return;\n      }\n\n      this.documentClickEventTarget = target;\n\n      this._closeFlyOuts();\n    }\n  }]);\n\n  return AddToCartFlyout;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new AddToCartFlyout());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/AddToCartFlyout.js\n");

/***/ }),

/***/ "./source/scripts/components/CartItem.js":
/*!***********************************************!*\
  !*** ./source/scripts/components/CartItem.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CartItem; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar CartItem = /*#__PURE__*/function () {\n  function CartItem(el, data, settings) {\n    var _this = this;\n\n    _classCallCheck(this, CartItem);\n\n    this.el = el;\n    this.data = data;\n    this.settings = settings;\n    this._id = el.getAttribute('data-cartitem-id');\n    this.value = window.api.theme.useValue({\n      name: \"line-item:\".concat(this._id, \":price\"),\n      handler: function handler(_ref) {\n        var price = _ref.price;\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(_this.el).each(function (index, cartItem) {\n          var cartItemTotal = cartItem.querySelector('[data-cartitem-total]');\n          cartItemTotal.innerHTML = Shopify.formatMoney(price, _this.settings.money_format);\n        });\n      },\n      initialValue: {\n        price: this.data.line_price,\n        compare_at_price: this.data.original_line_price\n      }\n    });\n  }\n\n  _createClass(CartItem, [{\n    key: \"unload\",\n    value: function unload() {\n      this.value.unload();\n    }\n  }]);\n\n  return CartItem;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL0NhcnRJdGVtLmpzP2Y5ZTUiXSwibmFtZXMiOlsiQ2FydEl0ZW0iLCJlbCIsImRhdGEiLCJzZXR0aW5ncyIsIl9pZCIsImdldEF0dHJpYnV0ZSIsInZhbHVlIiwid2luZG93IiwiYXBpIiwidGhlbWUiLCJ1c2VWYWx1ZSIsIm5hbWUiLCJoYW5kbGVyIiwicHJpY2UiLCIkIiwiZWFjaCIsImluZGV4IiwiY2FydEl0ZW0iLCJjYXJ0SXRlbVRvdGFsIiwicXVlcnlTZWxlY3RvciIsImlubmVySFRNTCIsIlNob3BpZnkiLCJmb3JtYXRNb25leSIsIm1vbmV5X2Zvcm1hdCIsImluaXRpYWxWYWx1ZSIsImxpbmVfcHJpY2UiLCJjb21wYXJlX2F0X3ByaWNlIiwib3JpZ2luYWxfbGluZV9wcmljZSIsInVubG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOztJQUVxQkEsUTtBQUNuQixvQkFBWUMsRUFBWixFQUFnQkMsSUFBaEIsRUFBc0JDLFFBQXRCLEVBQWdDO0FBQUE7O0FBQUE7O0FBQzlCLFNBQUtGLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtDLElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsU0FBS0MsR0FBTCxHQUFXSCxFQUFFLENBQUNJLFlBQUgsQ0FBZ0Isa0JBQWhCLENBQVg7QUFFQSxTQUFLQyxLQUFMLEdBQWFDLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXQyxLQUFYLENBQWlCQyxRQUFqQixDQUEwQjtBQUNyQ0MsVUFBSSxzQkFBZSxLQUFLUCxHQUFwQixXQURpQztBQUVyQ1EsYUFBTyxFQUFFLHVCQUFlO0FBQUEsWUFBWkMsS0FBWSxRQUFaQSxLQUFZO0FBQ3RCQyxxREFBQyxDQUFDLEtBQUksQ0FBQ2IsRUFBTixDQUFELENBQVdjLElBQVgsQ0FBZ0IsVUFBQ0MsS0FBRCxFQUFRQyxRQUFSLEVBQXFCO0FBQ25DLGNBQU1DLGFBQWEsR0FBR0QsUUFBUSxDQUFDRSxhQUFULENBQXVCLHVCQUF2QixDQUF0QjtBQUVBRCx1QkFBYSxDQUFDRSxTQUFkLEdBQTBCQyxPQUFPLENBQUNDLFdBQVIsQ0FBb0JULEtBQXBCLEVBQTJCLEtBQUksQ0FBQ1YsUUFBTCxDQUFjb0IsWUFBekMsQ0FBMUI7QUFDRCxTQUpEO0FBS0QsT0FSb0M7QUFTckNDLGtCQUFZLEVBQUU7QUFBRVgsYUFBSyxFQUFFLEtBQUtYLElBQUwsQ0FBVXVCLFVBQW5CO0FBQStCQyx3QkFBZ0IsRUFBRSxLQUFLeEIsSUFBTCxDQUFVeUI7QUFBM0Q7QUFUdUIsS0FBMUIsQ0FBYjtBQVdEOzs7OzZCQUVRO0FBQ1AsV0FBS3JCLEtBQUwsQ0FBV3NCLE1BQVg7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NvbXBvbmVudHMvQ2FydEl0ZW0uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJ0SXRlbSB7XG4gIGNvbnN0cnVjdG9yKGVsLCBkYXRhLCBzZXR0aW5ncykge1xuICAgIHRoaXMuZWwgPSBlbDtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgIHRoaXMuc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICB0aGlzLl9pZCA9IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1jYXJ0aXRlbS1pZCcpO1xuXG4gICAgdGhpcy52YWx1ZSA9IHdpbmRvdy5hcGkudGhlbWUudXNlVmFsdWUoe1xuICAgICAgbmFtZTogYGxpbmUtaXRlbToke3RoaXMuX2lkfTpwcmljZWAsXG4gICAgICBoYW5kbGVyOiAoeyBwcmljZSB9KSA9PiB7XG4gICAgICAgICQodGhpcy5lbCkuZWFjaCgoaW5kZXgsIGNhcnRJdGVtKSA9PiB7XG4gICAgICAgICAgY29uc3QgY2FydEl0ZW1Ub3RhbCA9IGNhcnRJdGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNhcnRpdGVtLXRvdGFsXScpO1xuXG4gICAgICAgICAgY2FydEl0ZW1Ub3RhbC5pbm5lckhUTUwgPSBTaG9waWZ5LmZvcm1hdE1vbmV5KHByaWNlLCB0aGlzLnNldHRpbmdzLm1vbmV5X2Zvcm1hdCk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIGluaXRpYWxWYWx1ZTogeyBwcmljZTogdGhpcy5kYXRhLmxpbmVfcHJpY2UsIGNvbXBhcmVfYXRfcHJpY2U6IHRoaXMuZGF0YS5vcmlnaW5hbF9saW5lX3ByaWNlIH0sXG4gICAgfSk7XG4gIH1cblxuICB1bmxvYWQoKSB7XG4gICAgdGhpcy52YWx1ZS51bmxvYWQoKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/CartItem.js\n");

/***/ }),

/***/ "./source/scripts/components/GridItemSwatches.js":
/*!*******************************************************!*\
  !*** ./source/scripts/components/GridItemSwatches.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GridItemSwatches; });\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var _pixelunion_events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @pixelunion/events */ \"./node_modules/@pixelunion/events/dist/EventHandler.js\");\n/* harmony import */ var _pixelunion_events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_events__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar swatchGap = null;\n\nvar GridItemSwatches = /*#__PURE__*/function () {\n  function GridItemSwatches(options) {\n    var _this = this;\n\n    _classCallCheck(this, GridItemSwatches);\n\n    this.el = options.el;\n    this.productQuickshop = options.productQuickshop;\n    this.product = options.product;\n    this.expanded = false;\n    this.swatchImages = {};\n    this.swatchVariantIds = {};\n    this.selectedImage = null;\n    this.state = {};\n    this.events = new _pixelunion_events__WEBPACK_IMPORTED_MODULE_3___default.a();\n    this.data = JSON.parse(this.el.querySelector('[data-swatch-data]').innerHTML);\n    this.swatchesContainer = this.el.querySelector('[data-swatches-container]');\n    this.cardLinks = this.el.querySelectorAll('[data-product-page-link]');\n    this.cardLinkHref = this.cardLinks[0].getAttribute('href');\n    this.activeControlTime = 0;\n    this.activeControl = this.swatchesContainer.querySelector('[checked]');\n    this.isPreselected = !!this.activeControl;\n    this.swatches = this.swatchesContainer.querySelectorAll('[data-swatch]');\n    this.swatchCount = this.swatches.length;\n    this.swatchWidths = Array.prototype.map.call(this.swatches, function (swatch) {\n      return swatch.getBoundingClientRect().width;\n    });\n\n    if (this.data.swatchesProductCardHover === 'always') {\n      this.swatchCountButton = this.el.querySelector('[data-swatch-count-button]');\n      this.swatchCount = this.swatchCountButton.querySelector('[data-swatch-count]');\n      this.resize();\n      this.el.querySelector('[data-swatches]').classList.add('processed');\n    }\n\n    this.originalImages = {\n      primary: this.el.querySelector('.productitem--image-primary'),\n      alternate: this.el.querySelector('.productitem--image-alternate')\n    };\n    this.disableUnavailable(); // +/- button expansion events\n\n    this.events.register(window, 'resize', just_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n      return _this.resize();\n    }, 50));\n    this.events.register(this.swatchCountButton, 'click', function () {\n      return _this._toggleExpanded();\n    }); // Image injection events\n\n    this.injectImagesMouseoverEvent = this.events.register(this.el, 'mouseover', function () {\n      return _this._injectImages();\n    });\n    this.injectImagesFocusinEvent = this.events.register(this.el, 'focusin', function () {\n      return _this._injectImages();\n    }); // Image/swatch switching events\n\n    this.events.register(this.swatchesContainer, 'mouseover', function (e) {\n      return _this._handleMouseOver(e);\n    });\n    this.events.register(this.swatchesContainer, 'mouseleave', function (e) {\n      return _this._handleMouseLeave(e);\n    });\n    this.events.register(this.swatchesContainer, 'click', function (e) {\n      return _this._handleClick(e);\n    });\n    this.events.register(this.swatchesContainer, 'change', function (e) {\n      return _this._handleChange(e);\n    });\n    this.events.register(this.swatchesContainer, 'focusin', function (e) {\n      return _this._handleSwatchFocus(e);\n    });\n  }\n\n  _createClass(GridItemSwatches, [{\n    key: \"disableUnavailable\",\n    value: function disableUnavailable() {\n      var _this2 = this;\n\n      if (!this.product) {\n        return;\n      }\n\n      var availableSwatches = {};\n      this.product.variants.forEach(function (variant) {\n        if (variant.available) {\n          availableSwatches[variant[_this2.data.swatchOptionKey]] = true;\n        }\n      });\n      var swatchInputs = this.swatchesContainer.querySelectorAll('input[name=\"swatch\"]');\n      swatchInputs.forEach(function (swatch) {\n        if (!(swatch.value in availableSwatches)) {\n          swatch.disabled = true;\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _this3 = this;\n\n      if (this.data.swatchesProductCardHover === 'on-hover') return;\n      if (this.expanded) this._toggleExpanded();\n      var availableWidth = this.swatchesContainer.getBoundingClientRect().width - parseInt(window.getComputedStyle(this.swatchesContainer).paddingRight, 10);\n      var newShowSwatchCount = this.swatches.length;\n      var cumulativeWidth = 0;\n\n      for (var i = 0; i < this.swatches.length; i++) {\n        if (cumulativeWidth + this.getSwatchGap() + this.swatchWidths[i] < availableWidth) {\n          cumulativeWidth += swatchGap + this.swatchWidths[i];\n        } else {\n          newShowSwatchCount = i;\n          break;\n        }\n      }\n\n      if (newShowSwatchCount === this.showSwatchCount) return;\n      this.showSwatchCount = newShowSwatchCount;\n      this.swatches.forEach(function (swatch, index) {\n        if (index < _this3.showSwatchCount) {\n          swatch.classList.add('productitem--swatches-swatch-visible');\n          swatch.classList.remove('productitem--swatches-swatch-hidden');\n        } else {\n          swatch.classList.remove('productitem--swatches-swatch-visible');\n          swatch.classList.add('productitem--swatches-swatch-hidden');\n        }\n      });\n      this.swatchCountButton.style.left = \"\".concat(cumulativeWidth, \"px\");\n\n      if (this.swatches.length > this.showSwatchCount) {\n        this.swatchCountButton.style.display = 'flex';\n        this.swatchCount.innerText = \"+\".concat(this.swatches.length - this.showSwatchCount);\n      } else {\n        this.swatchCountButton.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"_injectImages\",\n    value: function _injectImages() {\n      var _this4 = this;\n\n      this.events.unregister(this.injectImagesFocusinEvent);\n      this.events.unregister(this.injectImagesMouseoverEvent);\n      shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__[\"default\"].load(this.cardLinkHref, {\n        view: '_swatch-data'\n      }, {\n        hash: this.data.hash\n      }).then(function (_ref) {\n        var data = _ref.data;\n        if (_this4.imagesInjected) return;\n        _this4.imagesInjected = true;\n        var tempContainer = document.createDocumentFragment();\n\n        if (data.featuredImage) {\n          var tempEl = document.createElement('div');\n          tempEl.innerHTML = data.featuredImage;\n          var img = tempEl.querySelector('img');\n          tempContainer.appendChild(img);\n          _this4.featuredImage = img;\n        }\n\n        data.swatches.forEach(function (_ref2) {\n          var swatchValue = _ref2.swatchValue,\n              imageString = _ref2.imageString,\n              variantId = _ref2.variantId;\n          _this4.swatchVariantIds[swatchValue] = variantId;\n\n          if (imageString) {\n            var _tempEl = document.createElement('div');\n\n            _tempEl.innerHTML = imageString;\n\n            var _img = _tempEl.querySelector('img');\n\n            tempContainer.appendChild(_img);\n            _this4.swatchImages[swatchValue] = _img;\n          }\n        });\n\n        var imagesContainer = _this4.el.querySelector('[data-product-item-image]');\n\n        var salesBadge = imagesContainer.querySelector('[data-badge-sales]');\n        imagesContainer.insertBefore(tempContainer, salesBadge);\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].watch(imagesContainer);\n\n        _this4._setState({\n          swatchName: _this4.activeControl ? _this4.activeControl.value : null,\n          primaryImage: _this4.originalImages.primary,\n          hideAlternateImage: !!_this4.activeControl\n        });\n      });\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(_ref3) {\n      var swatchName = _ref3.swatchName,\n          primaryImage = _ref3.primaryImage,\n          hideAlternateImage = _ref3.hideAlternateImage;\n      var oldPrimaryImg = this.state.primaryImage;\n      var href = swatchName ? \"\".concat(this.cardLinkHref, \"?variant=\").concat(this.swatchVariantIds[swatchName]) : this.cardLinkHref;\n      this.cardLinks.forEach(function (link) {\n        return link.setAttribute('href', href);\n      });\n\n      if (this.productQuickshop) {\n        this.productQuickshop.setInitialVariant(this.swatchVariantIds[swatchName] || this.product.variants[0].id);\n      }\n\n      if (oldPrimaryImg) {\n        oldPrimaryImg.classList.remove('productitem--image-primary');\n        oldPrimaryImg.style.visibility = '';\n      }\n\n      if (primaryImage) {\n        primaryImage.classList.add('productitem--image-primary');\n        primaryImage.style.visibility = hideAlternateImage ? 'visible' : '';\n      }\n\n      if (this.originalImages.alternate) {\n        this.originalImages.alternate.style.visibility = hideAlternateImage ? 'hidden' : '';\n      }\n\n      this.state = {\n        swatchName: swatchName,\n        primaryImage: primaryImage,\n        hideAlternateImage: hideAlternateImage\n      };\n    }\n  }, {\n    key: \"_handleChange\",\n    value: function _handleChange(_ref4) {\n      var target = _ref4.target;\n      this.activeControlTime = Date.now();\n      this.activeControl = target;\n      var swatchName = target.value;\n      this.selectedImage = this.swatchImages[swatchName] || this.originalImages.primary;\n\n      this._setState({\n        swatchName: swatchName,\n        primaryImage: this.selectedImage,\n        hideAlternateImage: true\n      });\n    }\n  }, {\n    key: \"_handleClick\",\n    value: function _handleClick(_ref5) {\n      var target = _ref5.target;\n\n      if (target === this.activeControl && this.activeControlTime + 150 < Date.now()) {\n        // Allow deselection, if swatch has been active for more than the threshold\n        // because we can't guarantee the order of the click and change events\n        target.checked = false;\n        this.activeControl = null;\n        this.selectedImage = null; // Swaps in featured image if card was rendered on server with preselected swatch variant image.\n\n        if (this.isPreselected && this.featuredImage) {\n          this.originalImages.primary = this.featuredImage;\n          this.isPreselected = false;\n        }\n\n        this._setState({\n          swatchName: null,\n          primaryImage: this.state.primaryImage,\n          hideAlternateImage: true\n        });\n      }\n    }\n  }, {\n    key: \"_handleMouseOver\",\n    value: function _handleMouseOver(event) {\n      if (event.target.hasAttribute('data-swatch-tooltip')) {\n        this._setState({\n          swatchName: this.state.swatchName,\n          primaryImage: this.swatchImages[event.target.dataset.swatchTooltip] || this.originalImages.primary,\n          hideAlternateImage: true\n        });\n      }\n    }\n  }, {\n    key: \"_handleMouseLeave\",\n    value: function _handleMouseLeave(_ref6) {\n      var target = _ref6.target;\n\n      if (target.hasAttribute('data-swatches-container')) {\n        this._setState({\n          swatchName: this.state.swatchName,\n          primaryImage: this.selectedImage || this.originalImages.primary,\n          hideAlternateImage: !!this.selectedImage\n        });\n      }\n    }\n  }, {\n    key: \"_handleSwatchFocus\",\n    value: function _handleSwatchFocus(_ref7) {\n      var target = _ref7.target;\n\n      if (this.expanded === false && target.nextElementSibling.classList.contains('productitem--swatches-swatch-hidden')) {\n        this._toggleExpanded();\n      }\n    }\n  }, {\n    key: \"_toggleExpanded\",\n    value: function _toggleExpanded() {\n      var swatchesEl = this.el.querySelector('[data-swatches]');\n\n      if (this.expanded) {\n        this.expanded = false;\n        swatchesEl.classList.remove('productitem--swatches-expanded');\n        this.swatchCount.innerText = \"+\".concat(this.swatches.length - this.showSwatchCount);\n      } else {\n        this.expanded = true;\n        swatchesEl.classList.add('productitem--swatches-expanded');\n      }\n    } // Getters are used to avoid having to get these properties for every card on the page\n\n  }, {\n    key: \"getSwatchGap\",\n    value: function getSwatchGap() {\n      if (swatchGap === null) {\n        swatchGap = parseInt(window.getComputedStyle(this.swatches[0]).getPropertyValue('margin-right'), 10);\n      }\n\n      return swatchGap;\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.events.unregisterAll();\n    }\n  }]);\n\n  return GridItemSwatches;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/GridItemSwatches.js\n");

/***/ }),

/***/ "./source/scripts/components/MessageBanner.js":
/*!****************************************************!*\
  !*** ./source/scripts/components/MessageBanner.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MessageBanner; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar MessageBanner = /*#__PURE__*/function () {\n  function MessageBanner() {\n    var _this = this;\n\n    _classCallCheck(this, MessageBanner);\n\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.$document = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document);\n    this.$body = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body);\n    this.$bannerTemplate = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-templates] [data-message-banner]');\n    this.$banners = [];\n    this.header = document.querySelector('[data-site-header]');\n    this.events = [];\n    this.$document.on('touchstart.message-banner, click.message-banner', function (event) {\n      _this._handleDocumentClick(event.target);\n    });\n    this.$window.on('keydown.message-banner', function (event) {\n      return _this._closeEsc(event);\n    });\n  }\n\n  _createClass(MessageBanner, [{\n    key: \"unload\",\n    value: function unload() {\n      this.$document.off('touchstart.message-banner, click.message-banner');\n      this.$window.off('keydown.message-banner');\n    }\n  }, {\n    key: \"message\",\n    value: function message(_message, type) {\n      var $banner = this.$bannerTemplate.clone();\n      $banner.addClass(\"message--\".concat(type)).find('[data-message-banner-content]').html(_message);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.header).append($banner);\n\n      this._bindEvents($banner);\n\n      this._show($banner);\n    }\n  }, {\n    key: \"dismissBanners\",\n    value: function dismissBanners() {\n      var _this2 = this;\n\n      var $visibleBanners = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-message-banner]:visible');\n      $visibleBanners.each(function (index, banner) {\n        _this2._hide(jquery__WEBPACK_IMPORTED_MODULE_0___default()(banner), index);\n      });\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents($banner) {\n      var _this3 = this;\n\n      this.events.push([$banner.on('click.message-banner', '[data-message-banner-close]', function (event) {\n        event.preventDefault();\n\n        _this3._hide($banner);\n      }), this.$window.on('keydown.message-banner', function (e) {\n        if (e.key === 'Escape') {\n          _this3._hide($banner);\n        }\n      })]);\n    }\n  }, {\n    key: \"_closeEsc\",\n    value: function _closeEsc(e) {\n      if (e.key === 'Escape') {\n        this.dismissBanners();\n      }\n    }\n  }, {\n    key: \"_show\",\n    value: function _show($banner) {\n      this.$banners.push($banner);\n      $banner.addClass('animating animating-in').one('trend', function () {\n        $banner.removeClass('animating animating-in').addClass('visible').off('trend');\n      });\n    }\n  }, {\n    key: \"_hide\",\n    value: function _hide($banner) {\n      var _this4 = this;\n\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      $banner.addClass('animating animating-out').one('trend', function () {\n        $banner.removeClass('animating animating-out visible').off('trend');\n\n        _this4._removeBanner($banner, index);\n      });\n    }\n  }, {\n    key: \"_removeBanner\",\n    value: function _removeBanner($banner, index) {\n      if (this.events[index]) {\n        this.events[index].forEach(function ($el) {\n          return $el.off('.message-banner');\n        });\n        this.events.splice(index, 1);\n      }\n\n      this.$banners.splice(index, 1);\n      $banner.remove();\n    }\n  }, {\n    key: \"_handleDocumentClick\",\n    value: function _handleDocumentClick(target) {\n      var $parent = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).parents('[data-message-banner]');\n      if ($parent.length) return;\n      this.dismissBanners();\n    }\n  }]);\n\n  return MessageBanner;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL01lc3NhZ2VCYW5uZXIuanM/OGRkMyJdLCJuYW1lcyI6WyJNZXNzYWdlQmFubmVyIiwiJHdpbmRvdyIsIiQiLCJ3aW5kb3ciLCIkZG9jdW1lbnQiLCJkb2N1bWVudCIsIiRib2R5IiwiYm9keSIsIiRiYW5uZXJUZW1wbGF0ZSIsIiRiYW5uZXJzIiwiaGVhZGVyIiwicXVlcnlTZWxlY3RvciIsImV2ZW50cyIsIm9uIiwiZXZlbnQiLCJfaGFuZGxlRG9jdW1lbnRDbGljayIsInRhcmdldCIsIl9jbG9zZUVzYyIsIm9mZiIsIm1lc3NhZ2UiLCJ0eXBlIiwiJGJhbm5lciIsImNsb25lIiwiYWRkQ2xhc3MiLCJmaW5kIiwiaHRtbCIsImFwcGVuZCIsIl9iaW5kRXZlbnRzIiwiX3Nob3ciLCIkdmlzaWJsZUJhbm5lcnMiLCJlYWNoIiwiaW5kZXgiLCJiYW5uZXIiLCJfaGlkZSIsInB1c2giLCJwcmV2ZW50RGVmYXVsdCIsImUiLCJrZXkiLCJkaXNtaXNzQmFubmVycyIsIm9uZSIsInJlbW92ZUNsYXNzIiwiX3JlbW92ZUJhbm5lciIsImZvckVhY2giLCIkZWwiLCJzcGxpY2UiLCJyZW1vdmUiLCIkcGFyZW50IiwicGFyZW50cyIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOztJQUVxQkEsYTtBQUNuQiwyQkFBYztBQUFBOztBQUFBOztBQUNaLFNBQUtDLE9BQUwsR0FBZUMsNkNBQUMsQ0FBQ0MsTUFBRCxDQUFoQjtBQUNBLFNBQUtDLFNBQUwsR0FBaUJGLDZDQUFDLENBQUNHLFFBQUQsQ0FBbEI7QUFDQSxTQUFLQyxLQUFMLEdBQWFKLDZDQUFDLENBQUNHLFFBQVEsQ0FBQ0UsSUFBVixDQUFkO0FBQ0EsU0FBS0MsZUFBTCxHQUF1Qk4sNkNBQUMsQ0FBQyx3Q0FBRCxDQUF4QjtBQUNBLFNBQUtPLFFBQUwsR0FBZ0IsRUFBaEI7QUFFQSxTQUFLQyxNQUFMLEdBQWNMLFFBQVEsQ0FBQ00sYUFBVCxDQUF1QixvQkFBdkIsQ0FBZDtBQUNBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBRUEsU0FBS1IsU0FBTCxDQUFlUyxFQUFmLENBQWtCLGlEQUFsQixFQUFxRSxVQUFDQyxLQUFELEVBQVc7QUFDOUUsV0FBSSxDQUFDQyxvQkFBTCxDQUEwQkQsS0FBSyxDQUFDRSxNQUFoQztBQUNELEtBRkQ7QUFJQSxTQUFLZixPQUFMLENBQWFZLEVBQWIsQ0FBZ0Isd0JBQWhCLEVBQTBDLFVBQUFDLEtBQUs7QUFBQSxhQUFJLEtBQUksQ0FBQ0csU0FBTCxDQUFlSCxLQUFmLENBQUo7QUFBQSxLQUEvQztBQUNEOzs7OzZCQUVRO0FBQ1AsV0FBS1YsU0FBTCxDQUFlYyxHQUFmLENBQW1CLGlEQUFuQjtBQUNBLFdBQUtqQixPQUFMLENBQWFpQixHQUFiLENBQWlCLHdCQUFqQjtBQUNEOzs7NEJBRU9DLFEsRUFBU0MsSSxFQUFNO0FBQ3JCLFVBQU1DLE9BQU8sR0FBRyxLQUFLYixlQUFMLENBQXFCYyxLQUFyQixFQUFoQjtBQUVBRCxhQUFPLENBQ0pFLFFBREgsb0JBQ3dCSCxJQUR4QixHQUVHSSxJQUZILENBRVEsK0JBRlIsRUFHR0MsSUFISCxDQUdRTixRQUhSO0FBS0FqQixtREFBQyxDQUFDLEtBQUtRLE1BQU4sQ0FBRCxDQUFlZ0IsTUFBZixDQUFzQkwsT0FBdEI7O0FBQ0EsV0FBS00sV0FBTCxDQUFpQk4sT0FBakI7O0FBQ0EsV0FBS08sS0FBTCxDQUFXUCxPQUFYO0FBQ0Q7OztxQ0FFZ0I7QUFBQTs7QUFDZixVQUFNUSxlQUFlLEdBQUczQiw2Q0FBQyxDQUFDLCtCQUFELENBQXpCO0FBRUEyQixxQkFBZSxDQUFDQyxJQUFoQixDQUFxQixVQUFDQyxLQUFELEVBQVFDLE1BQVIsRUFBbUI7QUFDdEMsY0FBSSxDQUFDQyxLQUFMLENBQVcvQiw2Q0FBQyxDQUFDOEIsTUFBRCxDQUFaLEVBQXNCRCxLQUF0QjtBQUNELE9BRkQ7QUFHRDs7O2dDQUVXVixPLEVBQVM7QUFBQTs7QUFDbkIsV0FBS1QsTUFBTCxDQUFZc0IsSUFBWixDQUFpQixDQUNmYixPQUFPLENBQUNSLEVBQVIsQ0FBVyxzQkFBWCxFQUFtQyw2QkFBbkMsRUFBa0UsVUFBQ0MsS0FBRCxFQUFXO0FBQzNFQSxhQUFLLENBQUNxQixjQUFOOztBQUNBLGNBQUksQ0FBQ0YsS0FBTCxDQUFXWixPQUFYO0FBQ0QsT0FIRCxDQURlLEVBS2YsS0FBS3BCLE9BQUwsQ0FBYVksRUFBYixDQUFnQix3QkFBaEIsRUFBMEMsVUFBQ3VCLENBQUQsRUFBTztBQUMvQyxZQUFJQSxDQUFDLENBQUNDLEdBQUYsS0FBVSxRQUFkLEVBQXdCO0FBQ3RCLGdCQUFJLENBQUNKLEtBQUwsQ0FBV1osT0FBWDtBQUNEO0FBQ0YsT0FKRCxDQUxlLENBQWpCO0FBV0Q7Ozs4QkFFU2UsQyxFQUFHO0FBQ1gsVUFBSUEsQ0FBQyxDQUFDQyxHQUFGLEtBQVUsUUFBZCxFQUF3QjtBQUN0QixhQUFLQyxjQUFMO0FBQ0Q7QUFDRjs7OzBCQUVLakIsTyxFQUFTO0FBQ2IsV0FBS1osUUFBTCxDQUFjeUIsSUFBZCxDQUFtQmIsT0FBbkI7QUFFQUEsYUFBTyxDQUNKRSxRQURILENBQ1ksd0JBRFosRUFFR2dCLEdBRkgsQ0FFTyxPQUZQLEVBRWdCLFlBQU07QUFDbEJsQixlQUFPLENBQ0ptQixXQURILENBQ2Usd0JBRGYsRUFFR2pCLFFBRkgsQ0FFWSxTQUZaLEVBR0dMLEdBSEgsQ0FHTyxPQUhQO0FBSUQsT0FQSDtBQVFEOzs7MEJBRUtHLE8sRUFBb0I7QUFBQTs7QUFBQSxVQUFYVSxLQUFXLHVFQUFILENBQUc7QUFDeEJWLGFBQU8sQ0FDSkUsUUFESCxDQUNZLHlCQURaLEVBRUdnQixHQUZILENBRU8sT0FGUCxFQUVnQixZQUFNO0FBQ2xCbEIsZUFBTyxDQUNKbUIsV0FESCxDQUNlLGlDQURmLEVBRUd0QixHQUZILENBRU8sT0FGUDs7QUFHQSxjQUFJLENBQUN1QixhQUFMLENBQW1CcEIsT0FBbkIsRUFBNEJVLEtBQTVCO0FBQ0QsT0FQSDtBQVFEOzs7a0NBRWFWLE8sRUFBU1UsSyxFQUFPO0FBQzVCLFVBQUksS0FBS25CLE1BQUwsQ0FBWW1CLEtBQVosQ0FBSixFQUF3QjtBQUN0QixhQUFLbkIsTUFBTCxDQUFZbUIsS0FBWixFQUFtQlcsT0FBbkIsQ0FBMkIsVUFBQUMsR0FBRztBQUFBLGlCQUFJQSxHQUFHLENBQUN6QixHQUFKLENBQVEsaUJBQVIsQ0FBSjtBQUFBLFNBQTlCO0FBQ0EsYUFBS04sTUFBTCxDQUFZZ0MsTUFBWixDQUFtQmIsS0FBbkIsRUFBMEIsQ0FBMUI7QUFDRDs7QUFFRCxXQUFLdEIsUUFBTCxDQUFjbUMsTUFBZCxDQUFxQmIsS0FBckIsRUFBNEIsQ0FBNUI7QUFDQVYsYUFBTyxDQUFDd0IsTUFBUjtBQUNEOzs7eUNBRW9CN0IsTSxFQUFRO0FBQzNCLFVBQU04QixPQUFPLEdBQUc1Qyw2Q0FBQyxDQUFDYyxNQUFELENBQUQsQ0FBVStCLE9BQVYsQ0FBa0IsdUJBQWxCLENBQWhCO0FBQ0EsVUFBSUQsT0FBTyxDQUFDRSxNQUFaLEVBQW9CO0FBRXBCLFdBQUtWLGNBQUw7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NvbXBvbmVudHMvTWVzc2FnZUJhbm5lci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lc3NhZ2VCYW5uZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLiR3aW5kb3cgPSAkKHdpbmRvdyk7XG4gICAgdGhpcy4kZG9jdW1lbnQgPSAkKGRvY3VtZW50KTtcbiAgICB0aGlzLiRib2R5ID0gJChkb2N1bWVudC5ib2R5KTtcbiAgICB0aGlzLiRiYW5uZXJUZW1wbGF0ZSA9ICQoJ1tkYXRhLXRlbXBsYXRlc10gW2RhdGEtbWVzc2FnZS1iYW5uZXJdJyk7XG4gICAgdGhpcy4kYmFubmVycyA9IFtdO1xuXG4gICAgdGhpcy5oZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zaXRlLWhlYWRlcl0nKTtcbiAgICB0aGlzLmV2ZW50cyA9IFtdO1xuXG4gICAgdGhpcy4kZG9jdW1lbnQub24oJ3RvdWNoc3RhcnQubWVzc2FnZS1iYW5uZXIsIGNsaWNrLm1lc3NhZ2UtYmFubmVyJywgKGV2ZW50KSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVEb2N1bWVudENsaWNrKGV2ZW50LnRhcmdldCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLiR3aW5kb3cub24oJ2tleWRvd24ubWVzc2FnZS1iYW5uZXInLCBldmVudCA9PiB0aGlzLl9jbG9zZUVzYyhldmVudCkpO1xuICB9XG5cbiAgdW5sb2FkKCkge1xuICAgIHRoaXMuJGRvY3VtZW50Lm9mZigndG91Y2hzdGFydC5tZXNzYWdlLWJhbm5lciwgY2xpY2subWVzc2FnZS1iYW5uZXInKTtcbiAgICB0aGlzLiR3aW5kb3cub2ZmKCdrZXlkb3duLm1lc3NhZ2UtYmFubmVyJyk7XG4gIH1cblxuICBtZXNzYWdlKG1lc3NhZ2UsIHR5cGUpIHtcbiAgICBjb25zdCAkYmFubmVyID0gdGhpcy4kYmFubmVyVGVtcGxhdGUuY2xvbmUoKTtcblxuICAgICRiYW5uZXJcbiAgICAgIC5hZGRDbGFzcyhgbWVzc2FnZS0tJHt0eXBlfWApXG4gICAgICAuZmluZCgnW2RhdGEtbWVzc2FnZS1iYW5uZXItY29udGVudF0nKVxuICAgICAgLmh0bWwobWVzc2FnZSk7XG5cbiAgICAkKHRoaXMuaGVhZGVyKS5hcHBlbmQoJGJhbm5lcik7XG4gICAgdGhpcy5fYmluZEV2ZW50cygkYmFubmVyKTtcbiAgICB0aGlzLl9zaG93KCRiYW5uZXIpO1xuICB9XG5cbiAgZGlzbWlzc0Jhbm5lcnMoKSB7XG4gICAgY29uc3QgJHZpc2libGVCYW5uZXJzID0gJCgnW2RhdGEtbWVzc2FnZS1iYW5uZXJdOnZpc2libGUnKTtcblxuICAgICR2aXNpYmxlQmFubmVycy5lYWNoKChpbmRleCwgYmFubmVyKSA9PiB7XG4gICAgICB0aGlzLl9oaWRlKCQoYmFubmVyKSwgaW5kZXgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2JpbmRFdmVudHMoJGJhbm5lcikge1xuICAgIHRoaXMuZXZlbnRzLnB1c2goW1xuICAgICAgJGJhbm5lci5vbignY2xpY2subWVzc2FnZS1iYW5uZXInLCAnW2RhdGEtbWVzc2FnZS1iYW5uZXItY2xvc2VdJywgKGV2ZW50KSA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuX2hpZGUoJGJhbm5lcik7XG4gICAgICB9KSxcbiAgICAgIHRoaXMuJHdpbmRvdy5vbigna2V5ZG93bi5tZXNzYWdlLWJhbm5lcicsIChlKSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICB0aGlzLl9oaWRlKCRiYW5uZXIpO1xuICAgICAgICB9XG4gICAgICB9KSxcbiAgICBdKTtcbiAgfVxuXG4gIF9jbG9zZUVzYyhlKSB7XG4gICAgaWYgKGUua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgdGhpcy5kaXNtaXNzQmFubmVycygpO1xuICAgIH1cbiAgfVxuXG4gIF9zaG93KCRiYW5uZXIpIHtcbiAgICB0aGlzLiRiYW5uZXJzLnB1c2goJGJhbm5lcik7XG5cbiAgICAkYmFubmVyXG4gICAgICAuYWRkQ2xhc3MoJ2FuaW1hdGluZyBhbmltYXRpbmctaW4nKVxuICAgICAgLm9uZSgndHJlbmQnLCAoKSA9PiB7XG4gICAgICAgICRiYW5uZXJcbiAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ2FuaW1hdGluZyBhbmltYXRpbmctaW4nKVxuICAgICAgICAgIC5hZGRDbGFzcygndmlzaWJsZScpXG4gICAgICAgICAgLm9mZigndHJlbmQnKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgX2hpZGUoJGJhbm5lciwgaW5kZXggPSAwKSB7XG4gICAgJGJhbm5lclxuICAgICAgLmFkZENsYXNzKCdhbmltYXRpbmcgYW5pbWF0aW5nLW91dCcpXG4gICAgICAub25lKCd0cmVuZCcsICgpID0+IHtcbiAgICAgICAgJGJhbm5lclxuICAgICAgICAgIC5yZW1vdmVDbGFzcygnYW5pbWF0aW5nIGFuaW1hdGluZy1vdXQgdmlzaWJsZScpXG4gICAgICAgICAgLm9mZigndHJlbmQnKTtcbiAgICAgICAgdGhpcy5fcmVtb3ZlQmFubmVyKCRiYW5uZXIsIGluZGV4KTtcbiAgICAgIH0pO1xuICB9XG5cbiAgX3JlbW92ZUJhbm5lcigkYmFubmVyLCBpbmRleCkge1xuICAgIGlmICh0aGlzLmV2ZW50c1tpbmRleF0pIHtcbiAgICAgIHRoaXMuZXZlbnRzW2luZGV4XS5mb3JFYWNoKCRlbCA9PiAkZWwub2ZmKCcubWVzc2FnZS1iYW5uZXInKSk7XG4gICAgICB0aGlzLmV2ZW50cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cblxuICAgIHRoaXMuJGJhbm5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAkYmFubmVyLnJlbW92ZSgpO1xuICB9XG5cbiAgX2hhbmRsZURvY3VtZW50Q2xpY2sodGFyZ2V0KSB7XG4gICAgY29uc3QgJHBhcmVudCA9ICQodGFyZ2V0KS5wYXJlbnRzKCdbZGF0YS1tZXNzYWdlLWJhbm5lcl0nKTtcbiAgICBpZiAoJHBhcmVudC5sZW5ndGgpIHJldHVybjtcblxuICAgIHRoaXMuZGlzbWlzc0Jhbm5lcnMoKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/MessageBanner.js\n");

/***/ }),

/***/ "./source/scripts/components/Modal.js":
/*!********************************************!*\
  !*** ./source/scripts/components/Modal.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Modal; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var vanilla_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vanilla-modal */ \"./node_modules/vanilla-modal/dist/index.js\");\n/* harmony import */ var vanilla_modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(vanilla_modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shopify/theme-a11y */ \"./node_modules/@shopify/theme-a11y/theme-a11y.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar Modal = /*#__PURE__*/function () {\n  function Modal() {\n    var callbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Modal);\n\n    this.$body = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body);\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.modal = null;\n    this.$modal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-modal-container]');\n    this.$modalInner = this.$modal.find('[data-modal-inner]');\n    this.trigger = null; // Extend default vanilla-modal callbacks back to instantiator of Modal\n\n    this.defaultCallbacks = {\n      onOpen: function onOpen() {},\n      onClose: function onClose() {},\n      onBeforeOpen: function onBeforeOpen() {},\n      onBeforeClose: function onBeforeClose() {}\n    };\n    this.callbacks = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend({}, this.defaultCallbacks, callbacks);\n    this._onOpen = this._onOpen.bind(this);\n    this._onBeforeOpen = this._onBeforeOpen.bind(this);\n    this._onClose = this._onClose.bind(this);\n    this._onBeforeClose = this._onBeforeClose.bind(this);\n    this._closeEsc = this._closeEsc.bind(this);\n    this.position = this.position.bind(this);\n    this.modalOptions = {\n      loadClass: '',\n      class: 'modal-loaded',\n      onOpen: this._onOpen,\n      onClose: this._onClose,\n      onBeforeOpen: this._onBeforeOpen,\n      onBeforeClose: this._onBeforeClose,\n      transitions: false\n    };\n  }\n\n  _createClass(Modal, [{\n    key: \"unload\",\n    value: function unload() {\n      if (!this.modal || !this.modal.isOpen) return;\n      this.modal.destroy();\n    }\n    /**\n     * Open a modal with contents from selector\n     *\n     * @param selector\n     * @param handle\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(selector) {\n      var handle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'general';\n      var trigger = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      this._addModalClass(handle);\n\n      this.modal = new vanilla_modal__WEBPACK_IMPORTED_MODULE_2___default.a(this.modalOptions);\n      this.modal.open(selector);\n      this.trigger = trigger;\n      window.addEventListener('keydown', this.closeEsc);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.modal.close();\n      window.removeEventListener('keydown', this.closeEsc);\n    }\n  }, {\n    key: \"_closeEsc\",\n    value: function _closeEsc(e) {\n      if (e.key === 'Escape') {\n        this.close();\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this.modal && this.modal.isOpen;\n    }\n    /**\n     * Update the vertical positioning of modal\n     */\n\n  }, {\n    key: \"position\",\n    value: function position() {\n      var windowHeight = window.innerHeight;\n      var modalHeight = this.$modalInner.outerHeight();\n      var modalPadding = parseInt(this.$modal.css('padding-top'), 10) * 2;\n      var offset = (windowHeight - modalPadding - modalHeight) / 2;\n      var marginTop = offset > 0 ? offset : 0;\n      this.$modalInner.css({\n        marginTop: marginTop\n      });\n    }\n    /**\n     * Add a class to the modal for individual styling\n     * @param handle\n     * @private\n     */\n\n  }, {\n    key: \"_addModalClass\",\n    value: function _addModalClass(handle) {\n      this.$modal.addClass(\"modal--\".concat(handle));\n    }\n    /**\n     * Remove modal class based on the handle\n     * @private\n     */\n\n  }, {\n    key: \"_removeModalClass\",\n    value: function _removeModalClass() {\n      var modalClass = this.$modal.attr('class').match(/modal--[\\w-]*\\b/);\n\n      if (!modalClass) {\n        return;\n      }\n\n      this.$modal.removeClass(modalClass[0]);\n    }\n  }, {\n    key: \"_onClose\",\n    value: function _onClose() {\n      this._removeModalClass();\n\n      this.$body.removeClass('scroll-lock').removeClass('modal-visible');\n      this.$window.off('resize.modal');\n      this.$modalInner.css({\n        marginTop: ''\n      });\n      this.callbacks.onClose();\n      Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_3__[\"removeTrapFocus\"])(this.$modal[0]);\n\n      if (this.activeElement) {\n        this.activeElement.focus();\n      }\n    }\n  }, {\n    key: \"_onOpen\",\n    value: function _onOpen() {\n      var _this = this;\n\n      this.activeElement = document.activeElement;\n      this.position();\n      this.$body.addClass('scroll-lock').addClass('modal-visible');\n      this.$window.on('resize.modal', just_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n        return _this.position();\n      }, 16, true, true));\n      this.callbacks.onOpen();\n      Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_3__[\"trapFocus\"])(this.$modal[0]);\n    }\n  }, {\n    key: \"_onBeforeClose\",\n    value: function _onBeforeClose() {\n      this.callbacks.onBeforeClose();\n    }\n  }, {\n    key: \"_onBeforeOpen\",\n    value: function _onBeforeOpen() {\n      this.callbacks.onBeforeOpen();\n    }\n  }]);\n\n  return Modal;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/Modal.js\n");

/***/ }),

/***/ "./source/scripts/components/ProductClickToZoom.js":
/*!*********************************************************!*\
  !*** ./source/scripts/components/ProductClickToZoom.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductClicktoZoom; });\n/* harmony import */ var photoswipe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! photoswipe */ \"./node_modules/photoswipe/dist/photoswipe.js\");\n/* harmony import */ var photoswipe__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(photoswipe__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/events */ \"./node_modules/@pixelunion/events/dist/EventHandler.js\");\n/* harmony import */ var _pixelunion_events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var _shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shopify/theme-a11y */ \"./node_modules/@shopify/theme-a11y/theme-a11y.js\");\n/* harmony import */ var photoswipe_dist_photoswipe_ui_default__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! photoswipe/dist/photoswipe-ui-default */ \"./node_modules/photoswipe/dist/photoswipe-ui-default.js\");\n/* harmony import */ var photoswipe_dist_photoswipe_ui_default__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(photoswipe_dist_photoswipe_ui_default__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Layout */ \"./source/scripts/Layout.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar ProductClicktoZoom = /*#__PURE__*/function () {\n  function ProductClicktoZoom(_ref) {\n    var _this = this;\n\n    var settings = _ref.settings,\n        slides = _ref.slides,\n        originalThumbnails = _ref.originalThumbnails,\n        startIndex = _ref.startIndex,\n        selectGalleryIndex = _ref.selectGalleryIndex;\n\n    _classCallCheck(this, ProductClicktoZoom);\n\n    this.settings = settings;\n    this.photoswipeDialog = document.querySelector('[data-photoswipe]');\n    this.thumbContainer = this.photoswipeDialog.querySelector('[data-photoswipe-thumbs]');\n    this.thumbScroller = this.photoswipeDialog.querySelector('[data-photoswipe-thumb-scroller]');\n    this.thumbScrollerButtons = this.photoswipeDialog.querySelectorAll('[data-gallery-scroll-button]');\n    this.closeButton = this.photoswipeDialog.querySelector('.pswp__button--close');\n    this.selectedSlide = slides[startIndex];\n    this.thumbScroller.innerHTML = '';\n    this.thumbnails = [];\n    var selectedIndex = startIndex; // Clone the original thumbnails into the photoswipe dialog\n\n    originalThumbnails.forEach(function (thumb, thumbIndex) {\n      if (thumb.dataset.mediaType !== 'image') {\n        if (startIndex > thumbIndex) selectedIndex--;\n        return;\n      }\n\n      var newThumb = thumb.cloneNode(true);\n\n      _this.thumbScroller.appendChild(newThumb);\n\n      _this.thumbnails.push(newThumb);\n    });\n    rimg_shopify__WEBPACK_IMPORTED_MODULE_2__[\"default\"].watch(this.thumbContainer);\n    this.selectedThumb = this.thumbContainer.querySelector('[data-gallery-selected=\"true\"]');\n    this.events = new _pixelunion_events__WEBPACK_IMPORTED_MODULE_1___default.a(); // Set up options for initializing PhotoSwipe\n\n    var photoswipeSlides = [];\n    slides.forEach(function (slide) {\n      if (['video', 'external_video', 'model'].indexOf(slide.dataset.mediaType) > -1) return;\n      photoswipeSlides.push({\n        src: slide.dataset.zoom,\n        msrc: slide.dataset.zoom,\n        h: slide.dataset.imageHeight,\n        w: slide.dataset.imageWidth\n      });\n    }); // Adjust the bottom bar height to allow for the mobile thumbnails\n\n    var bottomBarHeight = _Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isGreaterThanBreakpoint('L', true) ? 0 : 75;\n    var photoswipeOptions = {\n      index: selectedIndex,\n      barsSize: {\n        top: 0,\n        bottom: bottomBarHeight\n      },\n      fullscreenEl: false,\n      zoomEl: false,\n      shareEl: false,\n      counterEl: false,\n      arrowEl: false,\n      preloaderEl: false,\n      closeOnScroll: false,\n      showHideOpacity: true,\n      history: false,\n      loop: true,\n      clickToCloseNonZoomable: false,\n      timeToIdle: false,\n      timeToIdleOutside: false\n    };\n\n    if (this.settings.click_to_zoom === 'always' || _Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isGreaterThanBreakpoint('S', true) && this.settings.click_to_zoom === 'desktop' || _Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isLessThanBreakpoint('S') && this.settings.click_to_zoom === 'mobile') {\n      photoswipeOptions.getThumbBoundsFn = function () {\n        var pageYScroll = window.pageYOffset || document.documentElement.scrollTop;\n\n        var bounds = _this.selectedSlide.querySelector('[data-rimg]').getBoundingClientRect();\n\n        return {\n          x: bounds.left,\n          y: bounds.top + pageYScroll,\n          w: bounds.width\n        };\n      };\n    }\n\n    this.photoswipe = new photoswipe__WEBPACK_IMPORTED_MODULE_0___default.a(this.photoswipeDialog, photoswipe_dist_photoswipe_ui_default__WEBPACK_IMPORTED_MODULE_4___default.a, photoswipeSlides, photoswipeOptions);\n    this.events.register(this.closeButton, 'click', function () {\n      return _this.photoswipe.close();\n    }); // The following fixes an issue on iOS12 and below, where click events were not registering\n\n    this.events.register(this.closeButton, 'touchstart', function () {\n      return _this.photoswipe.close();\n    });\n    this.thumbnails.forEach(function (thumb, index) {\n      _this.events.register(thumb, 'click', function () {\n        _this.photoswipe.goTo(index);\n      });\n    });\n    this.events.register(this.thumbScroller, 'scroll', function () {\n      return _this._handleScrollButtonVisibility();\n    });\n    this.events.register(this.thumbScrollerButtons[0], 'click', function () {\n      return _this._onScrollButtonClick(true);\n    });\n    this.events.register(this.thumbScrollerButtons[1], 'click', function () {\n      return _this._onScrollButtonClick(false);\n    }); // Photoswipe documentation claims that the closeOnVerticalDrag option is always false if\n    // the mouse is used, which is what we want. Unfortunately that's not how it actually works,\n    // so we need to dynamically update the setting when a mouse is detected.\n\n    if (this.photoswipe.options.mouseUsed) {\n      this.photoswipe.options.closeOnVerticalDrag = false;\n    } else {\n      this.photoswipe.listen('mouseUsed', function () {\n        _this.photoswipe.options.closeOnVerticalDrag = false;\n      });\n    }\n\n    this.photoswipe.listen('afterChange', function () {\n      var index = _this.photoswipe.getCurrentIndex();\n\n      if (_this.selectedThumb) {\n        _this.selectedThumb.dataset.gallerySelected = false;\n      }\n\n      _this.selectedThumb = _this.thumbnails[index];\n      _this.selectedThumb.dataset.gallerySelected = true;\n\n      var slideIndex = _this.selectedThumb.getAttribute('data-gallery-index');\n\n      var slide = slides[slideIndex];\n\n      _this._adjustMobileThumbPosition();\n\n      _this._handleScrollButtonVisibility();\n\n      selectGalleryIndex(slideIndex);\n      _this.selectedSlide = slide;\n    });\n    this.photoswipe.listen('close', function () {\n      Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_3__[\"removeTrapFocus\"])(_this.photoswipeDialog);\n\n      _this.selectedSlide.focus();\n\n      _this.photoswipe = null;\n    });\n    this.photoswipe.listen('destroy', function () {\n      _this.events.unregisterAll();\n\n      _this.photoswipe = null;\n    }); // Detect if mouse is over the thumbnails, if it is allow scroll left/right\n\n    this.events.register(this.thumbContainer, 'mouseenter', function () {\n      if (_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isLessThanBreakpoint('S')) {\n        _this.photoswipe.options.closeOnScroll = true;\n      }\n    });\n    this.events.register(this.thumbContainer, 'mouseleave', function () {\n      if (_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isLessThanBreakpoint('S')) {\n        _this.photoswipe.options.closeOnScroll = false;\n      }\n    }); // If a user closes the dialog using the escape key, then we should focus\n    // on the expand button.\n\n    var closeEsc = function closeEsc(e) {\n      if (e.key === 'Escape') {\n        slides[0].parentNode.querySelector('[data-gallery-expand]').focus();\n      }\n    };\n\n    this.events.register(window, 'keydown', function (e) {\n      return closeEsc(e);\n    });\n    this.photoswipe.init();\n    Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_3__[\"trapFocus\"])(this.photoswipeDialog);\n  }\n\n  _createClass(ProductClicktoZoom, [{\n    key: \"_adjustMobileThumbPosition\",\n    value: function _adjustMobileThumbPosition() {\n      // This brings the thumbnail into view if it is not visible on the screen after\n      // a user swipes to a slide that it is tied to.\n      if (_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isLessThanBreakpoint('S')) {\n        var thumbBounds = this.selectedThumb.getBoundingClientRect();\n        var thumbWrapperBounds = this.thumbScroller.getBoundingClientRect();\n\n        if (thumbBounds.left + thumbBounds.width + 30 > thumbWrapperBounds.width) {\n          this.thumbScroller.scrollLeft = this.selectedThumb.offsetLeft + thumbBounds.width - thumbWrapperBounds.width + 35;\n        } else if (this.selectedThumb.offsetLeft < this.thumbScroller.scrollLeft) {\n          this.thumbScroller.scrollLeft = this.selectedThumb.offsetLeft - 35;\n        }\n      }\n    }\n  }, {\n    key: \"_handleScrollButtonVisibility\",\n    value: function _handleScrollButtonVisibility() {\n      if (_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isLessThanBreakpoint('S')) {\n        // We use 4px here just to ensure the user has scrolled a little bit before\n        // showing the buttons.\n        if (this.thumbScroller.scrollLeft > 4) {\n          this.thumbScrollerButtons[0].classList.add('visible');\n        } else {\n          this.thumbScrollerButtons[0].classList.remove('visible');\n        }\n\n        if (this.thumbScroller.scrollLeft < this.thumbScroller.scrollWidth - this.thumbScroller.clientWidth) {\n          this.thumbScrollerButtons[1].classList.add('visible');\n        } else {\n          this.thumbScrollerButtons[1].classList.remove('visible');\n        }\n      } else {\n        this.thumbScrollerButtons[0].classList.remove('visible');\n        this.thumbScrollerButtons[1].classList.remove('visible');\n      }\n    }\n  }, {\n    key: \"_onScrollButtonClick\",\n    value: function _onScrollButtonClick(scrollRight) {\n      if (scrollRight) {\n        this.thumbScroller.scrollLeft = this.thumbScroller.scrollLeft - 100;\n      } else {\n        this.thumbScroller.scrollLeft = this.thumbScroller.scrollLeft + 100;\n      }\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      if (this.photoswipe) {\n        this.photoswipe.destroy();\n        this.photoswipe = null;\n      }\n    }\n  }]);\n\n  return ProductClicktoZoom;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/ProductClickToZoom.js\n");

/***/ }),

/***/ "./source/scripts/components/ProductDetails.js":
/*!*****************************************************!*\
  !*** ./source/scripts/components/ProductDetails.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductDetails; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var shopify_variants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shopify-variants */ \"./node_modules/shopify-variants/dist/shopify-variants.es.js\");\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\n/* harmony import */ var _AddToCartFlyout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AddToCartFlyout */ \"./source/scripts/components/AddToCartFlyout.js\");\n/* harmony import */ var _ProductGallery__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ProductGallery */ \"./source/scripts/components/ProductGallery.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar ProductDetails = /*#__PURE__*/function () {\n  function ProductDetails(options) {\n    _classCallCheck(this, ProductDetails);\n\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.$formArea = options.$formArea;\n    this.$details = options.$details;\n    this.context = options.context;\n    this.settings = options.settings;\n    this.product = options.product;\n    this.useHistory = options.useHistory;\n    this.variantHelper = null;\n    this.atcCallbacks = options.atcCallbacks; // Form\n\n    this.$form = this.$formArea.find('[data-product-form]');\n    this.$productAtcButton = this.$formArea.find('[data-product-atc]');\n    this.$productVariants = this.$form.find('[data-variants]');\n    this.$productOptions = this.$form.find('[data-product-option]');\n    this.detailsLink = this.$formArea[0].querySelector('[data-product-details-link]');\n    this.inStockNotificationForm = this.$formArea[0].querySelector('[data-in-stock-notification-form]');\n\n    if (this.detailsLink) {\n      this.detailsBaseHref = this.detailsLink.getAttribute('href');\n    }\n\n    this.variantFields = {\n      $price: this.$details.find('[data-price]'),\n      $priceMoney: this.$details.find('[data-price] .money'),\n      $compareAtPrice: this.$details.find('[data-price-compare-at]'),\n      $compareAtPriceMoney: this.$details.find('[data-price-compare-at] .money'),\n      $badge: this.$details.find('[data-badge-sales]'),\n      $badgeMoneySaved: this.$details.find('[data-price-money-saved]'),\n      $badgePercentSaved: this.$details.find('[data-price-percent-saved]'),\n      $stockLevel: this.$formArea.find('[data-stock-level]'),\n      $sku: this.$details.find('[data-product-sku]'),\n      unitPrice: this.$details[0].querySelector('[data-unit-price]'),\n      totalQuantity: this.$details[0].querySelector('[data-total-quantity]'),\n      unitPriceAmount: this.$details[0].querySelector('[data-unit-price-amount]'),\n      unitPriceMeasure: this.$details[0].querySelector('[data-unit-price-measure]'),\n      taxLine: this.$details[0].querySelector('[data-tax-line]')\n    };\n    this.forms = new _Forms__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.$form);\n\n    if (this.inStockNotificationForm) {\n      this.inStockForm = new _Forms__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.inStockNotificationForm);\n    }\n\n    if (this.product && this.product.media.length) {\n      this.gallery = new _ProductGallery__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n        el: options.gallery,\n        settings: this.settings,\n        isQuickshop: options.isQuickshop,\n        models: options.models\n      });\n    }\n\n    this._bindEvents();\n\n    this._initOptions();\n  }\n\n  _createClass(ProductDetails, [{\n    key: \"onQuickshopOpen\",\n    value: function onQuickshopOpen() {\n      this.gallery.onQuickshopOpen();\n    }\n  }, {\n    key: \"unloadAllMedia\",\n    value: function unloadAllMedia() {\n      if (this.gallery) {\n        this.gallery.unloadAllMedia();\n      }\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.$form.off(\".product-details-\".concat(this.settings.section_id));\n      this.$window.off(\".product-details-\".concat(this.settings.section_id));\n      this.forms.unload();\n\n      if (this.inStockForm) {\n        this.inStockForm.unload();\n      }\n\n      if (this.variantHelper) {\n        this.variantHelper.unload();\n      }\n\n      if (this.gallery) {\n        this.gallery.unload();\n      }\n    }\n  }, {\n    key: \"selectVariant\",\n    value: function selectVariant(variantId) {\n      if (variantId) {\n        this.variantHelper.selectVariant(variantId);\n      }\n\n      this.gallery.updateSlideHeight();\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this = this;\n\n      this.$productOptions.on(\"focus.product-details-\".concat(this.settings.section_id), function () {\n        _this.activeElement = document.activeElement;\n      });\n      this.$window.on(\"shopify-variants:switch-variant.product-details-\".concat(this.settings.section_id), function (event, data) {\n        return _this._switchVariant(event, data);\n      });\n      this.$form.on(\"submit.product-details-\".concat(this.settings.section_id), function (event) {\n        return _this._AddToCartFlyout(event);\n      });\n    }\n  }, {\n    key: \"_initOptions\",\n    value: function _initOptions() {\n      if (!this.$productVariants.length) return;\n      this.variantHelper = new shopify_variants__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.product, this.$productVariants, this.$productOptions, {\n        mixedControls: true\n      });\n    }\n  }, {\n    key: \"_switchVariant\",\n    value: function _switchVariant(event, data) {\n      if (data.product !== this.product) return;\n      var variant = data.variant;\n      var firstLoad = data.firstLoad;\n\n      if (firstLoad) {\n        return;\n      } // Refocus the active element (Shopify Variants causes element to lose focus)\n\n\n      if (this.activeElement) {\n        this.activeElement.focus();\n      } // Update main select\n\n\n      this.$productVariants.val(data.variant.id);\n      this.gallery.selectMediaByVariant(variant); // Update Variant information\n\n      this._updatePrice({\n        price: variant.price,\n        compare_at_price: variant.compare_at_price\n      });\n\n      this._updateSKU(variant);\n\n      this._updateBadge(variant);\n\n      this._updateStockLevel(variant);\n\n      this._updateButton(variant);\n\n      this._updateSwatchLabel(variant);\n\n      this._updateFullDetailsLink(variant);\n\n      this._updateUnitPrice(variant);\n\n      if (this.useHistory) {\n        var url = \"\".concat(this.product.handle, \"?\").concat(jquery__WEBPACK_IMPORTED_MODULE_0___default.a.param({\n          variant: variant.id\n        }));\n        history.replaceState({}, 'variant', url);\n      }\n    }\n  }, {\n    key: \"_updatePrice\",\n    value: function _updatePrice(price) {\n      // Update compare at price\n      var hasComparePrice = !!price.compare_at_price && price.compare_at_price > price.price;\n      this.variantFields.$compareAtPrice.toggleClass('visible', hasComparePrice);\n      this.variantFields.$compareAtPriceMoney.text(Shopify.formatMoney(price.compare_at_price, this.settings.money_format)); // Update price\n\n      this.variantFields.$priceMoney.text(Shopify.formatMoney(price.price, this.settings.money_format));\n    }\n  }, {\n    key: \"_updateSKU\",\n    value: function _updateSKU(variant) {\n      if (variant.sku === '') {\n        this.variantFields.$sku.parent().addClass('product-sku--empty');\n      } else {\n        this.variantFields.$sku.parent().removeClass('product-sku--empty');\n      }\n\n      this.variantFields.$sku.text(variant.sku);\n    }\n  }, {\n    key: \"_updateBadge\",\n    value: function _updateBadge(variant) {\n      var priceSaved = variant.compare_at_price ? variant.compare_at_price - variant.price : 0;\n      this.variantFields.$badge.toggle(!!priceSaved);\n\n      if (this.variantFields.$badgeMoneySaved.length) {\n        // Update badge if it shows money saved\n        this.variantFields.$badgeMoneySaved[0].innerHTML = Shopify.formatMoney(priceSaved, this.settings.money_format);\n      }\n\n      if (this.variantFields.$badgePercentSaved.length) {\n        // Update badge if it shows percentiles\n        var percentileSaved = Math.round(priceSaved * 100 / variant.compare_at_price);\n        this.variantFields.$badgePercentSaved.text(percentileSaved);\n      }\n    }\n  }, {\n    key: \"_updateStockLevel\",\n    value: function _updateStockLevel(variant) {\n      var _this2 = this;\n\n      if (!this.settings.enableStockBadge) return;\n      var url = window.location.pathname;\n\n      if (!url.includes('/products')) {\n        url = \"\".concat(url, \"/products/\").concat(this.product.handle);\n      }\n\n      var params = {\n        view: '_stock-level',\n        variant: variant.id\n      };\n\n      if (variant.inventory_management === null) {\n        this.variantFields.$stockLevel.html('');\n      } else {\n        shopify_asyncview__WEBPACK_IMPORTED_MODULE_1__[\"default\"].load(url, params).then(function (_ref) {\n          var html = _ref.html,\n              data = _ref.data;\n          var fragment = document.createElement('div');\n          fragment.innerHTML = html.stockLevel;\n          var replacement = fragment.querySelector('.product--stock-level');\n\n          _this2.variantFields.$stockLevel.html(replacement);\n        });\n      }\n    }\n  }, {\n    key: \"_updateButton\",\n    value: function _updateButton(variant) {\n      if (variant.available) {\n        this.$productAtcButton.text(this.context.product_available);\n        this.$productAtcButton.removeClass('disabled').prop('disabled', false);\n      } else {\n        this.$productAtcButton.text(this.context.product_unavailable);\n        this.$productAtcButton.addClass('disabled').prop('disabled', true);\n      }\n    }\n  }, {\n    key: \"_updateSwatchLabel\",\n    value: function _updateSwatchLabel(variant) {\n      if (this.settings.enableSwatches) {\n        var swatchLabel = this.$form[0].querySelector('[data-option-swatch-value]');\n\n        if (swatchLabel) {\n          swatchLabel.innerText = variant.options[parseInt(swatchLabel.dataset.optionSwatchValue, 10)];\n        }\n      }\n    }\n  }, {\n    key: \"_updateFullDetailsLink\",\n    value: function _updateFullDetailsLink(variant) {\n      if (this.detailsLink) {\n        this.detailsLink.setAttribute('href', \"\".concat(this.detailsBaseHref, \"?variant=\").concat(variant.id));\n      }\n    }\n  }, {\n    key: \"_updateUnitPrice\",\n    value: function _updateUnitPrice(variant) {\n      if (this.variantFields.unitPrice && variant.unit_price_measurement) {\n        this.variantFields.totalQuantity.innerHTML = \"\".concat(variant.unit_price_measurement.quantity_value).concat(variant.unit_price_measurement.quantity_unit);\n        this.variantFields.unitPriceAmount.innerHTML = Shopify.formatMoney(variant.unit_price, this.settings.money_format);\n\n        if (variant.unit_price_measurement.reference_value === 1) {\n          this.variantFields.unitPriceMeasure.innerHTML = variant.unit_price_measurement.reference_unit;\n        } else {\n          this.variantFields.unitPriceMeasure.innerHTML = \"\".concat(variant.unit_price_measurement.reference_value).concat(variant.unit_price_measurement.reference_unit);\n        }\n\n        this.variantFields.unitPrice.classList.remove('hidden');\n      } else if (this.variantFields.unitPrice) {\n        this.variantFields.unitPrice.classList.add('hidden');\n      }\n\n      if (this.variantFields.taxLine) {\n        if (variant.taxable) {\n          this.variantFields.taxLine.classList.remove('hidden');\n        } else {\n          this.variantFields.taxLine.classList.add('hidden');\n        }\n      }\n    }\n  }, {\n    key: \"_AddToCartFlyout\",\n    value: function _AddToCartFlyout(event) {\n      event.preventDefault();\n      var formData = this.$form.serializeArray();\n      var options = {\n        $atcButton: this.$productAtcButton,\n        settings: {\n          moneyFormat: this.settings.money_format,\n          cartRedirection: this.settings.cart_redirection\n        }\n      };\n      _AddToCartFlyout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].init(formData, this.product, options, this.atcCallbacks);\n    }\n  }]);\n\n  return ProductDetails;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1Byb2R1Y3REZXRhaWxzLmpzPzFhMmQiXSwibmFtZXMiOlsiUHJvZHVjdERldGFpbHMiLCJvcHRpb25zIiwiJHdpbmRvdyIsIiQiLCJ3aW5kb3ciLCIkZm9ybUFyZWEiLCIkZGV0YWlscyIsImNvbnRleHQiLCJzZXR0aW5ncyIsInByb2R1Y3QiLCJ1c2VIaXN0b3J5IiwidmFyaWFudEhlbHBlciIsImF0Y0NhbGxiYWNrcyIsIiRmb3JtIiwiZmluZCIsIiRwcm9kdWN0QXRjQnV0dG9uIiwiJHByb2R1Y3RWYXJpYW50cyIsIiRwcm9kdWN0T3B0aW9ucyIsImRldGFpbHNMaW5rIiwicXVlcnlTZWxlY3RvciIsImluU3RvY2tOb3RpZmljYXRpb25Gb3JtIiwiZGV0YWlsc0Jhc2VIcmVmIiwiZ2V0QXR0cmlidXRlIiwidmFyaWFudEZpZWxkcyIsIiRwcmljZSIsIiRwcmljZU1vbmV5IiwiJGNvbXBhcmVBdFByaWNlIiwiJGNvbXBhcmVBdFByaWNlTW9uZXkiLCIkYmFkZ2UiLCIkYmFkZ2VNb25leVNhdmVkIiwiJGJhZGdlUGVyY2VudFNhdmVkIiwiJHN0b2NrTGV2ZWwiLCIkc2t1IiwidW5pdFByaWNlIiwidG90YWxRdWFudGl0eSIsInVuaXRQcmljZUFtb3VudCIsInVuaXRQcmljZU1lYXN1cmUiLCJ0YXhMaW5lIiwiZm9ybXMiLCJGb3JtcyIsImluU3RvY2tGb3JtIiwibWVkaWEiLCJsZW5ndGgiLCJnYWxsZXJ5IiwiUHJvZHVjdEdhbGxlcnkiLCJlbCIsImlzUXVpY2tzaG9wIiwibW9kZWxzIiwiX2JpbmRFdmVudHMiLCJfaW5pdE9wdGlvbnMiLCJvblF1aWNrc2hvcE9wZW4iLCJ1bmxvYWRBbGxNZWRpYSIsIm9mZiIsInNlY3Rpb25faWQiLCJ1bmxvYWQiLCJ2YXJpYW50SWQiLCJzZWxlY3RWYXJpYW50IiwidXBkYXRlU2xpZGVIZWlnaHQiLCJvbiIsImFjdGl2ZUVsZW1lbnQiLCJkb2N1bWVudCIsImV2ZW50IiwiZGF0YSIsIl9zd2l0Y2hWYXJpYW50IiwiX0FkZFRvQ2FydEZseW91dCIsIlNob3BpZnlWYXJpYW50cyIsIm1peGVkQ29udHJvbHMiLCJ2YXJpYW50IiwiZmlyc3RMb2FkIiwiZm9jdXMiLCJ2YWwiLCJpZCIsInNlbGVjdE1lZGlhQnlWYXJpYW50IiwiX3VwZGF0ZVByaWNlIiwicHJpY2UiLCJjb21wYXJlX2F0X3ByaWNlIiwiX3VwZGF0ZVNLVSIsIl91cGRhdGVCYWRnZSIsIl91cGRhdGVTdG9ja0xldmVsIiwiX3VwZGF0ZUJ1dHRvbiIsIl91cGRhdGVTd2F0Y2hMYWJlbCIsIl91cGRhdGVGdWxsRGV0YWlsc0xpbmsiLCJfdXBkYXRlVW5pdFByaWNlIiwidXJsIiwiaGFuZGxlIiwicGFyYW0iLCJoaXN0b3J5IiwicmVwbGFjZVN0YXRlIiwiaGFzQ29tcGFyZVByaWNlIiwidG9nZ2xlQ2xhc3MiLCJ0ZXh0IiwiU2hvcGlmeSIsImZvcm1hdE1vbmV5IiwibW9uZXlfZm9ybWF0Iiwic2t1IiwicGFyZW50IiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsInByaWNlU2F2ZWQiLCJ0b2dnbGUiLCJpbm5lckhUTUwiLCJwZXJjZW50aWxlU2F2ZWQiLCJNYXRoIiwicm91bmQiLCJlbmFibGVTdG9ja0JhZGdlIiwibG9jYXRpb24iLCJwYXRobmFtZSIsImluY2x1ZGVzIiwicGFyYW1zIiwidmlldyIsImludmVudG9yeV9tYW5hZ2VtZW50IiwiaHRtbCIsIkFzeW5jVmlldyIsImxvYWQiLCJ0aGVuIiwiZnJhZ21lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3RvY2tMZXZlbCIsInJlcGxhY2VtZW50IiwiYXZhaWxhYmxlIiwicHJvZHVjdF9hdmFpbGFibGUiLCJwcm9wIiwicHJvZHVjdF91bmF2YWlsYWJsZSIsImVuYWJsZVN3YXRjaGVzIiwic3dhdGNoTGFiZWwiLCJpbm5lclRleHQiLCJwYXJzZUludCIsImRhdGFzZXQiLCJvcHRpb25Td2F0Y2hWYWx1ZSIsInNldEF0dHJpYnV0ZSIsInVuaXRfcHJpY2VfbWVhc3VyZW1lbnQiLCJxdWFudGl0eV92YWx1ZSIsInF1YW50aXR5X3VuaXQiLCJ1bml0X3ByaWNlIiwicmVmZXJlbmNlX3ZhbHVlIiwicmVmZXJlbmNlX3VuaXQiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJ0YXhhYmxlIiwicHJldmVudERlZmF1bHQiLCJmb3JtRGF0YSIsInNlcmlhbGl6ZUFycmF5IiwiJGF0Y0J1dHRvbiIsIm1vbmV5Rm9ybWF0IiwiY2FydFJlZGlyZWN0aW9uIiwiY2FydF9yZWRpcmVjdGlvbiIsIkFkZFRvQ2FydEZseW91dCIsImluaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7SUFFcUJBLGM7QUFDbkIsMEJBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFDbkIsU0FBS0MsT0FBTCxHQUFlQyw2Q0FBQyxDQUFDQyxNQUFELENBQWhCO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQkosT0FBTyxDQUFDSSxTQUF6QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JMLE9BQU8sQ0FBQ0ssUUFBeEI7QUFDQSxTQUFLQyxPQUFMLEdBQWVOLE9BQU8sQ0FBQ00sT0FBdkI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCUCxPQUFPLENBQUNPLFFBQXhCO0FBQ0EsU0FBS0MsT0FBTCxHQUFlUixPQUFPLENBQUNRLE9BQXZCO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQlQsT0FBTyxDQUFDUyxVQUExQjtBQUVBLFNBQUtDLGFBQUwsR0FBcUIsSUFBckI7QUFFQSxTQUFLQyxZQUFMLEdBQW9CWCxPQUFPLENBQUNXLFlBQTVCLENBWG1CLENBYW5COztBQUNBLFNBQUtDLEtBQUwsR0FBYSxLQUFLUixTQUFMLENBQWVTLElBQWYsQ0FBb0IscUJBQXBCLENBQWI7QUFDQSxTQUFLQyxpQkFBTCxHQUF5QixLQUFLVixTQUFMLENBQWVTLElBQWYsQ0FBb0Isb0JBQXBCLENBQXpCO0FBQ0EsU0FBS0UsZ0JBQUwsR0FBd0IsS0FBS0gsS0FBTCxDQUFXQyxJQUFYLENBQWdCLGlCQUFoQixDQUF4QjtBQUNBLFNBQUtHLGVBQUwsR0FBdUIsS0FBS0osS0FBTCxDQUFXQyxJQUFYLENBQWdCLHVCQUFoQixDQUF2QjtBQUNBLFNBQUtJLFdBQUwsR0FBbUIsS0FBS2IsU0FBTCxDQUFlLENBQWYsRUFBa0JjLGFBQWxCLENBQWdDLDZCQUFoQyxDQUFuQjtBQUNBLFNBQUtDLHVCQUFMLEdBQStCLEtBQUtmLFNBQUwsQ0FBZSxDQUFmLEVBQWtCYyxhQUFsQixDQUFnQyxtQ0FBaEMsQ0FBL0I7O0FBRUEsUUFBSSxLQUFLRCxXQUFULEVBQXNCO0FBQ3BCLFdBQUtHLGVBQUwsR0FBdUIsS0FBS0gsV0FBTCxDQUFpQkksWUFBakIsQ0FBOEIsTUFBOUIsQ0FBdkI7QUFDRDs7QUFFRCxTQUFLQyxhQUFMLEdBQXFCO0FBQ25CQyxZQUFNLEVBQUUsS0FBS2xCLFFBQUwsQ0FBY1EsSUFBZCxDQUFtQixjQUFuQixDQURXO0FBRW5CVyxpQkFBVyxFQUFFLEtBQUtuQixRQUFMLENBQWNRLElBQWQsQ0FBbUIscUJBQW5CLENBRk07QUFHbkJZLHFCQUFlLEVBQUUsS0FBS3BCLFFBQUwsQ0FBY1EsSUFBZCxDQUFtQix5QkFBbkIsQ0FIRTtBQUluQmEsMEJBQW9CLEVBQUUsS0FBS3JCLFFBQUwsQ0FBY1EsSUFBZCxDQUFtQixnQ0FBbkIsQ0FKSDtBQUtuQmMsWUFBTSxFQUFFLEtBQUt0QixRQUFMLENBQWNRLElBQWQsQ0FBbUIsb0JBQW5CLENBTFc7QUFNbkJlLHNCQUFnQixFQUFFLEtBQUt2QixRQUFMLENBQWNRLElBQWQsQ0FBbUIsMEJBQW5CLENBTkM7QUFPbkJnQix3QkFBa0IsRUFBRSxLQUFLeEIsUUFBTCxDQUFjUSxJQUFkLENBQW1CLDRCQUFuQixDQVBEO0FBUW5CaUIsaUJBQVcsRUFBRSxLQUFLMUIsU0FBTCxDQUFlUyxJQUFmLENBQW9CLG9CQUFwQixDQVJNO0FBU25Ca0IsVUFBSSxFQUFFLEtBQUsxQixRQUFMLENBQWNRLElBQWQsQ0FBbUIsb0JBQW5CLENBVGE7QUFVbkJtQixlQUFTLEVBQUUsS0FBSzNCLFFBQUwsQ0FBYyxDQUFkLEVBQWlCYSxhQUFqQixDQUErQixtQkFBL0IsQ0FWUTtBQVduQmUsbUJBQWEsRUFBRSxLQUFLNUIsUUFBTCxDQUFjLENBQWQsRUFBaUJhLGFBQWpCLENBQStCLHVCQUEvQixDQVhJO0FBWW5CZ0IscUJBQWUsRUFBRSxLQUFLN0IsUUFBTCxDQUFjLENBQWQsRUFBaUJhLGFBQWpCLENBQStCLDBCQUEvQixDQVpFO0FBYW5CaUIsc0JBQWdCLEVBQUUsS0FBSzlCLFFBQUwsQ0FBYyxDQUFkLEVBQWlCYSxhQUFqQixDQUErQiwyQkFBL0IsQ0FiQztBQWNuQmtCLGFBQU8sRUFBRSxLQUFLL0IsUUFBTCxDQUFjLENBQWQsRUFBaUJhLGFBQWpCLENBQStCLGlCQUEvQjtBQWRVLEtBQXJCO0FBaUJBLFNBQUttQixLQUFMLEdBQWEsSUFBSUMsOENBQUosQ0FBVSxLQUFLMUIsS0FBZixDQUFiOztBQUVBLFFBQUksS0FBS08sdUJBQVQsRUFBa0M7QUFDaEMsV0FBS29CLFdBQUwsR0FBbUIsSUFBSUQsOENBQUosQ0FBVSxLQUFLbkIsdUJBQWYsQ0FBbkI7QUFDRDs7QUFFRCxRQUFJLEtBQUtYLE9BQUwsSUFBZ0IsS0FBS0EsT0FBTCxDQUFhZ0MsS0FBYixDQUFtQkMsTUFBdkMsRUFBK0M7QUFDN0MsV0FBS0MsT0FBTCxHQUFlLElBQUlDLHVEQUFKLENBQW1CO0FBQ2hDQyxVQUFFLEVBQUU1QyxPQUFPLENBQUMwQyxPQURvQjtBQUVoQ25DLGdCQUFRLEVBQUUsS0FBS0EsUUFGaUI7QUFHaENzQyxtQkFBVyxFQUFFN0MsT0FBTyxDQUFDNkMsV0FIVztBQUloQ0MsY0FBTSxFQUFFOUMsT0FBTyxDQUFDOEM7QUFKZ0IsT0FBbkIsQ0FBZjtBQU1EOztBQUVELFNBQUtDLFdBQUw7O0FBQ0EsU0FBS0MsWUFBTDtBQUNEOzs7O3NDQUVpQjtBQUNoQixXQUFLTixPQUFMLENBQWFPLGVBQWI7QUFDRDs7O3FDQUVnQjtBQUNmLFVBQUksS0FBS1AsT0FBVCxFQUFrQjtBQUNoQixhQUFLQSxPQUFMLENBQWFRLGNBQWI7QUFDRDtBQUNGOzs7NkJBRVE7QUFDUCxXQUFLdEMsS0FBTCxDQUFXdUMsR0FBWCw0QkFBbUMsS0FBSzVDLFFBQUwsQ0FBYzZDLFVBQWpEO0FBQ0EsV0FBS25ELE9BQUwsQ0FBYWtELEdBQWIsNEJBQXFDLEtBQUs1QyxRQUFMLENBQWM2QyxVQUFuRDtBQUNBLFdBQUtmLEtBQUwsQ0FBV2dCLE1BQVg7O0FBRUEsVUFBSSxLQUFLZCxXQUFULEVBQXNCO0FBQ3BCLGFBQUtBLFdBQUwsQ0FBaUJjLE1BQWpCO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLM0MsYUFBVCxFQUF3QjtBQUN0QixhQUFLQSxhQUFMLENBQW1CMkMsTUFBbkI7QUFDRDs7QUFFRCxVQUFJLEtBQUtYLE9BQVQsRUFBa0I7QUFDaEIsYUFBS0EsT0FBTCxDQUFhVyxNQUFiO0FBQ0Q7QUFDRjs7O2tDQUVhQyxTLEVBQVc7QUFDdkIsVUFBSUEsU0FBSixFQUFlO0FBQ2IsYUFBSzVDLGFBQUwsQ0FBbUI2QyxhQUFuQixDQUFpQ0QsU0FBakM7QUFDRDs7QUFDRCxXQUFLWixPQUFMLENBQWFjLGlCQUFiO0FBQ0Q7OztrQ0FFYTtBQUFBOztBQUNaLFdBQUt4QyxlQUFMLENBQXFCeUMsRUFBckIsaUNBQWlELEtBQUtsRCxRQUFMLENBQWM2QyxVQUEvRCxHQUE2RSxZQUFNO0FBQ2pGLGFBQUksQ0FBQ00sYUFBTCxHQUFxQkMsUUFBUSxDQUFDRCxhQUE5QjtBQUNELE9BRkQ7QUFHQSxXQUFLekQsT0FBTCxDQUFhd0QsRUFBYiwyREFBbUUsS0FBS2xELFFBQUwsQ0FBYzZDLFVBQWpGLEdBQStGLFVBQUNRLEtBQUQsRUFBUUMsSUFBUjtBQUFBLGVBQWlCLEtBQUksQ0FBQ0MsY0FBTCxDQUFvQkYsS0FBcEIsRUFBMkJDLElBQTNCLENBQWpCO0FBQUEsT0FBL0Y7QUFDQSxXQUFLakQsS0FBTCxDQUFXNkMsRUFBWCxrQ0FBd0MsS0FBS2xELFFBQUwsQ0FBYzZDLFVBQXRELEdBQW9FLFVBQUFRLEtBQUs7QUFBQSxlQUFJLEtBQUksQ0FBQ0csZ0JBQUwsQ0FBc0JILEtBQXRCLENBQUo7QUFBQSxPQUF6RTtBQUNEOzs7bUNBRWM7QUFDYixVQUFJLENBQUMsS0FBSzdDLGdCQUFMLENBQXNCMEIsTUFBM0IsRUFBbUM7QUFFbkMsV0FBSy9CLGFBQUwsR0FBcUIsSUFBSXNELHdEQUFKLENBQ25CLEtBQUt4RCxPQURjLEVBRW5CLEtBQUtPLGdCQUZjLEVBR25CLEtBQUtDLGVBSGMsRUFJbkI7QUFBRWlELHFCQUFhLEVBQUU7QUFBakIsT0FKbUIsQ0FBckI7QUFNRDs7O21DQUVjTCxLLEVBQU9DLEksRUFBTTtBQUMxQixVQUFJQSxJQUFJLENBQUNyRCxPQUFMLEtBQWlCLEtBQUtBLE9BQTFCLEVBQW1DO0FBRW5DLFVBQU0wRCxPQUFPLEdBQUdMLElBQUksQ0FBQ0ssT0FBckI7QUFDQSxVQUFNQyxTQUFTLEdBQUdOLElBQUksQ0FBQ00sU0FBdkI7O0FBRUEsVUFBSUEsU0FBSixFQUFlO0FBQ2I7QUFDRCxPQVJ5QixDQVUxQjs7O0FBQ0EsVUFBSSxLQUFLVCxhQUFULEVBQXdCO0FBQ3RCLGFBQUtBLGFBQUwsQ0FBbUJVLEtBQW5CO0FBQ0QsT0FieUIsQ0FlMUI7OztBQUNBLFdBQUtyRCxnQkFBTCxDQUFzQnNELEdBQXRCLENBQTBCUixJQUFJLENBQUNLLE9BQUwsQ0FBYUksRUFBdkM7QUFDQSxXQUFLNUIsT0FBTCxDQUFhNkIsb0JBQWIsQ0FBa0NMLE9BQWxDLEVBakIwQixDQW1CMUI7O0FBQ0EsV0FBS00sWUFBTCxDQUFrQjtBQUFFQyxhQUFLLEVBQUVQLE9BQU8sQ0FBQ08sS0FBakI7QUFBd0JDLHdCQUFnQixFQUFFUixPQUFPLENBQUNRO0FBQWxELE9BQWxCOztBQUNBLFdBQUtDLFVBQUwsQ0FBZ0JULE9BQWhCOztBQUNBLFdBQUtVLFlBQUwsQ0FBa0JWLE9BQWxCOztBQUNBLFdBQUtXLGlCQUFMLENBQXVCWCxPQUF2Qjs7QUFDQSxXQUFLWSxhQUFMLENBQW1CWixPQUFuQjs7QUFDQSxXQUFLYSxrQkFBTCxDQUF3QmIsT0FBeEI7O0FBQ0EsV0FBS2Msc0JBQUwsQ0FBNEJkLE9BQTVCOztBQUNBLFdBQUtlLGdCQUFMLENBQXNCZixPQUF0Qjs7QUFFQSxVQUFJLEtBQUt6RCxVQUFULEVBQXFCO0FBQ25CLFlBQU15RSxHQUFHLGFBQU8sS0FBSzFFLE9BQUwsQ0FBYTJFLE1BQXBCLGNBQStCakYsNkNBQUMsQ0FBQ2tGLEtBQUYsQ0FBUTtBQUFFbEIsaUJBQU8sRUFBRUEsT0FBTyxDQUFDSTtBQUFuQixTQUFSLENBQS9CLENBQVQ7QUFDQWUsZUFBTyxDQUFDQyxZQUFSLENBQXFCLEVBQXJCLEVBQXlCLFNBQXpCLEVBQW9DSixHQUFwQztBQUNEO0FBQ0Y7OztpQ0FFWVQsSyxFQUFPO0FBQ2xCO0FBQ0EsVUFBTWMsZUFBZSxHQUNuQixDQUFDLENBQUNkLEtBQUssQ0FBQ0MsZ0JBQVIsSUFBNEJELEtBQUssQ0FBQ0MsZ0JBQU4sR0FBeUJELEtBQUssQ0FBQ0EsS0FEN0Q7QUFHQSxXQUFLbkQsYUFBTCxDQUFtQkcsZUFBbkIsQ0FBbUMrRCxXQUFuQyxDQUErQyxTQUEvQyxFQUEwREQsZUFBMUQ7QUFDQSxXQUFLakUsYUFBTCxDQUFtQkksb0JBQW5CLENBQXdDK0QsSUFBeEMsQ0FBNkNDLE9BQU8sQ0FBQ0MsV0FBUixDQUFvQmxCLEtBQUssQ0FBQ0MsZ0JBQTFCLEVBQTRDLEtBQUtuRSxRQUFMLENBQWNxRixZQUExRCxDQUE3QyxFQU5rQixDQVFsQjs7QUFDQSxXQUFLdEUsYUFBTCxDQUFtQkUsV0FBbkIsQ0FBK0JpRSxJQUEvQixDQUFvQ0MsT0FBTyxDQUFDQyxXQUFSLENBQW9CbEIsS0FBSyxDQUFDQSxLQUExQixFQUFpQyxLQUFLbEUsUUFBTCxDQUFjcUYsWUFBL0MsQ0FBcEM7QUFDRDs7OytCQUVVMUIsTyxFQUFTO0FBQ2xCLFVBQUlBLE9BQU8sQ0FBQzJCLEdBQVIsS0FBZ0IsRUFBcEIsRUFBd0I7QUFDdEIsYUFBS3ZFLGFBQUwsQ0FBbUJTLElBQW5CLENBQXdCK0QsTUFBeEIsR0FBaUNDLFFBQWpDLENBQTBDLG9CQUExQztBQUNELE9BRkQsTUFFTztBQUNMLGFBQUt6RSxhQUFMLENBQW1CUyxJQUFuQixDQUF3QitELE1BQXhCLEdBQWlDRSxXQUFqQyxDQUE2QyxvQkFBN0M7QUFDRDs7QUFFRCxXQUFLMUUsYUFBTCxDQUFtQlMsSUFBbkIsQ0FBd0IwRCxJQUF4QixDQUE2QnZCLE9BQU8sQ0FBQzJCLEdBQXJDO0FBQ0Q7OztpQ0FFWTNCLE8sRUFBUztBQUNwQixVQUFNK0IsVUFBVSxHQUFHL0IsT0FBTyxDQUFDUSxnQkFBUixHQUEyQlIsT0FBTyxDQUFDUSxnQkFBUixHQUEyQlIsT0FBTyxDQUFDTyxLQUE5RCxHQUFzRSxDQUF6RjtBQUNBLFdBQUtuRCxhQUFMLENBQW1CSyxNQUFuQixDQUEwQnVFLE1BQTFCLENBQWlDLENBQUMsQ0FBQ0QsVUFBbkM7O0FBRUEsVUFBSSxLQUFLM0UsYUFBTCxDQUFtQk0sZ0JBQW5CLENBQW9DYSxNQUF4QyxFQUFnRDtBQUM5QztBQUNBLGFBQUtuQixhQUFMLENBQW1CTSxnQkFBbkIsQ0FBb0MsQ0FBcEMsRUFBdUN1RSxTQUF2QyxHQUFtRFQsT0FBTyxDQUFDQyxXQUFSLENBQW9CTSxVQUFwQixFQUFnQyxLQUFLMUYsUUFBTCxDQUFjcUYsWUFBOUMsQ0FBbkQ7QUFDRDs7QUFFRCxVQUFJLEtBQUt0RSxhQUFMLENBQW1CTyxrQkFBbkIsQ0FBc0NZLE1BQTFDLEVBQWtEO0FBQ2hEO0FBQ0EsWUFBTTJELGVBQWUsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVlMLFVBQVUsR0FBRyxHQUFkLEdBQXFCL0IsT0FBTyxDQUFDUSxnQkFBeEMsQ0FBeEI7QUFDQSxhQUFLcEQsYUFBTCxDQUFtQk8sa0JBQW5CLENBQXNDNEQsSUFBdEMsQ0FBMkNXLGVBQTNDO0FBQ0Q7QUFDRjs7O3NDQUVpQmxDLE8sRUFBUztBQUFBOztBQUN6QixVQUFJLENBQUMsS0FBSzNELFFBQUwsQ0FBY2dHLGdCQUFuQixFQUFxQztBQUVyQyxVQUFJckIsR0FBRyxHQUFHL0UsTUFBTSxDQUFDcUcsUUFBUCxDQUFnQkMsUUFBMUI7O0FBRUEsVUFBSSxDQUFDdkIsR0FBRyxDQUFDd0IsUUFBSixDQUFhLFdBQWIsQ0FBTCxFQUFnQztBQUM5QnhCLFdBQUcsYUFBTUEsR0FBTix1QkFBc0IsS0FBSzFFLE9BQUwsQ0FBYTJFLE1BQW5DLENBQUg7QUFDRDs7QUFFRCxVQUFNd0IsTUFBTSxHQUFHO0FBQ2JDLFlBQUksRUFBRSxjQURPO0FBRWIxQyxlQUFPLEVBQUVBLE9BQU8sQ0FBQ0k7QUFGSixPQUFmOztBQUtBLFVBQUlKLE9BQU8sQ0FBQzJDLG9CQUFSLEtBQWlDLElBQXJDLEVBQTJDO0FBQ3pDLGFBQUt2RixhQUFMLENBQW1CUSxXQUFuQixDQUErQmdGLElBQS9CLENBQW9DLEVBQXBDO0FBQ0QsT0FGRCxNQUVPO0FBQ0xDLGlFQUFTLENBQUNDLElBQVYsQ0FBZTlCLEdBQWYsRUFBb0J5QixNQUFwQixFQUNHTSxJQURILENBQ1EsZ0JBQW9CO0FBQUEsY0FBakJILElBQWlCLFFBQWpCQSxJQUFpQjtBQUFBLGNBQVhqRCxJQUFXLFFBQVhBLElBQVc7QUFDeEIsY0FBSXFELFFBQVEsR0FBR3ZELFFBQVEsQ0FBQ3dELGFBQVQsQ0FBdUIsS0FBdkIsQ0FBZjtBQUNBRCxrQkFBUSxDQUFDZixTQUFULEdBQXFCVyxJQUFJLENBQUNNLFVBQTFCO0FBRUEsY0FBTUMsV0FBVyxHQUFHSCxRQUFRLENBQUNoRyxhQUFULENBQXVCLHVCQUF2QixDQUFwQjs7QUFFQSxnQkFBSSxDQUFDSSxhQUFMLENBQW1CUSxXQUFuQixDQUErQmdGLElBQS9CLENBQW9DTyxXQUFwQztBQUNELFNBUkg7QUFTRDtBQUNGOzs7a0NBRWFuRCxPLEVBQVM7QUFDckIsVUFBSUEsT0FBTyxDQUFDb0QsU0FBWixFQUF1QjtBQUNyQixhQUFLeEcsaUJBQUwsQ0FBdUIyRSxJQUF2QixDQUE0QixLQUFLbkYsT0FBTCxDQUFhaUgsaUJBQXpDO0FBQ0EsYUFBS3pHLGlCQUFMLENBQ0drRixXQURILENBQ2UsVUFEZixFQUVHd0IsSUFGSCxDQUVRLFVBRlIsRUFFb0IsS0FGcEI7QUFHRCxPQUxELE1BS087QUFDTCxhQUFLMUcsaUJBQUwsQ0FBdUIyRSxJQUF2QixDQUE0QixLQUFLbkYsT0FBTCxDQUFhbUgsbUJBQXpDO0FBQ0EsYUFBSzNHLGlCQUFMLENBQ0dpRixRQURILENBQ1ksVUFEWixFQUVHeUIsSUFGSCxDQUVRLFVBRlIsRUFFb0IsSUFGcEI7QUFHRDtBQUNGOzs7dUNBRWtCdEQsTyxFQUFTO0FBQzFCLFVBQUksS0FBSzNELFFBQUwsQ0FBY21ILGNBQWxCLEVBQWtDO0FBQ2hDLFlBQU1DLFdBQVcsR0FBRyxLQUFLL0csS0FBTCxDQUFXLENBQVgsRUFBY00sYUFBZCxDQUE0Qiw0QkFBNUIsQ0FBcEI7O0FBQ0EsWUFBSXlHLFdBQUosRUFBaUI7QUFDZkEscUJBQVcsQ0FBQ0MsU0FBWixHQUF3QjFELE9BQU8sQ0FBQ2xFLE9BQVIsQ0FBZ0I2SCxRQUFRLENBQUNGLFdBQVcsQ0FBQ0csT0FBWixDQUFvQkMsaUJBQXJCLEVBQXdDLEVBQXhDLENBQXhCLENBQXhCO0FBQ0Q7QUFDRjtBQUNGOzs7MkNBRXNCN0QsTyxFQUFTO0FBQzlCLFVBQUksS0FBS2pELFdBQVQsRUFBc0I7QUFDcEIsYUFBS0EsV0FBTCxDQUFpQitHLFlBQWpCLENBQThCLE1BQTlCLFlBQXlDLEtBQUs1RyxlQUE5QyxzQkFBeUU4QyxPQUFPLENBQUNJLEVBQWpGO0FBQ0Q7QUFDRjs7O3FDQUVnQkosTyxFQUFTO0FBQ3hCLFVBQUksS0FBSzVDLGFBQUwsQ0FBbUJVLFNBQW5CLElBQWdDa0MsT0FBTyxDQUFDK0Qsc0JBQTVDLEVBQW9FO0FBQ2xFLGFBQUszRyxhQUFMLENBQW1CVyxhQUFuQixDQUFpQ2tFLFNBQWpDLGFBQWdEakMsT0FBTyxDQUFDK0Qsc0JBQVIsQ0FBK0JDLGNBQS9FLFNBQWdHaEUsT0FBTyxDQUFDK0Qsc0JBQVIsQ0FBK0JFLGFBQS9IO0FBRUEsYUFBSzdHLGFBQUwsQ0FBbUJZLGVBQW5CLENBQW1DaUUsU0FBbkMsR0FBK0NULE9BQU8sQ0FBQ0MsV0FBUixDQUFvQnpCLE9BQU8sQ0FBQ2tFLFVBQTVCLEVBQXdDLEtBQUs3SCxRQUFMLENBQWNxRixZQUF0RCxDQUEvQzs7QUFDQSxZQUFJMUIsT0FBTyxDQUFDK0Qsc0JBQVIsQ0FBK0JJLGVBQS9CLEtBQW1ELENBQXZELEVBQTBEO0FBQ3hELGVBQUsvRyxhQUFMLENBQW1CYSxnQkFBbkIsQ0FBb0NnRSxTQUFwQyxHQUFnRGpDLE9BQU8sQ0FBQytELHNCQUFSLENBQStCSyxjQUEvRTtBQUNELFNBRkQsTUFFTztBQUNMLGVBQUtoSCxhQUFMLENBQW1CYSxnQkFBbkIsQ0FBb0NnRSxTQUFwQyxhQUFtRGpDLE9BQU8sQ0FBQytELHNCQUFSLENBQStCSSxlQUFsRixTQUFvR25FLE9BQU8sQ0FBQytELHNCQUFSLENBQStCSyxjQUFuSTtBQUNEOztBQUNELGFBQUtoSCxhQUFMLENBQW1CVSxTQUFuQixDQUE2QnVHLFNBQTdCLENBQXVDQyxNQUF2QyxDQUE4QyxRQUE5QztBQUNELE9BVkQsTUFVTyxJQUFJLEtBQUtsSCxhQUFMLENBQW1CVSxTQUF2QixFQUFrQztBQUN2QyxhQUFLVixhQUFMLENBQW1CVSxTQUFuQixDQUE2QnVHLFNBQTdCLENBQXVDRSxHQUF2QyxDQUEyQyxRQUEzQztBQUNEOztBQUVELFVBQUksS0FBS25ILGFBQUwsQ0FBbUJjLE9BQXZCLEVBQWdDO0FBQzlCLFlBQUk4QixPQUFPLENBQUN3RSxPQUFaLEVBQXFCO0FBQ25CLGVBQUtwSCxhQUFMLENBQW1CYyxPQUFuQixDQUEyQm1HLFNBQTNCLENBQXFDQyxNQUFyQyxDQUE0QyxRQUE1QztBQUNELFNBRkQsTUFFTztBQUNMLGVBQUtsSCxhQUFMLENBQW1CYyxPQUFuQixDQUEyQm1HLFNBQTNCLENBQXFDRSxHQUFyQyxDQUF5QyxRQUF6QztBQUNEO0FBQ0Y7QUFDRjs7O3FDQUVnQjdFLEssRUFBTztBQUN0QkEsV0FBSyxDQUFDK0UsY0FBTjtBQUVBLFVBQU1DLFFBQVEsR0FBRyxLQUFLaEksS0FBTCxDQUFXaUksY0FBWCxFQUFqQjtBQUVBLFVBQU03SSxPQUFPLEdBQUc7QUFDZDhJLGtCQUFVLEVBQUUsS0FBS2hJLGlCQURIO0FBRWRQLGdCQUFRLEVBQUU7QUFDUndJLHFCQUFXLEVBQUUsS0FBS3hJLFFBQUwsQ0FBY3FGLFlBRG5CO0FBRVJvRCx5QkFBZSxFQUFFLEtBQUt6SSxRQUFMLENBQWMwSTtBQUZ2QjtBQUZJLE9BQWhCO0FBUUFDLDhEQUFlLENBQUNDLElBQWhCLENBQXFCUCxRQUFyQixFQUErQixLQUFLcEksT0FBcEMsRUFBNkNSLE9BQTdDLEVBQXNELEtBQUtXLFlBQTNEO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1Byb2R1Y3REZXRhaWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCBBc3luY1ZpZXcgZnJvbSAnc2hvcGlmeS1hc3luY3ZpZXcnO1xuaW1wb3J0IFNob3BpZnlWYXJpYW50cyBmcm9tICdzaG9waWZ5LXZhcmlhbnRzJztcbmltcG9ydCBGb3JtcyBmcm9tICcuLi9Gb3Jtcyc7XG5pbXBvcnQgQWRkVG9DYXJ0Rmx5b3V0IGZyb20gJy4vQWRkVG9DYXJ0Rmx5b3V0JztcbmltcG9ydCBQcm9kdWN0R2FsbGVyeSBmcm9tICcuL1Byb2R1Y3RHYWxsZXJ5JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZHVjdERldGFpbHMge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy4kd2luZG93ID0gJCh3aW5kb3cpO1xuICAgIHRoaXMuJGZvcm1BcmVhID0gb3B0aW9ucy4kZm9ybUFyZWE7XG4gICAgdGhpcy4kZGV0YWlscyA9IG9wdGlvbnMuJGRldGFpbHM7XG4gICAgdGhpcy5jb250ZXh0ID0gb3B0aW9ucy5jb250ZXh0O1xuICAgIHRoaXMuc2V0dGluZ3MgPSBvcHRpb25zLnNldHRpbmdzO1xuICAgIHRoaXMucHJvZHVjdCA9IG9wdGlvbnMucHJvZHVjdDtcbiAgICB0aGlzLnVzZUhpc3RvcnkgPSBvcHRpb25zLnVzZUhpc3Rvcnk7XG5cbiAgICB0aGlzLnZhcmlhbnRIZWxwZXIgPSBudWxsO1xuXG4gICAgdGhpcy5hdGNDYWxsYmFja3MgPSBvcHRpb25zLmF0Y0NhbGxiYWNrcztcblxuICAgIC8vIEZvcm1cbiAgICB0aGlzLiRmb3JtID0gdGhpcy4kZm9ybUFyZWEuZmluZCgnW2RhdGEtcHJvZHVjdC1mb3JtXScpO1xuICAgIHRoaXMuJHByb2R1Y3RBdGNCdXR0b24gPSB0aGlzLiRmb3JtQXJlYS5maW5kKCdbZGF0YS1wcm9kdWN0LWF0Y10nKTtcbiAgICB0aGlzLiRwcm9kdWN0VmFyaWFudHMgPSB0aGlzLiRmb3JtLmZpbmQoJ1tkYXRhLXZhcmlhbnRzXScpO1xuICAgIHRoaXMuJHByb2R1Y3RPcHRpb25zID0gdGhpcy4kZm9ybS5maW5kKCdbZGF0YS1wcm9kdWN0LW9wdGlvbl0nKTtcbiAgICB0aGlzLmRldGFpbHNMaW5rID0gdGhpcy4kZm9ybUFyZWFbMF0ucXVlcnlTZWxlY3RvcignW2RhdGEtcHJvZHVjdC1kZXRhaWxzLWxpbmtdJyk7XG4gICAgdGhpcy5pblN0b2NrTm90aWZpY2F0aW9uRm9ybSA9IHRoaXMuJGZvcm1BcmVhWzBdLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWluLXN0b2NrLW5vdGlmaWNhdGlvbi1mb3JtXScpO1xuXG4gICAgaWYgKHRoaXMuZGV0YWlsc0xpbmspIHtcbiAgICAgIHRoaXMuZGV0YWlsc0Jhc2VIcmVmID0gdGhpcy5kZXRhaWxzTGluay5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTtcbiAgICB9XG5cbiAgICB0aGlzLnZhcmlhbnRGaWVsZHMgPSB7XG4gICAgICAkcHJpY2U6IHRoaXMuJGRldGFpbHMuZmluZCgnW2RhdGEtcHJpY2VdJyksXG4gICAgICAkcHJpY2VNb25leTogdGhpcy4kZGV0YWlscy5maW5kKCdbZGF0YS1wcmljZV0gLm1vbmV5JyksXG4gICAgICAkY29tcGFyZUF0UHJpY2U6IHRoaXMuJGRldGFpbHMuZmluZCgnW2RhdGEtcHJpY2UtY29tcGFyZS1hdF0nKSxcbiAgICAgICRjb21wYXJlQXRQcmljZU1vbmV5OiB0aGlzLiRkZXRhaWxzLmZpbmQoJ1tkYXRhLXByaWNlLWNvbXBhcmUtYXRdIC5tb25leScpLFxuICAgICAgJGJhZGdlOiB0aGlzLiRkZXRhaWxzLmZpbmQoJ1tkYXRhLWJhZGdlLXNhbGVzXScpLFxuICAgICAgJGJhZGdlTW9uZXlTYXZlZDogdGhpcy4kZGV0YWlscy5maW5kKCdbZGF0YS1wcmljZS1tb25leS1zYXZlZF0nKSxcbiAgICAgICRiYWRnZVBlcmNlbnRTYXZlZDogdGhpcy4kZGV0YWlscy5maW5kKCdbZGF0YS1wcmljZS1wZXJjZW50LXNhdmVkXScpLFxuICAgICAgJHN0b2NrTGV2ZWw6IHRoaXMuJGZvcm1BcmVhLmZpbmQoJ1tkYXRhLXN0b2NrLWxldmVsXScpLFxuICAgICAgJHNrdTogdGhpcy4kZGV0YWlscy5maW5kKCdbZGF0YS1wcm9kdWN0LXNrdV0nKSxcbiAgICAgIHVuaXRQcmljZTogdGhpcy4kZGV0YWlsc1swXS5xdWVyeVNlbGVjdG9yKCdbZGF0YS11bml0LXByaWNlXScpLFxuICAgICAgdG90YWxRdWFudGl0eTogdGhpcy4kZGV0YWlsc1swXS5xdWVyeVNlbGVjdG9yKCdbZGF0YS10b3RhbC1xdWFudGl0eV0nKSxcbiAgICAgIHVuaXRQcmljZUFtb3VudDogdGhpcy4kZGV0YWlsc1swXS5xdWVyeVNlbGVjdG9yKCdbZGF0YS11bml0LXByaWNlLWFtb3VudF0nKSxcbiAgICAgIHVuaXRQcmljZU1lYXN1cmU6IHRoaXMuJGRldGFpbHNbMF0ucXVlcnlTZWxlY3RvcignW2RhdGEtdW5pdC1wcmljZS1tZWFzdXJlXScpLFxuICAgICAgdGF4TGluZTogdGhpcy4kZGV0YWlsc1swXS5xdWVyeVNlbGVjdG9yKCdbZGF0YS10YXgtbGluZV0nKSxcbiAgICB9O1xuXG4gICAgdGhpcy5mb3JtcyA9IG5ldyBGb3Jtcyh0aGlzLiRmb3JtKTtcblxuICAgIGlmICh0aGlzLmluU3RvY2tOb3RpZmljYXRpb25Gb3JtKSB7XG4gICAgICB0aGlzLmluU3RvY2tGb3JtID0gbmV3IEZvcm1zKHRoaXMuaW5TdG9ja05vdGlmaWNhdGlvbkZvcm0pO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnByb2R1Y3QgJiYgdGhpcy5wcm9kdWN0Lm1lZGlhLmxlbmd0aCkge1xuICAgICAgdGhpcy5nYWxsZXJ5ID0gbmV3IFByb2R1Y3RHYWxsZXJ5KHtcbiAgICAgICAgZWw6IG9wdGlvbnMuZ2FsbGVyeSxcbiAgICAgICAgc2V0dGluZ3M6IHRoaXMuc2V0dGluZ3MsXG4gICAgICAgIGlzUXVpY2tzaG9wOiBvcHRpb25zLmlzUXVpY2tzaG9wLFxuICAgICAgICBtb2RlbHM6IG9wdGlvbnMubW9kZWxzLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5fYmluZEV2ZW50cygpO1xuICAgIHRoaXMuX2luaXRPcHRpb25zKCk7XG4gIH1cblxuICBvblF1aWNrc2hvcE9wZW4oKSB7XG4gICAgdGhpcy5nYWxsZXJ5Lm9uUXVpY2tzaG9wT3BlbigpO1xuICB9XG5cbiAgdW5sb2FkQWxsTWVkaWEoKSB7XG4gICAgaWYgKHRoaXMuZ2FsbGVyeSkge1xuICAgICAgdGhpcy5nYWxsZXJ5LnVubG9hZEFsbE1lZGlhKCk7XG4gICAgfVxuICB9XG5cbiAgdW5sb2FkKCkge1xuICAgIHRoaXMuJGZvcm0ub2ZmKGAucHJvZHVjdC1kZXRhaWxzLSR7dGhpcy5zZXR0aW5ncy5zZWN0aW9uX2lkfWApO1xuICAgIHRoaXMuJHdpbmRvdy5vZmYoYC5wcm9kdWN0LWRldGFpbHMtJHt0aGlzLnNldHRpbmdzLnNlY3Rpb25faWR9YCk7XG4gICAgdGhpcy5mb3Jtcy51bmxvYWQoKTtcblxuICAgIGlmICh0aGlzLmluU3RvY2tGb3JtKSB7XG4gICAgICB0aGlzLmluU3RvY2tGb3JtLnVubG9hZCgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnZhcmlhbnRIZWxwZXIpIHtcbiAgICAgIHRoaXMudmFyaWFudEhlbHBlci51bmxvYWQoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5nYWxsZXJ5KSB7XG4gICAgICB0aGlzLmdhbGxlcnkudW5sb2FkKCk7XG4gICAgfVxuICB9XG5cbiAgc2VsZWN0VmFyaWFudCh2YXJpYW50SWQpIHtcbiAgICBpZiAodmFyaWFudElkKSB7XG4gICAgICB0aGlzLnZhcmlhbnRIZWxwZXIuc2VsZWN0VmFyaWFudCh2YXJpYW50SWQpO1xuICAgIH1cbiAgICB0aGlzLmdhbGxlcnkudXBkYXRlU2xpZGVIZWlnaHQoKTtcbiAgfVxuXG4gIF9iaW5kRXZlbnRzKCkge1xuICAgIHRoaXMuJHByb2R1Y3RPcHRpb25zLm9uKGBmb2N1cy5wcm9kdWN0LWRldGFpbHMtJHt0aGlzLnNldHRpbmdzLnNlY3Rpb25faWR9YCwgKCkgPT4ge1xuICAgICAgdGhpcy5hY3RpdmVFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICB9KTtcbiAgICB0aGlzLiR3aW5kb3cub24oYHNob3BpZnktdmFyaWFudHM6c3dpdGNoLXZhcmlhbnQucHJvZHVjdC1kZXRhaWxzLSR7dGhpcy5zZXR0aW5ncy5zZWN0aW9uX2lkfWAsIChldmVudCwgZGF0YSkgPT4gdGhpcy5fc3dpdGNoVmFyaWFudChldmVudCwgZGF0YSkpO1xuICAgIHRoaXMuJGZvcm0ub24oYHN1Ym1pdC5wcm9kdWN0LWRldGFpbHMtJHt0aGlzLnNldHRpbmdzLnNlY3Rpb25faWR9YCwgZXZlbnQgPT4gdGhpcy5fQWRkVG9DYXJ0Rmx5b3V0KGV2ZW50KSk7XG4gIH1cblxuICBfaW5pdE9wdGlvbnMoKSB7XG4gICAgaWYgKCF0aGlzLiRwcm9kdWN0VmFyaWFudHMubGVuZ3RoKSByZXR1cm47XG5cbiAgICB0aGlzLnZhcmlhbnRIZWxwZXIgPSBuZXcgU2hvcGlmeVZhcmlhbnRzKFxuICAgICAgdGhpcy5wcm9kdWN0LFxuICAgICAgdGhpcy4kcHJvZHVjdFZhcmlhbnRzLFxuICAgICAgdGhpcy4kcHJvZHVjdE9wdGlvbnMsXG4gICAgICB7IG1peGVkQ29udHJvbHM6IHRydWUgfSxcbiAgICApO1xuICB9XG5cbiAgX3N3aXRjaFZhcmlhbnQoZXZlbnQsIGRhdGEpIHtcbiAgICBpZiAoZGF0YS5wcm9kdWN0ICE9PSB0aGlzLnByb2R1Y3QpIHJldHVybjtcblxuICAgIGNvbnN0IHZhcmlhbnQgPSBkYXRhLnZhcmlhbnQ7XG4gICAgY29uc3QgZmlyc3RMb2FkID0gZGF0YS5maXJzdExvYWQ7XG5cbiAgICBpZiAoZmlyc3RMb2FkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUmVmb2N1cyB0aGUgYWN0aXZlIGVsZW1lbnQgKFNob3BpZnkgVmFyaWFudHMgY2F1c2VzIGVsZW1lbnQgdG8gbG9zZSBmb2N1cylcbiAgICBpZiAodGhpcy5hY3RpdmVFbGVtZW50KSB7XG4gICAgICB0aGlzLmFjdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG5cbiAgICAvLyBVcGRhdGUgbWFpbiBzZWxlY3RcbiAgICB0aGlzLiRwcm9kdWN0VmFyaWFudHMudmFsKGRhdGEudmFyaWFudC5pZCk7XG4gICAgdGhpcy5nYWxsZXJ5LnNlbGVjdE1lZGlhQnlWYXJpYW50KHZhcmlhbnQpO1xuXG4gICAgLy8gVXBkYXRlIFZhcmlhbnQgaW5mb3JtYXRpb25cbiAgICB0aGlzLl91cGRhdGVQcmljZSh7IHByaWNlOiB2YXJpYW50LnByaWNlLCBjb21wYXJlX2F0X3ByaWNlOiB2YXJpYW50LmNvbXBhcmVfYXRfcHJpY2UgfSk7XG4gICAgdGhpcy5fdXBkYXRlU0tVKHZhcmlhbnQpO1xuICAgIHRoaXMuX3VwZGF0ZUJhZGdlKHZhcmlhbnQpO1xuICAgIHRoaXMuX3VwZGF0ZVN0b2NrTGV2ZWwodmFyaWFudCk7XG4gICAgdGhpcy5fdXBkYXRlQnV0dG9uKHZhcmlhbnQpO1xuICAgIHRoaXMuX3VwZGF0ZVN3YXRjaExhYmVsKHZhcmlhbnQpO1xuICAgIHRoaXMuX3VwZGF0ZUZ1bGxEZXRhaWxzTGluayh2YXJpYW50KTtcbiAgICB0aGlzLl91cGRhdGVVbml0UHJpY2UodmFyaWFudCk7XG5cbiAgICBpZiAodGhpcy51c2VIaXN0b3J5KSB7XG4gICAgICBjb25zdCB1cmwgPSBgJHsgdGhpcy5wcm9kdWN0LmhhbmRsZSB9PyR7JC5wYXJhbSh7IHZhcmlhbnQ6IHZhcmlhbnQuaWQgfSl9YDtcbiAgICAgIGhpc3RvcnkucmVwbGFjZVN0YXRlKHt9LCAndmFyaWFudCcsIHVybCk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZVByaWNlKHByaWNlKSB7XG4gICAgLy8gVXBkYXRlIGNvbXBhcmUgYXQgcHJpY2VcbiAgICBjb25zdCBoYXNDb21wYXJlUHJpY2UgPSAoXG4gICAgICAhIXByaWNlLmNvbXBhcmVfYXRfcHJpY2UgJiYgcHJpY2UuY29tcGFyZV9hdF9wcmljZSA+IHByaWNlLnByaWNlXG4gICAgKTtcbiAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJGNvbXBhcmVBdFByaWNlLnRvZ2dsZUNsYXNzKCd2aXNpYmxlJywgaGFzQ29tcGFyZVByaWNlKTtcbiAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJGNvbXBhcmVBdFByaWNlTW9uZXkudGV4dChTaG9waWZ5LmZvcm1hdE1vbmV5KHByaWNlLmNvbXBhcmVfYXRfcHJpY2UsIHRoaXMuc2V0dGluZ3MubW9uZXlfZm9ybWF0KSk7XG5cbiAgICAvLyBVcGRhdGUgcHJpY2VcbiAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJHByaWNlTW9uZXkudGV4dChTaG9waWZ5LmZvcm1hdE1vbmV5KHByaWNlLnByaWNlLCB0aGlzLnNldHRpbmdzLm1vbmV5X2Zvcm1hdCkpO1xuICB9XG5cbiAgX3VwZGF0ZVNLVSh2YXJpYW50KSB7XG4gICAgaWYgKHZhcmlhbnQuc2t1ID09PSAnJykge1xuICAgICAgdGhpcy52YXJpYW50RmllbGRzLiRza3UucGFyZW50KCkuYWRkQ2xhc3MoJ3Byb2R1Y3Qtc2t1LS1lbXB0eScpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJHNrdS5wYXJlbnQoKS5yZW1vdmVDbGFzcygncHJvZHVjdC1za3UtLWVtcHR5Jyk7XG4gICAgfVxuXG4gICAgdGhpcy52YXJpYW50RmllbGRzLiRza3UudGV4dCh2YXJpYW50LnNrdSk7XG4gIH1cblxuICBfdXBkYXRlQmFkZ2UodmFyaWFudCkge1xuICAgIGNvbnN0IHByaWNlU2F2ZWQgPSB2YXJpYW50LmNvbXBhcmVfYXRfcHJpY2UgPyB2YXJpYW50LmNvbXBhcmVfYXRfcHJpY2UgLSB2YXJpYW50LnByaWNlIDogMDtcbiAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJGJhZGdlLnRvZ2dsZSghIXByaWNlU2F2ZWQpO1xuXG4gICAgaWYgKHRoaXMudmFyaWFudEZpZWxkcy4kYmFkZ2VNb25leVNhdmVkLmxlbmd0aCkge1xuICAgICAgLy8gVXBkYXRlIGJhZGdlIGlmIGl0IHNob3dzIG1vbmV5IHNhdmVkXG4gICAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJGJhZGdlTW9uZXlTYXZlZFswXS5pbm5lckhUTUwgPSBTaG9waWZ5LmZvcm1hdE1vbmV5KHByaWNlU2F2ZWQsIHRoaXMuc2V0dGluZ3MubW9uZXlfZm9ybWF0KVxuICAgIH1cblxuICAgIGlmICh0aGlzLnZhcmlhbnRGaWVsZHMuJGJhZGdlUGVyY2VudFNhdmVkLmxlbmd0aCkge1xuICAgICAgLy8gVXBkYXRlIGJhZGdlIGlmIGl0IHNob3dzIHBlcmNlbnRpbGVzXG4gICAgICBjb25zdCBwZXJjZW50aWxlU2F2ZWQgPSBNYXRoLnJvdW5kKChwcmljZVNhdmVkICogMTAwKSAvIHZhcmlhbnQuY29tcGFyZV9hdF9wcmljZSk7XG4gICAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJGJhZGdlUGVyY2VudFNhdmVkLnRleHQocGVyY2VudGlsZVNhdmVkKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlU3RvY2tMZXZlbCh2YXJpYW50KSB7XG4gICAgaWYgKCF0aGlzLnNldHRpbmdzLmVuYWJsZVN0b2NrQmFkZ2UpIHJldHVybjtcblxuICAgIGxldCB1cmwgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XG5cbiAgICBpZiAoIXVybC5pbmNsdWRlcygnL3Byb2R1Y3RzJykpIHtcbiAgICAgIHVybCA9IGAke3VybH0vcHJvZHVjdHMvJHt0aGlzLnByb2R1Y3QuaGFuZGxlfWBcbiAgICB9XG5cbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICB2aWV3OiAnX3N0b2NrLWxldmVsJyxcbiAgICAgIHZhcmlhbnQ6IHZhcmlhbnQuaWQsXG4gICAgfVxuXG4gICAgaWYgKHZhcmlhbnQuaW52ZW50b3J5X21hbmFnZW1lbnQgPT09IG51bGwpIHtcbiAgICAgIHRoaXMudmFyaWFudEZpZWxkcy4kc3RvY2tMZXZlbC5odG1sKCcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgQXN5bmNWaWV3LmxvYWQodXJsLCBwYXJhbXMpXG4gICAgICAgIC50aGVuKCh7IGh0bWwsIGRhdGEgfSkgPT4ge1xuICAgICAgICAgIGxldCBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgIGZyYWdtZW50LmlubmVySFRNTCA9IGh0bWwuc3RvY2tMZXZlbDtcblxuICAgICAgICAgIGNvbnN0IHJlcGxhY2VtZW50ID0gZnJhZ21lbnQucXVlcnlTZWxlY3RvcignLnByb2R1Y3QtLXN0b2NrLWxldmVsJyk7XG5cbiAgICAgICAgICB0aGlzLnZhcmlhbnRGaWVsZHMuJHN0b2NrTGV2ZWwuaHRtbChyZXBsYWNlbWVudCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVCdXR0b24odmFyaWFudCkge1xuICAgIGlmICh2YXJpYW50LmF2YWlsYWJsZSkge1xuICAgICAgdGhpcy4kcHJvZHVjdEF0Y0J1dHRvbi50ZXh0KHRoaXMuY29udGV4dC5wcm9kdWN0X2F2YWlsYWJsZSk7XG4gICAgICB0aGlzLiRwcm9kdWN0QXRjQnV0dG9uXG4gICAgICAgIC5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKVxuICAgICAgICAucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuJHByb2R1Y3RBdGNCdXR0b24udGV4dCh0aGlzLmNvbnRleHQucHJvZHVjdF91bmF2YWlsYWJsZSk7XG4gICAgICB0aGlzLiRwcm9kdWN0QXRjQnV0dG9uXG4gICAgICAgIC5hZGRDbGFzcygnZGlzYWJsZWQnKVxuICAgICAgICAucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlU3dhdGNoTGFiZWwodmFyaWFudCkge1xuICAgIGlmICh0aGlzLnNldHRpbmdzLmVuYWJsZVN3YXRjaGVzKSB7XG4gICAgICBjb25zdCBzd2F0Y2hMYWJlbCA9IHRoaXMuJGZvcm1bMF0ucXVlcnlTZWxlY3RvcignW2RhdGEtb3B0aW9uLXN3YXRjaC12YWx1ZV0nKTtcbiAgICAgIGlmIChzd2F0Y2hMYWJlbCkge1xuICAgICAgICBzd2F0Y2hMYWJlbC5pbm5lclRleHQgPSB2YXJpYW50Lm9wdGlvbnNbcGFyc2VJbnQoc3dhdGNoTGFiZWwuZGF0YXNldC5vcHRpb25Td2F0Y2hWYWx1ZSwgMTApXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBfdXBkYXRlRnVsbERldGFpbHNMaW5rKHZhcmlhbnQpIHtcbiAgICBpZiAodGhpcy5kZXRhaWxzTGluaykge1xuICAgICAgdGhpcy5kZXRhaWxzTGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBgJHt0aGlzLmRldGFpbHNCYXNlSHJlZn0/dmFyaWFudD0ke3ZhcmlhbnQuaWR9YCk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZVVuaXRQcmljZSh2YXJpYW50KSB7XG4gICAgaWYgKHRoaXMudmFyaWFudEZpZWxkcy51bml0UHJpY2UgJiYgdmFyaWFudC51bml0X3ByaWNlX21lYXN1cmVtZW50KSB7XG4gICAgICB0aGlzLnZhcmlhbnRGaWVsZHMudG90YWxRdWFudGl0eS5pbm5lckhUTUwgPSBgJHt2YXJpYW50LnVuaXRfcHJpY2VfbWVhc3VyZW1lbnQucXVhbnRpdHlfdmFsdWV9JHt2YXJpYW50LnVuaXRfcHJpY2VfbWVhc3VyZW1lbnQucXVhbnRpdHlfdW5pdH1gO1xuXG4gICAgICB0aGlzLnZhcmlhbnRGaWVsZHMudW5pdFByaWNlQW1vdW50LmlubmVySFRNTCA9IFNob3BpZnkuZm9ybWF0TW9uZXkodmFyaWFudC51bml0X3ByaWNlLCB0aGlzLnNldHRpbmdzLm1vbmV5X2Zvcm1hdCk7XG4gICAgICBpZiAodmFyaWFudC51bml0X3ByaWNlX21lYXN1cmVtZW50LnJlZmVyZW5jZV92YWx1ZSA9PT0gMSkge1xuICAgICAgICB0aGlzLnZhcmlhbnRGaWVsZHMudW5pdFByaWNlTWVhc3VyZS5pbm5lckhUTUwgPSB2YXJpYW50LnVuaXRfcHJpY2VfbWVhc3VyZW1lbnQucmVmZXJlbmNlX3VuaXQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnZhcmlhbnRGaWVsZHMudW5pdFByaWNlTWVhc3VyZS5pbm5lckhUTUwgPSBgJHt2YXJpYW50LnVuaXRfcHJpY2VfbWVhc3VyZW1lbnQucmVmZXJlbmNlX3ZhbHVlfSR7dmFyaWFudC51bml0X3ByaWNlX21lYXN1cmVtZW50LnJlZmVyZW5jZV91bml0fWA7XG4gICAgICB9XG4gICAgICB0aGlzLnZhcmlhbnRGaWVsZHMudW5pdFByaWNlLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgIH0gZWxzZSBpZiAodGhpcy52YXJpYW50RmllbGRzLnVuaXRQcmljZSkge1xuICAgICAgdGhpcy52YXJpYW50RmllbGRzLnVuaXRQcmljZS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy52YXJpYW50RmllbGRzLnRheExpbmUpIHtcbiAgICAgIGlmICh2YXJpYW50LnRheGFibGUpIHtcbiAgICAgICAgdGhpcy52YXJpYW50RmllbGRzLnRheExpbmUuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnZhcmlhbnRGaWVsZHMudGF4TGluZS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBfQWRkVG9DYXJ0Rmx5b3V0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IGZvcm1EYXRhID0gdGhpcy4kZm9ybS5zZXJpYWxpemVBcnJheSgpO1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICRhdGNCdXR0b246IHRoaXMuJHByb2R1Y3RBdGNCdXR0b24sXG4gICAgICBzZXR0aW5nczoge1xuICAgICAgICBtb25leUZvcm1hdDogdGhpcy5zZXR0aW5ncy5tb25leV9mb3JtYXQsXG4gICAgICAgIGNhcnRSZWRpcmVjdGlvbjogdGhpcy5zZXR0aW5ncy5jYXJ0X3JlZGlyZWN0aW9uLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgQWRkVG9DYXJ0Rmx5b3V0LmluaXQoZm9ybURhdGEsIHRoaXMucHJvZHVjdCwgb3B0aW9ucywgdGhpcy5hdGNDYWxsYmFja3MpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/components/ProductDetails.js\n");

/***/ }),

/***/ "./source/scripts/components/ProductGallery.js":
/*!*****************************************************!*\
  !*** ./source/scripts/components/ProductGallery.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductGallery; });\n/* harmony import */ var drift_zoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! drift-zoom */ \"./node_modules/drift-zoom/es/Drift.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/events */ \"./node_modules/@pixelunion/events/dist/EventHandler.js\");\n/* harmony import */ var _pixelunion_events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_events__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Layout */ \"./source/scripts/Layout.js\");\n/* harmony import */ var _Video__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Video */ \"./source/scripts/components/Video.js\");\n/* harmony import */ var _ProductClickToZoom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ProductClickToZoom */ \"./source/scripts/components/ProductClickToZoom.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar ProductGallery = /*#__PURE__*/function () {\n  function ProductGallery(options) {\n    var _this = this;\n\n    _classCallCheck(this, ProductGallery);\n\n    this.el = options.el;\n    this.settings = options.settings;\n    this.isQuickshop = options.isQuickshop || false;\n    this.modelJson = options.models;\n    this.events = new _pixelunion_events__WEBPACK_IMPORTED_MODULE_2___default.a();\n    this.viewer = this.el.querySelector('[data-gallery-viewer]');\n    this.navigation = this.el.querySelector('[data-gallery-navigation]');\n    this.navScroller = this.el.querySelector('[data-gallery-scroller]');\n    this.navScrollerButtons = this.el.querySelectorAll('[data-gallery-scroll-button]');\n    this.figures = this.viewer.querySelectorAll('[data-gallery-figure]');\n    this.thumbnails = this.navigation.querySelectorAll('[data-gallery-thumbnail]');\n    this.zoomButton = this.viewer.querySelector('[data-gallery-expand]');\n    this.selected = {\n      figure: this.viewer.querySelector('[data-gallery-selected=\"true\"]'),\n      thumbnail: this.navigation.querySelector('[data-gallery-selected=\"true\"]')\n    };\n    this.models = {};\n    this.videos = {};\n    this.selectedVideo = null;\n    this.selectedModel = null;\n    this.showingInitialSlide = true;\n    this.updateSlideHeight = this._setSlideHeight.bind(this);\n    this._setupSelectedVideo = this._setupSelectedVideo.bind(this);\n    var features = [];\n\n    if (this.el.querySelector('[data-media-type=\"video\"]')) {\n      Promise.all([new Promise(function (resolve) {\n        if (!document.querySelector('#plyr-stylesheet')) {\n          var link = document.createElement('link');\n          link.setAttribute('id', 'plyr-stylesheet');\n          link.setAttribute('rel', 'stylesheet');\n          link.setAttribute('href', 'https://cdn.shopify.com/shopifycloud/shopify-plyr/v1.0/shopify-plyr.css');\n          link.onload = resolve;\n          document.body.appendChild(link);\n        } else {\n          resolve();\n        }\n      }), new Promise(function (resolve) {\n        features.push({\n          name: 'video-ui',\n          version: '1.0',\n          onLoad: resolve\n        });\n      })]).then(function () {\n        return _this._setupSelectedVideo();\n      });\n    }\n\n    if (this.el.querySelector('[data-media-type=\"model\"]')) {\n      this.viewInYourSpaceEl = this.el.querySelector('[data-shopify-xr]');\n      this.events.register(this.viewInYourSpaceEl, 'click', function (e) {\n        return _this._onViewInYourSpaceClick(e);\n      });\n      features.push({\n        name: 'model-viewer-ui',\n        version: '1.0',\n        onLoad: function onLoad() {\n          return _this._onModelLibraryLoad();\n        }\n      });\n      features.push({\n        name: 'shopify-xr',\n        version: '1.0',\n        onLoad: function onLoad() {\n          return _this._onShopifyXRLoad();\n        }\n      });\n    }\n\n    if (features.length) {\n      window.Shopify.loadFeatures(features);\n    }\n\n    if (this.isQuickshop) {\n      var quickshopModal = document.querySelector('[data-modal-container]');\n      quickshopModal.classList.add('quickshop-thumbs-left'); // Because of the way the quickshop is animated to open, if a video is first in the\n      // gallery the height of the slide will not be correct, so we need to wait until all the\n      // transitions end. This will only fire once, as opposed to listening to transitionend.\n      // this is especially important if the thumbnails are left aligned.\n\n      if (this.figures[0].dataset.mediaType === 'video') {\n        setTimeout(function () {\n          return _this._setSlideHeight();\n        }, 800);\n      }\n    }\n\n    this.events.register(this.navScroller, 'click', function (e) {\n      return _this._onThumbnailClick(e);\n    });\n    this.events.register(this.navScroller, 'scroll', function () {\n      return _this._handleScrollButtonVisibility();\n    });\n    this.events.register(this.navScrollerButtons[0], 'click', function () {\n      return _this._onScrollButtonClick(true);\n    });\n    this.events.register(this.navScrollerButtons[1], 'click', function () {\n      return _this._onScrollButtonClick(false);\n    });\n\n    if (this.settings.click_to_zoom !== 'disabled') {\n      var onZoomButtonClick = function onZoomButtonClick(e) {\n        e.stopPropagation();\n\n        _this._openImageZoom();\n      };\n\n      this.events.register(this.zoomButton, 'click', function (e) {\n        return onZoomButtonClick(e);\n      });\n      this.events.register(this.viewer, 'click', function (e) {\n        return onZoomButtonClick(e);\n      });\n    }\n\n    this._onResize = this._onResize.bind(this);\n    this.events.register(window, 'resize', function () {\n      return _this._onResize();\n    });\n\n    if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('S')) {\n      this._setupFlickity();\n\n      this._handleScrollButtonVisibility();\n    }\n\n    this._selectMediaByEl(this.selected.figure);\n  }\n\n  _createClass(ProductGallery, [{\n    key: \"selectMediaByVariant\",\n    value: function selectMediaByVariant(variant) {\n      if (!variant.featured_media) return;\n      var slide = this.viewer.querySelector(\"[data-media=\\\"\".concat(variant.featured_media.id, \"\\\"]\"));\n\n      this._selectMediaByEl(slide);\n    } // There are a few things we have to reset when the quickshop is opened. This is to catch\n    // the situation where if a quickshop is closed and then re-opened, especially after\n    // screen resize.\n\n  }, {\n    key: \"onQuickshopOpen\",\n    value: function onQuickshopOpen() {\n      this._setSlideHeight();\n\n      this._handleScrollButtonVisibility();\n\n      this._selectMediaByEl(this.selected.figure);\n    }\n  }, {\n    key: \"unloadAllMedia\",\n    value: function unloadAllMedia() {\n      for (var i = 0; i < this.figures.length; i++) {\n        if (this.models[i]) {\n          this.models[i].destroy();\n          this.models[i] = null;\n        }\n\n        if (this.videos[i]) {\n          this.videos[i].destroy();\n          this.videos[i] = null;\n        }\n      }\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.events.unregisterAll();\n      this.unloadAllMedia();\n\n      if (this.isQuickshop) {\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_3__[\"default\"].unwatch(this.el);\n      }\n\n      this._closeImageZoom();\n\n      this._disableHoverZoom();\n\n      this._disableFlickity();\n    }\n  }, {\n    key: \"_onModelLibraryLoad\",\n    value: function _onModelLibraryLoad() {\n      var _this2 = this;\n\n      var onPlayListener = function onPlayListener() {\n        if (_this2.flickity) {\n          _this2.flickity.unbindDrag();\n        }\n      };\n\n      var onPauseListener = function onPauseListener() {\n        if (_this2.flickity) {\n          _this2.flickity.bindDrag();\n        }\n      };\n\n      this.el.querySelectorAll('.product-gallery--model').forEach(function (figureEl) {\n        var modelEl = figureEl.querySelector('model-viewer');\n        var galleryIndex = figureEl.dataset.galleryIndex;\n        var controls = ['zoom-in', 'zoom-out'];\n        if (document.fullscreenEnabled) controls.push('fullscreen');\n        _this2.models[galleryIndex] = new Shopify.ModelViewerUI(modelEl, {\n          controls: controls\n        });\n\n        _this2.events.register(modelEl, 'shopify_model_viewer_ui_toggle_play', onPlayListener);\n\n        _this2.events.register(modelEl, 'shopify_model_viewer_ui_toggle_pause', onPauseListener);\n      });\n    }\n  }, {\n    key: \"_onShopifyXRLoad\",\n    value: function _onShopifyXRLoad() {\n      if (this.modelJson) {\n        window.ShopifyXR = window.ShopifyXR || function () {\n          (ShopifyXR.q = ShopifyXR.q || []).push(arguments);\n        }; // eslint-disable-line\n\n\n        if (window.ShopifyXR.addModels) {\n          window.ShopifyXR.addModels(this.modelJson);\n        } else {\n          window.ShopifyXR('addModels', this.modelJson);\n        }\n      }\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('S', true)) {\n        this._disableFlickity();\n      } else {\n        this._setupFlickity();\n      }\n\n      if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L', true) && !this.drift) {\n        this._setupHoverZoom();\n      } else if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('L')) {\n        this._disableHoverZoom();\n      }\n\n      this._adjustGalleryPositioning();\n\n      this._handleScrollButtonVisibility();\n    }\n  }, {\n    key: \"_onThumbnailClick\",\n    value: function _onThumbnailClick(e) {\n      var button;\n      this.showingInitialSlide = false; // We use pointer-events: none on all of the elements within the thumbnail\n      // so that any click event will be triggered on the button.\n\n      if (e.target.classList.contains('product-gallery--media-thumbnail')) {\n        button = e.target;\n      } else {\n        return;\n      }\n\n      var selectedIndex = parseInt(button.dataset.galleryIndex, 10);\n\n      if (this.flickity) {\n        this.flickity.select(selectedIndex);\n      } else {\n        this._selectMediaByIndex(selectedIndex);\n      }\n    }\n  }, {\n    key: \"_onViewInYourSpaceClick\",\n    value: function _onViewInYourSpaceClick(e) {\n      var currentTarget = e.currentTarget;\n      var figure = this.viewer.querySelector(\"[data-media=\\\"\".concat(currentTarget.dataset.shopifyModel3dId, \"\\\"]\"));\n\n      this._selectMediaByEl(figure);\n    }\n  }, {\n    key: \"_selectMediaByEl\",\n    value: function _selectMediaByEl(el) {\n      this._selectMediaByIndex(parseInt(el.dataset.galleryIndex, 10));\n    }\n  }, {\n    key: \"_selectMediaByIndex\",\n    value: function _selectMediaByIndex(index) {\n      var figure = this.figures[index];\n      this.selected.figure.dataset.gallerySelected = false;\n      this.selected.figure.setAttribute('aria-hidden', true);\n      this.selected.figure = figure;\n      this.selected.figure.dataset.gallerySelected = true;\n      this.selected.figure.setAttribute('aria-hidden', false);\n      this.selected.thumbnail.dataset.gallerySelected = false;\n      this.selected.thumbnail = this.thumbnails[index];\n      this.selected.thumbnail.dataset.gallerySelected = true;\n      var _this$selected$figure = this.selected.figure.dataset,\n          media = _this$selected$figure.media,\n          mediaType = _this$selected$figure.mediaType;\n      this.viewer.dataset.selectedMediaType = mediaType;\n\n      this._disableHoverZoom();\n\n      if (this.selectedModel) {\n        this.selectedModel.pause();\n      }\n\n      if (this.models[figure.dataset.galleryIndex]) {\n        this.selectedModel = this.models[figure.dataset.galleryIndex];\n\n        if (!document.documentElement.classList.contains('has-touch') && !this.showingInitialSlide) {\n          this.selectedModel.play();\n        }\n      }\n\n      if (this.selectedVideo) {\n        this.selectedVideo.pause();\n      }\n\n      if (this.viewInYourSpaceEl) {\n        this.viewInYourSpaceEl.dataset.shopifyModel3dId = this.viewInYourSpaceEl.dataset.defaultModelId;\n      }\n\n      switch (mediaType) {\n        case 'model':\n          this.viewInYourSpaceEl.dataset.shopifyModel3dId = media;\n          break;\n\n        case 'video':\n        case 'external_video':\n          this._setupSelectedVideo();\n\n          break;\n\n        case 'image':\n          this._setupHoverZoom();\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (this.flickity) {\n        this.flickity.bindDrag();\n        this.flickity.select(index);\n      }\n\n      this._adjustGalleryPositioning();\n    }\n  }, {\n    key: \"_setupSelectedVideo\",\n    value: function _setupSelectedVideo() {\n      if (this.selectedVideo) {\n        this.selectedVideo.pause();\n      }\n\n      var _this$selected$figure2 = this.selected.figure.dataset,\n          mediaType = _this$selected$figure2.mediaType,\n          galleryIndex = _this$selected$figure2.galleryIndex;\n      var shouldAutoplay = _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L', true) && this.settings.gallery_video_autoplay && !this.showingInitialSlide;\n\n      if (mediaType === 'video' || mediaType === 'external_video') {\n        var videoElement;\n\n        if (this.videos[galleryIndex]) {\n          this.selectedVideo = this.videos[galleryIndex];\n          if (shouldAutoplay) this.selectedVideo.play();\n        } else {\n          if (mediaType === 'video') {\n            // Plyr hasn't loaded yet, will be called again after loadFeatures\n            if (!Shopify.Plyr) return;\n            videoElement = this.selected.figure.querySelector('video');\n            this.selectedVideo = new Shopify.Plyr(videoElement, {\n              loop: {\n                active: this.settings.gallery_video_looping\n              }\n            });\n            if (shouldAutoplay) this.selectedVideo.play();\n          } else {\n            videoElement = this.selected.figure.querySelector('[data-video]');\n            this.selectedVideo = new _Video__WEBPACK_IMPORTED_MODULE_5__[\"default\"](videoElement, {\n              loop: this.settings.gallery_video_looping\n            });\n            if (shouldAutoplay) this.selectedVideo.play();\n          }\n\n          this.videos[galleryIndex] = this.selectedVideo;\n        }\n\n        this.selected.figure.focus();\n      }\n    }\n  }, {\n    key: \"_setupHoverZoom\",\n    value: function _setupHoverZoom() {\n      var _this3 = this;\n\n      if (this.settings.hover_zoom === 'disabled' || !_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L', true) || this.selected.figure.dataset.mediaType !== 'image' || document.documentElement.classList.contains('has-touch')) return;\n      var selectedImage = this.selected.figure.querySelector('[data-rimg]');\n      selectedImage.setAttribute('data-zoom', this.selected.figure.getAttribute('data-zoom'));\n      this.drift = new drift_zoom__WEBPACK_IMPORTED_MODULE_0__[\"default\"](selectedImage, {\n        paneContainer: this.settings.hover_zoom === 'separate' ? this.el.querySelector('[data-zoomed-image]') : this.selected.figure,\n        inlinePane: false,\n        hoverBoundingBox: this.settings.hover_zoom === 'separate',\n        handleTouch: false,\n        onShow: function onShow() {\n          if (_this3.settings.hover_zoom === 'separate') {\n            document.body.classList.add('product-gallery--fade');\n          }\n        },\n        onHide: function onHide() {\n          if (_this3.settings.hover_zoom === 'separate') {\n            document.body.classList.remove('product-gallery--fade');\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_disableHoverZoom\",\n    value: function _disableHoverZoom() {\n      if (this.drift) {\n        this.drift.disable();\n        this.drift = null;\n      }\n    }\n  }, {\n    key: \"_setupFlickity\",\n    value: function _setupFlickity() {\n      var _this4 = this;\n\n      if (this.flickity || !_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('S')) return;\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_1___default.a(this.viewer, {\n        accessibility: false,\n        adaptiveHeight: true,\n        cellSelector: '.product-gallery--media',\n        contain: true,\n        friction: 0.5,\n        freeScroll: false,\n        initialIndex: parseInt(this.selected.figure.dataset.galleryIndex, 10),\n        lazyLoad: false,\n        percentPosition: false,\n        prevNextButtons: false,\n        pageDots: false,\n        selectedAttraction: 0.1,\n        setGallerySize: false,\n        wrapAround: true\n      });\n      this.flickityEvent = this.events.register(this.settings.lazy_load ? this.viewer : this.selected.figure.querySelector('img'), this.settings.lazy_load ? 'rimg:load' : 'load', function () {\n        return _this4._setSlideHeight();\n      });\n      this.flickity.on('change', function (index) {\n        _this4.showingInitialSlide = false;\n\n        _this4._selectMediaByEl(_this4.figures[index]);\n      }); // Flickity controls the pointerdown event which prevents model-viewer-ui from\n      // triggering .play() on mouseup. This returns this functionality.\n\n      this.flickity.on('staticClick', function (event, pointer, cellElement) {\n        var figure = cellElement.querySelector('.product-gallery--model');\n\n        if (figure && _this4.models[figure.dataset.galleryIndex]) {\n          var model = _this4.models[figure.dataset.galleryIndex];\n          model.play();\n        }\n      });\n      this.flickity.on('pointerDown', function () {\n        // Removes the focus ring when swiping with touch device\n        _this4.viewer.blur();\n      }); // We need to disable the product zoom open if a user is swiping\n      // This was an issue on mouse gestures, not on touch\n\n      if (this.settings.click_to_zoom !== 'disabled' && document.documentElement.classList.contains('no-touch')) {\n        this.flickity.on('dragEnd', function () {\n          _this4.swiped = true;\n        });\n      }\n\n      this._setSlideHeight();\n    }\n  }, {\n    key: \"_disableFlickity\",\n    value: function _disableFlickity() {\n      if (this.flickity) {\n        this.flickity.destroy();\n        this.flickity = null;\n        this.events.unregister(this.flickityEvent);\n      }\n    }\n  }, {\n    key: \"_setSlideHeight\",\n    value: function _setSlideHeight() {\n      this.navigation.classList.remove('loading'); // Use the stored image height for situations where the DOM is in a midway state.\n\n      var containerHeight = this.storedImageHeight || this.selected.figure.getBoundingClientRect().height;\n      this.storedImageHeight = null;\n\n      if (containerHeight > 0) {\n        this.viewer.style.height = \"\".concat(containerHeight, \"px\");\n      }\n    }\n  }, {\n    key: \"_adjustGalleryPositioning\",\n    value: function _adjustGalleryPositioning() {\n      var _this5 = this;\n\n      if (this.settings.thumbnail_position === 'left') {\n        if (this.isQuickshop) {\n          if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L', true)) {\n            this.el.dataset.productGalleryThumbs = 'left';\n          } else {\n            this.storedImageHeight = this.selected.figure.getBoundingClientRect().height;\n            this.el.dataset.productGalleryThumbs = 'center';\n          }\n        } // We need to adjust the width of the thumbnails if they are positioned left\n        // and they wrap into 2 columns. CSS flexbox does not cause the width of the\n        // element to stretch. Looks like it's a problem with flexbox when wrapping columns:\n        // https://stackoverflow.com/questions/33891709/when-flexbox-items-wrap-in-column-mode-container-does-not-grow-its-width\n\n\n        if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L', true) || _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('S', true) && !this.isQuickshop) {\n          if (this.el.firstChild !== this.navigation) {\n            var activeButton = document.activeElement;\n            this.el.insertBefore(this.navigation, this.viewer);\n            activeButton.focus(); // This prevents loss of focus if one of the thumbnails are selected\n          } // When switching layouts in the editor sometimes we need to wait for a few milliseconds\n          // before positioning the thumbs.\n\n\n          setTimeout(function () {\n            // Double check that the layout is the correct size, since the timeout will\n            if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L', true) || _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('S', true) && !_this5.isQuickshop) {\n              var leftmostBounds = _this5.thumbnails[0].getBoundingClientRect();\n\n              var thumbStyle = _this5.thumbnails[0].currentStyle || window.getComputedStyle(_this5.thumbnails[0]);\n              var thumbMargin = parseInt(thumbStyle.marginLeft, 10) * 2;\n              var wrapped = Array.prototype.some.call(_this5.thumbnails, function (thumb) {\n                return thumb.getBoundingClientRect().left > leftmostBounds.left;\n              });\n\n              if (wrapped) {\n                _this5.navigation.style.width = \"\".concat((leftmostBounds.width + thumbMargin) * 2, \"px\");\n                _this5.navigation.style.maxWidth = \"\".concat((leftmostBounds.width + thumbMargin) * 2, \"px\");\n              }\n            } else {\n              _this5.navigation.style.width = '';\n              _this5.navigation.style.maxWidth = '';\n            }\n\n            _this5._setSlideHeight();\n          }, 500);\n        } else {\n          if (this.el.firstElementChild === this.navigation) {\n            this.el.appendChild(this.navigation);\n          }\n\n          this.navigation.style.width = '';\n          this.navigation.style.maxWidth = '';\n\n          this._setSlideHeight();\n        }\n\n        if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('S')) {\n          this._adjustMobileThumbnailPosition();\n        }\n      } else {\n        this._setSlideHeight();\n\n        this._adjustMobileThumbnailPosition();\n      }\n    }\n  }, {\n    key: \"_adjustMobileThumbnailPosition\",\n    value: function _adjustMobileThumbnailPosition() {\n      // This brings the thumbnail into view if it is not visible on the screen after\n      // a user swipes to a slide that it is tied to. Only important on mobile.\n      if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('S') || _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('L') && this.isQuickshop) {\n        var thumbBounds = this.selected.thumbnail.getBoundingClientRect();\n        var thumbWrapperBounds = this.navScroller.getBoundingClientRect();\n\n        if (this.selected.thumbnail.offsetLeft + thumbBounds.width + 30 - this.navScroller.scrollLeft > thumbWrapperBounds.width) {\n          this.navScroller.scrollLeft = this.selected.thumbnail.offsetLeft + thumbBounds.width - thumbWrapperBounds.width + 35;\n        } else if (this.selected.thumbnail.offsetLeft < this.navScroller.scrollLeft) {\n          this.navScroller.scrollLeft = this.selected.thumbnail.offsetLeft - 35;\n        }\n      }\n    }\n  }, {\n    key: \"_handleScrollButtonVisibility\",\n    value: function _handleScrollButtonVisibility() {\n      if (_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('S') || _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('L') && this.isQuickshop) {\n        // We use 4px here just to ensure the user has scrolled a little bit before\n        // showing the buttons.\n        if (this.navScroller.scrollLeft > 4) {\n          this.navScrollerButtons[0].classList.add('visible');\n        } else {\n          this.navScrollerButtons[0].classList.remove('visible');\n        }\n\n        if (this.navScroller.scrollLeft < this.navScroller.scrollWidth - this.navScroller.clientWidth) {\n          this.navScrollerButtons[1].classList.add('visible');\n        } else {\n          this.navScrollerButtons[1].classList.remove('visible');\n        }\n      } else {\n        this.navScrollerButtons[0].classList.remove('visible');\n        this.navScrollerButtons[1].classList.remove('visible');\n      }\n    }\n  }, {\n    key: \"_onScrollButtonClick\",\n    value: function _onScrollButtonClick(scrollRight) {\n      if (scrollRight) {\n        this.navScroller.scrollLeft = this.navScroller.scrollLeft - 100;\n      } else {\n        this.navScroller.scrollLeft = this.navScroller.scrollLeft + 100;\n      }\n    }\n  }, {\n    key: \"_closeImageZoom\",\n    value: function _closeImageZoom() {\n      if (this.imageZoom) {\n        this.imageZoom.unload();\n        this.imageZoom = null;\n      }\n    }\n  }, {\n    key: \"_openImageZoom\",\n    value: function _openImageZoom() {\n      var _this6 = this;\n\n      if (this.selected.figure.dataset.mediaType !== 'image' || _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isGreaterThanBreakpoint('L') && this.settings.click_to_zoom === 'mobile' || _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isLessThanBreakpoint('L') && this.settings.click_to_zoom === 'desktop') return;\n\n      if (this.swiped) {\n        this.swiped = false;\n        return;\n      }\n\n      this._closeImageZoom();\n\n      this.imageZoom = new _ProductClickToZoom__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n        settings: this.settings,\n        slides: this.figures,\n        originalThumbnails: this.thumbnails,\n        startIndex: parseInt(this.selected.figure.dataset.galleryIndex, 10),\n        selectGalleryIndex: function selectGalleryIndex(index) {\n          return _this6._selectMediaByIndex(index);\n        }\n      });\n    }\n  }]);\n\n  return ProductGallery;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/ProductGallery.js\n");

/***/ }),

/***/ "./source/scripts/components/ProductGridItem.js":
/*!******************************************************!*\
  !*** ./source/scripts/components/ProductGridItem.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductGridItem; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/LazyLoader */ \"./source/scripts/helpers/LazyLoader.js\");\n/* harmony import */ var _ProductQuickshop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ProductQuickshop */ \"./source/scripts/components/ProductQuickshop.js\");\n/* harmony import */ var _AddToCartFlyout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AddToCartFlyout */ \"./source/scripts/components/AddToCartFlyout.js\");\n/* harmony import */ var _GridItemSwatches__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./GridItemSwatches */ \"./source/scripts/components/GridItemSwatches.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar ProductGridItem = /*#__PURE__*/function () {\n  function ProductGridItem(options) {\n    _classCallCheck(this, ProductGridItem);\n\n    this.$el = options.$el;\n    this.id = options.id;\n    this.product = options.product;\n    this.currentView = options.view;\n    this.queryParams = options.queryParams || {};\n    this.events = [];\n    this._init = this._init.bind(this);\n\n    if (options.lazy === true) {\n      this.lazyLoader = new _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.$el[0], this._init);\n    } else {\n      this._init();\n    }\n  }\n\n  _createClass(ProductGridItem, [{\n    key: \"_init\",\n    value: function _init() {\n      var _this = this;\n\n      this.productQuickshop = null;\n      this.quickBuySettings = null;\n      this.actionsOpen = false;\n      this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n      this.$html = jquery__WEBPACK_IMPORTED_MODULE_0___default()('html');\n      this.$content = this.$el.find('[data-product-item-content]');\n      this.$actions = this.$el.find('[data-product-actions]');\n      this.swatchesEl = this.$el[0].querySelector('[data-swatches]');\n      this.hasProductActions = this.$actions.length;\n      this._addToCart = this._addToCart.bind(this);\n      this._actionsToggle = this._actionsToggle.bind(this);\n      var productQuickshopEl = this.$el.get(0).querySelector('[data-product-quickshop]');\n\n      if (productQuickshopEl) {\n        this.productQuickshop = new _ProductQuickshop__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n          el: productQuickshopEl,\n          id: this.id,\n          url: productQuickshopEl.dataset.productQuickshopUrl,\n          hash: productQuickshopEl.dataset.productQuickshopHash,\n          trigger: this.$el.find('.productitem--title a')[0],\n          button: this.$el.find('[data-quickshop-trigger=\"full\"]')\n        });\n\n        this._openQuickShop = function (e) {\n          e.preventDefault();\n\n          _this.productQuickshop.open(e.currentTarget.dataset.quickshopTrigger === 'full');\n        };\n\n        this._loadQuickShop = function () {\n          _this.productQuickshop.load();\n        };\n      }\n\n      if (this.hasProductActions || this.swatchesEl && this.swatchesEl.classList.contains('productitem--swatches-show-on-hover')) {\n        this.events.push(this.$content.on('mouseenter.product-item', this._actionsToggle));\n        this.events.push(this.$content.on('mouseleave.product-item', this._actionsToggle));\n        this.events.push(this.$content.on('focusin.product-item', this._actionsToggle));\n      }\n\n      if (this.hasProductActions) {\n        // $scripts checks existence of script in header before attempting to inject\n        scriptjs__WEBPACK_IMPORTED_MODULE_1___default()(jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-scripts]').data('shopify-api-url'), function () {\n          _this.events.push(_this.$el.on('click.product-item', '[data-quick-buy]', _this._addToCart));\n\n          if (_this.productQuickshop) {\n            _this.events.push(_this.$el.on('focusin.product-item', '[data-quickshop-trigger]', _this._loadQuickShop));\n\n            _this.events.push(_this.$el.on('mouseover.product-item', '[data-quickshop-trigger]', _this._loadQuickShop));\n\n            _this.events.push(_this.$el.on('click.product-item', '[data-quickshop-trigger]', _this._openQuickShop));\n          }\n        });\n      }\n\n      if (this.$el.find('[data-quick-buy]').length) {\n        this._initQuickBuy();\n      }\n\n      this._objectFitPolyfill();\n\n      if (this.swatchesEl) {\n        this.swatches = new _GridItemSwatches__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n          el: this.$el[0],\n          productQuickshop: this.productQuickshop,\n          product: this.product\n        });\n      }\n    }\n  }, {\n    key: \"handleViewChange\",\n    value: function handleViewChange(view) {\n      this.currentView = view;\n\n      if (this.swatches) {\n        this.swatches.resize();\n      }\n    }\n  }, {\n    key: \"_initQuickBuy\",\n    value: function _initQuickBuy() {\n      try {\n        this.quickBuySettings = JSON.parse(this.$el.find('[data-quick-buy-settings]').text());\n      } catch (error) {\n        return console.warn(\"Quick buy: invalid QuickBuy data found. \".concat(error.message));\n      }\n    }\n  }, {\n    key: \"_isObjectFitAvailable\",\n    value: function _isObjectFitAvailable() {\n      return 'objectFit' in document.documentElement.style;\n    }\n  }, {\n    key: \"_objectFitPolyfill\",\n    value: function _objectFitPolyfill() {\n      if (this._isObjectFitAvailable()) {\n        return;\n      }\n\n      var $figure = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-product-item-image]', this.$el);\n      var featuredSrc = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.productitem--image-primary', $figure).attr('src');\n      var alternateSrc = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.productitem--image-alternate', $figure).attr('src');\n      $figure.addClass('product-item-image-no-objectfit');\n      $figure.css('background-image', \"url(\\\"\".concat(featuredSrc, \"\\\")\"));\n\n      if (alternateSrc) {\n        this.$el.on('mouseover', function () {\n          $figure.css('background-image', \"url(\\\"\".concat(alternateSrc, \"\\\")\"));\n        });\n        this.$el.on('mouseleave', function () {\n          $figure.css('background-image', \"url(\\\"\".concat(featuredSrc, \"\\\")\"));\n        });\n      }\n    }\n    /**\n     * Get height of element, and combined height of element + actions\n     *\n     * @returns {{heightBase, heightExpanded: *}}\n     * @private\n     */\n\n  }, {\n    key: \"_getHeights\",\n    value: function _getHeights() {\n      var heightBase = 0;\n      var parent = this.$el.parent();\n\n      if (parent.hasClass('product-row--no-spacing') || parent.hasClass('productgrid--no-spacing')) {\n        var imageHeight = this.$el.find('[data-product-page-link]').outerHeight(true);\n        var infoHeight = this.$el.find('.productitem--info').outerHeight(true);\n        var cardPadding = parseFloat(this.$content.css('padding-top').replace('px', '')) + parseFloat(this.$content.css('padding-bottom').replace('px', ''));\n        heightBase = imageHeight + infoHeight + cardPadding;\n      } else {\n        heightBase = this.$el.height();\n      }\n\n      var actionsHeight = this.$el.find('[data-product-actions]').outerHeight(true) || 0;\n      var swatchesHeight = this.$el.find('.productitem--swatches-show-on-hover').outerHeight(true) || 0;\n      var heightExpanded = heightBase + actionsHeight + swatchesHeight;\n      return {\n        heightBase: heightBase,\n        heightExpanded: heightExpanded\n      };\n    }\n  }, {\n    key: \"_actionsToggle\",\n    value: function _actionsToggle(event) {\n      if (!_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"min\"]('L') || document.documentElement.classList.contains('has-touch') || this.currentView === 'list-view') return;\n      var $currentTarget = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var openProductItem = false; // This function gets called on the element as well as the document focusin, so we want to\n      // be extra careful that we are inside the product card in question. We want the product card\n      // to close if another product card has received focus.\n\n      var productHasFocus = this.$el.is($currentTarget) || this.$el.is($target) || this.$el.is($target.parents('.productgrid--item').first()) || event.type === 'focusin' && $target[0].contains(this.$el[0]);\n\n      if (event.type === 'mouseenter' || event.type === 'mouseleave') {\n        openProductItem = event.type === 'mouseenter';\n      } else if (productHasFocus) {\n        openProductItem = true;\n      }\n\n      if (openProductItem) {\n        this._showActions();\n      } else {\n        this._hideActions();\n      }\n    }\n  }, {\n    key: \"_showActions\",\n    value: function _showActions() {\n      var _this2 = this;\n\n      if (this.actionsOpen) {\n        return;\n      }\n\n      var _this$_getHeights = this._getHeights(),\n          heightBase = _this$_getHeights.heightBase,\n          heightExpanded = _this$_getHeights.heightExpanded; // Lock heights to prevent jumping\n\n\n      this.$el.css('height', heightBase);\n      this.$content.css('height', heightBase); // Store height for when hovering out\n\n      this.$el.data('base-height', heightBase); // Start animation, and transition height to expanded height\n\n      this.$el.revealer('show').one('revealer-animating.product-item', function () {\n        _this2.$content.css('height', heightExpanded);\n      });\n      document.addEventListener('focusin', this._actionsToggle);\n      this.actionsOpen = true;\n    }\n  }, {\n    key: \"_hideActions\",\n    value: function _hideActions() {\n      var _this3 = this;\n\n      var height = this.$el.data('base-height');\n      /*\n        - Transition buttons up, using base height for animation\n        - Remove heights after animation is complete in case of resize\n       */\n\n      this.$el.revealer('hide').one('revealer-animating', function () {\n        _this3.$el.off('revealer-animating.product-item');\n\n        _this3.$el.css({\n          height: height\n        });\n\n        _this3.$content.css({\n          height: height\n        });\n      }).one('revealer-hide', function () {\n        _this3.$el.off('revealer-hide.product-item').css('height', '');\n\n        _this3.$content.css('height', '');\n      });\n      document.removeEventListener('focusin', this._actionsToggle);\n      this.actionsOpen = false;\n    }\n  }, {\n    key: \"_addToCart\",\n    value: function _addToCart(event) {\n      event.preventDefault();\n      var $atcButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var variantID = $atcButton.attr('data-variant-id');\n      var formData = [{\n        'name': 'id',\n        'value': variantID\n      }, {\n        'name': 'quantity',\n        'value': 1\n      }];\n      var options = {\n        $atcButton: $atcButton,\n        settings: {\n          moneyFormat: this.quickBuySettings.money_format,\n          cartRedirection: this.quickBuySettings.cart_redirection\n        }\n      };\n      _AddToCartFlyout__WEBPACK_IMPORTED_MODULE_5__[\"default\"].init(formData, this.product, options);\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.events.forEach(function ($el) {\n        return $el.off('.product-item');\n      });\n\n      if (this.productQuickshop) {\n        this.productQuickshop.unload();\n      }\n\n      document.removeEventListener('focusin', this._actionsToggle);\n\n      if (this.swatches) {\n        this.swatches.unload();\n      }\n\n      this.lazyLoader.unload();\n    }\n  }]);\n\n  return ProductGridItem;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1Byb2R1Y3RHcmlkSXRlbS5qcz85YTA3Il0sIm5hbWVzIjpbIlByb2R1Y3RHcmlkSXRlbSIsIm9wdGlvbnMiLCIkZWwiLCJpZCIsInByb2R1Y3QiLCJjdXJyZW50VmlldyIsInZpZXciLCJxdWVyeVBhcmFtcyIsImV2ZW50cyIsIl9pbml0IiwiYmluZCIsImxhenkiLCJsYXp5TG9hZGVyIiwiTGF6eUxvYWRlciIsInByb2R1Y3RRdWlja3Nob3AiLCJxdWlja0J1eVNldHRpbmdzIiwiYWN0aW9uc09wZW4iLCIkd2luZG93IiwiJCIsIndpbmRvdyIsIiRodG1sIiwiJGNvbnRlbnQiLCJmaW5kIiwiJGFjdGlvbnMiLCJzd2F0Y2hlc0VsIiwicXVlcnlTZWxlY3RvciIsImhhc1Byb2R1Y3RBY3Rpb25zIiwibGVuZ3RoIiwiX2FkZFRvQ2FydCIsIl9hY3Rpb25zVG9nZ2xlIiwicHJvZHVjdFF1aWNrc2hvcEVsIiwiZ2V0IiwiUHJvZHVjdFF1aWNrc2hvcCIsImVsIiwidXJsIiwiZGF0YXNldCIsInByb2R1Y3RRdWlja3Nob3BVcmwiLCJoYXNoIiwicHJvZHVjdFF1aWNrc2hvcEhhc2giLCJ0cmlnZ2VyIiwiYnV0dG9uIiwiX29wZW5RdWlja1Nob3AiLCJlIiwicHJldmVudERlZmF1bHQiLCJvcGVuIiwiY3VycmVudFRhcmdldCIsInF1aWNrc2hvcFRyaWdnZXIiLCJfbG9hZFF1aWNrU2hvcCIsImxvYWQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInB1c2giLCJvbiIsIiRzY3JpcHQiLCJkYXRhIiwiX2luaXRRdWlja0J1eSIsIl9vYmplY3RGaXRQb2x5ZmlsbCIsInN3YXRjaGVzIiwiR3JpZEl0ZW1Td2F0Y2hlcyIsInJlc2l6ZSIsIkpTT04iLCJwYXJzZSIsInRleHQiLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic3R5bGUiLCJfaXNPYmplY3RGaXRBdmFpbGFibGUiLCIkZmlndXJlIiwiZmVhdHVyZWRTcmMiLCJhdHRyIiwiYWx0ZXJuYXRlU3JjIiwiYWRkQ2xhc3MiLCJjc3MiLCJoZWlnaHRCYXNlIiwicGFyZW50IiwiaGFzQ2xhc3MiLCJpbWFnZUhlaWdodCIsIm91dGVySGVpZ2h0IiwiaW5mb0hlaWdodCIsImNhcmRQYWRkaW5nIiwicGFyc2VGbG9hdCIsInJlcGxhY2UiLCJoZWlnaHQiLCJhY3Rpb25zSGVpZ2h0Iiwic3dhdGNoZXNIZWlnaHQiLCJoZWlnaHRFeHBhbmRlZCIsImV2ZW50IiwiYnJlYWtwb2ludCIsIiRjdXJyZW50VGFyZ2V0IiwiJHRhcmdldCIsInRhcmdldCIsIm9wZW5Qcm9kdWN0SXRlbSIsInByb2R1Y3RIYXNGb2N1cyIsImlzIiwicGFyZW50cyIsImZpcnN0IiwidHlwZSIsIl9zaG93QWN0aW9ucyIsIl9oaWRlQWN0aW9ucyIsIl9nZXRIZWlnaHRzIiwicmV2ZWFsZXIiLCJvbmUiLCJhZGRFdmVudExpc3RlbmVyIiwib2ZmIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIiRhdGNCdXR0b24iLCJ2YXJpYW50SUQiLCJmb3JtRGF0YSIsInNldHRpbmdzIiwibW9uZXlGb3JtYXQiLCJtb25leV9mb3JtYXQiLCJjYXJ0UmVkaXJlY3Rpb24iLCJjYXJ0X3JlZGlyZWN0aW9uIiwiQWRkVG9DYXJ0Rmx5b3V0IiwiaW5pdCIsImZvckVhY2giLCJ1bmxvYWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztJQUVxQkEsZTtBQUNuQiwyQkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNuQixTQUFLQyxHQUFMLEdBQVdELE9BQU8sQ0FBQ0MsR0FBbkI7QUFDQSxTQUFLQyxFQUFMLEdBQVVGLE9BQU8sQ0FBQ0UsRUFBbEI7QUFDQSxTQUFLQyxPQUFMLEdBQWVILE9BQU8sQ0FBQ0csT0FBdkI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CSixPQUFPLENBQUNLLElBQTNCO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQk4sT0FBTyxDQUFDTSxXQUFSLElBQXVCLEVBQTFDO0FBQ0EsU0FBS0MsTUFBTCxHQUFjLEVBQWQ7QUFFQSxTQUFLQyxLQUFMLEdBQWEsS0FBS0EsS0FBTCxDQUFXQyxJQUFYLENBQWdCLElBQWhCLENBQWI7O0FBRUEsUUFBSVQsT0FBTyxDQUFDVSxJQUFSLEtBQWlCLElBQXJCLEVBQTJCO0FBQ3pCLFdBQUtDLFVBQUwsR0FBa0IsSUFBSUMsMkRBQUosQ0FBZSxLQUFLWCxHQUFMLENBQVMsQ0FBVCxDQUFmLEVBQTRCLEtBQUtPLEtBQWpDLENBQWxCO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsV0FBS0EsS0FBTDtBQUNEO0FBQ0Y7Ozs7NEJBRU87QUFBQTs7QUFDTixXQUFLSyxnQkFBTCxHQUF3QixJQUF4QjtBQUNBLFdBQUtDLGdCQUFMLEdBQXdCLElBQXhCO0FBQ0EsV0FBS0MsV0FBTCxHQUFtQixLQUFuQjtBQUVBLFdBQUtDLE9BQUwsR0FBZUMsNkNBQUMsQ0FBQ0MsTUFBRCxDQUFoQjtBQUNBLFdBQUtDLEtBQUwsR0FBYUYsNkNBQUMsQ0FBQyxNQUFELENBQWQ7QUFDQSxXQUFLRyxRQUFMLEdBQWdCLEtBQUtuQixHQUFMLENBQVNvQixJQUFULENBQWMsNkJBQWQsQ0FBaEI7QUFDQSxXQUFLQyxRQUFMLEdBQWdCLEtBQUtyQixHQUFMLENBQVNvQixJQUFULENBQWMsd0JBQWQsQ0FBaEI7QUFDQSxXQUFLRSxVQUFMLEdBQWtCLEtBQUt0QixHQUFMLENBQVMsQ0FBVCxFQUFZdUIsYUFBWixDQUEwQixpQkFBMUIsQ0FBbEI7QUFDQSxXQUFLQyxpQkFBTCxHQUF5QixLQUFLSCxRQUFMLENBQWNJLE1BQXZDO0FBRUEsV0FBS0MsVUFBTCxHQUFrQixLQUFLQSxVQUFMLENBQWdCbEIsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBbEI7QUFDQSxXQUFLbUIsY0FBTCxHQUFzQixLQUFLQSxjQUFMLENBQW9CbkIsSUFBcEIsQ0FBeUIsSUFBekIsQ0FBdEI7QUFFQSxVQUFNb0Isa0JBQWtCLEdBQUcsS0FBSzVCLEdBQUwsQ0FBUzZCLEdBQVQsQ0FBYSxDQUFiLEVBQWdCTixhQUFoQixDQUE4QiwwQkFBOUIsQ0FBM0I7O0FBQ0EsVUFBSUssa0JBQUosRUFBd0I7QUFDdEIsYUFBS2hCLGdCQUFMLEdBQXdCLElBQUlrQix5REFBSixDQUFxQjtBQUMzQ0MsWUFBRSxFQUFFSCxrQkFEdUM7QUFFM0MzQixZQUFFLEVBQUUsS0FBS0EsRUFGa0M7QUFHM0MrQixhQUFHLEVBQUVKLGtCQUFrQixDQUFDSyxPQUFuQixDQUEyQkMsbUJBSFc7QUFJM0NDLGNBQUksRUFBRVAsa0JBQWtCLENBQUNLLE9BQW5CLENBQTJCRyxvQkFKVTtBQUszQ0MsaUJBQU8sRUFBRSxLQUFLckMsR0FBTCxDQUFTb0IsSUFBVCxDQUFjLHVCQUFkLEVBQXVDLENBQXZDLENBTGtDO0FBTTNDa0IsZ0JBQU0sRUFBRSxLQUFLdEMsR0FBTCxDQUFTb0IsSUFBVCxDQUFjLGlDQUFkO0FBTm1DLFNBQXJCLENBQXhCOztBQVFBLGFBQUttQixjQUFMLEdBQXNCLFVBQUFDLENBQUMsRUFBSTtBQUN6QkEsV0FBQyxDQUFDQyxjQUFGOztBQUNBLGVBQUksQ0FBQzdCLGdCQUFMLENBQXNCOEIsSUFBdEIsQ0FBMkJGLENBQUMsQ0FBQ0csYUFBRixDQUFnQlYsT0FBaEIsQ0FBd0JXLGdCQUF4QixLQUE2QyxNQUF4RTtBQUNELFNBSEQ7O0FBSUEsYUFBS0MsY0FBTCxHQUFzQixZQUFNO0FBQzFCLGVBQUksQ0FBQ2pDLGdCQUFMLENBQXNCa0MsSUFBdEI7QUFDRCxTQUZEO0FBR0Q7O0FBRUQsVUFBSSxLQUFLdEIsaUJBQUwsSUFBMkIsS0FBS0YsVUFBTCxJQUFtQixLQUFLQSxVQUFMLENBQWdCeUIsU0FBaEIsQ0FBMEJDLFFBQTFCLENBQW1DLHFDQUFuQyxDQUFsRCxFQUE4SDtBQUM1SCxhQUFLMUMsTUFBTCxDQUFZMkMsSUFBWixDQUFpQixLQUFLOUIsUUFBTCxDQUFjK0IsRUFBZCxDQUFpQix5QkFBakIsRUFBNEMsS0FBS3ZCLGNBQWpELENBQWpCO0FBQ0EsYUFBS3JCLE1BQUwsQ0FBWTJDLElBQVosQ0FBaUIsS0FBSzlCLFFBQUwsQ0FBYytCLEVBQWQsQ0FBaUIseUJBQWpCLEVBQTRDLEtBQUt2QixjQUFqRCxDQUFqQjtBQUNBLGFBQUtyQixNQUFMLENBQVkyQyxJQUFaLENBQWlCLEtBQUs5QixRQUFMLENBQWMrQixFQUFkLENBQWlCLHNCQUFqQixFQUF5QyxLQUFLdkIsY0FBOUMsQ0FBakI7QUFDRDs7QUFFRCxVQUFJLEtBQUtILGlCQUFULEVBQTRCO0FBQzFCO0FBQ0EyQix1REFBTyxDQUFDbkMsNkNBQUMsQ0FBQyxnQkFBRCxDQUFELENBQW9Cb0MsSUFBcEIsQ0FBeUIsaUJBQXpCLENBQUQsRUFBOEMsWUFBTTtBQUN6RCxlQUFJLENBQUM5QyxNQUFMLENBQVkyQyxJQUFaLENBQWlCLEtBQUksQ0FBQ2pELEdBQUwsQ0FBU2tELEVBQVQsQ0FBWSxvQkFBWixFQUFrQyxrQkFBbEMsRUFBc0QsS0FBSSxDQUFDeEIsVUFBM0QsQ0FBakI7O0FBRUEsY0FBSSxLQUFJLENBQUNkLGdCQUFULEVBQTJCO0FBQ3pCLGlCQUFJLENBQUNOLE1BQUwsQ0FBWTJDLElBQVosQ0FBaUIsS0FBSSxDQUFDakQsR0FBTCxDQUFTa0QsRUFBVCxDQUFZLHNCQUFaLEVBQW9DLDBCQUFwQyxFQUFnRSxLQUFJLENBQUNMLGNBQXJFLENBQWpCOztBQUNBLGlCQUFJLENBQUN2QyxNQUFMLENBQVkyQyxJQUFaLENBQWlCLEtBQUksQ0FBQ2pELEdBQUwsQ0FBU2tELEVBQVQsQ0FBWSx3QkFBWixFQUFzQywwQkFBdEMsRUFBa0UsS0FBSSxDQUFDTCxjQUF2RSxDQUFqQjs7QUFDQSxpQkFBSSxDQUFDdkMsTUFBTCxDQUFZMkMsSUFBWixDQUFpQixLQUFJLENBQUNqRCxHQUFMLENBQVNrRCxFQUFULENBQVksb0JBQVosRUFBa0MsMEJBQWxDLEVBQThELEtBQUksQ0FBQ1gsY0FBbkUsQ0FBakI7QUFDRDtBQUNGLFNBUk0sQ0FBUDtBQVNEOztBQUVELFVBQUksS0FBS3ZDLEdBQUwsQ0FBU29CLElBQVQsQ0FBYyxrQkFBZCxFQUFrQ0ssTUFBdEMsRUFBOEM7QUFDNUMsYUFBSzRCLGFBQUw7QUFDRDs7QUFFRCxXQUFLQyxrQkFBTDs7QUFFQSxVQUFJLEtBQUtoQyxVQUFULEVBQXFCO0FBQ25CLGFBQUtpQyxRQUFMLEdBQWdCLElBQUlDLHlEQUFKLENBQXFCO0FBQ25DekIsWUFBRSxFQUFFLEtBQUsvQixHQUFMLENBQVMsQ0FBVCxDQUQrQjtBQUVuQ1ksMEJBQWdCLEVBQUUsS0FBS0EsZ0JBRlk7QUFHbkNWLGlCQUFPLEVBQUUsS0FBS0E7QUFIcUIsU0FBckIsQ0FBaEI7QUFLRDtBQUNGOzs7cUNBRWdCRSxJLEVBQU07QUFDckIsV0FBS0QsV0FBTCxHQUFtQkMsSUFBbkI7O0FBQ0EsVUFBSSxLQUFLbUQsUUFBVCxFQUFtQjtBQUNqQixhQUFLQSxRQUFMLENBQWNFLE1BQWQ7QUFDRDtBQUNGOzs7b0NBRWU7QUFDZCxVQUFJO0FBQ0YsYUFBSzVDLGdCQUFMLEdBQXdCNkMsSUFBSSxDQUFDQyxLQUFMLENBQVcsS0FBSzNELEdBQUwsQ0FBU29CLElBQVQsQ0FBYywyQkFBZCxFQUEyQ3dDLElBQTNDLEVBQVgsQ0FBeEI7QUFDRCxPQUZELENBRUUsT0FBT0MsS0FBUCxFQUFjO0FBQ2QsZUFBT0MsT0FBTyxDQUFDQyxJQUFSLG1EQUF3REYsS0FBSyxDQUFDRyxPQUE5RCxFQUFQO0FBQ0Q7QUFDRjs7OzRDQUV1QjtBQUN0QixhQUFPLGVBQWVDLFFBQVEsQ0FBQ0MsZUFBVCxDQUF5QkMsS0FBL0M7QUFDRDs7O3lDQUVvQjtBQUNuQixVQUFJLEtBQUtDLHFCQUFMLEVBQUosRUFBa0M7QUFDaEM7QUFDRDs7QUFFRCxVQUFNQyxPQUFPLEdBQUdyRCw2Q0FBQyxDQUFDLDJCQUFELEVBQThCLEtBQUtoQixHQUFuQyxDQUFqQjtBQUNBLFVBQU1zRSxXQUFXLEdBQUd0RCw2Q0FBQyxDQUFDLDZCQUFELEVBQWdDcUQsT0FBaEMsQ0FBRCxDQUEwQ0UsSUFBMUMsQ0FBK0MsS0FBL0MsQ0FBcEI7QUFDQSxVQUFNQyxZQUFZLEdBQUd4RCw2Q0FBQyxDQUFDLCtCQUFELEVBQWtDcUQsT0FBbEMsQ0FBRCxDQUE0Q0UsSUFBNUMsQ0FBaUQsS0FBakQsQ0FBckI7QUFFQUYsYUFBTyxDQUFDSSxRQUFSLENBQWlCLGlDQUFqQjtBQUNBSixhQUFPLENBQUNLLEdBQVIsQ0FBWSxrQkFBWixrQkFBeUNKLFdBQXpDOztBQUVBLFVBQUlFLFlBQUosRUFBa0I7QUFDaEIsYUFBS3hFLEdBQUwsQ0FBU2tELEVBQVQsQ0FBWSxXQUFaLEVBQXlCLFlBQU07QUFDN0JtQixpQkFBTyxDQUFDSyxHQUFSLENBQVksa0JBQVosa0JBQXlDRixZQUF6QztBQUNELFNBRkQ7QUFJQSxhQUFLeEUsR0FBTCxDQUFTa0QsRUFBVCxDQUFZLFlBQVosRUFBMEIsWUFBTTtBQUM5Qm1CLGlCQUFPLENBQUNLLEdBQVIsQ0FBWSxrQkFBWixrQkFBeUNKLFdBQXpDO0FBQ0QsU0FGRDtBQUdEO0FBQ0Y7QUFFRDs7Ozs7Ozs7O2tDQU1jO0FBQ1osVUFBSUssVUFBVSxHQUFHLENBQWpCO0FBRUEsVUFBTUMsTUFBTSxHQUFHLEtBQUs1RSxHQUFMLENBQVM0RSxNQUFULEVBQWY7O0FBRUEsVUFBSUEsTUFBTSxDQUFDQyxRQUFQLENBQWdCLHlCQUFoQixLQUE4Q0QsTUFBTSxDQUFDQyxRQUFQLENBQWdCLHlCQUFoQixDQUFsRCxFQUE4RjtBQUM1RixZQUFNQyxXQUFXLEdBQUcsS0FBSzlFLEdBQUwsQ0FBU29CLElBQVQsQ0FBYywwQkFBZCxFQUEwQzJELFdBQTFDLENBQXNELElBQXRELENBQXBCO0FBQ0EsWUFBTUMsVUFBVSxHQUFHLEtBQUtoRixHQUFMLENBQVNvQixJQUFULENBQWMsb0JBQWQsRUFBb0MyRCxXQUFwQyxDQUFnRCxJQUFoRCxDQUFuQjtBQUNBLFlBQU1FLFdBQVcsR0FBR0MsVUFBVSxDQUFDLEtBQUsvRCxRQUFMLENBQWN1RCxHQUFkLENBQWtCLGFBQWxCLEVBQWlDUyxPQUFqQyxDQUF5QyxJQUF6QyxFQUErQyxFQUEvQyxDQUFELENBQVYsR0FDaEJELFVBQVUsQ0FBQyxLQUFLL0QsUUFBTCxDQUFjdUQsR0FBZCxDQUFrQixnQkFBbEIsRUFBb0NTLE9BQXBDLENBQTRDLElBQTVDLEVBQWtELEVBQWxELENBQUQsQ0FEZDtBQUdBUixrQkFBVSxHQUFHRyxXQUFXLEdBQUdFLFVBQWQsR0FBMkJDLFdBQXhDO0FBQ0QsT0FQRCxNQU9PO0FBQ0xOLGtCQUFVLEdBQUcsS0FBSzNFLEdBQUwsQ0FBU29GLE1BQVQsRUFBYjtBQUNEOztBQUVELFVBQU1DLGFBQWEsR0FBRyxLQUFLckYsR0FBTCxDQUFTb0IsSUFBVCxDQUFjLHdCQUFkLEVBQXdDMkQsV0FBeEMsQ0FBb0QsSUFBcEQsS0FBNkQsQ0FBbkY7QUFDQSxVQUFNTyxjQUFjLEdBQUcsS0FBS3RGLEdBQUwsQ0FBU29CLElBQVQsQ0FBYyxzQ0FBZCxFQUFzRDJELFdBQXRELENBQWtFLElBQWxFLEtBQTJFLENBQWxHO0FBRUEsVUFBTVEsY0FBYyxHQUFHWixVQUFVLEdBQUdVLGFBQWIsR0FBNkJDLGNBQXBEO0FBRUEsYUFBTztBQUNMWCxrQkFBVSxFQUFWQSxVQURLO0FBRUxZLHNCQUFjLEVBQWRBO0FBRkssT0FBUDtBQUlEOzs7bUNBRWNDLEssRUFBTztBQUNwQixVQUFJLENBQUNDLDBEQUFBLENBQWUsR0FBZixDQUFELElBQ0N4QixRQUFRLENBQUNDLGVBQVQsQ0FBeUJuQixTQUF6QixDQUFtQ0MsUUFBbkMsQ0FBNEMsV0FBNUMsQ0FERCxJQUVDLEtBQUs3QyxXQUFMLEtBQXFCLFdBRjFCLEVBRXVDO0FBRXZDLFVBQU11RixjQUFjLEdBQUcxRSw2Q0FBQyxDQUFDd0UsS0FBSyxDQUFDN0MsYUFBUCxDQUF4QjtBQUNBLFVBQU1nRCxPQUFPLEdBQUczRSw2Q0FBQyxDQUFDd0UsS0FBSyxDQUFDSSxNQUFQLENBQWpCO0FBRUEsVUFBSUMsZUFBZSxHQUFHLEtBQXRCLENBUm9CLENBVXBCO0FBQ0E7QUFDQTs7QUFDQSxVQUFNQyxlQUFlLEdBQUcsS0FBSzlGLEdBQUwsQ0FBUytGLEVBQVQsQ0FBWUwsY0FBWixLQUNuQixLQUFLMUYsR0FBTCxDQUFTK0YsRUFBVCxDQUFZSixPQUFaLENBRG1CLElBRW5CLEtBQUszRixHQUFMLENBQVMrRixFQUFULENBQVlKLE9BQU8sQ0FBQ0ssT0FBUixDQUFnQixvQkFBaEIsRUFBc0NDLEtBQXRDLEVBQVosQ0FGbUIsSUFHbEJULEtBQUssQ0FBQ1UsSUFBTixLQUFlLFNBQWYsSUFBNEJQLE9BQU8sQ0FBQyxDQUFELENBQVAsQ0FBVzNDLFFBQVgsQ0FBb0IsS0FBS2hELEdBQUwsQ0FBUyxDQUFULENBQXBCLENBSGxDOztBQUtBLFVBQUl3RixLQUFLLENBQUNVLElBQU4sS0FBZSxZQUFmLElBQStCVixLQUFLLENBQUNVLElBQU4sS0FBZSxZQUFsRCxFQUFnRTtBQUM5REwsdUJBQWUsR0FBR0wsS0FBSyxDQUFDVSxJQUFOLEtBQWUsWUFBakM7QUFDRCxPQUZELE1BRU8sSUFBSUosZUFBSixFQUFxQjtBQUMxQkQsdUJBQWUsR0FBRyxJQUFsQjtBQUNEOztBQUVELFVBQUlBLGVBQUosRUFBcUI7QUFDbkIsYUFBS00sWUFBTDtBQUNELE9BRkQsTUFFTztBQUNMLGFBQUtDLFlBQUw7QUFDRDtBQUNGOzs7bUNBRWM7QUFBQTs7QUFDYixVQUFJLEtBQUt0RixXQUFULEVBQXNCO0FBQUU7QUFBUzs7QUFEcEIsOEJBRzBCLEtBQUt1RixXQUFMLEVBSDFCO0FBQUEsVUFHTDFCLFVBSEsscUJBR0xBLFVBSEs7QUFBQSxVQUdPWSxjQUhQLHFCQUdPQSxjQUhQLEVBS2I7OztBQUNBLFdBQUt2RixHQUFMLENBQVMwRSxHQUFULENBQWEsUUFBYixFQUF1QkMsVUFBdkI7QUFDQSxXQUFLeEQsUUFBTCxDQUFjdUQsR0FBZCxDQUFrQixRQUFsQixFQUE0QkMsVUFBNUIsRUFQYSxDQVNiOztBQUNBLFdBQUszRSxHQUFMLENBQVNvRCxJQUFULENBQWMsYUFBZCxFQUE2QnVCLFVBQTdCLEVBVmEsQ0FZYjs7QUFDQSxXQUFLM0UsR0FBTCxDQUNHc0csUUFESCxDQUNZLE1BRFosRUFFR0MsR0FGSCxDQUVPLGlDQUZQLEVBRTBDLFlBQU07QUFDNUMsY0FBSSxDQUFDcEYsUUFBTCxDQUFjdUQsR0FBZCxDQUFrQixRQUFsQixFQUE0QmEsY0FBNUI7QUFDRCxPQUpIO0FBTUF0QixjQUFRLENBQUN1QyxnQkFBVCxDQUEwQixTQUExQixFQUFxQyxLQUFLN0UsY0FBMUM7QUFFQSxXQUFLYixXQUFMLEdBQW1CLElBQW5CO0FBQ0Q7OzttQ0FFYztBQUFBOztBQUNiLFVBQU1zRSxNQUFNLEdBQUcsS0FBS3BGLEdBQUwsQ0FBU29ELElBQVQsQ0FBYyxhQUFkLENBQWY7QUFFQTs7Ozs7QUFJQSxXQUFLcEQsR0FBTCxDQUNHc0csUUFESCxDQUNZLE1BRFosRUFFR0MsR0FGSCxDQUVPLG9CQUZQLEVBRTZCLFlBQU07QUFDL0IsY0FBSSxDQUFDdkcsR0FBTCxDQUFTeUcsR0FBVCxDQUFhLGlDQUFiOztBQUNBLGNBQUksQ0FBQ3pHLEdBQUwsQ0FBUzBFLEdBQVQsQ0FBYTtBQUFFVSxnQkFBTSxFQUFOQTtBQUFGLFNBQWI7O0FBQ0EsY0FBSSxDQUFDakUsUUFBTCxDQUFjdUQsR0FBZCxDQUFrQjtBQUFFVSxnQkFBTSxFQUFOQTtBQUFGLFNBQWxCO0FBQ0QsT0FOSCxFQU1LbUIsR0FOTCxDQU1TLGVBTlQsRUFNMEIsWUFBTTtBQUM1QixjQUFJLENBQUN2RyxHQUFMLENBQ0d5RyxHQURILENBQ08sNEJBRFAsRUFFRy9CLEdBRkgsQ0FFTyxRQUZQLEVBRWlCLEVBRmpCOztBQUdBLGNBQUksQ0FBQ3ZELFFBQUwsQ0FBY3VELEdBQWQsQ0FBa0IsUUFBbEIsRUFBNEIsRUFBNUI7QUFDRCxPQVhIO0FBYUFULGNBQVEsQ0FBQ3lDLG1CQUFULENBQTZCLFNBQTdCLEVBQXdDLEtBQUsvRSxjQUE3QztBQUVBLFdBQUtiLFdBQUwsR0FBbUIsS0FBbkI7QUFDRDs7OytCQUVVMEUsSyxFQUFPO0FBQ2hCQSxXQUFLLENBQUMvQyxjQUFOO0FBQ0EsVUFBTWtFLFVBQVUsR0FBRzNGLDZDQUFDLENBQUN3RSxLQUFLLENBQUM3QyxhQUFQLENBQXBCO0FBQ0EsVUFBTWlFLFNBQVMsR0FBR0QsVUFBVSxDQUFDcEMsSUFBWCxDQUFnQixpQkFBaEIsQ0FBbEI7QUFFQSxVQUFNc0MsUUFBUSxHQUFHLENBQ2Y7QUFDRSxnQkFBUSxJQURWO0FBRUUsaUJBQVNEO0FBRlgsT0FEZSxFQUtmO0FBQ0UsZ0JBQVEsVUFEVjtBQUVFLGlCQUFTO0FBRlgsT0FMZSxDQUFqQjtBQVdBLFVBQU03RyxPQUFPLEdBQUc7QUFDZDRHLGtCQUFVLEVBQVZBLFVBRGM7QUFFZEcsZ0JBQVEsRUFBRTtBQUNSQyxxQkFBVyxFQUFFLEtBQUtsRyxnQkFBTCxDQUFzQm1HLFlBRDNCO0FBRVJDLHlCQUFlLEVBQUUsS0FBS3BHLGdCQUFMLENBQXNCcUc7QUFGL0I7QUFGSSxPQUFoQjtBQVFBQyw4REFBZSxDQUFDQyxJQUFoQixDQUFxQlAsUUFBckIsRUFBK0IsS0FBSzNHLE9BQXBDLEVBQTZDSCxPQUE3QztBQUNEOzs7NkJBRVE7QUFDUCxXQUFLTyxNQUFMLENBQVkrRyxPQUFaLENBQW9CLFVBQUFySCxHQUFHO0FBQUEsZUFBSUEsR0FBRyxDQUFDeUcsR0FBSixDQUFRLGVBQVIsQ0FBSjtBQUFBLE9BQXZCOztBQUVBLFVBQUksS0FBSzdGLGdCQUFULEVBQTJCO0FBQ3pCLGFBQUtBLGdCQUFMLENBQXNCMEcsTUFBdEI7QUFDRDs7QUFFRHJELGNBQVEsQ0FBQ3lDLG1CQUFULENBQTZCLFNBQTdCLEVBQXdDLEtBQUsvRSxjQUE3Qzs7QUFFQSxVQUFJLEtBQUs0QixRQUFULEVBQW1CO0FBQ2pCLGFBQUtBLFFBQUwsQ0FBYytELE1BQWQ7QUFDRDs7QUFDRCxXQUFLNUcsVUFBTCxDQUFnQjRHLE1BQWhCO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1Byb2R1Y3RHcmlkSXRlbS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgJHNjcmlwdCBmcm9tICdzY3JpcHRqcyc7XG5pbXBvcnQgKiBhcyBicmVha3BvaW50IGZyb20gJ0BwaXhlbHVuaW9uL2JyZWFrcG9pbnQnO1xuaW1wb3J0IExhenlMb2FkZXIgZnJvbSAnLi4vaGVscGVycy9MYXp5TG9hZGVyJztcbmltcG9ydCBQcm9kdWN0UXVpY2tzaG9wIGZyb20gJy4vUHJvZHVjdFF1aWNrc2hvcCc7XG5pbXBvcnQgQWRkVG9DYXJ0Rmx5b3V0IGZyb20gJy4vQWRkVG9DYXJ0Rmx5b3V0JztcbmltcG9ydCBHcmlkSXRlbVN3YXRjaGVzIGZyb20gJy4vR3JpZEl0ZW1Td2F0Y2hlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2R1Y3RHcmlkSXRlbSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICB0aGlzLiRlbCA9IG9wdGlvbnMuJGVsO1xuICAgIHRoaXMuaWQgPSBvcHRpb25zLmlkO1xuICAgIHRoaXMucHJvZHVjdCA9IG9wdGlvbnMucHJvZHVjdDtcbiAgICB0aGlzLmN1cnJlbnRWaWV3ID0gb3B0aW9ucy52aWV3O1xuICAgIHRoaXMucXVlcnlQYXJhbXMgPSBvcHRpb25zLnF1ZXJ5UGFyYW1zIHx8IHt9O1xuICAgIHRoaXMuZXZlbnRzID0gW107XG5cbiAgICB0aGlzLl9pbml0ID0gdGhpcy5faW5pdC5iaW5kKHRoaXMpO1xuXG4gICAgaWYgKG9wdGlvbnMubGF6eSA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy5sYXp5TG9hZGVyID0gbmV3IExhenlMb2FkZXIodGhpcy4kZWxbMF0sIHRoaXMuX2luaXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9pbml0KCk7XG4gICAgfVxuICB9XG5cbiAgX2luaXQoKSB7XG4gICAgdGhpcy5wcm9kdWN0UXVpY2tzaG9wID0gbnVsbDtcbiAgICB0aGlzLnF1aWNrQnV5U2V0dGluZ3MgPSBudWxsO1xuICAgIHRoaXMuYWN0aW9uc09wZW4gPSBmYWxzZTtcblxuICAgIHRoaXMuJHdpbmRvdyA9ICQod2luZG93KTtcbiAgICB0aGlzLiRodG1sID0gJCgnaHRtbCcpO1xuICAgIHRoaXMuJGNvbnRlbnQgPSB0aGlzLiRlbC5maW5kKCdbZGF0YS1wcm9kdWN0LWl0ZW0tY29udGVudF0nKTtcbiAgICB0aGlzLiRhY3Rpb25zID0gdGhpcy4kZWwuZmluZCgnW2RhdGEtcHJvZHVjdC1hY3Rpb25zXScpO1xuICAgIHRoaXMuc3dhdGNoZXNFbCA9IHRoaXMuJGVsWzBdLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXN3YXRjaGVzXScpO1xuICAgIHRoaXMuaGFzUHJvZHVjdEFjdGlvbnMgPSB0aGlzLiRhY3Rpb25zLmxlbmd0aDtcblxuICAgIHRoaXMuX2FkZFRvQ2FydCA9IHRoaXMuX2FkZFRvQ2FydC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2FjdGlvbnNUb2dnbGUgPSB0aGlzLl9hY3Rpb25zVG9nZ2xlLmJpbmQodGhpcyk7XG5cbiAgICBjb25zdCBwcm9kdWN0UXVpY2tzaG9wRWwgPSB0aGlzLiRlbC5nZXQoMCkucXVlcnlTZWxlY3RvcignW2RhdGEtcHJvZHVjdC1xdWlja3Nob3BdJyk7XG4gICAgaWYgKHByb2R1Y3RRdWlja3Nob3BFbCkge1xuICAgICAgdGhpcy5wcm9kdWN0UXVpY2tzaG9wID0gbmV3IFByb2R1Y3RRdWlja3Nob3Aoe1xuICAgICAgICBlbDogcHJvZHVjdFF1aWNrc2hvcEVsLFxuICAgICAgICBpZDogdGhpcy5pZCxcbiAgICAgICAgdXJsOiBwcm9kdWN0UXVpY2tzaG9wRWwuZGF0YXNldC5wcm9kdWN0UXVpY2tzaG9wVXJsLFxuICAgICAgICBoYXNoOiBwcm9kdWN0UXVpY2tzaG9wRWwuZGF0YXNldC5wcm9kdWN0UXVpY2tzaG9wSGFzaCxcbiAgICAgICAgdHJpZ2dlcjogdGhpcy4kZWwuZmluZCgnLnByb2R1Y3RpdGVtLS10aXRsZSBhJylbMF0sXG4gICAgICAgIGJ1dHRvbjogdGhpcy4kZWwuZmluZCgnW2RhdGEtcXVpY2tzaG9wLXRyaWdnZXI9XCJmdWxsXCJdJyksXG4gICAgICB9KTtcbiAgICAgIHRoaXMuX29wZW5RdWlja1Nob3AgPSBlID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnByb2R1Y3RRdWlja3Nob3Aub3BlbihlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5xdWlja3Nob3BUcmlnZ2VyID09PSAnZnVsbCcpO1xuICAgICAgfTtcbiAgICAgIHRoaXMuX2xvYWRRdWlja1Nob3AgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMucHJvZHVjdFF1aWNrc2hvcC5sb2FkKCk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmICh0aGlzLmhhc1Byb2R1Y3RBY3Rpb25zIHx8ICh0aGlzLnN3YXRjaGVzRWwgJiYgdGhpcy5zd2F0Y2hlc0VsLmNsYXNzTGlzdC5jb250YWlucygncHJvZHVjdGl0ZW0tLXN3YXRjaGVzLXNob3ctb24taG92ZXInKSkpIHtcbiAgICAgIHRoaXMuZXZlbnRzLnB1c2godGhpcy4kY29udGVudC5vbignbW91c2VlbnRlci5wcm9kdWN0LWl0ZW0nLCB0aGlzLl9hY3Rpb25zVG9nZ2xlKSk7XG4gICAgICB0aGlzLmV2ZW50cy5wdXNoKHRoaXMuJGNvbnRlbnQub24oJ21vdXNlbGVhdmUucHJvZHVjdC1pdGVtJywgdGhpcy5fYWN0aW9uc1RvZ2dsZSkpO1xuICAgICAgdGhpcy5ldmVudHMucHVzaCh0aGlzLiRjb250ZW50Lm9uKCdmb2N1c2luLnByb2R1Y3QtaXRlbScsIHRoaXMuX2FjdGlvbnNUb2dnbGUpKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5oYXNQcm9kdWN0QWN0aW9ucykge1xuICAgICAgLy8gJHNjcmlwdHMgY2hlY2tzIGV4aXN0ZW5jZSBvZiBzY3JpcHQgaW4gaGVhZGVyIGJlZm9yZSBhdHRlbXB0aW5nIHRvIGluamVjdFxuICAgICAgJHNjcmlwdCgkKCdbZGF0YS1zY3JpcHRzXScpLmRhdGEoJ3Nob3BpZnktYXBpLXVybCcpLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuZXZlbnRzLnB1c2godGhpcy4kZWwub24oJ2NsaWNrLnByb2R1Y3QtaXRlbScsICdbZGF0YS1xdWljay1idXldJywgdGhpcy5fYWRkVG9DYXJ0KSk7XG5cbiAgICAgICAgaWYgKHRoaXMucHJvZHVjdFF1aWNrc2hvcCkge1xuICAgICAgICAgIHRoaXMuZXZlbnRzLnB1c2godGhpcy4kZWwub24oJ2ZvY3VzaW4ucHJvZHVjdC1pdGVtJywgJ1tkYXRhLXF1aWNrc2hvcC10cmlnZ2VyXScsIHRoaXMuX2xvYWRRdWlja1Nob3ApKTtcbiAgICAgICAgICB0aGlzLmV2ZW50cy5wdXNoKHRoaXMuJGVsLm9uKCdtb3VzZW92ZXIucHJvZHVjdC1pdGVtJywgJ1tkYXRhLXF1aWNrc2hvcC10cmlnZ2VyXScsIHRoaXMuX2xvYWRRdWlja1Nob3ApKTtcbiAgICAgICAgICB0aGlzLmV2ZW50cy5wdXNoKHRoaXMuJGVsLm9uKCdjbGljay5wcm9kdWN0LWl0ZW0nLCAnW2RhdGEtcXVpY2tzaG9wLXRyaWdnZXJdJywgdGhpcy5fb3BlblF1aWNrU2hvcCkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4kZWwuZmluZCgnW2RhdGEtcXVpY2stYnV5XScpLmxlbmd0aCkge1xuICAgICAgdGhpcy5faW5pdFF1aWNrQnV5KCk7XG4gICAgfVxuXG4gICAgdGhpcy5fb2JqZWN0Rml0UG9seWZpbGwoKTtcblxuICAgIGlmICh0aGlzLnN3YXRjaGVzRWwpIHtcbiAgICAgIHRoaXMuc3dhdGNoZXMgPSBuZXcgR3JpZEl0ZW1Td2F0Y2hlcyh7XG4gICAgICAgIGVsOiB0aGlzLiRlbFswXSxcbiAgICAgICAgcHJvZHVjdFF1aWNrc2hvcDogdGhpcy5wcm9kdWN0UXVpY2tzaG9wLFxuICAgICAgICBwcm9kdWN0OiB0aGlzLnByb2R1Y3QsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVWaWV3Q2hhbmdlKHZpZXcpIHtcbiAgICB0aGlzLmN1cnJlbnRWaWV3ID0gdmlldztcbiAgICBpZiAodGhpcy5zd2F0Y2hlcykge1xuICAgICAgdGhpcy5zd2F0Y2hlcy5yZXNpemUoKTtcbiAgICB9XG4gIH1cblxuICBfaW5pdFF1aWNrQnV5KCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnF1aWNrQnV5U2V0dGluZ3MgPSBKU09OLnBhcnNlKHRoaXMuJGVsLmZpbmQoJ1tkYXRhLXF1aWNrLWJ1eS1zZXR0aW5nc10nKS50ZXh0KCkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gY29uc29sZS53YXJuKGBRdWljayBidXk6IGludmFsaWQgUXVpY2tCdXkgZGF0YSBmb3VuZC4gJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIH1cbiAgfVxuXG4gIF9pc09iamVjdEZpdEF2YWlsYWJsZSgpIHtcbiAgICByZXR1cm4gJ29iamVjdEZpdCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlO1xuICB9XG5cbiAgX29iamVjdEZpdFBvbHlmaWxsKCkge1xuICAgIGlmICh0aGlzLl9pc09iamVjdEZpdEF2YWlsYWJsZSgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgJGZpZ3VyZSA9ICQoJ1tkYXRhLXByb2R1Y3QtaXRlbS1pbWFnZV0nLCB0aGlzLiRlbCk7XG4gICAgY29uc3QgZmVhdHVyZWRTcmMgPSAkKCcucHJvZHVjdGl0ZW0tLWltYWdlLXByaW1hcnknLCAkZmlndXJlKS5hdHRyKCdzcmMnKTtcbiAgICBjb25zdCBhbHRlcm5hdGVTcmMgPSAkKCcucHJvZHVjdGl0ZW0tLWltYWdlLWFsdGVybmF0ZScsICRmaWd1cmUpLmF0dHIoJ3NyYycpO1xuXG4gICAgJGZpZ3VyZS5hZGRDbGFzcygncHJvZHVjdC1pdGVtLWltYWdlLW5vLW9iamVjdGZpdCcpO1xuICAgICRmaWd1cmUuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJywgYHVybChcIiR7IGZlYXR1cmVkU3JjIH1cIilgKTtcblxuICAgIGlmIChhbHRlcm5hdGVTcmMpIHtcbiAgICAgIHRoaXMuJGVsLm9uKCdtb3VzZW92ZXInLCAoKSA9PiB7XG4gICAgICAgICRmaWd1cmUuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJywgYHVybChcIiR7IGFsdGVybmF0ZVNyYyB9XCIpYCk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy4kZWwub24oJ21vdXNlbGVhdmUnLCAoKSA9PiB7XG4gICAgICAgICRmaWd1cmUuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJywgYHVybChcIiR7IGZlYXR1cmVkU3JjIH1cIilgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgaGVpZ2h0IG9mIGVsZW1lbnQsIGFuZCBjb21iaW5lZCBoZWlnaHQgb2YgZWxlbWVudCArIGFjdGlvbnNcbiAgICpcbiAgICogQHJldHVybnMge3toZWlnaHRCYXNlLCBoZWlnaHRFeHBhbmRlZDogKn19XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfZ2V0SGVpZ2h0cygpIHtcbiAgICBsZXQgaGVpZ2h0QmFzZSA9IDA7XG5cbiAgICBjb25zdCBwYXJlbnQgPSB0aGlzLiRlbC5wYXJlbnQoKTtcblxuICAgIGlmIChwYXJlbnQuaGFzQ2xhc3MoJ3Byb2R1Y3Qtcm93LS1uby1zcGFjaW5nJykgfHwgcGFyZW50Lmhhc0NsYXNzKCdwcm9kdWN0Z3JpZC0tbm8tc3BhY2luZycpKSB7XG4gICAgICBjb25zdCBpbWFnZUhlaWdodCA9IHRoaXMuJGVsLmZpbmQoJ1tkYXRhLXByb2R1Y3QtcGFnZS1saW5rXScpLm91dGVySGVpZ2h0KHRydWUpO1xuICAgICAgY29uc3QgaW5mb0hlaWdodCA9IHRoaXMuJGVsLmZpbmQoJy5wcm9kdWN0aXRlbS0taW5mbycpLm91dGVySGVpZ2h0KHRydWUpO1xuICAgICAgY29uc3QgY2FyZFBhZGRpbmcgPSBwYXJzZUZsb2F0KHRoaXMuJGNvbnRlbnQuY3NzKCdwYWRkaW5nLXRvcCcpLnJlcGxhY2UoJ3B4JywgJycpKVxuICAgICAgICArIHBhcnNlRmxvYXQodGhpcy4kY29udGVudC5jc3MoJ3BhZGRpbmctYm90dG9tJykucmVwbGFjZSgncHgnLCAnJykpO1xuXG4gICAgICBoZWlnaHRCYXNlID0gaW1hZ2VIZWlnaHQgKyBpbmZvSGVpZ2h0ICsgY2FyZFBhZGRpbmc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhlaWdodEJhc2UgPSB0aGlzLiRlbC5oZWlnaHQoKTtcbiAgICB9XG5cbiAgICBjb25zdCBhY3Rpb25zSGVpZ2h0ID0gdGhpcy4kZWwuZmluZCgnW2RhdGEtcHJvZHVjdC1hY3Rpb25zXScpLm91dGVySGVpZ2h0KHRydWUpIHx8IDA7XG4gICAgY29uc3Qgc3dhdGNoZXNIZWlnaHQgPSB0aGlzLiRlbC5maW5kKCcucHJvZHVjdGl0ZW0tLXN3YXRjaGVzLXNob3ctb24taG92ZXInKS5vdXRlckhlaWdodCh0cnVlKSB8fCAwO1xuXG4gICAgY29uc3QgaGVpZ2h0RXhwYW5kZWQgPSBoZWlnaHRCYXNlICsgYWN0aW9uc0hlaWdodCArIHN3YXRjaGVzSGVpZ2h0O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGhlaWdodEJhc2UsXG4gICAgICBoZWlnaHRFeHBhbmRlZCxcbiAgICB9O1xuICB9XG5cbiAgX2FjdGlvbnNUb2dnbGUoZXZlbnQpIHtcbiAgICBpZiAoIWJyZWFrcG9pbnQubWluKCdMJylcbiAgICAgIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2hhcy10b3VjaCcpXG4gICAgICB8fCB0aGlzLmN1cnJlbnRWaWV3ID09PSAnbGlzdC12aWV3JykgcmV0dXJuO1xuXG4gICAgY29uc3QgJGN1cnJlbnRUYXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0ICR0YXJnZXQgPSAkKGV2ZW50LnRhcmdldCk7XG5cbiAgICBsZXQgb3BlblByb2R1Y3RJdGVtID0gZmFsc2U7XG5cbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGdldHMgY2FsbGVkIG9uIHRoZSBlbGVtZW50IGFzIHdlbGwgYXMgdGhlIGRvY3VtZW50IGZvY3VzaW4sIHNvIHdlIHdhbnQgdG9cbiAgICAvLyBiZSBleHRyYSBjYXJlZnVsIHRoYXQgd2UgYXJlIGluc2lkZSB0aGUgcHJvZHVjdCBjYXJkIGluIHF1ZXN0aW9uLiBXZSB3YW50IHRoZSBwcm9kdWN0IGNhcmRcbiAgICAvLyB0byBjbG9zZSBpZiBhbm90aGVyIHByb2R1Y3QgY2FyZCBoYXMgcmVjZWl2ZWQgZm9jdXMuXG4gICAgY29uc3QgcHJvZHVjdEhhc0ZvY3VzID0gdGhpcy4kZWwuaXMoJGN1cnJlbnRUYXJnZXQpXG4gICAgICB8fCB0aGlzLiRlbC5pcygkdGFyZ2V0KVxuICAgICAgfHwgdGhpcy4kZWwuaXMoJHRhcmdldC5wYXJlbnRzKCcucHJvZHVjdGdyaWQtLWl0ZW0nKS5maXJzdCgpKVxuICAgICAgfHwgKGV2ZW50LnR5cGUgPT09ICdmb2N1c2luJyAmJiAkdGFyZ2V0WzBdLmNvbnRhaW5zKHRoaXMuJGVsWzBdKSk7XG5cbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ21vdXNlZW50ZXInIHx8IGV2ZW50LnR5cGUgPT09ICdtb3VzZWxlYXZlJykge1xuICAgICAgb3BlblByb2R1Y3RJdGVtID0gZXZlbnQudHlwZSA9PT0gJ21vdXNlZW50ZXInO1xuICAgIH0gZWxzZSBpZiAocHJvZHVjdEhhc0ZvY3VzKSB7XG4gICAgICBvcGVuUHJvZHVjdEl0ZW0gPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChvcGVuUHJvZHVjdEl0ZW0pIHtcbiAgICAgIHRoaXMuX3Nob3dBY3Rpb25zKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVBY3Rpb25zKCk7XG4gICAgfVxuICB9XG5cbiAgX3Nob3dBY3Rpb25zKCkge1xuICAgIGlmICh0aGlzLmFjdGlvbnNPcGVuKSB7IHJldHVybjsgfVxuXG4gICAgY29uc3QgeyBoZWlnaHRCYXNlLCBoZWlnaHRFeHBhbmRlZCB9ID0gdGhpcy5fZ2V0SGVpZ2h0cygpO1xuXG4gICAgLy8gTG9jayBoZWlnaHRzIHRvIHByZXZlbnQganVtcGluZ1xuICAgIHRoaXMuJGVsLmNzcygnaGVpZ2h0JywgaGVpZ2h0QmFzZSk7XG4gICAgdGhpcy4kY29udGVudC5jc3MoJ2hlaWdodCcsIGhlaWdodEJhc2UpO1xuXG4gICAgLy8gU3RvcmUgaGVpZ2h0IGZvciB3aGVuIGhvdmVyaW5nIG91dFxuICAgIHRoaXMuJGVsLmRhdGEoJ2Jhc2UtaGVpZ2h0JywgaGVpZ2h0QmFzZSk7XG5cbiAgICAvLyBTdGFydCBhbmltYXRpb24sIGFuZCB0cmFuc2l0aW9uIGhlaWdodCB0byBleHBhbmRlZCBoZWlnaHRcbiAgICB0aGlzLiRlbFxuICAgICAgLnJldmVhbGVyKCdzaG93JylcbiAgICAgIC5vbmUoJ3JldmVhbGVyLWFuaW1hdGluZy5wcm9kdWN0LWl0ZW0nLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuJGNvbnRlbnQuY3NzKCdoZWlnaHQnLCBoZWlnaHRFeHBhbmRlZCk7XG4gICAgICB9KTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCB0aGlzLl9hY3Rpb25zVG9nZ2xlKTtcblxuICAgIHRoaXMuYWN0aW9uc09wZW4gPSB0cnVlO1xuICB9XG5cbiAgX2hpZGVBY3Rpb25zKCkge1xuICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuJGVsLmRhdGEoJ2Jhc2UtaGVpZ2h0Jyk7XG5cbiAgICAvKlxuICAgICAgLSBUcmFuc2l0aW9uIGJ1dHRvbnMgdXAsIHVzaW5nIGJhc2UgaGVpZ2h0IGZvciBhbmltYXRpb25cbiAgICAgIC0gUmVtb3ZlIGhlaWdodHMgYWZ0ZXIgYW5pbWF0aW9uIGlzIGNvbXBsZXRlIGluIGNhc2Ugb2YgcmVzaXplXG4gICAgICovXG4gICAgdGhpcy4kZWxcbiAgICAgIC5yZXZlYWxlcignaGlkZScpXG4gICAgICAub25lKCdyZXZlYWxlci1hbmltYXRpbmcnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuJGVsLm9mZigncmV2ZWFsZXItYW5pbWF0aW5nLnByb2R1Y3QtaXRlbScpO1xuICAgICAgICB0aGlzLiRlbC5jc3MoeyBoZWlnaHQgfSk7XG4gICAgICAgIHRoaXMuJGNvbnRlbnQuY3NzKHsgaGVpZ2h0IH0pO1xuICAgICAgfSkub25lKCdyZXZlYWxlci1oaWRlJywgKCkgPT4ge1xuICAgICAgICB0aGlzLiRlbFxuICAgICAgICAgIC5vZmYoJ3JldmVhbGVyLWhpZGUucHJvZHVjdC1pdGVtJylcbiAgICAgICAgICAuY3NzKCdoZWlnaHQnLCAnJyk7XG4gICAgICAgIHRoaXMuJGNvbnRlbnQuY3NzKCdoZWlnaHQnLCAnJyk7XG4gICAgICB9KTtcblxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCB0aGlzLl9hY3Rpb25zVG9nZ2xlKTtcblxuICAgIHRoaXMuYWN0aW9uc09wZW4gPSBmYWxzZTtcbiAgfVxuXG4gIF9hZGRUb0NhcnQoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0ICRhdGNCdXR0b24gPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IHZhcmlhbnRJRCA9ICRhdGNCdXR0b24uYXR0cignZGF0YS12YXJpYW50LWlkJyk7XG5cbiAgICBjb25zdCBmb3JtRGF0YSA9IFtcbiAgICAgIHtcbiAgICAgICAgJ25hbWUnOiAnaWQnLFxuICAgICAgICAndmFsdWUnOiB2YXJpYW50SUQsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnbmFtZSc6ICdxdWFudGl0eScsXG4gICAgICAgICd2YWx1ZSc6IDEsXG4gICAgICB9LFxuICAgIF07XG5cbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgJGF0Y0J1dHRvbixcbiAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgIG1vbmV5Rm9ybWF0OiB0aGlzLnF1aWNrQnV5U2V0dGluZ3MubW9uZXlfZm9ybWF0LFxuICAgICAgICBjYXJ0UmVkaXJlY3Rpb246IHRoaXMucXVpY2tCdXlTZXR0aW5ncy5jYXJ0X3JlZGlyZWN0aW9uLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgQWRkVG9DYXJ0Rmx5b3V0LmluaXQoZm9ybURhdGEsIHRoaXMucHJvZHVjdCwgb3B0aW9ucyk7XG4gIH1cblxuICB1bmxvYWQoKSB7XG4gICAgdGhpcy5ldmVudHMuZm9yRWFjaCgkZWwgPT4gJGVsLm9mZignLnByb2R1Y3QtaXRlbScpKTtcblxuICAgIGlmICh0aGlzLnByb2R1Y3RRdWlja3Nob3ApIHtcbiAgICAgIHRoaXMucHJvZHVjdFF1aWNrc2hvcC51bmxvYWQoKTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1c2luJywgdGhpcy5fYWN0aW9uc1RvZ2dsZSk7XG5cbiAgICBpZiAodGhpcy5zd2F0Y2hlcykge1xuICAgICAgdGhpcy5zd2F0Y2hlcy51bmxvYWQoKTtcbiAgICB9XG4gICAgdGhpcy5sYXp5TG9hZGVyLnVubG9hZCgpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/components/ProductGridItem.js\n");

/***/ }),

/***/ "./source/scripts/components/ProductQuickshop.js":
/*!*******************************************************!*\
  !*** ./source/scripts/components/ProductQuickshop.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductQuickshop; });\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Modal */ \"./source/scripts/components/Modal.js\");\n/* harmony import */ var _ProductDetails__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ProductDetails */ \"./source/scripts/components/ProductDetails.js\");\n/* harmony import */ var _RichText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RichText */ \"./source/scripts/components/RichText.js\");\n/* harmony import */ var _helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/ProductReviews */ \"./source/scripts/helpers/ProductReviews.js\");\n/* harmony import */ var _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shortcodes/Shortcodes */ \"./source/scripts/shortcodes/Shortcodes.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n/**\n * Updates element IDs to ensure they are unique within the document by checking for conflicts.\n * Also checks associated labels and updates the `for` attribute if required.\n * @param {NodeList} idEls Elements to check for ID uniqueness within the document\n * @param {NodeList} labels Labels to update if element with associated ID is updated.\n */\n\nfunction makeIDsUnique(idEls, labels) {\n  idEls.forEach(function (idEl) {\n    var oldId = idEl.getAttribute('id');\n    var duplicateCount = document.querySelectorAll(\"[id$=\\\"\".concat(oldId, \"\\\"]\")).length;\n\n    if (duplicateCount > 0) {\n      var newId = \"\".concat(duplicateCount).concat(oldId);\n      idEl.setAttribute('id', newId); // update label\n\n      labels.forEach(function (label) {\n        if (label.matches(\"[for=\\\"\".concat(oldId, \"\\\"]\"))) {\n          label.setAttribute('for', newId);\n        }\n      });\n    }\n  });\n}\n\nvar ProductQuickshop = /*#__PURE__*/function () {\n  function ProductQuickshop(options) {\n    _classCallCheck(this, ProductQuickshop);\n\n    this.options = options;\n    this.el = null;\n    this.modal = null;\n    this.richText = null;\n    this.productDetails = null;\n    this.initialVariant = this.options.initialVariant || null;\n    this.isLoaded = false;\n    this.loader = null;\n    this.isOpen = false;\n  }\n  /**\n   * Sets a variant to be preselected when quickshop is opened\n   * @param {integer} variantId - Variant ID to preselect when quickshop is opened\n   */\n\n\n  _createClass(ProductQuickshop, [{\n    key: \"setInitialVariant\",\n    value: function setInitialVariant(variantId) {\n      this.initialVariant = variantId;\n    }\n  }, {\n    key: \"open\",\n    value: function open(full) {\n      var _this = this;\n\n      var loader = !this.isLoaded && this.loader ? this.loader : this.load();\n      loader.then(function () {\n        var _this$options = _this.options,\n            id = _this$options.id,\n            url = _this$options.url,\n            trigger = _this$options.trigger,\n            button = _this$options.button;\n        var modalCallbacks = {\n          onOpen: function onOpen() {\n            return _this._selectInitialVariant();\n          },\n          onClose: function onClose() {\n            return _this.close();\n          }\n        };\n        var leftThumbsClass = button[0] && button[0].hasAttribute('data-thumbs-left') ? ' quickshop-thumbs-left' : '';\n        _this.modal = new _Modal__WEBPACK_IMPORTED_MODULE_2__[\"default\"](modalCallbacks);\n\n        _this.modal.open(\"#shopify-section-\".concat(id, \" [data-product-quickshop-url=\\\"\").concat(url, \"\\\"]\"), full ? \"quickshop-full\".concat(leftThumbsClass) : 'quickshop-slim', trigger);\n\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].watch(_this.el);\n\n        _this.productDetails.onQuickshopOpen();\n\n        if (window.Shopify && Shopify.PaymentButton) {\n          Shopify.PaymentButton.init();\n        }\n\n        _this.isOpen = true;\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      if (this.isLoaded || this.loader) {\n        var loader = this.loader || Promise.resolve();\n        return loader.then(function () {\n          if (!_this2.isOpen) {\n            return;\n          }\n\n          if (!_this2.openingAddToCart) {\n            var trigger = _this2.options.trigger;\n            trigger.focus();\n          }\n\n          _this2._clearNotification();\n\n          _this2.modal.unload();\n\n          _this2.productDetails.unloadAllMedia();\n\n          _this2.isOpen = false;\n        });\n      }\n\n      return Promise.resolve();\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      var _this3 = this;\n\n      if (this.isLoaded || this.loader) {\n        return this.close().then(function () {\n          if (_this3.productDetails) {\n            _this3.productDetails.unload();\n          }\n\n          if (_this3.richText) {\n            _this3.richText.unload();\n          }\n\n          if (_this3.shortcodes) {\n            _this3.shortcodes.unload();\n          }\n        });\n      }\n\n      return Promise.resolve();\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      var _this4 = this;\n\n      // If we're already loaded, return true\n      if (this.isLoaded) {\n        return Promise.resolve(true);\n      } // If we're currently loading, return the existing promise\n\n\n      if (this.loader) {\n        return this.loader;\n      }\n\n      var _this$options2 = this.options,\n          el = _this$options2.el,\n          url = _this$options2.url,\n          hash = _this$options2.hash;\n      this.openingAddToCart = false;\n      this.loader = shopify_asyncview__WEBPACK_IMPORTED_MODULE_0__[\"default\"].load(url, {\n        view: '_quickshop'\n      }, {\n        hash: hash\n      }).then(function (response) {\n        var data = response.data,\n            html = response.html;\n        var context = data.context,\n            settings = data.settings,\n            product = data.product,\n            models = data.models;\n        var container = document.createElement('div');\n        container.innerHTML = html;\n        var formArea = container.querySelector('[data-product-form-area]');\n        makeIDsUnique(formArea.querySelectorAll('select[id], input[id]'), formArea.querySelectorAll('label[for]'));\n        var gallery = container.querySelector('[data-product-gallery]');\n        var details = container.querySelector('[data-product-details]');\n        var description = container.querySelector('[data-product-description]');\n        _this4._onATCInit = _this4._onATCInit.bind(_this4);\n        _this4._onATCError = _this4._onATCError.bind(_this4);\n        _this4._onATCSuccess = _this4._onATCSuccess.bind(_this4);\n        _this4._onATCClose = _this4._onATCClose.bind(_this4);\n        var atcCallbacks = {\n          onInit: _this4._onATCInit,\n          onError: _this4._onATCError,\n          onSuccess: _this4._onATCSuccess,\n          onClose: _this4._onATCClose\n        };\n        _this4.productDetails = new _ProductDetails__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n          $formArea: $(formArea),\n          gallery: gallery,\n          $details: $(details),\n          atcCallbacks: atcCallbacks,\n          context: context,\n          settings: settings,\n          product: product,\n          models: models,\n          useHistory: false,\n          isQuickshop: true\n        });\n        _this4.shortcodes = new _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_6__[\"default\"](container);\n\n        if (description) {\n          _this4.richText = new _RichText__WEBPACK_IMPORTED_MODULE_4__[\"default\"](description);\n        }\n\n        Object(_helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        el.setAttribute('data-loaded', true);\n        _this4.el = el.appendChild(container);\n        _this4.isLoaded = true;\n      }).then(function () {\n        _this4.loader = null;\n        return true;\n      }).catch(function () {\n        _this4.loader = null;\n        return false;\n      });\n      return this.loader;\n    }\n  }, {\n    key: \"_selectInitialVariant\",\n    value: function _selectInitialVariant() {\n      this.productDetails.selectVariant(this.initialVariant);\n    }\n  }, {\n    key: \"_setNotification\",\n    value: function _setNotification(notification) {\n      var isVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var shouldFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!this.isLoaded) {\n        return;\n      }\n\n      var notificationContainer = this.el.querySelector('[data-product-quickshop-message]');\n      notificationContainer.appendChild(notification);\n\n      if (isVisible) {\n        notificationContainer.classList.add('visible');\n      } else {\n        notificationContainer.classList.remove('visible');\n      }\n\n      if (shouldFocus) {\n        notification.focus();\n      }\n    }\n  }, {\n    key: \"_clearNotification\",\n    value: function _clearNotification() {\n      if (!this.isLoaded) {\n        return;\n      }\n\n      var notificationContainer = this.el.querySelector('[data-product-quickshop-message]');\n      notificationContainer.classList.remove('visible');\n\n      while (notificationContainer.firstChild) {\n        notificationContainer.removeChild(notificationContainer.firstChild);\n      }\n    }\n  }, {\n    key: \"_onATCInit\",\n    value: function _onATCInit() {\n      this.openingAddToCart = true;\n\n      this._clearNotification();\n    }\n  }, {\n    key: \"_onATCError\",\n    value: function _onATCError(error) {\n      var notification = document.createElement('div');\n      notification.classList.add('product-message--error');\n      notification.setAttribute('tabindex', '-1');\n      notification.innerHTML = error;\n\n      this._setNotification(notification, true, true);\n    }\n  }, {\n    key: \"_onATCSuccess\",\n    value: function _onATCSuccess() {\n      this.close();\n    }\n  }, {\n    key: \"_onATCClose\",\n    value: function _onATCClose() {\n      var trigger = this.options.trigger;\n      trigger.focus();\n    }\n  }]);\n\n  return ProductQuickshop;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/ProductQuickshop.js\n");

/***/ }),

/***/ "./source/scripts/components/ProductRowScroller.js":
/*!*********************************************************!*\
  !*** ./source/scripts/components/ProductRowScroller.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductRowScroller; });\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar ProductRowScroller = /*#__PURE__*/function () {\n  function ProductRowScroller(productRow) {\n    _classCallCheck(this, ProductRowScroller);\n\n    this.$window = $(window);\n    this.flickity = null;\n    this.productRow = productRow;\n    this.$productRow = $(this.productRow); // Activate flickity on mobile\n\n    this._mobileSlider = this._mobileSlider.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"onChange\"](this._mobileSlider);\n\n    this._mobileSlider();\n  }\n\n  _createClass(ProductRowScroller, [{\n    key: \"unload\",\n    value: function unload() {\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"offChange\"](this._mobileSlider);\n\n      this._destroyFlickity();\n    }\n  }, {\n    key: \"_initFlickity\",\n    value: function _initFlickity() {\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_1___default.a(this.productRow, {\n        cellSelector: '.productgrid--item',\n        contain: true,\n        freeScroll: true,\n        percentPosition: false,\n        prevNextButtons: false,\n        pageDots: false,\n        setGallerySize: false\n      });\n\n      this._bindSlider();\n    }\n  }, {\n    key: \"_destroyFlickity\",\n    value: function _destroyFlickity() {\n      if (!this.flickity) {\n        return;\n      }\n\n      this.$window.off('.product-row');\n      this.$productRow.off('.product-row');\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n  }, {\n    key: \"_mobileSlider\",\n    value: function _mobileSlider() {\n      // If is Large layout, attempt to destroy flickity\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"min\"]('L')) {\n        this._destroyFlickity();\n\n        return;\n      } // Is XS/S/M, and flickity is init'd -- do nothing\n\n\n      if (this.flickity) {\n        return;\n      } // Is XS/S/M, and flickity is not init'd\n\n\n      this._initFlickity();\n    }\n  }, {\n    key: \"_bindSlider\",\n    value: function _bindSlider() {\n      var _this = this;\n\n      var $slider = this.$productRow.find('.flickity-slider');\n      this.$window.on('resize.product-row', just_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n        _this.$productRow.trigger('heightUpdate.product-row');\n      }));\n      this.flickity.on('cellSelect', function () {\n        _this.$productRow.trigger('heightUpdate.product-row');\n      });\n      this.$productRow.on('heightUpdate.product-row', function () {\n        if (!_this.flickity) {\n          return;\n        }\n\n        $slider.height(Math.ceil(_this.flickity.maxCellHeight));\n      }); // Sets the Slider to the height of the first slide\n\n      this.$productRow.trigger('heightUpdate.product-row');\n    }\n  }]);\n\n  return ProductRowScroller;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1Byb2R1Y3RSb3dTY3JvbGxlci5qcz8xNzI5Il0sIm5hbWVzIjpbIlByb2R1Y3RSb3dTY3JvbGxlciIsInByb2R1Y3RSb3ciLCIkd2luZG93IiwiJCIsIndpbmRvdyIsImZsaWNraXR5IiwiJHByb2R1Y3RSb3ciLCJfbW9iaWxlU2xpZGVyIiwiYmluZCIsImJyZWFrcG9pbnQiLCJfZGVzdHJveUZsaWNraXR5IiwiRmxpY2tpdHkiLCJjZWxsU2VsZWN0b3IiLCJjb250YWluIiwiZnJlZVNjcm9sbCIsInBlcmNlbnRQb3NpdGlvbiIsInByZXZOZXh0QnV0dG9ucyIsInBhZ2VEb3RzIiwic2V0R2FsbGVyeVNpemUiLCJfYmluZFNsaWRlciIsIm9mZiIsImRlc3Ryb3kiLCJfaW5pdEZsaWNraXR5IiwiJHNsaWRlciIsImZpbmQiLCJvbiIsImRlYm91bmNlIiwidHJpZ2dlciIsImhlaWdodCIsIk1hdGgiLCJjZWlsIiwibWF4Q2VsbEhlaWdodCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0lBR3FCQSxrQjtBQUNuQiw4QkFBWUMsVUFBWixFQUF3QjtBQUFBOztBQUN0QixTQUFLQyxPQUFMLEdBQWVDLENBQUMsQ0FBQ0MsTUFBRCxDQUFoQjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsSUFBaEI7QUFDQSxTQUFLSixVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLFNBQUtLLFdBQUwsR0FBbUJILENBQUMsQ0FBQyxLQUFLRixVQUFOLENBQXBCLENBSnNCLENBTXRCOztBQUNBLFNBQUtNLGFBQUwsR0FBcUIsS0FBS0EsYUFBTCxDQUFtQkMsSUFBbkIsQ0FBd0IsSUFBeEIsQ0FBckI7QUFDQUMsbUVBQUEsQ0FBb0IsS0FBS0YsYUFBekI7O0FBRUEsU0FBS0EsYUFBTDtBQUNEOzs7OzZCQUVRO0FBQ1BFLHNFQUFBLENBQXFCLEtBQUtGLGFBQTFCOztBQUNBLFdBQUtHLGdCQUFMO0FBQ0Q7OztvQ0FFZTtBQUNkLFdBQUtMLFFBQUwsR0FBZ0IsSUFBSU0sK0NBQUosQ0FBYSxLQUFLVixVQUFsQixFQUE4QjtBQUM1Q1csb0JBQVksRUFBRSxvQkFEOEI7QUFFNUNDLGVBQU8sRUFBRSxJQUZtQztBQUc1Q0Msa0JBQVUsRUFBRSxJQUhnQztBQUk1Q0MsdUJBQWUsRUFBRSxLQUoyQjtBQUs1Q0MsdUJBQWUsRUFBRSxLQUwyQjtBQU01Q0MsZ0JBQVEsRUFBRSxLQU5rQztBQU81Q0Msc0JBQWMsRUFBRTtBQVA0QixPQUE5QixDQUFoQjs7QUFVQSxXQUFLQyxXQUFMO0FBQ0Q7Ozt1Q0FFa0I7QUFDakIsVUFBSSxDQUFDLEtBQUtkLFFBQVYsRUFBb0I7QUFDbEI7QUFDRDs7QUFFRCxXQUFLSCxPQUFMLENBQWFrQixHQUFiLENBQWlCLGNBQWpCO0FBQ0EsV0FBS2QsV0FBTCxDQUFpQmMsR0FBakIsQ0FBcUIsY0FBckI7QUFFQSxXQUFLZixRQUFMLENBQWNnQixPQUFkO0FBQ0EsV0FBS2hCLFFBQUwsR0FBZ0IsSUFBaEI7QUFDRDs7O29DQUVlO0FBQ2Q7QUFDQSxVQUFJSSwwREFBQSxDQUFlLEdBQWYsQ0FBSixFQUF5QjtBQUN2QixhQUFLQyxnQkFBTDs7QUFDQTtBQUNELE9BTGEsQ0FPZDs7O0FBQ0EsVUFBSSxLQUFLTCxRQUFULEVBQW1CO0FBQ2pCO0FBQ0QsT0FWYSxDQVlkOzs7QUFDQSxXQUFLaUIsYUFBTDtBQUNEOzs7a0NBRWE7QUFBQTs7QUFDWixVQUFNQyxPQUFPLEdBQUcsS0FBS2pCLFdBQUwsQ0FBaUJrQixJQUFqQixDQUFzQixrQkFBdEIsQ0FBaEI7QUFFQSxXQUFLdEIsT0FBTCxDQUFhdUIsRUFBYixDQUFnQixvQkFBaEIsRUFBc0NDLG9EQUFRLENBQUMsWUFBTTtBQUNuRCxhQUFJLENBQUNwQixXQUFMLENBQWlCcUIsT0FBakIsQ0FBeUIsMEJBQXpCO0FBQ0QsT0FGNkMsQ0FBOUM7QUFJQSxXQUFLdEIsUUFBTCxDQUFjb0IsRUFBZCxDQUFpQixZQUFqQixFQUErQixZQUFNO0FBQ25DLGFBQUksQ0FBQ25CLFdBQUwsQ0FBaUJxQixPQUFqQixDQUF5QiwwQkFBekI7QUFDRCxPQUZEO0FBSUEsV0FBS3JCLFdBQUwsQ0FBaUJtQixFQUFqQixDQUFvQiwwQkFBcEIsRUFBZ0QsWUFBTTtBQUNwRCxZQUFJLENBQUMsS0FBSSxDQUFDcEIsUUFBVixFQUFvQjtBQUNsQjtBQUNEOztBQUVEa0IsZUFBTyxDQUFDSyxNQUFSLENBQWVDLElBQUksQ0FBQ0MsSUFBTCxDQUFVLEtBQUksQ0FBQ3pCLFFBQUwsQ0FBYzBCLGFBQXhCLENBQWY7QUFDRCxPQU5ELEVBWFksQ0FtQlo7O0FBQ0EsV0FBS3pCLFdBQUwsQ0FBaUJxQixPQUFqQixDQUF5QiwwQkFBekI7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NvbXBvbmVudHMvUHJvZHVjdFJvd1Njcm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlYm91bmNlIGZyb20gJ2p1c3QtZGVib3VuY2UnO1xuaW1wb3J0IEZsaWNraXR5IGZyb20gJ2ZsaWNraXR5JztcbmltcG9ydCAqIGFzIGJyZWFrcG9pbnQgZnJvbSAnQHBpeGVsdW5pb24vYnJlYWtwb2ludCc7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZHVjdFJvd1Njcm9sbGVyIHtcbiAgY29uc3RydWN0b3IocHJvZHVjdFJvdykge1xuICAgIHRoaXMuJHdpbmRvdyA9ICQod2luZG93KTtcbiAgICB0aGlzLmZsaWNraXR5ID0gbnVsbDtcbiAgICB0aGlzLnByb2R1Y3RSb3cgPSBwcm9kdWN0Um93O1xuICAgIHRoaXMuJHByb2R1Y3RSb3cgPSAkKHRoaXMucHJvZHVjdFJvdyk7XG5cbiAgICAvLyBBY3RpdmF0ZSBmbGlja2l0eSBvbiBtb2JpbGVcbiAgICB0aGlzLl9tb2JpbGVTbGlkZXIgPSB0aGlzLl9tb2JpbGVTbGlkZXIuYmluZCh0aGlzKTtcbiAgICBicmVha3BvaW50Lm9uQ2hhbmdlKHRoaXMuX21vYmlsZVNsaWRlcik7XG5cbiAgICB0aGlzLl9tb2JpbGVTbGlkZXIoKTtcbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICBicmVha3BvaW50Lm9mZkNoYW5nZSh0aGlzLl9tb2JpbGVTbGlkZXIpO1xuICAgIHRoaXMuX2Rlc3Ryb3lGbGlja2l0eSgpO1xuICB9XG5cbiAgX2luaXRGbGlja2l0eSgpIHtcbiAgICB0aGlzLmZsaWNraXR5ID0gbmV3IEZsaWNraXR5KHRoaXMucHJvZHVjdFJvdywge1xuICAgICAgY2VsbFNlbGVjdG9yOiAnLnByb2R1Y3RncmlkLS1pdGVtJyxcbiAgICAgIGNvbnRhaW46IHRydWUsXG4gICAgICBmcmVlU2Nyb2xsOiB0cnVlLFxuICAgICAgcGVyY2VudFBvc2l0aW9uOiBmYWxzZSxcbiAgICAgIHByZXZOZXh0QnV0dG9uczogZmFsc2UsXG4gICAgICBwYWdlRG90czogZmFsc2UsXG4gICAgICBzZXRHYWxsZXJ5U2l6ZTogZmFsc2UsXG4gICAgfSk7XG5cbiAgICB0aGlzLl9iaW5kU2xpZGVyKCk7XG4gIH1cblxuICBfZGVzdHJveUZsaWNraXR5KCkge1xuICAgIGlmICghdGhpcy5mbGlja2l0eSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuJHdpbmRvdy5vZmYoJy5wcm9kdWN0LXJvdycpO1xuICAgIHRoaXMuJHByb2R1Y3RSb3cub2ZmKCcucHJvZHVjdC1yb3cnKTtcblxuICAgIHRoaXMuZmxpY2tpdHkuZGVzdHJveSgpO1xuICAgIHRoaXMuZmxpY2tpdHkgPSBudWxsO1xuICB9XG5cbiAgX21vYmlsZVNsaWRlcigpIHtcbiAgICAvLyBJZiBpcyBMYXJnZSBsYXlvdXQsIGF0dGVtcHQgdG8gZGVzdHJveSBmbGlja2l0eVxuICAgIGlmIChicmVha3BvaW50Lm1pbignTCcpKSB7XG4gICAgICB0aGlzLl9kZXN0cm95RmxpY2tpdHkoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJcyBYUy9TL00sIGFuZCBmbGlja2l0eSBpcyBpbml0J2QgLS0gZG8gbm90aGluZ1xuICAgIGlmICh0aGlzLmZsaWNraXR5KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSXMgWFMvUy9NLCBhbmQgZmxpY2tpdHkgaXMgbm90IGluaXQnZFxuICAgIHRoaXMuX2luaXRGbGlja2l0eSgpO1xuICB9XG5cbiAgX2JpbmRTbGlkZXIoKSB7XG4gICAgY29uc3QgJHNsaWRlciA9IHRoaXMuJHByb2R1Y3RSb3cuZmluZCgnLmZsaWNraXR5LXNsaWRlcicpO1xuXG4gICAgdGhpcy4kd2luZG93Lm9uKCdyZXNpemUucHJvZHVjdC1yb3cnLCBkZWJvdW5jZSgoKSA9PiB7XG4gICAgICB0aGlzLiRwcm9kdWN0Um93LnRyaWdnZXIoJ2hlaWdodFVwZGF0ZS5wcm9kdWN0LXJvdycpO1xuICAgIH0pKTtcblxuICAgIHRoaXMuZmxpY2tpdHkub24oJ2NlbGxTZWxlY3QnLCAoKSA9PiB7XG4gICAgICB0aGlzLiRwcm9kdWN0Um93LnRyaWdnZXIoJ2hlaWdodFVwZGF0ZS5wcm9kdWN0LXJvdycpO1xuICAgIH0pO1xuXG4gICAgdGhpcy4kcHJvZHVjdFJvdy5vbignaGVpZ2h0VXBkYXRlLnByb2R1Y3Qtcm93JywgKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmZsaWNraXR5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgJHNsaWRlci5oZWlnaHQoTWF0aC5jZWlsKHRoaXMuZmxpY2tpdHkubWF4Q2VsbEhlaWdodCkpO1xuICAgIH0pO1xuXG4gICAgLy8gU2V0cyB0aGUgU2xpZGVyIHRvIHRoZSBoZWlnaHQgb2YgdGhlIGZpcnN0IHNsaWRlXG4gICAgdGhpcy4kcHJvZHVjdFJvdy50cmlnZ2VyKCdoZWlnaHRVcGRhdGUucHJvZHVjdC1yb3cnKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/ProductRowScroller.js\n");

/***/ }),

/***/ "./source/scripts/components/RichText.js":
/*!***********************************************!*\
  !*** ./source/scripts/components/RichText.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RichText; });\n/* harmony import */ var fitvids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fitvids */ \"./node_modules/fitvids/index.js\");\n/* harmony import */ var fitvids__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fitvids__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_grouped_content__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/grouped-content */ \"./node_modules/@pixelunion/grouped-content/dist/index.js\");\n/* harmony import */ var _pixelunion_grouped_content__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_grouped_content__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar RichText = /*#__PURE__*/function () {\n  function RichText(el) {\n    _classCallCheck(this, RichText);\n\n    this.$el = $(el);\n\n    this._initExternalLinks();\n\n    this.groupedContent = null;\n\n    if (this.$el.length) {\n      this.groupedContent = new _pixelunion_grouped_content__WEBPACK_IMPORTED_MODULE_1___default.a(this.$el.get(0), {\n        layout: 'tabs',\n        intelliparse: false\n      });\n      fitvids__WEBPACK_IMPORTED_MODULE_0___default()('.rte');\n    }\n  }\n\n  _createClass(RichText, [{\n    key: \"unload\",\n    value: function unload() {\n      if (this.groupedContent) {\n        this.groupedContent.unload();\n      }\n    }\n    /**\n     * Open links within an RTE field in a new window if they point to external domains\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_initExternalLinks\",\n    value: function _initExternalLinks() {\n      var anchors = this.$el.find('a[href^=\"http\"]').filter(function (i, el) {\n        return el.href.indexOf(location.hostname) === -1;\n      });\n      anchors.attr('target', '_blank');\n    }\n  }]);\n\n  return RichText;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1JpY2hUZXh0LmpzPzViYTgiXSwibmFtZXMiOlsiUmljaFRleHQiLCJlbCIsIiRlbCIsIiQiLCJfaW5pdEV4dGVybmFsTGlua3MiLCJncm91cGVkQ29udGVudCIsImxlbmd0aCIsIkdyb3VwZWRDb250ZW50IiwiZ2V0IiwibGF5b3V0IiwiaW50ZWxsaXBhcnNlIiwiZml0dmlkcyIsInVubG9hZCIsImFuY2hvcnMiLCJmaW5kIiwiZmlsdGVyIiwiaSIsImhyZWYiLCJpbmRleE9mIiwibG9jYXRpb24iLCJob3N0bmFtZSIsImF0dHIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0lBRXFCQSxRO0FBQ25CLG9CQUFZQyxFQUFaLEVBQWdCO0FBQUE7O0FBQ2QsU0FBS0MsR0FBTCxHQUFXQyxDQUFDLENBQUNGLEVBQUQsQ0FBWjs7QUFDQSxTQUFLRyxrQkFBTDs7QUFDQSxTQUFLQyxjQUFMLEdBQXNCLElBQXRCOztBQUVBLFFBQUksS0FBS0gsR0FBTCxDQUFTSSxNQUFiLEVBQXFCO0FBQ25CLFdBQUtELGNBQUwsR0FBc0IsSUFBSUUsa0VBQUosQ0FBbUIsS0FBS0wsR0FBTCxDQUFTTSxHQUFULENBQWEsQ0FBYixDQUFuQixFQUFvQztBQUN4REMsY0FBTSxFQUFFLE1BRGdEO0FBRXhEQyxvQkFBWSxFQUFFO0FBRjBDLE9BQXBDLENBQXRCO0FBS0FDLG9EQUFPLENBQUMsTUFBRCxDQUFQO0FBQ0Q7QUFDRjs7Ozs2QkFFUTtBQUNQLFVBQUksS0FBS04sY0FBVCxFQUF5QjtBQUN2QixhQUFLQSxjQUFMLENBQW9CTyxNQUFwQjtBQUNEO0FBQ0Y7QUFFRDs7Ozs7Ozs7eUNBS29CO0FBQ2xCLFVBQU1DLE9BQU8sR0FBRyxLQUFLWCxHQUFMLENBQVNZLElBQVQsQ0FBYyxpQkFBZCxFQUFpQ0MsTUFBakMsQ0FBd0MsVUFBQ0MsQ0FBRCxFQUFJZixFQUFKLEVBQVc7QUFDakUsZUFBT0EsRUFBRSxDQUFDZ0IsSUFBSCxDQUFRQyxPQUFSLENBQWdCQyxRQUFRLENBQUNDLFFBQXpCLE1BQXVDLENBQUMsQ0FBL0M7QUFDRCxPQUZlLENBQWhCO0FBSUFQLGFBQU8sQ0FBQ1EsSUFBUixDQUFhLFFBQWIsRUFBdUIsUUFBdkI7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NvbXBvbmVudHMvUmljaFRleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZml0dmlkcyBmcm9tICdmaXR2aWRzJztcbmltcG9ydCBHcm91cGVkQ29udGVudCBmcm9tICdAcGl4ZWx1bmlvbi9ncm91cGVkLWNvbnRlbnQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSaWNoVGV4dCB7XG4gIGNvbnN0cnVjdG9yKGVsKSB7XG4gICAgdGhpcy4kZWwgPSAkKGVsKTtcbiAgICB0aGlzLl9pbml0RXh0ZXJuYWxMaW5rcygpO1xuICAgIHRoaXMuZ3JvdXBlZENvbnRlbnQgPSBudWxsO1xuXG4gICAgaWYgKHRoaXMuJGVsLmxlbmd0aCkge1xuICAgICAgdGhpcy5ncm91cGVkQ29udGVudCA9IG5ldyBHcm91cGVkQ29udGVudCh0aGlzLiRlbC5nZXQoMCksIHtcbiAgICAgICAgbGF5b3V0OiAndGFicycsXG4gICAgICAgIGludGVsbGlwYXJzZTogZmFsc2UsXG4gICAgICB9KTtcblxuICAgICAgZml0dmlkcygnLnJ0ZScpO1xuICAgIH1cbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICBpZiAodGhpcy5ncm91cGVkQ29udGVudCkge1xuICAgICAgdGhpcy5ncm91cGVkQ29udGVudC51bmxvYWQoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogT3BlbiBsaW5rcyB3aXRoaW4gYW4gUlRFIGZpZWxkIGluIGEgbmV3IHdpbmRvdyBpZiB0aGV5IHBvaW50IHRvIGV4dGVybmFsIGRvbWFpbnNcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9pbml0RXh0ZXJuYWxMaW5rcygpe1xuICAgIGNvbnN0IGFuY2hvcnMgPSB0aGlzLiRlbC5maW5kKCdhW2hyZWZePVwiaHR0cFwiXScpLmZpbHRlcigoaSwgZWwpID0+IHtcbiAgICAgIHJldHVybiBlbC5ocmVmLmluZGV4T2YobG9jYXRpb24uaG9zdG5hbWUpID09PSAtMTtcbiAgICB9KTtcblxuICAgIGFuY2hvcnMuYXR0cigndGFyZ2V0JywgJ19ibGFuaycpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/components/RichText.js\n");

/***/ }),

/***/ "./source/scripts/components/Video.js":
/*!********************************************!*\
  !*** ./source/scripts/components/Video.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Video; });\n/* harmony import */ var _Youtube__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Youtube */ \"./source/scripts/components/Youtube.js\");\n/* harmony import */ var _Vimeo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Vimeo */ \"./source/scripts/components/Vimeo.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Video = /*#__PURE__*/function () {\n  function Video(el, options) {\n    _classCallCheck(this, Video);\n\n    this.el = el;\n    this.options = options;\n    this.platform = el.getAttribute('data-video').trim();\n    this.playButton = el.querySelector('[data-video-play-button]');\n    this.videoEl = el.querySelector('[data-video-element]');\n    this.onPlayClick = this._onPlayClick.bind(this);\n    this.onPauseClick = this._onPauseClick.bind(this);\n    this.autoplay = this._autoplay.bind(this);\n    this.video = null;\n    this.videoData = {\n      el: this.videoEl.childNodes[0],\n      videoUrl: this.videoEl.getAttribute('data-video-url'),\n      loop: this.options && this.options.loop\n    };\n\n    switch (this.platform) {\n      case 'youtube':\n        this.video = new _Youtube__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.videoData);\n        break;\n\n      case 'vimeo':\n        this.video = new _Vimeo__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.videoData);\n        break;\n\n      default:\n        this.video = null;\n        break;\n    }\n\n    if (this.playButton) {\n      if (this.options && this.options.autoplay) {\n        this.autoplay();\n      }\n\n      this.playButton.addEventListener('click', this.onPlayClick);\n    }\n  }\n\n  _createClass(Video, [{\n    key: \"_onPlayClick\",\n    value: function _onPlayClick() {\n      var _this = this;\n\n      this.el.classList.add('video-loading');\n      this.video.play().then(function () {\n        _this.el.classList.add('video-transitioning');\n\n        setTimeout(function () {\n          _this.el.classList.remove('video-loading');\n\n          _this.el.classList.remove('video-transitioning');\n\n          _this.el.classList.add('video-playing');\n        }, 200);\n      });\n    }\n  }, {\n    key: \"_onPauseClick\",\n    value: function _onPauseClick() {\n      this.video.pause();\n    }\n  }, {\n    key: \"_autoplay\",\n    value: function _autoplay() {\n      var _this2 = this;\n\n      this.el.classList.add('video-loading');\n      this.video.autoplay().then(function () {\n        _this2.el.classList.add('video-transitioning');\n\n        setTimeout(function () {\n          _this2.el.classList.remove('video-loading');\n\n          _this2.el.classList.remove('video-transitioning');\n\n          _this2.el.classList.add('video-playing');\n        }, 200);\n      });\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this._onPlayClick();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._onPauseClick();\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      if (this.playButton) {\n        this.playButton.removeEventListener('click', this.onPlayClick);\n      }\n\n      if (this.video) {\n        this.video.unload();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unload();\n    }\n  }]);\n\n  return Video;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1ZpZGVvLmpzPzZhMDUiXSwibmFtZXMiOlsiVmlkZW8iLCJlbCIsIm9wdGlvbnMiLCJwbGF0Zm9ybSIsImdldEF0dHJpYnV0ZSIsInRyaW0iLCJwbGF5QnV0dG9uIiwicXVlcnlTZWxlY3RvciIsInZpZGVvRWwiLCJvblBsYXlDbGljayIsIl9vblBsYXlDbGljayIsImJpbmQiLCJvblBhdXNlQ2xpY2siLCJfb25QYXVzZUNsaWNrIiwiYXV0b3BsYXkiLCJfYXV0b3BsYXkiLCJ2aWRlbyIsInZpZGVvRGF0YSIsImNoaWxkTm9kZXMiLCJ2aWRlb1VybCIsImxvb3AiLCJZb3V0dWJlIiwiVmltZW8iLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwicGxheSIsInRoZW4iLCJzZXRUaW1lb3V0IiwicmVtb3ZlIiwicGF1c2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidW5sb2FkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTs7SUFFcUJBLEs7QUFDbkIsaUJBQVlDLEVBQVosRUFBZ0JDLE9BQWhCLEVBQXlCO0FBQUE7O0FBQ3ZCLFNBQUtELEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JGLEVBQUUsQ0FBQ0csWUFBSCxDQUFnQixZQUFoQixFQUE4QkMsSUFBOUIsRUFBaEI7QUFDQSxTQUFLQyxVQUFMLEdBQWtCTCxFQUFFLENBQUNNLGFBQUgsQ0FBaUIsMEJBQWpCLENBQWxCO0FBQ0EsU0FBS0MsT0FBTCxHQUFlUCxFQUFFLENBQUNNLGFBQUgsQ0FBaUIsc0JBQWpCLENBQWY7QUFFQSxTQUFLRSxXQUFMLEdBQW1CLEtBQUtDLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCLElBQXZCLENBQW5CO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLQyxhQUFMLENBQW1CRixJQUFuQixDQUF3QixJQUF4QixDQUFwQjtBQUNBLFNBQUtHLFFBQUwsR0FBZ0IsS0FBS0MsU0FBTCxDQUFlSixJQUFmLENBQW9CLElBQXBCLENBQWhCO0FBRUEsU0FBS0ssS0FBTCxHQUFhLElBQWI7QUFFQSxTQUFLQyxTQUFMLEdBQWlCO0FBQ2ZoQixRQUFFLEVBQUUsS0FBS08sT0FBTCxDQUFhVSxVQUFiLENBQXdCLENBQXhCLENBRFc7QUFFZkMsY0FBUSxFQUFFLEtBQUtYLE9BQUwsQ0FBYUosWUFBYixDQUEwQixnQkFBMUIsQ0FGSztBQUdmZ0IsVUFBSSxFQUFFLEtBQUtsQixPQUFMLElBQWdCLEtBQUtBLE9BQUwsQ0FBYWtCO0FBSHBCLEtBQWpCOztBQU1BLFlBQVEsS0FBS2pCLFFBQWI7QUFDRSxXQUFLLFNBQUw7QUFDRSxhQUFLYSxLQUFMLEdBQWEsSUFBSUssZ0RBQUosQ0FBWSxLQUFLSixTQUFqQixDQUFiO0FBQ0E7O0FBQ0YsV0FBSyxPQUFMO0FBQ0UsYUFBS0QsS0FBTCxHQUFhLElBQUlNLDhDQUFKLENBQVUsS0FBS0wsU0FBZixDQUFiO0FBQ0E7O0FBQ0Y7QUFDRSxhQUFLRCxLQUFMLEdBQWEsSUFBYjtBQUNBO0FBVEo7O0FBWUEsUUFBSSxLQUFLVixVQUFULEVBQXFCO0FBQ25CLFVBQUksS0FBS0osT0FBTCxJQUFnQixLQUFLQSxPQUFMLENBQWFZLFFBQWpDLEVBQTJDO0FBQ3pDLGFBQUtBLFFBQUw7QUFDRDs7QUFFRCxXQUFLUixVQUFMLENBQWdCaUIsZ0JBQWhCLENBQWlDLE9BQWpDLEVBQTBDLEtBQUtkLFdBQS9DO0FBQ0Q7QUFDRjs7OzttQ0FFYztBQUFBOztBQUNiLFdBQUtSLEVBQUwsQ0FBUXVCLFNBQVIsQ0FBa0JDLEdBQWxCLENBQXNCLGVBQXRCO0FBRUEsV0FBS1QsS0FBTCxDQUFXVSxJQUFYLEdBQ0dDLElBREgsQ0FDUSxZQUFNO0FBQ1YsYUFBSSxDQUFDMUIsRUFBTCxDQUFRdUIsU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IscUJBQXRCOztBQUVBRyxrQkFBVSxDQUFDLFlBQU07QUFDZixlQUFJLENBQUMzQixFQUFMLENBQVF1QixTQUFSLENBQWtCSyxNQUFsQixDQUF5QixlQUF6Qjs7QUFDQSxlQUFJLENBQUM1QixFQUFMLENBQVF1QixTQUFSLENBQWtCSyxNQUFsQixDQUF5QixxQkFBekI7O0FBQ0EsZUFBSSxDQUFDNUIsRUFBTCxDQUFRdUIsU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IsZUFBdEI7QUFDRCxTQUpTLEVBSVAsR0FKTyxDQUFWO0FBS0QsT0FUSDtBQVVEOzs7b0NBRWU7QUFDZCxXQUFLVCxLQUFMLENBQVdjLEtBQVg7QUFDRDs7O2dDQUVXO0FBQUE7O0FBQ1YsV0FBSzdCLEVBQUwsQ0FBUXVCLFNBQVIsQ0FBa0JDLEdBQWxCLENBQXNCLGVBQXRCO0FBRUEsV0FBS1QsS0FBTCxDQUFXRixRQUFYLEdBQ0dhLElBREgsQ0FDUSxZQUFNO0FBQ1YsY0FBSSxDQUFDMUIsRUFBTCxDQUFRdUIsU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IscUJBQXRCOztBQUVBRyxrQkFBVSxDQUFDLFlBQU07QUFDZixnQkFBSSxDQUFDM0IsRUFBTCxDQUFRdUIsU0FBUixDQUFrQkssTUFBbEIsQ0FBeUIsZUFBekI7O0FBQ0EsZ0JBQUksQ0FBQzVCLEVBQUwsQ0FBUXVCLFNBQVIsQ0FBa0JLLE1BQWxCLENBQXlCLHFCQUF6Qjs7QUFDQSxnQkFBSSxDQUFDNUIsRUFBTCxDQUFRdUIsU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IsZUFBdEI7QUFDRCxTQUpTLEVBSVAsR0FKTyxDQUFWO0FBS0QsT0FUSDtBQVVEOzs7MkJBRU07QUFDTCxXQUFLZixZQUFMO0FBQ0Q7Ozs0QkFFTztBQUNOLFdBQUtHLGFBQUw7QUFDRDs7OzZCQUdRO0FBQ1AsVUFBSSxLQUFLUCxVQUFULEVBQXFCO0FBQ25CLGFBQUtBLFVBQUwsQ0FBZ0J5QixtQkFBaEIsQ0FBb0MsT0FBcEMsRUFBNkMsS0FBS3RCLFdBQWxEO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLTyxLQUFULEVBQWdCO0FBQ2QsYUFBS0EsS0FBTCxDQUFXZ0IsTUFBWDtBQUNEO0FBQ0Y7Ozs4QkFFUztBQUNSLFdBQUtBLE1BQUw7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NvbXBvbmVudHMvVmlkZW8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgWW91dHViZSBmcm9tICcuL1lvdXR1YmUnO1xuaW1wb3J0IFZpbWVvIGZyb20gJy4vVmltZW8nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaWRlbyB7XG4gIGNvbnN0cnVjdG9yKGVsLCBvcHRpb25zKSB7XG4gICAgdGhpcy5lbCA9IGVsO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5wbGF0Zm9ybSA9IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS12aWRlbycpLnRyaW0oKTtcbiAgICB0aGlzLnBsYXlCdXR0b24gPSBlbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS12aWRlby1wbGF5LWJ1dHRvbl0nKTtcbiAgICB0aGlzLnZpZGVvRWwgPSBlbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS12aWRlby1lbGVtZW50XScpO1xuXG4gICAgdGhpcy5vblBsYXlDbGljayA9IHRoaXMuX29uUGxheUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vblBhdXNlQ2xpY2sgPSB0aGlzLl9vblBhdXNlQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLmF1dG9wbGF5ID0gdGhpcy5fYXV0b3BsYXkuYmluZCh0aGlzKTtcblxuICAgIHRoaXMudmlkZW8gPSBudWxsO1xuXG4gICAgdGhpcy52aWRlb0RhdGEgPSB7XG4gICAgICBlbDogdGhpcy52aWRlb0VsLmNoaWxkTm9kZXNbMF0sXG4gICAgICB2aWRlb1VybDogdGhpcy52aWRlb0VsLmdldEF0dHJpYnV0ZSgnZGF0YS12aWRlby11cmwnKSxcbiAgICAgIGxvb3A6IHRoaXMub3B0aW9ucyAmJiB0aGlzLm9wdGlvbnMubG9vcCxcbiAgICB9O1xuXG4gICAgc3dpdGNoICh0aGlzLnBsYXRmb3JtKSB7XG4gICAgICBjYXNlICd5b3V0dWJlJzpcbiAgICAgICAgdGhpcy52aWRlbyA9IG5ldyBZb3V0dWJlKHRoaXMudmlkZW9EYXRhKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd2aW1lbyc6XG4gICAgICAgIHRoaXMudmlkZW8gPSBuZXcgVmltZW8odGhpcy52aWRlb0RhdGEpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRoaXMudmlkZW8gPSBudWxsO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wbGF5QnV0dG9uKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5hdXRvcGxheSkge1xuICAgICAgICB0aGlzLmF1dG9wbGF5KCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMucGxheUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25QbGF5Q2xpY2spO1xuICAgIH1cbiAgfVxuXG4gIF9vblBsYXlDbGljaygpIHtcbiAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ3ZpZGVvLWxvYWRpbmcnKTtcblxuICAgIHRoaXMudmlkZW8ucGxheSgpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LmFkZCgndmlkZW8tdHJhbnNpdGlvbmluZycpO1xuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZSgndmlkZW8tbG9hZGluZycpO1xuICAgICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZSgndmlkZW8tdHJhbnNpdGlvbmluZycpO1xuICAgICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LmFkZCgndmlkZW8tcGxheWluZycpO1xuICAgICAgICB9LCAyMDApO1xuICAgICAgfSk7XG4gIH1cblxuICBfb25QYXVzZUNsaWNrKCkge1xuICAgIHRoaXMudmlkZW8ucGF1c2UoKTtcbiAgfVxuXG4gIF9hdXRvcGxheSgpIHtcbiAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ3ZpZGVvLWxvYWRpbmcnKTtcblxuICAgIHRoaXMudmlkZW8uYXV0b3BsYXkoKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ3ZpZGVvLXRyYW5zaXRpb25pbmcnKTtcblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5yZW1vdmUoJ3ZpZGVvLWxvYWRpbmcnKTtcbiAgICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5yZW1vdmUoJ3ZpZGVvLXRyYW5zaXRpb25pbmcnKTtcbiAgICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ3ZpZGVvLXBsYXlpbmcnKTtcbiAgICAgICAgfSwgMjAwKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgcGxheSgpIHtcbiAgICB0aGlzLl9vblBsYXlDbGljaygpO1xuICB9XG5cbiAgcGF1c2UoKSB7XG4gICAgdGhpcy5fb25QYXVzZUNsaWNrKCk7XG4gIH1cblxuXG4gIHVubG9hZCgpIHtcbiAgICBpZiAodGhpcy5wbGF5QnV0dG9uKSB7XG4gICAgICB0aGlzLnBsYXlCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uUGxheUNsaWNrKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy52aWRlbykge1xuICAgICAgdGhpcy52aWRlby51bmxvYWQoKTtcbiAgICB9XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMudW5sb2FkKCk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/components/Video.js\n");

/***/ }),

/***/ "./source/scripts/components/Vimeo.js":
/*!********************************************!*\
  !*** ./source/scripts/components/Vimeo.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return VimeoPlayer; });\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar api = 'https://player.vimeo.com/api/player.js';\nvar apiLoaded = false;\n\nvar VimeoPlayer = /*#__PURE__*/function () {\n  function VimeoPlayer(_ref) {\n    var el = _ref.el,\n        videoUrl = _ref.videoUrl;\n\n    _classCallCheck(this, VimeoPlayer);\n\n    this.el = el;\n    var urlParts = videoUrl.split('/');\n    this.id = urlParts[urlParts.length - 1];\n    this.onReadyCallback = null;\n    this.onApiLoaded = this._onApiLoaded.bind(this);\n    this.onProgress = this._onProgress.bind(this);\n    this.onProgressCallback = null;\n\n    if (apiLoaded) {\n      this._onApiLoaded();\n    } else {\n      scriptjs__WEBPACK_IMPORTED_MODULE_0___default()(api, this.onApiLoaded);\n    }\n  }\n\n  _createClass(VimeoPlayer, [{\n    key: \"play\",\n    value: function play() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.onProgressCallback = resolve;\n\n        if (apiLoaded) {\n          _this.player.on('play', _this.onProgress);\n\n          _this.player.play();\n        } else {\n          _this.onReadyCallback = function () {\n            _this.player.on('play', _this.onProgress);\n\n            _this.player.play();\n          };\n        }\n      });\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.onProgressCallback = resolve;\n\n        if (apiLoaded) {\n          _this2.player.on('pause', _this2.onProgress);\n\n          _this2.player.pause();\n        } else {\n          _this2.onReadyCallback = function () {\n            _this2.player.on('pause', _this2.onProgress);\n\n            _this2.player.pause();\n          };\n        }\n      });\n    }\n  }, {\n    key: \"autoplay\",\n    value: function autoplay() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.onProgressCallback = resolve;\n\n        if (apiLoaded) {\n          _this3.player.on('play', _this3.onProgress);\n\n          _this3.player.setVolume(0);\n\n          _this3.player.play();\n        } else {\n          _this3.onReadyCallback = function () {\n            _this3.player.on('play', _this3.onProgress);\n\n            _this3.player.setVolume(0);\n\n            _this3.player.play();\n          };\n        }\n      });\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.player.unload().catch();\n    }\n  }, {\n    key: \"_onApiLoaded\",\n    value: function _onApiLoaded() {\n      this.player = new window.Vimeo.Player(this.el, {\n        id: this.id\n      });\n      this.player.ready().then().catch();\n      apiLoaded = true;\n\n      if (this.onReadyCallback) {\n        this.onReadyCallback();\n      }\n    }\n  }, {\n    key: \"_onProgress\",\n    value: function _onProgress() {\n      this.player.off('play', this.onProgress);\n      this.player.off('pause', this.onProgress);\n\n      if (this.onProgressCallback) {\n        this.onProgressCallback();\n        this.onProgressCallback = null;\n      }\n    }\n  }]);\n\n  return VimeoPlayer;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL1ZpbWVvLmpzP2U2MzEiXSwibmFtZXMiOlsiYXBpIiwiYXBpTG9hZGVkIiwiVmltZW9QbGF5ZXIiLCJlbCIsInZpZGVvVXJsIiwidXJsUGFydHMiLCJzcGxpdCIsImlkIiwibGVuZ3RoIiwib25SZWFkeUNhbGxiYWNrIiwib25BcGlMb2FkZWQiLCJfb25BcGlMb2FkZWQiLCJiaW5kIiwib25Qcm9ncmVzcyIsIl9vblByb2dyZXNzIiwib25Qcm9ncmVzc0NhbGxiYWNrIiwiJHNjcmlwdCIsIlByb21pc2UiLCJyZXNvbHZlIiwicGxheWVyIiwib24iLCJwbGF5IiwicGF1c2UiLCJzZXRWb2x1bWUiLCJ1bmxvYWQiLCJjYXRjaCIsIndpbmRvdyIsIlZpbWVvIiwiUGxheWVyIiwicmVhZHkiLCJ0aGVuIiwib2ZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFFQSxJQUFNQSxHQUFHLEdBQUcsd0NBQVo7QUFDQSxJQUFJQyxTQUFTLEdBQUcsS0FBaEI7O0lBRXFCQyxXO0FBQ25CLDZCQUE4QjtBQUFBLFFBQWhCQyxFQUFnQixRQUFoQkEsRUFBZ0I7QUFBQSxRQUFaQyxRQUFZLFFBQVpBLFFBQVk7O0FBQUE7O0FBQzVCLFNBQUtELEVBQUwsR0FBVUEsRUFBVjtBQUNBLFFBQU1FLFFBQVEsR0FBR0QsUUFBUSxDQUFDRSxLQUFULENBQWUsR0FBZixDQUFqQjtBQUVBLFNBQUtDLEVBQUwsR0FBVUYsUUFBUSxDQUFDQSxRQUFRLENBQUNHLE1BQVQsR0FBa0IsQ0FBbkIsQ0FBbEI7QUFDQSxTQUFLQyxlQUFMLEdBQXVCLElBQXZCO0FBRUEsU0FBS0MsV0FBTCxHQUFtQixLQUFLQyxZQUFMLENBQWtCQyxJQUFsQixDQUF1QixJQUF2QixDQUFuQjtBQUVBLFNBQUtDLFVBQUwsR0FBa0IsS0FBS0MsV0FBTCxDQUFpQkYsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBbEI7QUFDQSxTQUFLRyxrQkFBTCxHQUEwQixJQUExQjs7QUFFQSxRQUFJZCxTQUFKLEVBQWU7QUFDYixXQUFLVSxZQUFMO0FBQ0QsS0FGRCxNQUVPO0FBQ0xLLHFEQUFPLENBQUNoQixHQUFELEVBQU0sS0FBS1UsV0FBWCxDQUFQO0FBQ0Q7QUFDRjs7OzsyQkFFTTtBQUFBOztBQUNMLGFBQU8sSUFBSU8sT0FBSixDQUFZLFVBQUFDLE9BQU8sRUFBSTtBQUM1QixhQUFJLENBQUNILGtCQUFMLEdBQTBCRyxPQUExQjs7QUFFQSxZQUFJakIsU0FBSixFQUFlO0FBQ2IsZUFBSSxDQUFDa0IsTUFBTCxDQUFZQyxFQUFaLENBQWUsTUFBZixFQUF1QixLQUFJLENBQUNQLFVBQTVCOztBQUNBLGVBQUksQ0FBQ00sTUFBTCxDQUFZRSxJQUFaO0FBQ0QsU0FIRCxNQUdPO0FBQ0wsZUFBSSxDQUFDWixlQUFMLEdBQXVCLFlBQU07QUFDM0IsaUJBQUksQ0FBQ1UsTUFBTCxDQUFZQyxFQUFaLENBQWUsTUFBZixFQUF1QixLQUFJLENBQUNQLFVBQTVCOztBQUNBLGlCQUFJLENBQUNNLE1BQUwsQ0FBWUUsSUFBWjtBQUNELFdBSEQ7QUFJRDtBQUNGLE9BWk0sQ0FBUDtBQWFEOzs7NEJBRU87QUFBQTs7QUFDTixhQUFPLElBQUlKLE9BQUosQ0FBWSxVQUFBQyxPQUFPLEVBQUk7QUFDNUIsY0FBSSxDQUFDSCxrQkFBTCxHQUEwQkcsT0FBMUI7O0FBRUEsWUFBSWpCLFNBQUosRUFBZTtBQUNiLGdCQUFJLENBQUNrQixNQUFMLENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLE1BQUksQ0FBQ1AsVUFBN0I7O0FBQ0EsZ0JBQUksQ0FBQ00sTUFBTCxDQUFZRyxLQUFaO0FBQ0QsU0FIRCxNQUdPO0FBQ0wsZ0JBQUksQ0FBQ2IsZUFBTCxHQUF1QixZQUFNO0FBQzNCLGtCQUFJLENBQUNVLE1BQUwsQ0FBWUMsRUFBWixDQUFlLE9BQWYsRUFBd0IsTUFBSSxDQUFDUCxVQUE3Qjs7QUFDQSxrQkFBSSxDQUFDTSxNQUFMLENBQVlHLEtBQVo7QUFDRCxXQUhEO0FBSUQ7QUFDRixPQVpNLENBQVA7QUFhRDs7OytCQUVVO0FBQUE7O0FBQ1QsYUFBTyxJQUFJTCxPQUFKLENBQVksVUFBQUMsT0FBTyxFQUFJO0FBQzVCLGNBQUksQ0FBQ0gsa0JBQUwsR0FBMEJHLE9BQTFCOztBQUVBLFlBQUlqQixTQUFKLEVBQWU7QUFDYixnQkFBSSxDQUFDa0IsTUFBTCxDQUFZQyxFQUFaLENBQWUsTUFBZixFQUF1QixNQUFJLENBQUNQLFVBQTVCOztBQUNBLGdCQUFJLENBQUNNLE1BQUwsQ0FBWUksU0FBWixDQUFzQixDQUF0Qjs7QUFDQSxnQkFBSSxDQUFDSixNQUFMLENBQVlFLElBQVo7QUFDRCxTQUpELE1BSU87QUFDTCxnQkFBSSxDQUFDWixlQUFMLEdBQXVCLFlBQU07QUFDM0Isa0JBQUksQ0FBQ1UsTUFBTCxDQUFZQyxFQUFaLENBQWUsTUFBZixFQUF1QixNQUFJLENBQUNQLFVBQTVCOztBQUNBLGtCQUFJLENBQUNNLE1BQUwsQ0FBWUksU0FBWixDQUFzQixDQUF0Qjs7QUFDQSxrQkFBSSxDQUFDSixNQUFMLENBQVlFLElBQVo7QUFDRCxXQUpEO0FBS0Q7QUFDRixPQWRNLENBQVA7QUFlRDs7OzZCQUVRO0FBQ1AsV0FBS0YsTUFBTCxDQUNHSyxNQURILEdBRUdDLEtBRkg7QUFHRDs7O21DQUVjO0FBQ2IsV0FBS04sTUFBTCxHQUFjLElBQUlPLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhQyxNQUFqQixDQUF3QixLQUFLekIsRUFBN0IsRUFBaUM7QUFBRUksVUFBRSxFQUFFLEtBQUtBO0FBQVgsT0FBakMsQ0FBZDtBQUVBLFdBQUtZLE1BQUwsQ0FDR1UsS0FESCxHQUVHQyxJQUZILEdBR0dMLEtBSEg7QUFLQXhCLGVBQVMsR0FBRyxJQUFaOztBQUVBLFVBQUksS0FBS1EsZUFBVCxFQUEwQjtBQUN4QixhQUFLQSxlQUFMO0FBQ0Q7QUFDRjs7O2tDQUVhO0FBQ1osV0FBS1UsTUFBTCxDQUFZWSxHQUFaLENBQWdCLE1BQWhCLEVBQXdCLEtBQUtsQixVQUE3QjtBQUNBLFdBQUtNLE1BQUwsQ0FBWVksR0FBWixDQUFnQixPQUFoQixFQUF5QixLQUFLbEIsVUFBOUI7O0FBRUEsVUFBSSxLQUFLRSxrQkFBVCxFQUE2QjtBQUMzQixhQUFLQSxrQkFBTDtBQUNBLGFBQUtBLGtCQUFMLEdBQTBCLElBQTFCO0FBQ0Q7QUFDRiIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2NvbXBvbmVudHMvVmltZW8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJHNjcmlwdCBmcm9tICdzY3JpcHRqcyc7XG5cbmNvbnN0IGFwaSA9ICdodHRwczovL3BsYXllci52aW1lby5jb20vYXBpL3BsYXllci5qcyc7XG5sZXQgYXBpTG9hZGVkID0gZmFsc2U7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpbWVvUGxheWVyIHtcbiAgY29uc3RydWN0b3IoeyBlbCwgdmlkZW9VcmwgfSkge1xuICAgIHRoaXMuZWwgPSBlbDtcbiAgICBjb25zdCB1cmxQYXJ0cyA9IHZpZGVvVXJsLnNwbGl0KCcvJyk7XG5cbiAgICB0aGlzLmlkID0gdXJsUGFydHNbdXJsUGFydHMubGVuZ3RoIC0gMV07XG4gICAgdGhpcy5vblJlYWR5Q2FsbGJhY2sgPSBudWxsO1xuXG4gICAgdGhpcy5vbkFwaUxvYWRlZCA9IHRoaXMuX29uQXBpTG9hZGVkLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLm9uUHJvZ3Jlc3MgPSB0aGlzLl9vblByb2dyZXNzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vblByb2dyZXNzQ2FsbGJhY2sgPSBudWxsO1xuXG4gICAgaWYgKGFwaUxvYWRlZCkge1xuICAgICAgdGhpcy5fb25BcGlMb2FkZWQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJHNjcmlwdChhcGksIHRoaXMub25BcGlMb2FkZWQpO1xuICAgIH1cbiAgfVxuXG4gIHBsYXkoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5vblByb2dyZXNzQ2FsbGJhY2sgPSByZXNvbHZlO1xuXG4gICAgICBpZiAoYXBpTG9hZGVkKSB7XG4gICAgICAgIHRoaXMucGxheWVyLm9uKCdwbGF5JywgdGhpcy5vblByb2dyZXNzKTtcbiAgICAgICAgdGhpcy5wbGF5ZXIucGxheSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vblJlYWR5Q2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wbGF5ZXIub24oJ3BsYXknLCB0aGlzLm9uUHJvZ3Jlc3MpO1xuICAgICAgICAgIHRoaXMucGxheWVyLnBsYXkoKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHBhdXNlKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIHRoaXMub25Qcm9ncmVzc0NhbGxiYWNrID0gcmVzb2x2ZTtcblxuICAgICAgaWYgKGFwaUxvYWRlZCkge1xuICAgICAgICB0aGlzLnBsYXllci5vbigncGF1c2UnLCB0aGlzLm9uUHJvZ3Jlc3MpO1xuICAgICAgICB0aGlzLnBsYXllci5wYXVzZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vblJlYWR5Q2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wbGF5ZXIub24oJ3BhdXNlJywgdGhpcy5vblByb2dyZXNzKTtcbiAgICAgICAgICB0aGlzLnBsYXllci5wYXVzZSgpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgYXV0b3BsYXkoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5vblByb2dyZXNzQ2FsbGJhY2sgPSByZXNvbHZlO1xuXG4gICAgICBpZiAoYXBpTG9hZGVkKSB7XG4gICAgICAgIHRoaXMucGxheWVyLm9uKCdwbGF5JywgdGhpcy5vblByb2dyZXNzKTtcbiAgICAgICAgdGhpcy5wbGF5ZXIuc2V0Vm9sdW1lKDApO1xuICAgICAgICB0aGlzLnBsYXllci5wbGF5KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uUmVhZHlDYWxsYmFjayA9ICgpID0+IHtcbiAgICAgICAgICB0aGlzLnBsYXllci5vbigncGxheScsIHRoaXMub25Qcm9ncmVzcyk7XG4gICAgICAgICAgdGhpcy5wbGF5ZXIuc2V0Vm9sdW1lKDApO1xuICAgICAgICAgIHRoaXMucGxheWVyLnBsYXkoKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICB0aGlzLnBsYXllclxuICAgICAgLnVubG9hZCgpXG4gICAgICAuY2F0Y2goKTtcbiAgfVxuXG4gIF9vbkFwaUxvYWRlZCgpIHtcbiAgICB0aGlzLnBsYXllciA9IG5ldyB3aW5kb3cuVmltZW8uUGxheWVyKHRoaXMuZWwsIHsgaWQ6IHRoaXMuaWQgfSk7XG5cbiAgICB0aGlzLnBsYXllclxuICAgICAgLnJlYWR5KClcbiAgICAgIC50aGVuKClcbiAgICAgIC5jYXRjaCgpO1xuXG4gICAgYXBpTG9hZGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLm9uUmVhZHlDYWxsYmFjaykge1xuICAgICAgdGhpcy5vblJlYWR5Q2FsbGJhY2soKTtcbiAgICB9XG4gIH1cblxuICBfb25Qcm9ncmVzcygpIHtcbiAgICB0aGlzLnBsYXllci5vZmYoJ3BsYXknLCB0aGlzLm9uUHJvZ3Jlc3MpO1xuICAgIHRoaXMucGxheWVyLm9mZigncGF1c2UnLCB0aGlzLm9uUHJvZ3Jlc3MpO1xuXG4gICAgaWYgKHRoaXMub25Qcm9ncmVzc0NhbGxiYWNrKSB7XG4gICAgICB0aGlzLm9uUHJvZ3Jlc3NDYWxsYmFjaygpO1xuICAgICAgdGhpcy5vblByb2dyZXNzQ2FsbGJhY2sgPSBudWxsO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/Vimeo.js\n");

/***/ }),

/***/ "./source/scripts/components/Youtube.js":
/*!**********************************************!*\
  !*** ./source/scripts/components/Youtube.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Youtube; });\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar api = 'https://www.youtube.com/iframe_api';\nvar apiLoadedCallbacks = [];\nvar apiLoaded = false;\n\nwindow.onYouTubeIframeAPIReady = function () {\n  apiLoadedCallbacks.forEach(function (apiLoadedCallback) {\n    return apiLoadedCallback();\n  });\n  apiLoadedCallbacks = [];\n  apiLoaded = true;\n};\n\nvar Youtube = /*#__PURE__*/function () {\n  function Youtube(_ref) {\n    var el = _ref.el,\n        videoUrl = _ref.videoUrl,\n        loop = _ref.loop;\n\n    _classCallCheck(this, Youtube);\n\n    var regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n    this.el = el;\n    this.id = videoUrl.match(regex)[1] || null;\n    this.onApiLoaded = this._onApiLoaded.bind(this);\n    this.isReady = false;\n    this.onReady = this._onReady.bind(this);\n    this.onReadyCallback = null;\n    this.loop = loop ? 1 : 0;\n    this.onStateChange = this._onStateChange.bind(this);\n    this.onPlayCallback = null;\n\n    if (apiLoaded) {\n      this._onApiLoaded();\n    } else {\n      apiLoadedCallbacks.push(this.onApiLoaded);\n      scriptjs__WEBPACK_IMPORTED_MODULE_0___default()(api);\n    }\n  }\n\n  _createClass(Youtube, [{\n    key: \"play\",\n    value: function play() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.onPlayCallback = resolve;\n\n        if (_this.isReady) {\n          _this.player.playVideo();\n        } else {\n          _this.onReadyCallback = function () {\n            _this.player.playVideo();\n          };\n        }\n      });\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.onPlayCallback = resolve;\n\n        if (_this2.isReady) {\n          _this2.player.pauseVideo();\n        } else {\n          _this2.onReadyCallback = function () {\n            _this2.player.pauseVideo();\n          };\n        }\n      });\n    }\n  }, {\n    key: \"autoplay\",\n    value: function autoplay() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.onPlayCallback = resolve;\n\n        if (_this3.isReady) {\n          _this3.player.playVideo();\n\n          _this3.player.mute();\n        } else {\n          _this3.onReadyCallback = function () {\n            _this3.player.playVideo();\n\n            _this3.player.mute();\n          };\n        }\n      });\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.player.destroy();\n    }\n  }, {\n    key: \"_onApiLoaded\",\n    value: function _onApiLoaded() {\n      var playerVars = {\n        modestbranding: true,\n        showinfo: false,\n        controls: false,\n        loop: this.loop,\n        rel: 0\n      };\n\n      if (this.loop) {\n        // This is required to allow 'loop' to work based on the YouTube api\n        playerVars.playlist = this.id;\n      }\n\n      this.player = new YT.Player(this.el, {\n        videoId: this.id,\n        playerVars: playerVars,\n        events: {\n          onReady: this.onReady,\n          onStateChange: this.onStateChange\n        }\n      });\n    }\n  }, {\n    key: \"_onReady\",\n    value: function _onReady() {\n      this.isReady = true;\n\n      if (this.onReadyCallback) {\n        this.onReadyCallback();\n      }\n    }\n  }, {\n    key: \"_onStateChange\",\n    value: function _onStateChange(event) {\n      var state = event.data;\n\n      if (this.onPlayCallback && state === YT.PlayerState.BUFFERING) {\n        this.onPlayCallback();\n        this.onPlayCallback = null;\n      }\n    }\n  }]);\n\n  return Youtube;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/Youtube.js\n");

/***/ }),

/***/ "./source/scripts/components/header/BasicHeader.js":
/*!*********************************************************!*\
  !*** ./source/scripts/components/header/BasicHeader.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BasicHeader; });\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Header */ \"./source/scripts/components/header/Header.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar BasicHeader = /*#__PURE__*/function (_Header) {\n  _inherits(BasicHeader, _Header);\n\n  var _super = _createSuper(BasicHeader);\n\n  function BasicHeader(options, settings) {\n    var _this;\n\n    _classCallCheck(this, BasicHeader);\n\n    _this = _super.call(this, options, settings);\n    _this.headerContent = _this.header.querySelector('[data-site-header-main]');\n    _this.logo = _this.header.querySelector('.site-logo');\n    _this.logoImage = _this.logo.querySelector('img');\n    _this.logoText = _this.logo.querySelector('.desktop-logo-text');\n    _this.logoPosition = settings.desktop_logo_position;\n    _this.navList = _this.header.querySelector('.site-navigation > [data-navmenu]');\n    _this.headerActions = _this.header.querySelector('.site-header-main-actions');\n    _this.searchWrapper = _this.header.querySelector('[data-search-wrapper]');\n    _this.searchButton = _this.headerActions.querySelector('[data-search-toggle]');\n    _this.searchInput = _this.header.querySelector('[data-live-search-input]');\n    _this.searchClose = _this.header.querySelector('[data-search-close]');\n    _this.takeoverCancel = _this.header.querySelector('[data-live-search-takeover-cancel]');\n    _this._adjustSizeAndPlacement = _this._adjustSizeAndPlacement.bind(_assertThisInitialized(_this));\n    _this._openSearch = _this._openSearch.bind(_assertThisInitialized(_this));\n    _this._closeSearch = _this._closeSearch.bind(_assertThisInitialized(_this)); // Need to watch for logo load so we can determin nav placement based on its width\n\n    if (_this.logoImage) {\n      _this.logoImage.addEventListener('load', _this._adjustSizeAndPlacement);\n    }\n\n    _this._adjustSizeAndPlacement();\n\n    _this.previousWindowWidth = window.innerWidth;\n\n    _this.windowResize = function () {\n      if (_this.previousWindowWidth === window.innerWidth) return;\n      _this.previousWindowWidth = window.innerWidth;\n\n      _this._adjustSizeAndPlacement();\n    };\n\n    _this._closeEsc = function (e) {\n      if (e.key === 'Escape') {\n        _this._closeSearch();\n      }\n    };\n\n    _this._searchFocusIn = function () {\n      if (!_this.searchWrapper.contains(document.activeElement)) {\n        _this._closeSearch();\n      }\n    };\n\n    _this.searchButton.addEventListener('click', _this._openSearch);\n\n    _this.searchClose.addEventListener('click', _this._closeSearch);\n\n    _this.takeoverCancel.addEventListener('click', _this._closeSearch);\n\n    window.addEventListener('resize', _this.windowResize);\n    window.addEventListener('load', _this._adjustSizeAndPlacement);\n    window.addEventListener('keydown', _this._closeEsc);\n    return _this;\n  }\n\n  _createClass(BasicHeader, [{\n    key: \"_adjustSizeAndPlacement\",\n    value: function _adjustSizeAndPlacement() {\n      var _this2 = this;\n\n      var headerStyles = window.getComputedStyle(this.headerContent);\n      var headerWidth = this.headerContent.clientWidth - headerStyles.paddingLeft.replace('px', '');\n      var headerActionsWidth = this.headerActions.clientWidth;\n      var logoWidth = this.logo.clientWidth;\n      var logoHeight = this.logo.clientHeight;\n      var navListWidth = this.navList.clientWidth;\n\n      var setHeaderMinHeight = function setHeaderMinHeight() {\n        if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"max\"]('M')) {\n          _this2.headerContent.style.minHeight = '';\n        } else {\n          var paddingTop = parseInt(headerStyles.paddingTop.replace('px', ''), 10);\n          var paddingBottom = parseInt(headerStyles.paddingBottom.replace('px', ''), 10);\n          _this2.headerContent.style.minHeight = \"\".concat(logoHeight + paddingTop + paddingBottom, \"px\");\n        }\n      };\n\n      if (this.settings.navigation_layout === 'below') {\n        setHeaderMinHeight();\n        return;\n      }\n\n      if (this.logoPosition === 'center') {\n        var logoContentWidth = this.logoImage ? this.logoImage.clientWidth : this.logoText.clientWidth;\n\n        if (navListWidth > logoWidth / 2 - logoContentWidth / 2) {\n          this.headerContent.classList.add('site-header-stacked');\n        } else {\n          this.headerContent.classList.remove('site-header-stacked');\n        }\n      } else {\n        var widestSide = headerActionsWidth > logoWidth ? headerActionsWidth : logoWidth;\n        setHeaderMinHeight();\n\n        if (headerWidth / 2 <= navListWidth / 2 + widestSide) {\n          this.headerContent.classList.add('site-header-stacked');\n        } else {\n          this.headerContent.classList.remove('site-header-stacked');\n        }\n      }\n\n      this.header.classList.remove('site-header-loading');\n    }\n  }, {\n    key: \"_openSearch\",\n    value: function _openSearch(e) {\n      e.stopPropagation();\n\n      if (this.liveSearch && _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"max\"]('S')) {\n        // If LiveSearch is enabled, open the mobile search takeover\n        this.liveSearch.openMobileTakeover();\n      }\n\n      this.headerContent.classList.remove('live-search--hidden');\n      this.searchInput.focus();\n      window.addEventListener('focusin', this._searchFocusIn);\n    }\n  }, {\n    key: \"_closeSearch\",\n    value: function _closeSearch() {\n      this.headerContent.classList.add('live-search--hidden');\n\n      if (this.searchWrapper.contains(document.activeElement)) {\n        this.searchButton.focus();\n      }\n\n      window.removeEventListener('focusin', this._searchFocusIn);\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      _get(_getPrototypeOf(BasicHeader.prototype), \"unload\", this).call(this);\n\n      if (this.logoImage) {\n        this.logoImage.removeEventListener('load', this._adjustSizeAndPlacement);\n      }\n\n      this.searchButton.removeEventListener('click', this._openSearch);\n      this.searchClose.removeEventListener('click', this._closeSearch);\n      this.takeoverCancel.removeEventListener('click', this._closeSearch);\n      window.removeEventListener('resize', this.windowResize);\n      window.removeEventListener('load', this._adjustSizeAndPlacement);\n      window.removeEventListener('keydown', this._closeEsc);\n    }\n  }]);\n\n  return BasicHeader;\n}(_Header__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/header/BasicHeader.js\n");

/***/ }),

/***/ "./source/scripts/components/header/Header.js":
/*!****************************************************!*\
  !*** ./source/scripts/components/header/Header.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Header; });\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _search_LiveSearch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search/LiveSearch */ \"./source/scripts/components/search/LiveSearch.js\");\n/* harmony import */ var _search_SearchForm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../search/SearchForm */ \"./source/scripts/components/search/SearchForm.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar Header = /*#__PURE__*/function () {\n  function Header(options, settings) {\n    var _this = this;\n\n    _classCallCheck(this, Header);\n\n    this.$scripts = options.$scripts;\n    this.section = options.section;\n    this.header = this.section.querySelector('.site-header');\n    this.searchBar = this.header.querySelector('[data-live-search]');\n    this.postMessage = options.postMessage;\n    this.settings = settings;\n    this.stickyClass = 'site-header--sticky';\n\n    if (this.settings.sticky_header) {\n      this.section.classList.add(this.stickyClass);\n    } // Setup search form/live search\n\n\n    this.liveSearch = null;\n    this.searchForm = null;\n\n    if (this.settings.live_search.enable) {\n      scriptjs__WEBPACK_IMPORTED_MODULE_0___default()(this.$scripts.data('shopify-api-url'), function () {\n        _this.liveSearch = new _search_LiveSearch__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n          el: _this.searchBar,\n          header: _this.header\n        }, _this.settings.live_search);\n      });\n    } else {\n      this.searchForm = new _search_SearchForm__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.searchBar);\n    }\n  }\n\n  _createClass(Header, [{\n    key: \"unload\",\n    value: function unload() {\n      this.section.classList.remove(this.stickyClass);\n\n      if (this.settings.live_search.enable) {\n        this.liveSearch.unload();\n      } else {\n        this.searchForm.unload();\n      }\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect() {// Do nothing\n    }\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect() {// Do nothing\n    }\n  }, {\n    key: \"sectionDeselect\",\n    value: function sectionDeselect() {// Do nothing\n    }\n  }]);\n\n  return Header;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL2hlYWRlci9IZWFkZXIuanM/ZDUxYSJdLCJuYW1lcyI6WyJIZWFkZXIiLCJvcHRpb25zIiwic2V0dGluZ3MiLCIkc2NyaXB0cyIsInNlY3Rpb24iLCJoZWFkZXIiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoQmFyIiwicG9zdE1lc3NhZ2UiLCJzdGlja3lDbGFzcyIsInN0aWNreV9oZWFkZXIiLCJjbGFzc0xpc3QiLCJhZGQiLCJsaXZlU2VhcmNoIiwic2VhcmNoRm9ybSIsImxpdmVfc2VhcmNoIiwiZW5hYmxlIiwiJHNjcmlwdCIsImRhdGEiLCJMaXZlU2VhcmNoIiwiZWwiLCJTZWFyY2hGb3JtIiwicmVtb3ZlIiwidW5sb2FkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUVBO0FBQ0E7O0lBRXFCQSxNO0FBQ25CLGtCQUFZQyxPQUFaLEVBQXFCQyxRQUFyQixFQUErQjtBQUFBOztBQUFBOztBQUM3QixTQUFLQyxRQUFMLEdBQWdCRixPQUFPLENBQUNFLFFBQXhCO0FBQ0EsU0FBS0MsT0FBTCxHQUFlSCxPQUFPLENBQUNHLE9BQXZCO0FBQ0EsU0FBS0MsTUFBTCxHQUFjLEtBQUtELE9BQUwsQ0FBYUUsYUFBYixDQUEyQixjQUEzQixDQUFkO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixLQUFLRixNQUFMLENBQVlDLGFBQVosQ0FBMEIsb0JBQTFCLENBQWpCO0FBRUEsU0FBS0UsV0FBTCxHQUFtQlAsT0FBTyxDQUFDTyxXQUEzQjtBQUVBLFNBQUtOLFFBQUwsR0FBZ0JBLFFBQWhCO0FBRUEsU0FBS08sV0FBTCxHQUFtQixxQkFBbkI7O0FBRUEsUUFBSSxLQUFLUCxRQUFMLENBQWNRLGFBQWxCLEVBQWlDO0FBQy9CLFdBQUtOLE9BQUwsQ0FBYU8sU0FBYixDQUF1QkMsR0FBdkIsQ0FBMkIsS0FBS0gsV0FBaEM7QUFDRCxLQWQ0QixDQWdCN0I7OztBQUNBLFNBQUtJLFVBQUwsR0FBa0IsSUFBbEI7QUFDQSxTQUFLQyxVQUFMLEdBQWtCLElBQWxCOztBQUVBLFFBQUksS0FBS1osUUFBTCxDQUFjYSxXQUFkLENBQTBCQyxNQUE5QixFQUFzQztBQUNwQ0MscURBQU8sQ0FBQyxLQUFLZCxRQUFMLENBQWNlLElBQWQsQ0FBbUIsaUJBQW5CLENBQUQsRUFBd0MsWUFBTTtBQUNuRCxhQUFJLENBQUNMLFVBQUwsR0FBa0IsSUFBSU0sMERBQUosQ0FBZTtBQUMvQkMsWUFBRSxFQUFFLEtBQUksQ0FBQ2IsU0FEc0I7QUFFL0JGLGdCQUFNLEVBQUUsS0FBSSxDQUFDQTtBQUZrQixTQUFmLEVBR2YsS0FBSSxDQUFDSCxRQUFMLENBQWNhLFdBSEMsQ0FBbEI7QUFJRCxPQUxNLENBQVA7QUFNRCxLQVBELE1BT087QUFDTCxXQUFLRCxVQUFMLEdBQWtCLElBQUlPLDBEQUFKLENBQWUsS0FBS2QsU0FBcEIsQ0FBbEI7QUFDRDtBQUNGOzs7OzZCQUVRO0FBQ1AsV0FBS0gsT0FBTCxDQUFhTyxTQUFiLENBQXVCVyxNQUF2QixDQUE4QixLQUFLYixXQUFuQzs7QUFFQSxVQUFJLEtBQUtQLFFBQUwsQ0FBY2EsV0FBZCxDQUEwQkMsTUFBOUIsRUFBc0M7QUFDcEMsYUFBS0gsVUFBTCxDQUFnQlUsTUFBaEI7QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLVCxVQUFMLENBQWdCUyxNQUFoQjtBQUNEO0FBQ0Y7OzsyQ0FFc0IsQ0FDckI7QUFDRDs7OzZDQUV3QixDQUN2QjtBQUNEOzs7c0NBRWlCLENBQ2hCO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL2hlYWRlci9IZWFkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJHNjcmlwdCBmcm9tICdzY3JpcHRqcyc7XG5cbmltcG9ydCBMaXZlU2VhcmNoIGZyb20gJy4uL3NlYXJjaC9MaXZlU2VhcmNoJztcbmltcG9ydCBTZWFyY2hGb3JtIGZyb20gJy4uL3NlYXJjaC9TZWFyY2hGb3JtJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVhZGVyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucywgc2V0dGluZ3MpIHtcbiAgICB0aGlzLiRzY3JpcHRzID0gb3B0aW9ucy4kc2NyaXB0cztcbiAgICB0aGlzLnNlY3Rpb24gPSBvcHRpb25zLnNlY3Rpb247XG4gICAgdGhpcy5oZWFkZXIgPSB0aGlzLnNlY3Rpb24ucXVlcnlTZWxlY3RvcignLnNpdGUtaGVhZGVyJyk7XG4gICAgdGhpcy5zZWFyY2hCYXIgPSB0aGlzLmhlYWRlci5xdWVyeVNlbGVjdG9yKCdbZGF0YS1saXZlLXNlYXJjaF0nKTtcblxuICAgIHRoaXMucG9zdE1lc3NhZ2UgPSBvcHRpb25zLnBvc3RNZXNzYWdlO1xuXG4gICAgdGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xuXG4gICAgdGhpcy5zdGlja3lDbGFzcyA9ICdzaXRlLWhlYWRlci0tc3RpY2t5JztcblxuICAgIGlmICh0aGlzLnNldHRpbmdzLnN0aWNreV9oZWFkZXIpIHtcbiAgICAgIHRoaXMuc2VjdGlvbi5jbGFzc0xpc3QuYWRkKHRoaXMuc3RpY2t5Q2xhc3MpO1xuICAgIH1cblxuICAgIC8vIFNldHVwIHNlYXJjaCBmb3JtL2xpdmUgc2VhcmNoXG4gICAgdGhpcy5saXZlU2VhcmNoID0gbnVsbDtcbiAgICB0aGlzLnNlYXJjaEZvcm0gPSBudWxsO1xuXG4gICAgaWYgKHRoaXMuc2V0dGluZ3MubGl2ZV9zZWFyY2guZW5hYmxlKSB7XG4gICAgICAkc2NyaXB0KHRoaXMuJHNjcmlwdHMuZGF0YSgnc2hvcGlmeS1hcGktdXJsJyksICgpID0+IHtcbiAgICAgICAgdGhpcy5saXZlU2VhcmNoID0gbmV3IExpdmVTZWFyY2goe1xuICAgICAgICAgIGVsOiB0aGlzLnNlYXJjaEJhcixcbiAgICAgICAgICBoZWFkZXI6IHRoaXMuaGVhZGVyLFxuICAgICAgICB9LCB0aGlzLnNldHRpbmdzLmxpdmVfc2VhcmNoKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNlYXJjaEZvcm0gPSBuZXcgU2VhcmNoRm9ybSh0aGlzLnNlYXJjaEJhcik7XG4gICAgfVxuICB9XG5cbiAgdW5sb2FkKCkge1xuICAgIHRoaXMuc2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuc3RpY2t5Q2xhc3MpO1xuXG4gICAgaWYgKHRoaXMuc2V0dGluZ3MubGl2ZV9zZWFyY2guZW5hYmxlKSB7XG4gICAgICB0aGlzLmxpdmVTZWFyY2gudW5sb2FkKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2VhcmNoRm9ybS51bmxvYWQoKTtcbiAgICB9XG4gIH1cblxuICBvblNlY3Rpb25CbG9ja1NlbGVjdCgpIHtcbiAgICAvLyBEbyBub3RoaW5nXG4gIH1cblxuICBvblNlY3Rpb25CbG9ja0Rlc2VsZWN0KCkge1xuICAgIC8vIERvIG5vdGhpbmdcbiAgfVxuXG4gIHNlY3Rpb25EZXNlbGVjdCgpIHtcbiAgICAvLyBEbyBub3RoaW5nXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/components/header/Header.js\n");

/***/ }),

/***/ "./source/scripts/components/header/MinimalHeader.js":
/*!***********************************************************!*\
  !*** ./source/scripts/components/header/MinimalHeader.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MinimalHeader; });\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Header */ \"./source/scripts/components/header/Header.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar MinimalHeader = /*#__PURE__*/function (_Header) {\n  _inherits(MinimalHeader, _Header);\n\n  var _super = _createSuper(MinimalHeader);\n\n  function MinimalHeader(options, settings) {\n    var _this;\n\n    _classCallCheck(this, MinimalHeader);\n\n    _this = _super.call(this, options, settings);\n    _this.navOpenClass = 'site-header-nav--open';\n    _this.menuToggle = _this.header.querySelector('[data-menu-toggle]');\n    _this.menu = _this.section.querySelector('[data-site-navigation]');\n    _this.searchOpenClass = 'site-header-search--open';\n    _this.searchToggle = _this.header.querySelector('[data-search-toggle]');\n    _this.searchInput = _this.header.querySelector('[data-live-search-input]');\n    _this.transitioning = false; // Setup Menu toggles\n\n    _this._toggleMenu = _this._toggleMenu.bind(_assertThisInitialized(_this));\n\n    _this.toggleClick = function (event) {\n      event.preventDefault();\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"min\"]('L')) _this._toggleMenu();\n    };\n\n    _this.menuToggle.addEventListener('click', _this.toggleClick); // Setup Search toggles\n\n\n    _this._toggleSearchBar = _this._toggleSearchBar.bind(_assertThisInitialized(_this));\n    _this._closeSearchBar = _this._closeSearchBar.bind(_assertThisInitialized(_this));\n    _this.searchTransitioning = false; // Show the menu briefly to get its height and then replace its style\n\n    _this.menu.setAttribute('style', 'display: block; visibility: hidden;');\n\n    _this.menu.setAttribute('style', \"margin-top: -\".concat(_this.menu.getBoundingClientRect().height, \"px;\"));\n\n    _this._closeEsc = function (e) {\n      if (e.key === 'Escape') {\n        if (_this.searchBar.contains(document.activeElement)) {\n          _this.searchToggle.focus();\n        }\n\n        _this._closeSearchBar();\n      }\n    };\n\n    _this.stopProp = function (e) {\n      return e.stopPropagation();\n    }; // If reloading in the editor close the search bar so it doesn't interfere with other settings\n\n\n    _this._closeSearchBar();\n\n    _this.searchToggle.addEventListener('click', _this._toggleSearchBar);\n\n    _this.searchBar.addEventListener('click', _this.stopProp);\n\n    window.addEventListener('resize', _this._closeSearchBar);\n    window.addEventListener('click', _this._closeSearchBar);\n    window.addEventListener('keydown', _this._closeEsc);\n    return _this;\n  }\n\n  _createClass(MinimalHeader, [{\n    key: \"closeNavigation\",\n    value: function closeNavigation() {\n      var _this2 = this;\n\n      if (this.searchTransitioning || this.transitioning) {\n        return;\n      }\n\n      this.menuToggle.classList.remove('active');\n\n      this.navTransitionOutEvent = function () {\n        _this2.header.classList.remove(_this2.navOpenClass);\n\n        _this2.transitioning = false;\n\n        _this2.menu.removeEventListener('transitionend', _this2.navTransitionOutEvent);\n      };\n\n      this.menu.addEventListener('transitionend', this.navTransitionOutEvent);\n      this.transitioning = true;\n      this.menu.setAttribute('style', \"margin-top: -\".concat(this.menu.getBoundingClientRect().height, \"px;\"));\n      this.postMessage('nav:close-all');\n    }\n  }, {\n    key: \"openNavigation\",\n    value: function openNavigation() {\n      var _this3 = this;\n\n      if (this.searchTransitioning) {\n        return;\n      }\n\n      this._closeSearchBar();\n\n      if (this.transitioning || this.header.classList.contains(this.navOpenClass)) {\n        return;\n      }\n\n      this.menuToggle.classList.add('active');\n\n      this.navTransitionInEvent = function () {\n        _this3.transitioning = false;\n\n        _this3.menu.removeEventListener('transitionend', _this3.navTransitionInEvent);\n      };\n\n      this.menu.addEventListener('transitionend', this.navTransitionInEvent);\n      this.transitioning = true; // We need to wait for the browser to set the display to 'block' before we set the margin\n      // This will help with ensuring the different animations/transitions happen in sequence\n      // and not at the same time.\n\n      window.requestAnimationFrame(function () {\n        _this3.header.classList.add(_this3.navOpenClass);\n\n        window.requestAnimationFrame(function () {\n          _this3.menu.setAttribute('style', 'margin-top: 0;');\n        });\n      });\n    }\n  }, {\n    key: \"_toggleMenu\",\n    value: function _toggleMenu() {\n      if (this.header.classList.contains(this.navOpenClass)) {\n        this.closeNavigation();\n      } else {\n        this.openNavigation();\n      }\n    }\n  }, {\n    key: \"_toggleSearchBar\",\n    value: function _toggleSearchBar(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"max\"]('S')) {\n        if (this.header.classList.contains(this.searchOpenClass)) {\n          // This will only be called on mobile if LiveSearch is not enabled.\n          this._closeSearchBar();\n        } else if (this.liveSearch) {\n          // If LiveSearch is enabled, open the mobile search takeover\n          this.liveSearch.openMobileTakeover();\n        } else {\n          // If LiveSearch is not enabled, we need to show the mobile search bar without takeover\n          this._openSearchBar();\n        }\n      } else if (this.header.classList.contains(this.searchOpenClass)) {\n        // If the search bar is open\n        this._closeSearchBar();\n      } else {\n        this._openSearchBar();\n      }\n    }\n  }, {\n    key: \"_openSearchBar\",\n    value: function _openSearchBar() {\n      var _this4 = this;\n\n      if (this.searchTransitioning || this.header.classList.contains(this.searchOpenClass)) {\n        return;\n      }\n\n      if (this.header.classList.contains(this.navOpenClass)) {\n        this.closeNavigation();\n      }\n\n      this.searchTransitioning = true;\n\n      this.searchAnimatingInEvent = function () {\n        _this4.searchBar.classList.remove('animating-in');\n\n        _this4.searchTransitioning = false;\n\n        _this4.searchBar.removeEventListener('animationend', _this4.searchAnimatingInEvent);\n      };\n\n      this.header.classList.add(this.searchOpenClass);\n      this.searchBar.addEventListener('animationend', this.searchAnimatingInEvent);\n      this.searchBar.classList.add('animating-in');\n      this.searchInput.focus();\n    }\n  }, {\n    key: \"_closeSearchBar\",\n    value: function _closeSearchBar() {\n      var _this5 = this;\n\n      if (this.searchTransitioning || !this.header.classList.contains(this.searchOpenClass)) {\n        return;\n      }\n\n      this.searchTransitioning = true;\n\n      this.searchAnimatingOutEvent = function () {\n        _this5.searchBar.classList.remove('animating-out');\n\n        _this5.header.classList.remove(_this5.searchOpenClass);\n\n        _this5.searchTransitioning = false;\n\n        _this5.searchBar.removeEventListener('animationend', _this5.searchAnimatingOutEvent);\n      };\n\n      this.searchBar.addEventListener('animationend', this.searchAnimatingOutEvent);\n      this.searchBar.classList.add('animating-out');\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      _get(_getPrototypeOf(MinimalHeader.prototype), \"unload\", this).call(this);\n\n      this.menuToggle.removeEventListener('click', this.toggleClick);\n      this.searchToggle.removeEventListener('click', this._toggleSearchBar);\n      this.searchBar.removeEventListener('click', this.stopProp);\n      window.removeEventListener('resize', this._closeSearchBar);\n      window.removeEventListener('click', this._closeSearchBar);\n      window.removeEventListener('keydown', this._closeEsc);\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect() {\n      this.menuToggle.classList.add('active');\n      this.header.classList.add(this.navOpenClass);\n      this.openNavigation();\n    }\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect() {\n      this.menuToggle.classList.remove('active');\n    }\n  }, {\n    key: \"sectionDeselect\",\n    value: function sectionDeselect() {\n      this.closeNavigation();\n    }\n  }]);\n\n  return MinimalHeader;\n}(_Header__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/header/MinimalHeader.js\n");

/***/ }),

/***/ "./source/scripts/components/header/TraditionalHeader.js":
/*!***************************************************************!*\
  !*** ./source/scripts/components/header/TraditionalHeader.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TraditionalHeader; });\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Header */ \"./source/scripts/components/header/Header.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\nvar TraditionalHeader = /*#__PURE__*/function (_Header) {\n  _inherits(TraditionalHeader, _Header);\n\n  var _super = _createSuper(TraditionalHeader);\n\n  function TraditionalHeader(options, settings) {\n    var _this;\n\n    _classCallCheck(this, TraditionalHeader);\n\n    _this = _super.call(this, options, settings);\n    _this.body = document.querySelector('body');\n    _this.menuToggle = _this.header.querySelector('[data-menu-toggle]');\n    _this.menu = _this.section.querySelector('[data-site-navigation]');\n    _this.searchInput = _this.header.querySelector('[data-live-search-input]');\n    _this.lastToggle = Date.now() - 1000;\n    _this.transitioning = false;\n    _this.navOpenClass = 'site-header-nav--open';\n    _this.scrolledClass = 'traditional-header--scrolled'; // Setup Menu toggles\n\n    _this._toggleMenu = _this._toggleMenu.bind(_assertThisInitialized(_this));\n    _this._toggleStickyHeader = _this._toggleStickyHeader.bind(_assertThisInitialized(_this));\n\n    _this.toggleClick = function (e) {\n      e.preventDefault();\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"min\"]('L')) _this._toggleMenu();\n    };\n\n    _this.menuToggle.addEventListener('click', _this.toggleClick); // Setup Search Toggle for mobile\n\n\n    _this.searchInputFocused = function (e) {\n      e.preventDefault();\n\n      if (_this.liveSearch && _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"max\"]('S')) {\n        _this.liveSearch.openMobileTakeover();\n      }\n    };\n\n    _this.searchInput.addEventListener('focus', _this.searchInputFocused); // Setup sticky header collapse\n\n\n    if (_this.settings.sticky_header) {\n      _this.observer = new IntersectionObserver(function (entries) {\n        return _this._toggleStickyHeader(entries);\n      });\n\n      _this.observer.observe(document.querySelector('.intersection-target'));\n    }\n\n    return _this;\n  }\n\n  _createClass(TraditionalHeader, [{\n    key: \"closeNavigation\",\n    value: function closeNavigation() {\n      var _this2 = this;\n\n      if (this.transitioning) {\n        return;\n      }\n\n      this.menuToggle.classList.remove('active');\n\n      this.navTransitionOutEvent = function () {\n        _this2.header.classList.remove(_this2.navOpenClass);\n\n        _this2.transitioning = false;\n\n        _this2.menu.removeEventListener('transitionend', _this2.navTransitionOutEvent);\n      };\n\n      this.menu.addEventListener('transitionend', this.navTransitionOutEvent);\n      this.transitioning = true;\n      this.menu.setAttribute('style', \"margin-top: -\".concat(this.menu.getBoundingClientRect().height, \"px;\"));\n      this.postMessage('nav:close-all');\n    }\n  }, {\n    key: \"openNavigation\",\n    value: function openNavigation() {\n      var _this3 = this;\n\n      if (this.transitioning || this.header.classList.contains(this.navOpenClass)) {\n        return;\n      }\n\n      this.menuToggle.classList.add('active');\n\n      this.navTransitionInEvent = function () {\n        _this3.transitioning = false;\n\n        _this3.menu.removeEventListener('transitionend', _this3.navTransitionInEvent);\n      };\n\n      this.menu.addEventListener('transitionend', this.navTransitionInEvent);\n      this.transitioning = true; // We need to wait for the browser to set the display to 'block' before we set the margin\n      // This will help with ensuring the different animations/transitions happen in sequence\n      // and not at the same time.\n\n      window.requestAnimationFrame(function () {\n        _this3.header.classList.add(_this3.navOpenClass);\n\n        window.requestAnimationFrame(function () {\n          _this3.menu.setAttribute('style', 'margin-top: 0;');\n        });\n      });\n    }\n  }, {\n    key: \"_toggleMenu\",\n    value: function _toggleMenu() {\n      if (this.header.classList.contains(this.navOpenClass)) {\n        this.closeNavigation();\n      } else {\n        this.openNavigation();\n      }\n    }\n    /**\n     * Sticky header only shows as sticky after scroll\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_toggleStickyHeader\",\n    value: function _toggleStickyHeader(entries) {\n      if (this.body.classList.contains('scroll-lock') || !_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"min\"]('L')) {\n        return;\n      }\n\n      var shouldShrink = !entries[0].isIntersecting; // Sticky header is scrolled, is and is visible -- nothing more to do!\n\n      if (shouldShrink && this.header.classList.contains(this.scrolledClass)) {\n        return;\n      } // We also check to make sure the toggle hasnt activated recently to stop jerky transitions\n\n\n      if (this.lastToggle + 500 > Date.now()) {\n        return;\n      }\n\n      this.lastToggle = Date.now();\n\n      if (shouldShrink) {\n        this._shrink();\n      } else {\n        this._expand();\n      }\n    }\n  }, {\n    key: \"_shrink\",\n    value: function _shrink() {\n      this.closeNavigation();\n      this.header.classList.add(this.scrolledClass);\n    }\n  }, {\n    key: \"_expand\",\n    value: function _expand() {\n      this.openNavigation();\n      this.header.classList.remove(this.scrolledClass);\n      this.menuToggle.classList.remove('active');\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect() {\n      this.header.classList.add(this.navOpenClass);\n      this.menuToggle.classList.add('active');\n      this.menu.setAttribute('style', 'margin-top: 0;');\n      this.openNavigation();\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      _get(_getPrototypeOf(TraditionalHeader.prototype), \"unload\", this).call(this);\n\n      this.body.classList.remove(this.scrolledClass);\n      this.menuToggle.removeEventListener('click', this.toggleClick);\n      this.searchInput.removeEventListener('focus', this.searchInputFocused);\n      window.removeEventListener('scroll', this._toggleStickyHeader);\n\n      if (this.observer) {\n        this.observer.disconnect();\n      }\n    }\n  }]);\n\n  return TraditionalHeader;\n}(_Header__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/header/TraditionalHeader.js\n");

/***/ }),

/***/ "./source/scripts/components/navigation/MegaNavScroller.js":
/*!*****************************************************************!*\
  !*** ./source/scripts/components/navigation/MegaNavScroller.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MegaNavScroller; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helpers_scrollLeft__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/scrollLeft */ \"./source/scripts/helpers/scrollLeft.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar MegaNavScroller = /*#__PURE__*/function () {\n  function MegaNavScroller($el) {\n    var block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, MegaNavScroller);\n\n    this.$el = $el;\n    this.$menuList = this.$el.find('.navmenu-meganav-items');\n\n    this._bindEvents();\n\n    this._addScrollClasses();\n\n    if (block) {\n      Object(_helpers_scrollLeft__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(jquery__WEBPACK_IMPORTED_MODULE_0___default()(block.el));\n    }\n  }\n\n  _createClass(MegaNavScroller, [{\n    key: \"unload\",\n    value: function unload() {\n      this.$menuList.off('.meganav');\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this = this;\n\n      this.$menuList.on('scroll.meganav', function () {\n        return _this._addScrollClasses();\n      });\n    }\n  }, {\n    key: \"_addScrollClasses\",\n    value: function _addScrollClasses() {\n      var scrollLeftPosition = this.$menuList.scrollLeft();\n      var scrollWidth = this.$menuList[0].scrollWidth;\n      var width = this.$menuList.width();\n      this.$el.toggleClass('meganav--overflows-left', scrollLeftPosition > 0);\n      this.$el.toggleClass('meganav--overflows-right', scrollLeftPosition < scrollWidth - width);\n    }\n  }]);\n\n  return MegaNavScroller;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL25hdmlnYXRpb24vTWVnYU5hdlNjcm9sbGVyLmpzP2Q0YjAiXSwibmFtZXMiOlsiTWVnYU5hdlNjcm9sbGVyIiwiJGVsIiwiYmxvY2siLCIkbWVudUxpc3QiLCJmaW5kIiwiX2JpbmRFdmVudHMiLCJfYWRkU2Nyb2xsQ2xhc3NlcyIsInNjcm9sbExlZnQiLCIkIiwiZWwiLCJvZmYiLCJvbiIsInNjcm9sbExlZnRQb3NpdGlvbiIsInNjcm9sbFdpZHRoIiwid2lkdGgiLCJ0b2dnbGVDbGFzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztJQUVxQkEsZTtBQUNuQiwyQkFBWUMsR0FBWixFQUErQjtBQUFBLFFBQWRDLEtBQWMsdUVBQU4sSUFBTTs7QUFBQTs7QUFDN0IsU0FBS0QsR0FBTCxHQUFXQSxHQUFYO0FBQ0EsU0FBS0UsU0FBTCxHQUFpQixLQUFLRixHQUFMLENBQVNHLElBQVQsQ0FBYyx3QkFBZCxDQUFqQjs7QUFFQSxTQUFLQyxXQUFMOztBQUNBLFNBQUtDLGlCQUFMOztBQUVBLFFBQUlKLEtBQUosRUFBVztBQUNUSyx5RUFBVSxDQUFDQyw2Q0FBQyxDQUFDTixLQUFLLENBQUNPLEVBQVAsQ0FBRixDQUFWO0FBQ0Q7QUFDRjs7Ozs2QkFFUTtBQUNQLFdBQUtOLFNBQUwsQ0FBZU8sR0FBZixDQUFtQixVQUFuQjtBQUNEOzs7a0NBRWE7QUFBQTs7QUFDWixXQUFLUCxTQUFMLENBQWVRLEVBQWYsQ0FBa0IsZ0JBQWxCLEVBQW9DO0FBQUEsZUFBTSxLQUFJLENBQUNMLGlCQUFMLEVBQU47QUFBQSxPQUFwQztBQUNEOzs7d0NBRW1CO0FBQ2xCLFVBQU1NLGtCQUFrQixHQUFHLEtBQUtULFNBQUwsQ0FBZUksVUFBZixFQUEzQjtBQUNBLFVBQU1NLFdBQVcsR0FBRyxLQUFLVixTQUFMLENBQWUsQ0FBZixFQUFrQlUsV0FBdEM7QUFDQSxVQUFNQyxLQUFLLEdBQUcsS0FBS1gsU0FBTCxDQUFlVyxLQUFmLEVBQWQ7QUFFQSxXQUFLYixHQUFMLENBQVNjLFdBQVQsQ0FBcUIseUJBQXJCLEVBQWdESCxrQkFBa0IsR0FBRyxDQUFyRTtBQUNBLFdBQUtYLEdBQUwsQ0FBU2MsV0FBVCxDQUFxQiwwQkFBckIsRUFBaURILGtCQUFrQixHQUFHQyxXQUFXLEdBQUdDLEtBQXBGO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL25hdmlnYXRpb24vTWVnYU5hdlNjcm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCBzY3JvbGxMZWZ0IGZyb20gJy4uLy4uL2hlbHBlcnMvc2Nyb2xsTGVmdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lZ2FOYXZTY3JvbGxlciB7XG4gIGNvbnN0cnVjdG9yKCRlbCwgYmxvY2sgPSBudWxsKSB7XG4gICAgdGhpcy4kZWwgPSAkZWw7XG4gICAgdGhpcy4kbWVudUxpc3QgPSB0aGlzLiRlbC5maW5kKCcubmF2bWVudS1tZWdhbmF2LWl0ZW1zJyk7XG5cbiAgICB0aGlzLl9iaW5kRXZlbnRzKCk7XG4gICAgdGhpcy5fYWRkU2Nyb2xsQ2xhc3NlcygpO1xuXG4gICAgaWYgKGJsb2NrKSB7XG4gICAgICBzY3JvbGxMZWZ0KCQoYmxvY2suZWwpKTtcbiAgICB9XG4gIH1cblxuICB1bmxvYWQoKSB7XG4gICAgdGhpcy4kbWVudUxpc3Qub2ZmKCcubWVnYW5hdicpO1xuICB9XG5cbiAgX2JpbmRFdmVudHMoKSB7XG4gICAgdGhpcy4kbWVudUxpc3Qub24oJ3Njcm9sbC5tZWdhbmF2JywgKCkgPT4gdGhpcy5fYWRkU2Nyb2xsQ2xhc3NlcygpKTtcbiAgfVxuXG4gIF9hZGRTY3JvbGxDbGFzc2VzKCkge1xuICAgIGNvbnN0IHNjcm9sbExlZnRQb3NpdGlvbiA9IHRoaXMuJG1lbnVMaXN0LnNjcm9sbExlZnQoKTtcbiAgICBjb25zdCBzY3JvbGxXaWR0aCA9IHRoaXMuJG1lbnVMaXN0WzBdLnNjcm9sbFdpZHRoO1xuICAgIGNvbnN0IHdpZHRoID0gdGhpcy4kbWVudUxpc3Qud2lkdGgoKTtcblxuICAgIHRoaXMuJGVsLnRvZ2dsZUNsYXNzKCdtZWdhbmF2LS1vdmVyZmxvd3MtbGVmdCcsIHNjcm9sbExlZnRQb3NpdGlvbiA+IDApO1xuICAgIHRoaXMuJGVsLnRvZ2dsZUNsYXNzKCdtZWdhbmF2LS1vdmVyZmxvd3MtcmlnaHQnLCBzY3JvbGxMZWZ0UG9zaXRpb24gPCBzY3JvbGxXaWR0aCAtIHdpZHRoKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/navigation/MegaNavScroller.js\n");

/***/ }),

/***/ "./source/scripts/components/navigation/NavDesktopMenu.js":
/*!****************************************************************!*\
  !*** ./source/scripts/components/navigation/NavDesktopMenu.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NavDesktopMenu; });\n/* harmony import */ var _NavDesktopParent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NavDesktopParent */ \"./source/scripts/components/navigation/NavDesktopParent.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar NavDesktopMenu = /*#__PURE__*/function () {\n  function NavDesktopMenu(_ref) {\n    var _this = this;\n\n    var children = _ref.children;\n\n    _classCallCheck(this, NavDesktopMenu);\n\n    this.parents = [];\n    this.children = children;\n\n    this.closeSiblings = function (current) {\n      _this.parents.forEach(function (parent) {\n        if (parent !== current) {\n          parent.close();\n        }\n      });\n    };\n\n    for (var i = 0; i < this.children.length; i++) {\n      if (this.children[i].dataset.navmenuParent !== undefined) {\n        this.parents.push(new _NavDesktopParent__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.children[i], {\n          closeSiblings: this.closeSiblings\n        }));\n      } else if (children[i].classList.contains('navmenu-item')) {\n        this.children[i].addEventListener('focusin', this.closeSiblings);\n      }\n    }\n  }\n\n  _createClass(NavDesktopMenu, [{\n    key: \"openMeganavBlock\",\n    value: function openMeganavBlock(meganav) {\n      this.parents.forEach(function (parent) {\n        parent.openMeganavBlock(meganav);\n      });\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.parents.forEach(function (parent) {\n        parent.unload();\n      });\n\n      for (var i = 0; i < this.children.length; i++) {\n        this.children[i].removeEventListener('focusin', this.closeSiblings);\n      }\n    }\n  }]);\n\n  return NavDesktopMenu;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL25hdmlnYXRpb24vTmF2RGVza3RvcE1lbnUuanM/ZTY1OCJdLCJuYW1lcyI6WyJOYXZEZXNrdG9wTWVudSIsImNoaWxkcmVuIiwicGFyZW50cyIsImNsb3NlU2libGluZ3MiLCJjdXJyZW50IiwiZm9yRWFjaCIsInBhcmVudCIsImNsb3NlIiwiaSIsImxlbmd0aCIsImRhdGFzZXQiLCJuYXZtZW51UGFyZW50IiwidW5kZWZpbmVkIiwicHVzaCIsIk5hdkRlc2t0b3BQYXJlbnQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImFkZEV2ZW50TGlzdGVuZXIiLCJtZWdhbmF2Iiwib3Blbk1lZ2FuYXZCbG9jayIsInVubG9hZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztJQUVxQkEsYztBQUNuQixnQ0FBMEI7QUFBQTs7QUFBQSxRQUFaQyxRQUFZLFFBQVpBLFFBQVk7O0FBQUE7O0FBQ3hCLFNBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0EsU0FBS0QsUUFBTCxHQUFnQkEsUUFBaEI7O0FBRUEsU0FBS0UsYUFBTCxHQUFxQixVQUFBQyxPQUFPLEVBQUk7QUFDOUIsV0FBSSxDQUFDRixPQUFMLENBQWFHLE9BQWIsQ0FBcUIsVUFBQUMsTUFBTSxFQUFJO0FBQzdCLFlBQUlBLE1BQU0sS0FBS0YsT0FBZixFQUF3QjtBQUN0QkUsZ0JBQU0sQ0FBQ0MsS0FBUDtBQUNEO0FBQ0YsT0FKRDtBQUtELEtBTkQ7O0FBUUEsU0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLEtBQUtQLFFBQUwsQ0FBY1EsTUFBbEMsRUFBMENELENBQUMsRUFBM0MsRUFBK0M7QUFDN0MsVUFBSSxLQUFLUCxRQUFMLENBQWNPLENBQWQsRUFBaUJFLE9BQWpCLENBQXlCQyxhQUF6QixLQUEyQ0MsU0FBL0MsRUFBMEQ7QUFDeEQsYUFBS1YsT0FBTCxDQUFhVyxJQUFiLENBQ0UsSUFBSUMseURBQUosQ0FDRSxLQUFLYixRQUFMLENBQWNPLENBQWQsQ0FERixFQUVFO0FBQ0VMLHVCQUFhLEVBQUUsS0FBS0E7QUFEdEIsU0FGRixDQURGO0FBUUQsT0FURCxNQVNPLElBQUlGLFFBQVEsQ0FBQ08sQ0FBRCxDQUFSLENBQVlPLFNBQVosQ0FBc0JDLFFBQXRCLENBQStCLGNBQS9CLENBQUosRUFBb0Q7QUFDekQsYUFBS2YsUUFBTCxDQUFjTyxDQUFkLEVBQWlCUyxnQkFBakIsQ0FBa0MsU0FBbEMsRUFBNkMsS0FBS2QsYUFBbEQ7QUFDRDtBQUNGO0FBQ0Y7Ozs7cUNBRWdCZSxPLEVBQVM7QUFDeEIsV0FBS2hCLE9BQUwsQ0FBYUcsT0FBYixDQUFxQixVQUFBQyxNQUFNLEVBQUk7QUFBRUEsY0FBTSxDQUFDYSxnQkFBUCxDQUF3QkQsT0FBeEI7QUFBbUMsT0FBcEU7QUFDRDs7OzZCQUVRO0FBQ1AsV0FBS2hCLE9BQUwsQ0FBYUcsT0FBYixDQUFxQixVQUFBQyxNQUFNLEVBQUk7QUFBRUEsY0FBTSxDQUFDYyxNQUFQO0FBQWtCLE9BQW5EOztBQUNBLFdBQUssSUFBSVosQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxLQUFLUCxRQUFMLENBQWNRLE1BQWxDLEVBQTBDRCxDQUFDLEVBQTNDLEVBQStDO0FBQzdDLGFBQUtQLFFBQUwsQ0FBY08sQ0FBZCxFQUFpQmEsbUJBQWpCLENBQXFDLFNBQXJDLEVBQWdELEtBQUtsQixhQUFyRDtBQUNEO0FBQ0YiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL25hdmlnYXRpb24vTmF2RGVza3RvcE1lbnUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTmF2RGVza3RvcFBhcmVudCBmcm9tICcuL05hdkRlc2t0b3BQYXJlbnQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYXZEZXNrdG9wTWVudSB7XG4gIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gfSkge1xuICAgIHRoaXMucGFyZW50cyA9IFtdO1xuICAgIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcblxuICAgIHRoaXMuY2xvc2VTaWJsaW5ncyA9IGN1cnJlbnQgPT4ge1xuICAgICAgdGhpcy5wYXJlbnRzLmZvckVhY2gocGFyZW50ID0+IHtcbiAgICAgICAgaWYgKHBhcmVudCAhPT0gY3VycmVudCkge1xuICAgICAgICAgIHBhcmVudC5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5jaGlsZHJlbltpXS5kYXRhc2V0Lm5hdm1lbnVQYXJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLnBhcmVudHMucHVzaChcbiAgICAgICAgICBuZXcgTmF2RGVza3RvcFBhcmVudChcbiAgICAgICAgICAgIHRoaXMuY2hpbGRyZW5baV0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGNsb3NlU2libGluZ3M6IHRoaXMuY2xvc2VTaWJsaW5ncyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgKSxcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSBpZiAoY2hpbGRyZW5baV0uY2xhc3NMaXN0LmNvbnRhaW5zKCduYXZtZW51LWl0ZW0nKSkge1xuICAgICAgICB0aGlzLmNoaWxkcmVuW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCB0aGlzLmNsb3NlU2libGluZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG9wZW5NZWdhbmF2QmxvY2sobWVnYW5hdikge1xuICAgIHRoaXMucGFyZW50cy5mb3JFYWNoKHBhcmVudCA9PiB7IHBhcmVudC5vcGVuTWVnYW5hdkJsb2NrKG1lZ2FuYXYpOyB9KTtcbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICB0aGlzLnBhcmVudHMuZm9yRWFjaChwYXJlbnQgPT4geyBwYXJlbnQudW5sb2FkKCk7IH0pO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5jaGlsZHJlbltpXS5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1c2luJywgdGhpcy5jbG9zZVNpYmxpbmdzKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/components/navigation/NavDesktopMenu.js\n");

/***/ }),

/***/ "./source/scripts/components/navigation/NavDesktopParent.js":
/*!******************************************************************!*\
  !*** ./source/scripts/components/navigation/NavDesktopParent.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NavDesktopParent; });\n/* harmony import */ var _NavDesktopMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NavDesktopMenu */ \"./source/scripts/components/navigation/NavDesktopMenu.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar NavDesktopParent = /*#__PURE__*/function () {\n  function NavDesktopParent(el, options) {\n    var _this = this;\n\n    _classCallCheck(this, NavDesktopParent);\n\n    this.listitem = el;\n    this.link = null;\n    this.submenu = null;\n    this.isOpen = false;\n    this.menu = null;\n    this.closeSiblings = options.closeSiblings;\n    var children = this.listitem.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].classList.contains('navmenu-link')) {\n        this.link = children[i];\n      } else if (children[i].classList.contains('navmenu-submenu')) {\n        this.submenu = children[i];\n      }\n    }\n\n    this.open = function () {\n      _this._open();\n    };\n\n    this.close = function () {\n      _this._close();\n    };\n\n    this.closeEsc = function (e) {\n      if (e.key === 'Escape') {\n        _this.link.focus();\n\n        _this.close();\n      }\n    };\n\n    this.timer = null;\n\n    this.mouseover = function () {\n      _this.open();\n\n      clearTimeout(_this.timer);\n    };\n\n    this.mouseout = function () {\n      _this.timer = setTimeout(_this.close, 400);\n    };\n\n    this.click = function (e) {\n      e.stopPropagation(); // if already open, continue to link destination\n\n      if (!e.target.classList.contains('navmenu-link-parent') || _this.isOpen) {\n        return;\n      }\n\n      e.preventDefault();\n\n      _this.open();\n    };\n\n    this.focusin = function (e) {\n      e.stopPropagation();\n\n      if (e.target.classList.contains('navmenu-link-parent')) {\n        _this.closeSiblings(_this);\n      }\n    };\n\n    this.listitem.addEventListener('mouseover', this.mouseover);\n    this.listitem.addEventListener('mouseout', this.mouseout);\n    this.listitem.addEventListener('touchend', this.click);\n    this.listitem.addEventListener('click', this.click);\n    this.listitem.addEventListener('focusin', this.focusin);\n    document.body.addEventListener('click', this.close);\n    document.body.addEventListener('focusin', this.close);\n  }\n\n  _createClass(NavDesktopParent, [{\n    key: \"_open\",\n    value: function _open() {\n      var _this2 = this;\n\n      this.closeSiblings(this);\n      window.addEventListener('keydown', this.closeEsc);\n\n      if (!this.listitem.classList.contains('open')) {\n        this.listitem.classList.add('open');\n        this.link.setAttribute('aria-expanded', true);\n\n        this.submenuEndInAnimation = function () {\n          _this2.submenu.classList.remove('animating-in');\n\n          _this2.submenu.removeEventListener('animationend', _this2.submenuEndInAnimation);\n        };\n\n        this.submenu.addEventListener('animationend', this.submenuEndInAnimation);\n        this.submenu.classList.add('animating-in');\n      }\n\n      if (!this.menu) {\n        this.menu = new _NavDesktopMenu__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.submenu);\n      } // Determine if submenu needs to use alternate side for dropdown\n      // Only applicable for regular drop down menus, not meganav\n\n\n      if (!this.submenu.classList.contains('navmenu-meganav')) {\n        var bounds = this.submenu.getBoundingClientRect();\n\n        if (bounds.right > document.documentElement.clientWidth) {\n          this.listitem.classList.add('alternate-drop');\n        }\n      }\n\n      this.isOpen = true;\n    }\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      var _this3 = this;\n\n      if (this.listitem.classList.contains('open') && !this.submenu.classList.contains('animating-out')) {\n        this.submenuEndOutAnimation = function () {\n          _this3.listitem.classList.remove('open');\n\n          _this3.listitem.classList.remove('alternate-drop');\n\n          _this3.link.setAttribute('aria-expanded', false);\n\n          _this3.submenu.classList.remove('animating-out');\n\n          _this3.submenu.removeEventListener('animationend', _this3.submenuEndOutAnimation);\n        };\n\n        this.submenu.addEventListener('animationend', this.submenuEndOutAnimation);\n        this.submenu.classList.add('animating-out');\n      }\n\n      if (this.menu) {\n        this.menu.unload();\n        this.menu = null;\n      }\n\n      window.removeEventListener('keydown', this.closeEsc);\n      this.isOpen = false;\n    }\n  }, {\n    key: \"openMeganavBlock\",\n    value: function openMeganavBlock(meganav) {\n      if (this.submenu === meganav) {\n        this.submenu.classList.add('meganav-editing-block');\n      }\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.close();\n      this.listitem.removeEventListener('mouseover', this.mouseover);\n      this.listitem.removeEventListener('mouseout', this.mouseout);\n      this.listitem.removeEventListener('touchend', this.click);\n      this.listitem.removeEventListener('click', this.click);\n      this.listitem.removeEventListener('focusin', this.focusin);\n      window.removeEventListener('keydown', this.closeEsc);\n      document.body.removeEventListener('click', this.bodyClose);\n      document.body.removeEventListener('focusin', this.focusInClose);\n    }\n  }]);\n\n  return NavDesktopParent;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/navigation/NavDesktopParent.js\n");

/***/ }),

/***/ "./source/scripts/components/navigation/NavMobile.js":
/*!***********************************************************!*\
  !*** ./source/scripts/components/navigation/NavMobile.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NavMobile; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shopify/theme-a11y */ \"./node_modules/@shopify/theme-a11y/theme-a11y.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _NavMobileSubMenus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NavMobileSubMenus */ \"./source/scripts/components/navigation/NavMobileSubMenus.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar NavMobile = /*#__PURE__*/function () {\n  function NavMobile(elements) {\n    var _this = this;\n\n    _classCallCheck(this, NavMobile);\n\n    this.$body = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body);\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.$el = elements.$el;\n    this.$toggleOpen = elements.$toggleOpen;\n    this.isOpen = false;\n    this.subMenus = null;\n    this.$mobileNav = this.$el.find('[data-mobile-nav]');\n    this.$panel = this.$el.find('[data-mobile-nav-panel]');\n    this.$overlay = this.$el.find('[data-mobile-nav-overlay]');\n    this.$toggleClose = this.$el.find('[data-mobile-nav-close]'); // Revert navigation to original state on breakpoint change\n\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"onChange\"](this.layoutHandler);\n\n    this._closeEsc = function (e) {\n      if (e.key === 'Escape') {\n        _this._close();\n      }\n    };\n\n    this._bindEvents();\n  }\n\n  _createClass(NavMobile, [{\n    key: \"unload\",\n    value: function unload() {\n      this._close();\n\n      this.$window.off('resize.mobile-nav');\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"offChange\"](this.layoutHandler);\n    }\n  }, {\n    key: \"onBreakpointChange\",\n    value: function onBreakpointChange() {\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"min\"]('L') && this.isOpen) {\n        this._close();\n      }\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this2 = this;\n\n      this.$toggleOpen.on('click.mobile-nav', function (event) {\n        event.preventDefault();\n        if (!_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"min\"]('L')) _this2._open();\n      });\n      this.$window.on('resize.mobile-nav', function () {\n        _this2.$el.find('[data-menu-toggle]').removeClass('active');\n\n        if (_this2.isOpen) {\n          _this2._setPanelHeight();\n        }\n      });\n    }\n  }, {\n    key: \"_setPanelHeight\",\n    value: function _setPanelHeight() {\n      this.$panel.height(window.innerHeight);\n    }\n  }, {\n    key: \"_open\",\n    value: function _open() {\n      var _this3 = this;\n\n      this.$body.addClass('scroll-lock');\n      this.isOpen = true; // Activate Submenu handler\n\n      this.subMenus = new _NavMobileSubMenus__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.$panel);\n\n      this._setPanelHeight(); // Animate in elements\n\n\n      this.$mobileNav.addClass('animating animating-in').one('trend', function () {\n        _this3.$mobileNav.removeClass('animating animating-in').addClass('visible').off('trend');\n      });\n      Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_1__[\"trapFocus\"])(this.$mobileNav[0]); // Event handlers\n\n      window.addEventListener('keydown', this._closeEsc);\n      this.events = [// Close menu when clicking on the overlay\n      this.$overlay.on('click.mobile-nav', function (event) {\n        return _this3._close(event);\n      }), this.$toggleClose.on('click.mobile-nav', function (event) {\n        return _this3._close(event);\n      }), // Disable scrolling on overlay and contactbar\n      this.$overlay.on('touchmove.mobile-nav', function (event) {\n        return event.preventDefault();\n      })];\n    }\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      var _this4 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (event) event.preventDefault();\n      this.$mobileNav.addClass('animating animating-out').one('trend', function () {\n        _this4.$mobileNav.removeClass('animating animating-out').removeClass('visible').off('trend');\n      });\n      this.$body.removeClass('scroll-lock');\n      this.isOpen = false;\n      Object(_shopify_theme_a11y__WEBPACK_IMPORTED_MODULE_1__[\"removeTrapFocus\"])(this.$mobileNav);\n      this.$toggleOpen.focus(); // Close any open drop down menus\n\n      if (this.subMenus) {\n        this.subMenus.closeSubMenus(this.$el);\n        this.subMenus.closeAllSubmenus(); // Unbind Mobile sub menus\n\n        this.subMenus.unload();\n      } // Unbind events\n\n\n      window.removeEventListener('keydown', this._closeEsc);\n\n      if (this.events) {\n        this.events.forEach(function ($el) {\n          return $el.off('.mobile-nav');\n        });\n        this.events = [];\n      }\n    }\n  }]);\n\n  return NavMobile;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/navigation/NavMobile.js\n");

/***/ }),

/***/ "./source/scripts/components/navigation/NavMobileSubMenus.js":
/*!*******************************************************************!*\
  !*** ./source/scripts/components/navigation/NavMobileSubMenus.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NavMobileSubMenus; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Accordion */ \"./source/scripts/Accordion.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar NavMobileSubMenus = /*#__PURE__*/function () {\n  function NavMobileSubMenus($el) {\n    _classCallCheck(this, NavMobileSubMenus);\n\n    this.$el = $el;\n    this.Accordion = new _Accordion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$el, {\n      activeClass: 'visible',\n      content: '[data-accordion-content]'\n    }); // Sub menu selectors\n\n    this.activeMenuClass = 'navmenu-link-parent-active';\n    this.activeMenu = \".\".concat(this.activeMenuClass);\n    this.linkClass = 'navmenu-link-parent';\n    this.linkSelector = \".\".concat(this.linkClass);\n    this.navTrigger = '[data-navmenu-parent]';\n    this.subMenu = '[data-navmenu-submenu]';\n    this.buttonClass = 'navmenu-button';\n    this.buttonSelector = \".\".concat(this.buttonClass);\n\n    this._bindEvents();\n  }\n\n  _createClass(NavMobileSubMenus, [{\n    key: \"unload\",\n    value: function unload() {\n      this.$el.off('.mobile-nav');\n      delete this.Accordion;\n    }\n  }, {\n    key: \"closeSubMenus\",\n    value: function closeSubMenus($current) {\n      var _this = this;\n\n      $current.find(this.activeMenu).each(function (index, el) {\n        _this._closeSubmenu(jquery__WEBPACK_IMPORTED_MODULE_0___default()(el));\n      });\n    }\n  }, {\n    key: \"closeAllSubmenus\",\n    value: function closeAllSubmenus() {\n      if (this.Accordion) {\n        this.Accordion.closeOpen();\n      }\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this2 = this;\n\n      // Prevent focus state from applying on mouse click\n      this.$el.on('mousedown.mobile-nav', '.navmenu-link', function (event) {\n        event.preventDefault();\n      });\n      this.$el.on('click.mobile-nav', \"\".concat(this.navTrigger, \" > .navmenu-link-parent\"), this._linkClicked.bind(this));\n      this.$el.on('click.mobile-nav', \"\".concat(this.navTrigger, \" > .navmenu-button\"), function (event) {\n        event.preventDefault();\n\n        _this2._toggleSubmenu(event);\n      });\n    }\n  }, {\n    key: \"_linkClicked\",\n    value: function _linkClicked(event) {\n      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n\n      if (!$target.hasClass(this.activeMenuClass)) {\n        event.preventDefault();\n\n        this._openSubmenu($target);\n      }\n    }\n  }, {\n    key: \"_toggleSubmenu\",\n    value: function _toggleSubmenu(event) {\n      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var $link = $target.hasClass(this.linkClass) ? $target : $target.siblings(this.linkSelector).first();\n\n      if ($link.hasClass(this.activeMenuClass)) {\n        this._closeSubmenu($target);\n      } else {\n        this._openSubmenu($target);\n      }\n    }\n  }, {\n    key: \"_openSubmenu\",\n    value: function _openSubmenu($target) {\n      var $menu = $target.siblings(this.subMenu).first();\n      var $link = $target.hasClass(this.linkClass) ? $target : $target.siblings(this.linkSelector).first();\n      var $button = $target.hasClass(this.buttonClass) ? $target : $target.siblings(this.buttonSelector).first();\n      $menu.css('display', 'flex');\n      $link.addClass(this.activeMenuClass).attr('aria-expanded', true);\n      $button.attr('aria-expanded', true);\n      this.Accordion.toggle($menu);\n    }\n  }, {\n    key: \"_closeSubmenu\",\n    value: function _closeSubmenu($target) {\n      var $menu = $target.siblings(this.subMenu).first();\n      var $link = $target.hasClass(this.linkClass) ? $target : $target.siblings(this.linkSelector).first();\n      var $button = $target.hasClass(this.buttonClass) ? $target : $target.siblings(this.buttonSelector).first();\n      $menu.one('transitionend', function () {\n        return $menu.css('display', '');\n      });\n      $link.removeClass(this.activeMenuClass).attr('aria-expanded', false);\n      $button.attr('aria-expanded', false);\n      this.Accordion.toggle($menu);\n      this.closeSubMenus($menu);\n    }\n  }]);\n\n  return NavMobileSubMenus;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/navigation/NavMobileSubMenus.js\n");

/***/ }),

/***/ "./source/scripts/components/search/LiveSearch.js":
/*!********************************************************!*\
  !*** ./source/scripts/components/search/LiveSearch.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LiveSearch; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Search */ \"./source/scripts/Search.js\");\n/* harmony import */ var _SearchForm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SearchForm */ \"./source/scripts/components/search/SearchForm.js\");\n/* harmony import */ var _LiveSearchTemplates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LiveSearchTemplates */ \"./source/scripts/components/search/LiveSearchTemplates.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar MAX_RESULTS = 5;\n\nvar LiveSearch = /*#__PURE__*/function () {\n  function LiveSearch(els, settings) {\n    var _this = this;\n\n    _classCallCheck(this, LiveSearch);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(els.el);\n    this.$body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n    this.$header = jquery__WEBPACK_IMPORTED_MODULE_0___default()(els.header);\n    this.$document = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document);\n    this.settings = settings;\n    this.formOptions = {\n      liveSearch: true\n    };\n    this.contentTypes = this.settings.content_types;\n    this.enableImages = true;\n    this.flyDownActive = false;\n    this.takeOverActive = false;\n    this.showFlyDown = false;\n    this.searchOpenClass = 'site-header-search--open';\n    this.$form = this.$el.find('[data-live-search-form]');\n    this.$input = this.$form.find('[data-live-search-input]');\n    this.$button = this.$form.find('[data-live-search-submit]');\n    this.$takeOverCancel = this.$form.find('[data-live-search-takeover-cancel]');\n    this.$flyDown = this.$el.find('[data-live-search-flydown]');\n    this.$searchResults = this.$flyDown.find('[data-live-search-results]');\n    this.$searchPlaceholder = this.$flyDown.find('[data-live-search-placeholder]');\n    this.$quickLinks = this.$flyDown.find('[data-live-search-quick-links]');\n    this.staticSearch = new _SearchForm__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.$el, this.formOptions);\n    this.search = new _Search__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      view: 'header',\n      type: this.contentTypes\n    });\n    this._search = this._search.bind(this);\n    this._toggleTakeOver = this._toggleTakeOver.bind(this);\n    this._searchFocused = this._searchFocused.bind(this);\n    this._documentFocus = this._documentFocus.bind(this);\n    this._searchCancelled = this._searchCancelled.bind(this);\n    this._searchComplete = this._searchComplete.bind(this);\n    this._searchError = this._searchError.bind(this);\n    this.search.on('cancelled', this._searchCancelled);\n    this.search.on('complete', this._searchComplete);\n    this.search.on('error', this._searchError);\n\n    this._closeEsc = function (e) {\n      if (e.key === 'Escape') {\n        e.stopPropagation();\n\n        _this.$input.focus();\n\n        _this._closeFlyDown(true);\n      }\n    };\n\n    this.events = [this.$button.on('click.live-search', function (event) {\n      event.preventDefault();\n\n      _this.$form.submit();\n    }), this.$input.on('keyup.live-search', just_debounce__WEBPACK_IMPORTED_MODULE_1___default()(this._search, 250)), this.$input.on('focus.live-search', this._searchFocused), this.$takeOverCancel.on('click.live-search', this._toggleTakeOver)];\n  }\n\n  _createClass(LiveSearch, [{\n    key: \"unload\",\n    value: function unload() {\n      this.events.forEach(function ($el) {\n        return $el.off('.live-search');\n      });\n      this.search.off('cancelled', this._searchCancelled);\n      this.search.off('complete', this._searchComplete);\n      this.search.off('error', this._searchError);\n      this.staticSearch.unload();\n    }\n    /**\n     * If is searching, only show placeholder\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_flyDownSearching\",\n    value: function _flyDownSearching() {\n      this.$searchResults.removeClass('visible');\n      this.$quickLinks.removeClass('visible');\n      this.$searchPlaceholder.addClass('visible');\n    }\n    /**\n     * Search field has been focused, or has been cleared of contents\n     *   - If previous search contents, show\n     *   - If no previous search contents, show quicklinks if exists\n     *\n     * @param hasTerms\n     * @private\n     */\n\n  }, {\n    key: \"_flyDownInitial\",\n    value: function _flyDownInitial(hasTerms) {\n      this.showFlyDown = false;\n      var hasNoResults = this.$searchResults.find('[data-live-search-no-products]').length === 0;\n      var hasPreviousResults = this.$searchResults.children().length > 0;\n\n      if (hasTerms && hasNoResults && hasPreviousResults) {\n        this.$searchResults.addClass('visible');\n        this.$quickLinks.removeClass('visible');\n        this.showFlyDown = true;\n      } else if (this.$quickLinks.length) {\n        this.$searchResults.removeClass('visible');\n        this.$quickLinks.addClass('visible');\n        this.showFlyDown = true;\n      }\n    }\n  }, {\n    key: \"_search\",\n    value: function _search(event) {\n      // Ignore non character key strokes\n      var invalidKeyStrokes = ['Alt', 'ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Capslock', 'Control', 'Escape', 'Meta', 'Shift', 'Tab', 'Enter'];\n\n      if (event.key && invalidKeyStrokes.indexOf(event.key) !== -1) {\n        return;\n      }\n\n      var terms = this.$input.val();\n      var hasTerms = terms.length > 0;\n\n      if (!hasTerms) {\n        if (!this.takeOverActive) {\n          this._flyDownInitial(true);\n        }\n\n        if (!this.showFlyDown) {\n          this._closeFlyDown(true);\n        }\n\n        return;\n      }\n\n      this._flyDownSearching(); // Clear previous results\n\n\n      this.$searchResults.html(''); // If terms has length, this will be true\n\n      this._toggleButton(hasTerms); // Show the flyout if it isn't open\n\n\n      if (!this.$flyDown.data('is-open')) {\n        this.showFlyDown = true;\n\n        this._openFlyDown();\n      } // Adds `*` after each word in search terms, doesn't add to last word\n\n\n      if (terms.indexOf(' ') > 0) {\n        terms = terms.split(' ').join('* ').trim();\n      } // Adds `*` at the end of the search terms\n\n\n      terms = \"\".concat(terms, \"*\");\n      this.search.execute(terms);\n    }\n  }, {\n    key: \"_searchError\",\n    value: function _searchError(response) {\n      console.warn('Search had error');\n      console.log(response.message, response.error, response.event);\n\n      this._toggleButton(false);\n    }\n    /**\n     * Search has been cancelled due to new search being performed\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_searchCancelled\",\n    value: function _searchCancelled() {// Searches are canceled on user interaction, UI should remain unchanged\n    }\n  }, {\n    key: \"_searchComplete\",\n    value: function _searchComplete(response) {\n      var _this2 = this;\n\n      var content = response.content,\n          products = response.products,\n          terms = response.terms,\n          sanitizedTerms = response.sanitizedTerms;\n      content = content.slice(0, MAX_RESULTS), products = products.slice(0, MAX_RESULTS);\n      var settings = {\n        products: {\n          results: {\n            products: products,\n            enableImages: this.enableImages\n          },\n          noResults: {\n            context: this.settings.context,\n            terms: sanitizedTerms\n          }\n        },\n        content: {\n          results: {\n            context: this.settings.context,\n            content: content\n          },\n          noResults: {\n            context: this.settings.context\n          }\n        },\n        footer: {\n          context: this.settings.context,\n          terms: terms,\n          type: this.searchType\n        }\n      };\n      var $productResults = products.length ? Object(_LiveSearchTemplates__WEBPACK_IMPORTED_MODULE_4__[\"ProductResults\"])(settings.products.results) : Object(_LiveSearchTemplates__WEBPACK_IMPORTED_MODULE_4__[\"ProductNoResults\"])(settings.products.noResults);\n      var $contentResults = content.length ? Object(_LiveSearchTemplates__WEBPACK_IMPORTED_MODULE_4__[\"ContentResults\"])(settings.content.results) : Object(_LiveSearchTemplates__WEBPACK_IMPORTED_MODULE_4__[\"ContentNoResults\"])(settings.content.noResults);\n      $productResults.find('.money').each(function (i, el) {\n        el.innerHTML = Shopify.formatMoney(el.innerHTML, _this2.settings.money_format);\n      }); // Hide placeholder\n      // TODO: Lock minimum height?\n\n      this.$searchPlaceholder.removeClass('visible'); // Show results\n\n      this.$searchResults.html($productResults).addClass('visible');\n\n      if (this.contentTypes !== 'product') {\n        this.$searchResults.append($contentResults);\n      }\n\n      this.$searchResults.append(Object(_LiveSearchTemplates__WEBPACK_IMPORTED_MODULE_4__[\"ResultsFooter\"])(settings.footer));\n\n      this._toggleButton(false);\n    }\n    /**\n     * Toggles search button while processing\n     *\n     * @param disable\n     * @private\n     */\n\n  }, {\n    key: \"_toggleButton\",\n    value: function _toggleButton(disable) {\n      if (disable) {\n        this.$button.addClass('search-icon--processing').attr('disabled');\n      } else {\n        this.$button.removeClass('search-icon--processing').removeAttr('disabled');\n      }\n    }\n  }, {\n    key: \"_searchFocused\",\n    value: function _searchFocused(e) {\n      e.stopPropagation();\n\n      if (this.flyDownActive) {\n        return;\n      }\n\n      var hasTerms = this.$input.val().length > 0; // Only listen for events outside of the search flydown when its open\n\n      this.closeEvents = [this.$document.on('focusin.live-search', this._documentFocus), this.$document.on('touchstart.live-search', this._documentFocus), this.$document.on('click.live-search', this._documentFocus)];\n      this.$el.addClass('live-search--focused');\n\n      this._flyDownInitial(hasTerms);\n\n      this._openFlyDown();\n    }\n  }, {\n    key: \"_openFlyDown\",\n    value: function _openFlyDown() {\n      if (!this.showFlyDown) {\n        return;\n      }\n\n      window.addEventListener('keydown', this._closeEsc);\n      this.$el.addClass('live-search--active');\n      this.$flyDown.data('is-open', true);\n      this.flyDownActive = true;\n    }\n    /**\n     * Close the FlyDown when no longer needed\n     *  - Keep focus styling if input is still being interacted with\n     *\n     * @param retainFocus\n     * @private\n     */\n\n  }, {\n    key: \"_closeFlyDown\",\n    value: function _closeFlyDown() {\n      var retainFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this.flyDownActive) {\n        if (!retainFocus) {\n          this.$el.removeClass('live-search--focused');\n        }\n\n        return;\n      }\n\n      if (this.takeOverActive) {\n        this._toggleTakeOver(null, false);\n      }\n\n      this.$flyDown.data('is-open', false);\n      this.$el.removeClass('live-search--active');\n\n      if (!retainFocus) {\n        this.$el.removeClass('live-search--focused');\n      }\n\n      this.flyDownActive = false;\n\n      if (this.closeEvents && this.closeEvents.length) {\n        this.closeEvents.forEach(function ($el) {\n          $el.off('.live-search');\n        });\n      }\n\n      window.removeEventListener('keydown', this._closeEsc);\n      this.closeEvents = [];\n    }\n    /**\n     * Open or close the Take over for mobile\n     *\n     *\n     * @param event\n     * @param enable\n     * @private\n     */\n\n  }, {\n    key: \"_toggleTakeOver\",\n    value: function _toggleTakeOver() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var enable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.takeOverActive = enable;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      if (!enable) {\n        this._closeFlyDown(false);\n      }\n\n      if (this.$header.hasClass('search--section')) {\n        this.$body.toggleClass('search-takeover-active', enable);\n      }\n\n      this.$el.toggleClass('live-search--takeover', enable);\n      this.$body.toggleClass('scroll-lock', enable);\n    }\n  }, {\n    key: \"openMobileTakeover\",\n    value: function openMobileTakeover() {\n      this._toggleTakeOver(null, true);\n\n      window.addEventListener('keydown', this._closeEsc);\n      this.$input.focus();\n    }\n    /**\n     * When the focus element has changed, either by clicking, touching, or tabbing\n     * check to see if it is within the flydown\n     *\n     * @param event\n     * @private\n     */\n\n  }, {\n    key: \"_documentFocus\",\n    value: function _documentFocus(event) {\n      var $parent = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).parents('[data-live-search]');\n\n      if ($parent.length) {\n        return;\n      }\n\n      this._closeFlyDown();\n    }\n  }]);\n\n  return LiveSearch;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/components/search/LiveSearch.js\n");

/***/ }),

/***/ "./source/scripts/components/search/LiveSearchTemplates.js":
/*!*****************************************************************!*\
  !*** ./source/scripts/components/search/LiveSearchTemplates.js ***!
  \*****************************************************************/
/*! exports provided: ContentResults, ContentNoResults, ProductResults, ProductNoResults, ResultsFooter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentResults\", function() { return ContentResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentNoResults\", function() { return ContentNoResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProductResults\", function() { return ProductResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProductNoResults\", function() { return ProductNoResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResultsFooter\", function() { return ResultsFooter; });\n/**\n * Shows a list item component when result is an article, or a page\n *\n * @param contentItem\n * @returns {string}\n * @constructor\n */\nfunction ContentItem(contentItem) {\n  return \"\\n  <li class=\\\"search-flydown--content-item\\\">\\n    <a href=\\\"\".concat(contentItem.url, \"\\\">\").concat(contentItem.title, \"</a>\\n  </li>\\n  \");\n}\n/**\n * Shows a header for the article and page results\n *\n * @param context\n * @returns {string}\n * @constructor\n */\n\n\nfunction ContentResultsHeader(context) {\n  return \"\\n    <h5 class=\\\"search-flydown--content-title\\\">\\n      \".concat(context.content_results.title, \"\\n    </h5>\\n  \");\n}\n/**\n * Shows a list of results from articles, or pages\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\n\n\nfunction ContentResults(props) {\n  var content = props.content,\n      context = props.context;\n  var $title = ContentResultsHeader(context);\n  var contentItems = content.map(function (contentItem) {\n    return ContentItem(contentItem);\n  });\n  return $(\"\\n    <div class=\\\"search-flydown--content-items\\\">\\n      \".concat($title, \"\\n      <ul class=\\\"search-flydown--content-items-list\\\">\\n        \").concat(contentItems.join(''), \"\\n      </ul>\\n    </div>\\n  \"));\n}\n/**\n * Shows a message when there are no article or page results\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\n\n\nfunction ContentNoResults(props) {\n  var context = props.context;\n  var $title = ContentResultsHeader(context);\n  return $(\"\\n    <div class=\\\"search-flydown--content-items\\\">\\n      \".concat($title, \"\\n      <p class=\\\"search-flydown--content-items-none\\\">\\n        \").concat(context.content_results.no_results, \"\\n      </p>\\n    </div>\\n  \"));\n}\n/**\n * Shows the product's compare_at_price\n *\n * @param price\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductPriceCompareAt(price) {\n  return \"\\n  <span class=\\\"search-flydown--product-price--compare-at\\\">\\n    <span class=\\\"money\\\">\".concat(price.compare_at_price, \"</span>\\n  </span>\\n  \");\n}\n/**\n * Shows the product's price\n *\n * @param price\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductPriceMain(price) {\n  return \"\\n  <span class=\\\"search-flydown--product-price--main\\\">\\n    <span class=\\\"money\\\">\".concat(price.price, \"</span>\\n  </span>\\n  \");\n}\n/**\n * Shows the product's prices\n *\n * @param props\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductPrice(props) {\n  var price = props.price,\n      onSale = props.onSale,\n      consistentSaved = props.consistentSaved;\n  var $compareAt = onSale && consistentSaved ? ProductPriceCompareAt(price) : '';\n  var $price = ProductPriceMain(price);\n  return \"\\n    <span class=\\\"search-flydown--product-price \".concat(onSale ? 'search-flydown--product-price-has-sale' : '', \"\\\">\\n      \").concat($price, \"\\n      \").concat($compareAt, \"\\n    </span>\\n  \");\n}\n/**\n * Shows text indicating the number of product colours\n *\n * @param swatches\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductSwatches(swatches) {\n  if (swatches.length === 0) {\n    return '';\n  }\n\n  return \"<span class=\\\"search-flydown--swatches\\\">\".concat(swatches, \"</span>\");\n}\n/**\n * Shows a product's main content\n *\n * @param product\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductContent(product) {\n  var $price = ProductPrice({\n    price: product.price,\n    onSale: product.on_sale,\n    consistentSaved: product.consistent_saved\n  });\n  var $swatches = ProductSwatches(product.swatches);\n  return \"\\n    <div class=\\\"search-flydown--product-text\\\">\\n      <span class=\\\"search-flydown--product-title\\\">\\n        \".concat(product.title, \"\\n      </span>\\n      \").concat($price, \"\\n      \").concat($swatches, \"\\n    </div>\\n  \");\n}\n/**\n * Shows a product's image\n *\n * @param image\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductImage(image) {\n  return \"\\n    <div class=\\\"search-flydown--product-image\\\">\\n      \".concat(image, \"\\n    </div>\\n  \");\n}\n/**\n * Shows a product list item component when result is a product\n *\n * @param product\n * @param enableImages\n * @returns {string}\n * @constructor\n */\n\n\nfunction ProductItem(product, enableImages) {\n  var $image = enableImages ? ProductImage(product.image) : '';\n  var $content = ProductContent(product);\n  return \"\\n    <a class=\\\"search-flydown--product search-flydown--product\\\" href=\\\"\".concat(product.url, \"\\\">\\n      \").concat($image, \"\\n      \").concat($content, \"\\n    </a>\\n  \");\n}\n/**\n * Shows a list of product results\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\n\n\nfunction ProductResults(props) {\n  var products = props.products,\n      enableImages = props.enableImages;\n  var productItems = products.map(function (product) {\n    return ProductItem(product, enableImages);\n  });\n  return $(\"\\n    <div class=\\\"search-flydown--product-items\\\">\\n      \".concat(productItems.join(''), \"\\n    </div>\\n  \"));\n}\n/**\n * Show a message when no product results are found\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\n\n\nfunction ProductNoResults(props) {\n  var context = props.context,\n      terms = props.terms;\n  return $(\"\\n    <div class=\\\"search-flydown--product-items--none\\\" data-live-search-no-products>\\n      <h5>\\n        \".concat(context.no_results_products.title.replace('*terms*', terms), \"\\n      </h5>\\n      <p>\\n        \").concat(context.no_results_products.message, \"\\n      </p>\\n      <p>\\n        <a class=\\\"search-flydown--continue\\\" href=\\\"\").concat(window.Theme.routes.all_products_collection_url, \"\\\">\\n          \").concat(context.view_all_products, \"\\n        </a>\\n      </p>\\n    </div>\\n  \"));\n}\n/**\n * Show's the Results footer, directing customers to all products\n *\n * @param props\n * @returns {jQuery|HTMLElement}\n * @constructor\n */\n\n\nfunction ResultsFooter(props) {\n  var context = props.context,\n      terms = props.terms,\n      type = props.type;\n  return $(\"\\n    <div class=\\\"search-flydown--footer\\\">\\n      <a class=\\\"search-flydown--continue\\\" href=\\\"\".concat(window.Theme.routes.search_url, \"?q=\").concat(terms, \"&type=\").concat(type, \"\\\">\\n        \").concat(context.view_all_results, \"\\n      </a>\\n    </div>\\n  \"));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC9MaXZlU2VhcmNoVGVtcGxhdGVzLmpzPzI3NzkiXSwibmFtZXMiOlsiQ29udGVudEl0ZW0iLCJjb250ZW50SXRlbSIsInVybCIsInRpdGxlIiwiQ29udGVudFJlc3VsdHNIZWFkZXIiLCJjb250ZXh0IiwiY29udGVudF9yZXN1bHRzIiwiQ29udGVudFJlc3VsdHMiLCJwcm9wcyIsImNvbnRlbnQiLCIkdGl0bGUiLCJjb250ZW50SXRlbXMiLCJtYXAiLCIkIiwiam9pbiIsIkNvbnRlbnROb1Jlc3VsdHMiLCJub19yZXN1bHRzIiwiUHJvZHVjdFByaWNlQ29tcGFyZUF0IiwicHJpY2UiLCJjb21wYXJlX2F0X3ByaWNlIiwiUHJvZHVjdFByaWNlTWFpbiIsIlByb2R1Y3RQcmljZSIsIm9uU2FsZSIsImNvbnNpc3RlbnRTYXZlZCIsIiRjb21wYXJlQXQiLCIkcHJpY2UiLCJQcm9kdWN0U3dhdGNoZXMiLCJzd2F0Y2hlcyIsImxlbmd0aCIsIlByb2R1Y3RDb250ZW50IiwicHJvZHVjdCIsIm9uX3NhbGUiLCJjb25zaXN0ZW50X3NhdmVkIiwiJHN3YXRjaGVzIiwiUHJvZHVjdEltYWdlIiwiaW1hZ2UiLCJQcm9kdWN0SXRlbSIsImVuYWJsZUltYWdlcyIsIiRpbWFnZSIsIiRjb250ZW50IiwiUHJvZHVjdFJlc3VsdHMiLCJwcm9kdWN0cyIsInByb2R1Y3RJdGVtcyIsIlByb2R1Y3ROb1Jlc3VsdHMiLCJ0ZXJtcyIsIm5vX3Jlc3VsdHNfcHJvZHVjdHMiLCJyZXBsYWNlIiwibWVzc2FnZSIsIndpbmRvdyIsIlRoZW1lIiwicm91dGVzIiwiYWxsX3Byb2R1Y3RzX2NvbGxlY3Rpb25fdXJsIiwidmlld19hbGxfcHJvZHVjdHMiLCJSZXN1bHRzRm9vdGVyIiwidHlwZSIsInNlYXJjaF91cmwiLCJ2aWV3X2FsbF9yZXN1bHRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BLFNBQVNBLFdBQVQsQ0FBcUJDLFdBQXJCLEVBQWtDO0FBQ2hDLGtGQUVhQSxXQUFXLENBQUNDLEdBRnpCLGdCQUVpQ0QsV0FBVyxDQUFDRSxLQUY3QztBQUtEO0FBRUQ7Ozs7Ozs7OztBQU9BLFNBQVNDLG9CQUFULENBQThCQyxPQUE5QixFQUF1QztBQUNyQyw2RUFFTUEsT0FBTyxDQUFDQyxlQUFSLENBQXdCSCxLQUY5QjtBQUtEO0FBRUQ7Ozs7Ozs7OztBQU9BLFNBQVNJLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQStCO0FBQUEsTUFDckJDLE9BRHFCLEdBQ0FELEtBREEsQ0FDckJDLE9BRHFCO0FBQUEsTUFDWkosT0FEWSxHQUNBRyxLQURBLENBQ1pILE9BRFk7QUFFN0IsTUFBTUssTUFBTSxHQUFHTixvQkFBb0IsQ0FBQ0MsT0FBRCxDQUFuQztBQUNBLE1BQU1NLFlBQVksR0FBR0YsT0FBTyxDQUFDRyxHQUFSLENBQVksVUFBQVgsV0FBVztBQUFBLFdBQUlELFdBQVcsQ0FBQ0MsV0FBRCxDQUFmO0FBQUEsR0FBdkIsQ0FBckI7QUFFQSxTQUFPWSxDQUFDLHNFQUVGSCxNQUZFLGdGQUlBQyxZQUFZLENBQUNHLElBQWIsQ0FBa0IsRUFBbEIsQ0FKQSxtQ0FBUjtBQVFEO0FBRUQ7Ozs7Ozs7OztBQU9BLFNBQVNDLGdCQUFULENBQTBCUCxLQUExQixFQUFpQztBQUFBLE1BQ3ZCSCxPQUR1QixHQUNYRyxLQURXLENBQ3ZCSCxPQUR1QjtBQUUvQixNQUFNSyxNQUFNLEdBQUdOLG9CQUFvQixDQUFDQyxPQUFELENBQW5DO0FBRUEsU0FBT1EsQ0FBQyxzRUFFRkgsTUFGRSwrRUFJQUwsT0FBTyxDQUFDQyxlQUFSLENBQXdCVSxVQUp4QixrQ0FBUjtBQVFEO0FBRUQ7Ozs7Ozs7OztBQU9BLFNBQVNDLHFCQUFULENBQStCQyxLQUEvQixFQUFzQztBQUNwQyw2R0FFd0JBLEtBQUssQ0FBQ0MsZ0JBRjlCO0FBS0Q7QUFFRDs7Ozs7Ozs7O0FBT0EsU0FBU0MsZ0JBQVQsQ0FBMEJGLEtBQTFCLEVBQWlDO0FBQy9CLHVHQUV3QkEsS0FBSyxDQUFDQSxLQUY5QjtBQUtEO0FBRUQ7Ozs7Ozs7OztBQU9BLFNBQVNHLFlBQVQsQ0FBc0JiLEtBQXRCLEVBQTZCO0FBQUEsTUFDbkJVLEtBRG1CLEdBQ2dCVixLQURoQixDQUNuQlUsS0FEbUI7QUFBQSxNQUNaSSxNQURZLEdBQ2dCZCxLQURoQixDQUNaYyxNQURZO0FBQUEsTUFDSkMsZUFESSxHQUNnQmYsS0FEaEIsQ0FDSmUsZUFESTtBQUUzQixNQUFNQyxVQUFVLEdBQUdGLE1BQU0sSUFBSUMsZUFBVixHQUE0Qk4scUJBQXFCLENBQUNDLEtBQUQsQ0FBakQsR0FBMkQsRUFBOUU7QUFDQSxNQUFNTyxNQUFNLEdBQUdMLGdCQUFnQixDQUFDRixLQUFELENBQS9CO0FBRUEscUVBQytDSSxNQUFNLEdBQUcsd0NBQUgsR0FBOEMsRUFEbkcsd0JBRU1HLE1BRk4scUJBR01ELFVBSE47QUFNRDtBQUVEOzs7Ozs7Ozs7QUFPQSxTQUFTRSxlQUFULENBQXlCQyxRQUF6QixFQUFtQztBQUNqQyxNQUFJQSxRQUFRLENBQUNDLE1BQVQsS0FBb0IsQ0FBeEIsRUFBMkI7QUFDekIsV0FBTyxFQUFQO0FBQ0Q7O0FBRUQsNERBQWlERCxRQUFqRDtBQUNEO0FBRUQ7Ozs7Ozs7OztBQU9BLFNBQVNFLGNBQVQsQ0FBd0JDLE9BQXhCLEVBQWlDO0FBQy9CLE1BQU1MLE1BQU0sR0FBR0osWUFBWSxDQUFDO0FBQzFCSCxTQUFLLEVBQUVZLE9BQU8sQ0FBQ1osS0FEVztBQUUxQkksVUFBTSxFQUFFUSxPQUFPLENBQUNDLE9BRlU7QUFHMUJSLG1CQUFlLEVBQUVPLE9BQU8sQ0FBQ0U7QUFIQyxHQUFELENBQTNCO0FBS0EsTUFBTUMsU0FBUyxHQUFHUCxlQUFlLENBQUNJLE9BQU8sQ0FBQ0gsUUFBVCxDQUFqQztBQUVBLHFJQUdRRyxPQUFPLENBQUMzQixLQUhoQixvQ0FLTXNCLE1BTE4scUJBTU1RLFNBTk47QUFTRDtBQUVEOzs7Ozs7Ozs7QUFPQSxTQUFTQyxZQUFULENBQXNCQyxLQUF0QixFQUE2QjtBQUMzQiw4RUFFTUEsS0FGTjtBQUtEO0FBRUQ7Ozs7Ozs7Ozs7QUFRQSxTQUFTQyxXQUFULENBQXFCTixPQUFyQixFQUE4Qk8sWUFBOUIsRUFBNEM7QUFDMUMsTUFBTUMsTUFBTSxHQUFHRCxZQUFZLEdBQUdILFlBQVksQ0FBQ0osT0FBTyxDQUFDSyxLQUFULENBQWYsR0FBaUMsRUFBNUQ7QUFDQSxNQUFNSSxRQUFRLEdBQUdWLGNBQWMsQ0FBQ0MsT0FBRCxDQUEvQjtBQUVBLDZGQUNxRUEsT0FBTyxDQUFDNUIsR0FEN0Usd0JBRU1vQyxNQUZOLHFCQUdNQyxRQUhOO0FBTUQ7QUFFRDs7Ozs7Ozs7O0FBT0EsU0FBU0MsY0FBVCxDQUF3QmhDLEtBQXhCLEVBQStCO0FBQUEsTUFDckJpQyxRQURxQixHQUNNakMsS0FETixDQUNyQmlDLFFBRHFCO0FBQUEsTUFDWEosWUFEVyxHQUNNN0IsS0FETixDQUNYNkIsWUFEVztBQUU3QixNQUFNSyxZQUFZLEdBQUdELFFBQVEsQ0FBQzdCLEdBQVQsQ0FBYSxVQUFBa0IsT0FBTztBQUFBLFdBQUlNLFdBQVcsQ0FBQ04sT0FBRCxFQUFVTyxZQUFWLENBQWY7QUFBQSxHQUFwQixDQUFyQjtBQUVBLFNBQU94QixDQUFDLHNFQUVGNkIsWUFBWSxDQUFDNUIsSUFBYixDQUFrQixFQUFsQixDQUZFLHNCQUFSO0FBS0Q7QUFFRDs7Ozs7Ozs7O0FBT0EsU0FBUzZCLGdCQUFULENBQTBCbkMsS0FBMUIsRUFBaUM7QUFBQSxNQUN2QkgsT0FEdUIsR0FDSkcsS0FESSxDQUN2QkgsT0FEdUI7QUFBQSxNQUNkdUMsS0FEYyxHQUNKcEMsS0FESSxDQUNkb0MsS0FEYztBQUcvQixTQUFPL0IsQ0FBQyx1SEFHQVIsT0FBTyxDQUFDd0MsbUJBQVIsQ0FBNEIxQyxLQUE1QixDQUFrQzJDLE9BQWxDLENBQTBDLFNBQTFDLEVBQXFERixLQUFyRCxDQUhBLCtDQU1BdkMsT0FBTyxDQUFDd0MsbUJBQVIsQ0FBNEJFLE9BTjVCLDJGQVMwQ0MsTUFBTSxDQUFDQyxLQUFQLENBQWFDLE1BQWIsQ0FBb0JDLDJCQVQ5RCw0QkFVRTlDLE9BQU8sQ0FBQytDLGlCQVZWLGdEQUFSO0FBZUQ7QUFFRDs7Ozs7Ozs7O0FBT0EsU0FBU0MsYUFBVCxDQUF1QjdDLEtBQXZCLEVBQThCO0FBQUEsTUFDcEJILE9BRG9CLEdBQ0tHLEtBREwsQ0FDcEJILE9BRG9CO0FBQUEsTUFDWHVDLEtBRFcsR0FDS3BDLEtBREwsQ0FDWG9DLEtBRFc7QUFBQSxNQUNKVSxJQURJLEdBQ0s5QyxLQURMLENBQ0o4QyxJQURJO0FBRzVCLFNBQU96QyxDQUFDLDRHQUV3Q21DLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhQyxNQUFiLENBQW9CSyxVQUY1RCxnQkFFNEVYLEtBRjVFLG1CQUUwRlUsSUFGMUYsMEJBR0FqRCxPQUFPLENBQUNtRCxnQkFIUixrQ0FBUjtBQU9EIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvY29tcG9uZW50cy9zZWFyY2gvTGl2ZVNlYXJjaFRlbXBsYXRlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2hvd3MgYSBsaXN0IGl0ZW0gY29tcG9uZW50IHdoZW4gcmVzdWx0IGlzIGFuIGFydGljbGUsIG9yIGEgcGFnZVxuICpcbiAqIEBwYXJhbSBjb250ZW50SXRlbVxuICogQHJldHVybnMge3N0cmluZ31cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBDb250ZW50SXRlbShjb250ZW50SXRlbSkge1xuICByZXR1cm4gYFxuICA8bGkgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tY29udGVudC1pdGVtXCI+XG4gICAgPGEgaHJlZj1cIiR7Y29udGVudEl0ZW0udXJsfVwiPiR7Y29udGVudEl0ZW0udGl0bGV9PC9hPlxuICA8L2xpPlxuICBgO1xufVxuXG4vKipcbiAqIFNob3dzIGEgaGVhZGVyIGZvciB0aGUgYXJ0aWNsZSBhbmQgcGFnZSByZXN1bHRzXG4gKlxuICogQHBhcmFtIGNvbnRleHRcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gQ29udGVudFJlc3VsdHNIZWFkZXIoY29udGV4dCkge1xuICByZXR1cm4gYFxuICAgIDxoNSBjbGFzcz1cInNlYXJjaC1mbHlkb3duLS1jb250ZW50LXRpdGxlXCI+XG4gICAgICAke2NvbnRleHQuY29udGVudF9yZXN1bHRzLnRpdGxlfVxuICAgIDwvaDU+XG4gIGA7XG59XG5cbi8qKlxuICogU2hvd3MgYSBsaXN0IG9mIHJlc3VsdHMgZnJvbSBhcnRpY2xlcywgb3IgcGFnZXNcbiAqXG4gKiBAcGFyYW0gcHJvcHNcbiAqIEByZXR1cm5zIHtqUXVlcnl8SFRNTEVsZW1lbnR9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gQ29udGVudFJlc3VsdHMocHJvcHMpIHtcbiAgY29uc3QgeyBjb250ZW50LCBjb250ZXh0IH0gPSBwcm9wcztcbiAgY29uc3QgJHRpdGxlID0gQ29udGVudFJlc3VsdHNIZWFkZXIoY29udGV4dCk7XG4gIGNvbnN0IGNvbnRlbnRJdGVtcyA9IGNvbnRlbnQubWFwKGNvbnRlbnRJdGVtID0+IENvbnRlbnRJdGVtKGNvbnRlbnRJdGVtKSk7XG5cbiAgcmV0dXJuICQoYFxuICAgIDxkaXYgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tY29udGVudC1pdGVtc1wiPlxuICAgICAgJHskdGl0bGV9XG4gICAgICA8dWwgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tY29udGVudC1pdGVtcy1saXN0XCI+XG4gICAgICAgICR7Y29udGVudEl0ZW1zLmpvaW4oJycpfVxuICAgICAgPC91bD5cbiAgICA8L2Rpdj5cbiAgYCk7XG59XG5cbi8qKlxuICogU2hvd3MgYSBtZXNzYWdlIHdoZW4gdGhlcmUgYXJlIG5vIGFydGljbGUgb3IgcGFnZSByZXN1bHRzXG4gKlxuICogQHBhcmFtIHByb3BzXG4gKiBAcmV0dXJucyB7alF1ZXJ5fEhUTUxFbGVtZW50fVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIENvbnRlbnROb1Jlc3VsdHMocHJvcHMpIHtcbiAgY29uc3QgeyBjb250ZXh0IH0gPSBwcm9wcztcbiAgY29uc3QgJHRpdGxlID0gQ29udGVudFJlc3VsdHNIZWFkZXIoY29udGV4dCk7XG5cbiAgcmV0dXJuICQoYFxuICAgIDxkaXYgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tY29udGVudC1pdGVtc1wiPlxuICAgICAgJHskdGl0bGV9XG4gICAgICA8cCBjbGFzcz1cInNlYXJjaC1mbHlkb3duLS1jb250ZW50LWl0ZW1zLW5vbmVcIj5cbiAgICAgICAgJHtjb250ZXh0LmNvbnRlbnRfcmVzdWx0cy5ub19yZXN1bHRzfVxuICAgICAgPC9wPlxuICAgIDwvZGl2PlxuICBgKTtcbn1cblxuLyoqXG4gKiBTaG93cyB0aGUgcHJvZHVjdCdzIGNvbXBhcmVfYXRfcHJpY2VcbiAqXG4gKiBAcGFyYW0gcHJpY2VcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gUHJvZHVjdFByaWNlQ29tcGFyZUF0KHByaWNlKSB7XG4gIHJldHVybiBgXG4gIDxzcGFuIGNsYXNzPVwic2VhcmNoLWZseWRvd24tLXByb2R1Y3QtcHJpY2UtLWNvbXBhcmUtYXRcIj5cbiAgICA8c3BhbiBjbGFzcz1cIm1vbmV5XCI+JHtwcmljZS5jb21wYXJlX2F0X3ByaWNlfTwvc3Bhbj5cbiAgPC9zcGFuPlxuICBgO1xufVxuXG4vKipcbiAqIFNob3dzIHRoZSBwcm9kdWN0J3MgcHJpY2VcbiAqXG4gKiBAcGFyYW0gcHJpY2VcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gUHJvZHVjdFByaWNlTWFpbihwcmljZSkge1xuICByZXR1cm4gYFxuICA8c3BhbiBjbGFzcz1cInNlYXJjaC1mbHlkb3duLS1wcm9kdWN0LXByaWNlLS1tYWluXCI+XG4gICAgPHNwYW4gY2xhc3M9XCJtb25leVwiPiR7cHJpY2UucHJpY2V9PC9zcGFuPlxuICA8L3NwYW4+XG4gIGA7XG59XG5cbi8qKlxuICogU2hvd3MgdGhlIHByb2R1Y3QncyBwcmljZXNcbiAqXG4gKiBAcGFyYW0gcHJvcHNcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gUHJvZHVjdFByaWNlKHByb3BzKSB7XG4gIGNvbnN0IHsgcHJpY2UsIG9uU2FsZSwgY29uc2lzdGVudFNhdmVkIH0gPSBwcm9wcztcbiAgY29uc3QgJGNvbXBhcmVBdCA9IG9uU2FsZSAmJiBjb25zaXN0ZW50U2F2ZWQgPyBQcm9kdWN0UHJpY2VDb21wYXJlQXQocHJpY2UpIDogJyc7XG4gIGNvbnN0ICRwcmljZSA9IFByb2R1Y3RQcmljZU1haW4ocHJpY2UpO1xuXG4gIHJldHVybiBgXG4gICAgPHNwYW4gY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tcHJvZHVjdC1wcmljZSAke29uU2FsZSA/ICdzZWFyY2gtZmx5ZG93bi0tcHJvZHVjdC1wcmljZS1oYXMtc2FsZScgOiAnJ31cIj5cbiAgICAgICR7JHByaWNlfVxuICAgICAgJHskY29tcGFyZUF0fVxuICAgIDwvc3Bhbj5cbiAgYDtcbn1cblxuLyoqXG4gKiBTaG93cyB0ZXh0IGluZGljYXRpbmcgdGhlIG51bWJlciBvZiBwcm9kdWN0IGNvbG91cnNcbiAqXG4gKiBAcGFyYW0gc3dhdGNoZXNcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gUHJvZHVjdFN3YXRjaGVzKHN3YXRjaGVzKSB7XG4gIGlmIChzd2F0Y2hlcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICByZXR1cm4gYDxzcGFuIGNsYXNzPVwic2VhcmNoLWZseWRvd24tLXN3YXRjaGVzXCI+JHtzd2F0Y2hlc308L3NwYW4+YDtcbn1cblxuLyoqXG4gKiBTaG93cyBhIHByb2R1Y3QncyBtYWluIGNvbnRlbnRcbiAqXG4gKiBAcGFyYW0gcHJvZHVjdFxuICogQHJldHVybnMge3N0cmluZ31cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBQcm9kdWN0Q29udGVudChwcm9kdWN0KSB7XG4gIGNvbnN0ICRwcmljZSA9IFByb2R1Y3RQcmljZSh7XG4gICAgcHJpY2U6IHByb2R1Y3QucHJpY2UsXG4gICAgb25TYWxlOiBwcm9kdWN0Lm9uX3NhbGUsXG4gICAgY29uc2lzdGVudFNhdmVkOiBwcm9kdWN0LmNvbnNpc3RlbnRfc2F2ZWQsXG4gIH0pO1xuICBjb25zdCAkc3dhdGNoZXMgPSBQcm9kdWN0U3dhdGNoZXMocHJvZHVjdC5zd2F0Y2hlcyk7XG5cbiAgcmV0dXJuIGBcbiAgICA8ZGl2IGNsYXNzPVwic2VhcmNoLWZseWRvd24tLXByb2R1Y3QtdGV4dFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tcHJvZHVjdC10aXRsZVwiPlxuICAgICAgICAke3Byb2R1Y3QudGl0bGV9XG4gICAgICA8L3NwYW4+XG4gICAgICAkeyRwcmljZX1cbiAgICAgICR7JHN3YXRjaGVzfVxuICAgIDwvZGl2PlxuICBgO1xufVxuXG4vKipcbiAqIFNob3dzIGEgcHJvZHVjdCdzIGltYWdlXG4gKlxuICogQHBhcmFtIGltYWdlXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFByb2R1Y3RJbWFnZShpbWFnZSkge1xuICByZXR1cm4gYFxuICAgIDxkaXYgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tcHJvZHVjdC1pbWFnZVwiPlxuICAgICAgJHtpbWFnZX1cbiAgICA8L2Rpdj5cbiAgYDtcbn1cblxuLyoqXG4gKiBTaG93cyBhIHByb2R1Y3QgbGlzdCBpdGVtIGNvbXBvbmVudCB3aGVuIHJlc3VsdCBpcyBhIHByb2R1Y3RcbiAqXG4gKiBAcGFyYW0gcHJvZHVjdFxuICogQHBhcmFtIGVuYWJsZUltYWdlc1xuICogQHJldHVybnMge3N0cmluZ31cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBQcm9kdWN0SXRlbShwcm9kdWN0LCBlbmFibGVJbWFnZXMpIHtcbiAgY29uc3QgJGltYWdlID0gZW5hYmxlSW1hZ2VzID8gUHJvZHVjdEltYWdlKHByb2R1Y3QuaW1hZ2UpIDogJyc7XG4gIGNvbnN0ICRjb250ZW50ID0gUHJvZHVjdENvbnRlbnQocHJvZHVjdCk7XG5cbiAgcmV0dXJuIGBcbiAgICA8YSBjbGFzcz1cInNlYXJjaC1mbHlkb3duLS1wcm9kdWN0IHNlYXJjaC1mbHlkb3duLS1wcm9kdWN0XCIgaHJlZj1cIiR7cHJvZHVjdC51cmx9XCI+XG4gICAgICAkeyRpbWFnZX1cbiAgICAgICR7JGNvbnRlbnR9XG4gICAgPC9hPlxuICBgO1xufVxuXG4vKipcbiAqIFNob3dzIGEgbGlzdCBvZiBwcm9kdWN0IHJlc3VsdHNcbiAqXG4gKiBAcGFyYW0gcHJvcHNcbiAqIEByZXR1cm5zIHtqUXVlcnl8SFRNTEVsZW1lbnR9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gUHJvZHVjdFJlc3VsdHMocHJvcHMpIHtcbiAgY29uc3QgeyBwcm9kdWN0cywgZW5hYmxlSW1hZ2VzIH0gPSBwcm9wcztcbiAgY29uc3QgcHJvZHVjdEl0ZW1zID0gcHJvZHVjdHMubWFwKHByb2R1Y3QgPT4gUHJvZHVjdEl0ZW0ocHJvZHVjdCwgZW5hYmxlSW1hZ2VzKSk7XG5cbiAgcmV0dXJuICQoYFxuICAgIDxkaXYgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tcHJvZHVjdC1pdGVtc1wiPlxuICAgICAgJHtwcm9kdWN0SXRlbXMuam9pbignJyl9XG4gICAgPC9kaXY+XG4gIGApO1xufVxuXG4vKipcbiAqIFNob3cgYSBtZXNzYWdlIHdoZW4gbm8gcHJvZHVjdCByZXN1bHRzIGFyZSBmb3VuZFxuICpcbiAqIEBwYXJhbSBwcm9wc1xuICogQHJldHVybnMge2pRdWVyeXxIVE1MRWxlbWVudH1cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBQcm9kdWN0Tm9SZXN1bHRzKHByb3BzKSB7XG4gIGNvbnN0IHsgY29udGV4dCwgdGVybXMgfSA9IHByb3BzO1xuXG4gIHJldHVybiAkKGBcbiAgICA8ZGl2IGNsYXNzPVwic2VhcmNoLWZseWRvd24tLXByb2R1Y3QtaXRlbXMtLW5vbmVcIiBkYXRhLWxpdmUtc2VhcmNoLW5vLXByb2R1Y3RzPlxuICAgICAgPGg1PlxuICAgICAgICAke2NvbnRleHQubm9fcmVzdWx0c19wcm9kdWN0cy50aXRsZS5yZXBsYWNlKCcqdGVybXMqJywgdGVybXMpfVxuICAgICAgPC9oNT5cbiAgICAgIDxwPlxuICAgICAgICAke2NvbnRleHQubm9fcmVzdWx0c19wcm9kdWN0cy5tZXNzYWdlfVxuICAgICAgPC9wPlxuICAgICAgPHA+XG4gICAgICAgIDxhIGNsYXNzPVwic2VhcmNoLWZseWRvd24tLWNvbnRpbnVlXCIgaHJlZj1cIiR7d2luZG93LlRoZW1lLnJvdXRlcy5hbGxfcHJvZHVjdHNfY29sbGVjdGlvbl91cmx9XCI+XG4gICAgICAgICAgJHtjb250ZXh0LnZpZXdfYWxsX3Byb2R1Y3RzfVxuICAgICAgICA8L2E+XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIGApO1xufVxuXG4vKipcbiAqIFNob3cncyB0aGUgUmVzdWx0cyBmb290ZXIsIGRpcmVjdGluZyBjdXN0b21lcnMgdG8gYWxsIHByb2R1Y3RzXG4gKlxuICogQHBhcmFtIHByb3BzXG4gKiBAcmV0dXJucyB7alF1ZXJ5fEhUTUxFbGVtZW50fVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFJlc3VsdHNGb290ZXIocHJvcHMpIHtcbiAgY29uc3QgeyBjb250ZXh0LCB0ZXJtcywgdHlwZSB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuICQoYFxuICAgIDxkaXYgY2xhc3M9XCJzZWFyY2gtZmx5ZG93bi0tZm9vdGVyXCI+XG4gICAgICA8YSBjbGFzcz1cInNlYXJjaC1mbHlkb3duLS1jb250aW51ZVwiIGhyZWY9XCIke3dpbmRvdy5UaGVtZS5yb3V0ZXMuc2VhcmNoX3VybH0/cT0ke3Rlcm1zfSZ0eXBlPSR7dHlwZX1cIj5cbiAgICAgICAgJHtjb250ZXh0LnZpZXdfYWxsX3Jlc3VsdHN9XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIGApO1xufVxuXG5leHBvcnQge1xuICBDb250ZW50UmVzdWx0cyxcbiAgQ29udGVudE5vUmVzdWx0cyxcbiAgUHJvZHVjdFJlc3VsdHMsXG4gIFByb2R1Y3ROb1Jlc3VsdHMsXG4gIFJlc3VsdHNGb290ZXIsXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/search/LiveSearchTemplates.js\n");

/***/ }),

/***/ "./source/scripts/components/search/SearchForm.js":
/*!********************************************************!*\
  !*** ./source/scripts/components/search/SearchForm.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SearchForm; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar SearchForm = /*#__PURE__*/function () {\n  function SearchForm(container) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SearchForm);\n\n    this.$body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n    this.$container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n    this.$form = this.$container.find('[data-live-search-form]');\n    this.isLiveSearch = options.liveSearch ? options.liveSearch : false;\n    this.submitHandler = this.submitHandler.bind(this);\n    this.events = [this.$form.on('submit.search-form', this.submitHandler)];\n  }\n\n  _createClass(SearchForm, [{\n    key: \"unload\",\n    value: function unload() {\n      this.events.forEach(function ($el) {\n        return $el.off('.search-form');\n      });\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler(event) {\n      event.preventDefault();\n      var $form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).clone();\n      var $terms = $form.find('[name=q]');\n      $form.css({\n        position: 'absolute',\n        left: -1000,\n        bottom: -1000,\n        visibility: 'hidden'\n      });\n      var terms = $terms.val();\n\n      if (this.isLiveSearch && !terms) {\n        return;\n      } // Adds `*` after each word in search terms, doesn't add to last word\n\n\n      if (terms.indexOf(' ') > 0) {\n        terms = terms.split(' ').join('* ').trim();\n      } // Adds `*` at the end of the search terms\n\n\n      terms = \"\".concat(terms, \"*\"); // Update value\n\n      $terms.val(terms); // Forms must be in the browser context in order to submit\n\n      this.$body.append($form);\n      $form.submit();\n    }\n  }]);\n\n  return SearchForm;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC9TZWFyY2hGb3JtLmpzPzM5MGQiXSwibmFtZXMiOlsiU2VhcmNoRm9ybSIsImNvbnRhaW5lciIsIm9wdGlvbnMiLCIkYm9keSIsIiQiLCIkY29udGFpbmVyIiwiJGZvcm0iLCJmaW5kIiwiaXNMaXZlU2VhcmNoIiwibGl2ZVNlYXJjaCIsInN1Ym1pdEhhbmRsZXIiLCJiaW5kIiwiZXZlbnRzIiwib24iLCJmb3JFYWNoIiwiJGVsIiwib2ZmIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImN1cnJlbnRUYXJnZXQiLCJjbG9uZSIsIiR0ZXJtcyIsImNzcyIsInBvc2l0aW9uIiwibGVmdCIsImJvdHRvbSIsInZpc2liaWxpdHkiLCJ0ZXJtcyIsInZhbCIsImluZGV4T2YiLCJzcGxpdCIsImpvaW4iLCJ0cmltIiwiYXBwZW5kIiwic3VibWl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0lBRXFCQSxVO0FBQ25CLHNCQUFZQyxTQUFaLEVBQXFDO0FBQUEsUUFBZEMsT0FBYyx1RUFBSixFQUFJOztBQUFBOztBQUNuQyxTQUFLQyxLQUFMLEdBQWFDLDZDQUFDLENBQUMsTUFBRCxDQUFkO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQkQsNkNBQUMsQ0FBQ0gsU0FBRCxDQUFuQjtBQUNBLFNBQUtLLEtBQUwsR0FBYSxLQUFLRCxVQUFMLENBQWdCRSxJQUFoQixDQUFxQix5QkFBckIsQ0FBYjtBQUNBLFNBQUtDLFlBQUwsR0FBb0JOLE9BQU8sQ0FBQ08sVUFBUixHQUFxQlAsT0FBTyxDQUFDTyxVQUE3QixHQUEwQyxLQUE5RDtBQUVBLFNBQUtDLGFBQUwsR0FBcUIsS0FBS0EsYUFBTCxDQUFtQkMsSUFBbkIsQ0FBd0IsSUFBeEIsQ0FBckI7QUFFQSxTQUFLQyxNQUFMLEdBQWMsQ0FDWixLQUFLTixLQUFMLENBQVdPLEVBQVgsQ0FBYyxvQkFBZCxFQUFvQyxLQUFLSCxhQUF6QyxDQURZLENBQWQ7QUFHRDs7Ozs2QkFFUTtBQUNQLFdBQUtFLE1BQUwsQ0FBWUUsT0FBWixDQUFvQixVQUFBQyxHQUFHO0FBQUEsZUFBSUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixDQUFKO0FBQUEsT0FBdkI7QUFDRDs7O2tDQUVhQyxLLEVBQU87QUFDbkJBLFdBQUssQ0FBQ0MsY0FBTjtBQUVBLFVBQU1aLEtBQUssR0FBR0YsNkNBQUMsQ0FBQ2EsS0FBSyxDQUFDRSxhQUFQLENBQUQsQ0FBdUJDLEtBQXZCLEVBQWQ7QUFDQSxVQUFNQyxNQUFNLEdBQUdmLEtBQUssQ0FBQ0MsSUFBTixDQUFXLFVBQVgsQ0FBZjtBQUVBRCxXQUFLLENBQUNnQixHQUFOLENBQVU7QUFDUkMsZ0JBQVEsRUFBRSxVQURGO0FBRVJDLFlBQUksRUFBRSxDQUFDLElBRkM7QUFHUkMsY0FBTSxFQUFFLENBQUMsSUFIRDtBQUlSQyxrQkFBVSxFQUFFO0FBSkosT0FBVjtBQU9BLFVBQUlDLEtBQUssR0FBR04sTUFBTSxDQUFDTyxHQUFQLEVBQVo7O0FBRUEsVUFBSSxLQUFLcEIsWUFBTCxJQUFxQixDQUFDbUIsS0FBMUIsRUFBaUM7QUFDL0I7QUFDRCxPQWpCa0IsQ0FtQm5COzs7QUFDQSxVQUFJQSxLQUFLLENBQUNFLE9BQU4sQ0FBYyxHQUFkLElBQXFCLENBQXpCLEVBQTRCO0FBQzFCRixhQUFLLEdBQUdBLEtBQUssQ0FBQ0csS0FBTixDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCLElBQXRCLEVBQTRCQyxJQUE1QixFQUFSO0FBQ0QsT0F0QmtCLENBd0JuQjs7O0FBQ0FMLFdBQUssYUFBTUEsS0FBTixNQUFMLENBekJtQixDQTJCbkI7O0FBQ0FOLFlBQU0sQ0FBQ08sR0FBUCxDQUFXRCxLQUFYLEVBNUJtQixDQThCbkI7O0FBQ0EsV0FBS3hCLEtBQUwsQ0FBVzhCLE1BQVgsQ0FBa0IzQixLQUFsQjtBQUNBQSxXQUFLLENBQUM0QixNQUFOO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9jb21wb25lbnRzL3NlYXJjaC9TZWFyY2hGb3JtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VhcmNoRm9ybSB7XG4gIGNvbnN0cnVjdG9yKGNvbnRhaW5lciwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy4kYm9keSA9ICQoJ2JvZHknKTtcbiAgICB0aGlzLiRjb250YWluZXIgPSAkKGNvbnRhaW5lcik7XG4gICAgdGhpcy4kZm9ybSA9IHRoaXMuJGNvbnRhaW5lci5maW5kKCdbZGF0YS1saXZlLXNlYXJjaC1mb3JtXScpO1xuICAgIHRoaXMuaXNMaXZlU2VhcmNoID0gb3B0aW9ucy5saXZlU2VhcmNoID8gb3B0aW9ucy5saXZlU2VhcmNoIDogZmFsc2U7XG5cbiAgICB0aGlzLnN1Ym1pdEhhbmRsZXIgPSB0aGlzLnN1Ym1pdEhhbmRsZXIuYmluZCh0aGlzKTtcblxuICAgIHRoaXMuZXZlbnRzID0gW1xuICAgICAgdGhpcy4kZm9ybS5vbignc3VibWl0LnNlYXJjaC1mb3JtJywgdGhpcy5zdWJtaXRIYW5kbGVyKSxcbiAgICBdO1xuICB9XG5cbiAgdW5sb2FkKCkge1xuICAgIHRoaXMuZXZlbnRzLmZvckVhY2goJGVsID0+ICRlbC5vZmYoJy5zZWFyY2gtZm9ybScpKTtcbiAgfVxuXG4gIHN1Ym1pdEhhbmRsZXIoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgJGZvcm0gPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmNsb25lKCk7XG4gICAgY29uc3QgJHRlcm1zID0gJGZvcm0uZmluZCgnW25hbWU9cV0nKTtcblxuICAgICRmb3JtLmNzcyh7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIGxlZnQ6IC0xMDAwLFxuICAgICAgYm90dG9tOiAtMTAwMCxcbiAgICAgIHZpc2liaWxpdHk6ICdoaWRkZW4nLFxuICAgIH0pO1xuXG4gICAgbGV0IHRlcm1zID0gJHRlcm1zLnZhbCgpO1xuXG4gICAgaWYgKHRoaXMuaXNMaXZlU2VhcmNoICYmICF0ZXJtcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEFkZHMgYCpgIGFmdGVyIGVhY2ggd29yZCBpbiBzZWFyY2ggdGVybXMsIGRvZXNuJ3QgYWRkIHRvIGxhc3Qgd29yZFxuICAgIGlmICh0ZXJtcy5pbmRleE9mKCcgJykgPiAwKSB7XG4gICAgICB0ZXJtcyA9IHRlcm1zLnNwbGl0KCcgJykuam9pbignKiAnKS50cmltKCk7XG4gICAgfVxuXG4gICAgLy8gQWRkcyBgKmAgYXQgdGhlIGVuZCBvZiB0aGUgc2VhcmNoIHRlcm1zXG4gICAgdGVybXMgPSBgJHt0ZXJtc30qYDtcblxuICAgIC8vIFVwZGF0ZSB2YWx1ZVxuICAgICR0ZXJtcy52YWwodGVybXMpO1xuXG4gICAgLy8gRm9ybXMgbXVzdCBiZSBpbiB0aGUgYnJvd3NlciBjb250ZXh0IGluIG9yZGVyIHRvIHN1Ym1pdFxuICAgIHRoaXMuJGJvZHkuYXBwZW5kKCRmb3JtKTtcbiAgICAkZm9ybS5zdWJtaXQoKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/components/search/SearchForm.js\n");

/***/ }),

/***/ "./source/scripts/globals/jquery.js":
/*!******************************************!*\
  !*** ./source/scripts/globals/jquery.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n// jQuery plugins expect to find a global `jQuery` object, so we\n// need to attach it to the window.\n//\n// This is in its own file because we have to attach it before any\n// other imports happen, but with ES6 modules, all `import`s have\n// to be at the top.\n\nwindow.jQuery = jquery__WEBPACK_IMPORTED_MODULE_0___default.a;\nwindow.$ = jquery__WEBPACK_IMPORTED_MODULE_0___default.a;\n/* harmony default export */ __webpack_exports__[\"default\"] = (jquery__WEBPACK_IMPORTED_MODULE_0___default.a);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9nbG9iYWxzL2pxdWVyeS5qcz9hMWZmIl0sIm5hbWVzIjpbIndpbmRvdyIsImpRdWVyeSIsIiQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQkMsNkNBQWhCO0FBQ0FGLE1BQU0sQ0FBQ0UsQ0FBUCxHQUFXQSw2Q0FBWDtBQUVlQSw0R0FBZiIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2dsb2JhbHMvanF1ZXJ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8galF1ZXJ5IHBsdWdpbnMgZXhwZWN0IHRvIGZpbmQgYSBnbG9iYWwgYGpRdWVyeWAgb2JqZWN0LCBzbyB3ZVxuLy8gbmVlZCB0byBhdHRhY2ggaXQgdG8gdGhlIHdpbmRvdy5cbi8vXG4vLyBUaGlzIGlzIGluIGl0cyBvd24gZmlsZSBiZWNhdXNlIHdlIGhhdmUgdG8gYXR0YWNoIGl0IGJlZm9yZSBhbnlcbi8vIG90aGVyIGltcG9ydHMgaGFwcGVuLCBidXQgd2l0aCBFUzYgbW9kdWxlcywgYWxsIGBpbXBvcnRgcyBoYXZlXG4vLyB0byBiZSBhdCB0aGUgdG9wLlxuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5Jztcblxud2luZG93LmpRdWVyeSA9ICQ7XG53aW5kb3cuJCA9ICQ7XG5cbmV4cG9ydCBkZWZhdWx0ICQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/globals/jquery.js\n");

/***/ }),

/***/ "./source/scripts/helpers/ContainSwatchTooltips.js":
/*!*********************************************************!*\
  !*** ./source/scripts/helpers/ContainSwatchTooltips.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ContainSwatchTooltips; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction setTooltipOffset(target) {\n  var margin = 10;\n  var _window = window,\n      innerWidth = _window.innerWidth;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      x = _target$getBoundingCl.x,\n      width = _target$getBoundingCl.width;\n\n  var tooltipWidth = parseFloat(window.getComputedStyle(target, ':after').width);\n  var required = tooltipWidth * 0.5;\n  var available = 0;\n  var offset = 0;\n\n  if (x < innerWidth * 0.5) {\n    // Closer to left side of screen\n    available = x + width * 0.5 - margin;\n    offset = required - available;\n  } else {\n    available = innerWidth - x - width * 0.5 - margin;\n    offset = available - required;\n  }\n\n  target.style.setProperty('--swatch-tooltip-offset', \"\".concat(required >= available ? offset : 0, \"px\"));\n}\n\nfunction handleMouseover(_ref) {\n  var target = _ref.target;\n  // We need to check for dataset, because IE11 doesn't support\n  // the dataset property for certain elements like svgs\n  if (target.dataset && !target.dataset.swatchTooltip) return;\n  window.requestAnimationFrame(function () {\n    return setTooltipOffset(target);\n  });\n}\n\nvar ContainSwatchTooltips = /*#__PURE__*/function () {\n  function ContainSwatchTooltips() {\n    _classCallCheck(this, ContainSwatchTooltips);\n\n    window.addEventListener('mouseover', handleMouseover);\n  }\n\n  _createClass(ContainSwatchTooltips, [{\n    key: \"unload\",\n    value: function unload() {\n      window.removeEventListener('mouseover', handleMouseover);\n    }\n  }]);\n\n  return ContainSwatchTooltips;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0NvbnRhaW5Td2F0Y2hUb29sdGlwcy5qcz9mMjIyIl0sIm5hbWVzIjpbInNldFRvb2x0aXBPZmZzZXQiLCJ0YXJnZXQiLCJtYXJnaW4iLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwieCIsIndpZHRoIiwidG9vbHRpcFdpZHRoIiwicGFyc2VGbG9hdCIsImdldENvbXB1dGVkU3R5bGUiLCJyZXF1aXJlZCIsImF2YWlsYWJsZSIsIm9mZnNldCIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJoYW5kbGVNb3VzZW92ZXIiLCJkYXRhc2V0Iiwic3dhdGNoVG9vbHRpcCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIkNvbnRhaW5Td2F0Y2hUb29sdGlwcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLFNBQVNBLGdCQUFULENBQTBCQyxNQUExQixFQUFrQztBQUNoQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQURnQyxnQkFFVEMsTUFGUztBQUFBLE1BRXhCQyxVQUZ3QixXQUV4QkEsVUFGd0I7O0FBQUEsOEJBR1hILE1BQU0sQ0FBQ0kscUJBQVAsRUFIVztBQUFBLE1BR3hCQyxDQUh3Qix5QkFHeEJBLENBSHdCO0FBQUEsTUFHckJDLEtBSHFCLHlCQUdyQkEsS0FIcUI7O0FBSWhDLE1BQU1DLFlBQVksR0FBR0MsVUFBVSxDQUFDTixNQUFNLENBQUNPLGdCQUFQLENBQXdCVCxNQUF4QixFQUFnQyxRQUFoQyxFQUEwQ00sS0FBM0MsQ0FBL0I7QUFFQSxNQUFNSSxRQUFRLEdBQUdILFlBQVksR0FBRyxHQUFoQztBQUNBLE1BQUlJLFNBQVMsR0FBRyxDQUFoQjtBQUNBLE1BQUlDLE1BQU0sR0FBRyxDQUFiOztBQUVBLE1BQUlQLENBQUMsR0FBR0YsVUFBVSxHQUFHLEdBQXJCLEVBQTBCO0FBQ3hCO0FBQ0FRLGFBQVMsR0FBR04sQ0FBQyxHQUFHQyxLQUFLLEdBQUcsR0FBWixHQUFrQkwsTUFBOUI7QUFDQVcsVUFBTSxHQUFHRixRQUFRLEdBQUdDLFNBQXBCO0FBQ0QsR0FKRCxNQUlPO0FBQ0xBLGFBQVMsR0FBR1IsVUFBVSxHQUFHRSxDQUFiLEdBQWlCQyxLQUFLLEdBQUcsR0FBekIsR0FBK0JMLE1BQTNDO0FBQ0FXLFVBQU0sR0FBR0QsU0FBUyxHQUFHRCxRQUFyQjtBQUNEOztBQUVEVixRQUFNLENBQUNhLEtBQVAsQ0FBYUMsV0FBYixDQUF5Qix5QkFBekIsWUFBdURKLFFBQVEsSUFBSUMsU0FBWixHQUF3QkMsTUFBeEIsR0FBaUMsQ0FBeEY7QUFDRDs7QUFFRCxTQUFTRyxlQUFULE9BQXFDO0FBQUEsTUFBVmYsTUFBVSxRQUFWQSxNQUFVO0FBQ25DO0FBQ0E7QUFDQSxNQUFJQSxNQUFNLENBQUNnQixPQUFQLElBQWtCLENBQUNoQixNQUFNLENBQUNnQixPQUFQLENBQWVDLGFBQXRDLEVBQXFEO0FBRXJEZixRQUFNLENBQUNnQixxQkFBUCxDQUE2QjtBQUFBLFdBQU1uQixnQkFBZ0IsQ0FBQ0MsTUFBRCxDQUF0QjtBQUFBLEdBQTdCO0FBQ0Q7O0lBRW9CbUIscUI7QUFDbkIsbUNBQWM7QUFBQTs7QUFDWmpCLFVBQU0sQ0FBQ2tCLGdCQUFQLENBQXdCLFdBQXhCLEVBQXFDTCxlQUFyQztBQUNEOzs7OzZCQUVRO0FBQ1BiLFlBQU0sQ0FBQ21CLG1CQUFQLENBQTJCLFdBQTNCLEVBQXdDTixlQUF4QztBQUNEIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvaGVscGVycy9Db250YWluU3dhdGNoVG9vbHRpcHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzZXRUb29sdGlwT2Zmc2V0KHRhcmdldCkge1xuICBjb25zdCBtYXJnaW4gPSAxMDtcbiAgY29uc3QgeyBpbm5lcldpZHRoIH0gPSB3aW5kb3c7XG4gIGNvbnN0IHsgeCwgd2lkdGggfSA9IHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgdG9vbHRpcFdpZHRoID0gcGFyc2VGbG9hdCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0YXJnZXQsICc6YWZ0ZXInKS53aWR0aCk7XG5cbiAgY29uc3QgcmVxdWlyZWQgPSB0b29sdGlwV2lkdGggKiAwLjU7XG4gIGxldCBhdmFpbGFibGUgPSAwO1xuICBsZXQgb2Zmc2V0ID0gMDtcblxuICBpZiAoeCA8IGlubmVyV2lkdGggKiAwLjUpIHtcbiAgICAvLyBDbG9zZXIgdG8gbGVmdCBzaWRlIG9mIHNjcmVlblxuICAgIGF2YWlsYWJsZSA9IHggKyB3aWR0aCAqIDAuNSAtIG1hcmdpbjtcbiAgICBvZmZzZXQgPSByZXF1aXJlZCAtIGF2YWlsYWJsZTtcbiAgfSBlbHNlIHtcbiAgICBhdmFpbGFibGUgPSBpbm5lcldpZHRoIC0geCAtIHdpZHRoICogMC41IC0gbWFyZ2luO1xuICAgIG9mZnNldCA9IGF2YWlsYWJsZSAtIHJlcXVpcmVkO1xuICB9XG5cbiAgdGFyZ2V0LnN0eWxlLnNldFByb3BlcnR5KCctLXN3YXRjaC10b29sdGlwLW9mZnNldCcsIGAke3JlcXVpcmVkID49IGF2YWlsYWJsZSA/IG9mZnNldCA6IDB9cHhgKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTW91c2VvdmVyKHsgdGFyZ2V0IH0pIHtcbiAgLy8gV2UgbmVlZCB0byBjaGVjayBmb3IgZGF0YXNldCwgYmVjYXVzZSBJRTExIGRvZXNuJ3Qgc3VwcG9ydFxuICAvLyB0aGUgZGF0YXNldCBwcm9wZXJ0eSBmb3IgY2VydGFpbiBlbGVtZW50cyBsaWtlIHN2Z3NcbiAgaWYgKHRhcmdldC5kYXRhc2V0ICYmICF0YXJnZXQuZGF0YXNldC5zd2F0Y2hUb29sdGlwKSByZXR1cm47XG5cbiAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiBzZXRUb29sdGlwT2Zmc2V0KHRhcmdldCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250YWluU3dhdGNoVG9vbHRpcHMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgaGFuZGxlTW91c2VvdmVyKTtcbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgaGFuZGxlTW91c2VvdmVyKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/helpers/ContainSwatchTooltips.js\n");

/***/ }),

/***/ "./source/scripts/helpers/FlickityTouchFix.js":
/*!****************************************************!*\
  !*** ./source/scripts/helpers/FlickityTouchFix.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// This is a helper class to fix a touch issue that came up in flickity\n// on iOS devices as of version 13. It should smooth out some of the scroll\n// and swipe issues that flickity is having on that version of iOS.\nvar flickityTouchFix = function flickityTouchFix() {\n  var touchingSlider = false;\n  var touchStartCoordsX = 0;\n\n  var onTouchStart = function onTouchStart(e) {\n    if (e.target.closest && e.target.closest('.flickity-slider')) {\n      touchingSlider = true;\n      touchStartCoordsX = e.touches[0].pageX;\n    } else {\n      touchingSlider = false;\n    }\n  };\n\n  var onTouchMove = function onTouchMove(e) {\n    if (!(touchingSlider && e.cancelable)) {\n      return;\n    }\n\n    if (Math.abs(e.touches[0].pageX - touchStartCoordsX) > 10) {\n      e.preventDefault();\n    }\n  };\n\n  document.body.addEventListener('touchstart', onTouchStart);\n  document.body.addEventListener('touchmove', onTouchMove, {\n    passive: false\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (flickityTouchFix);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0ZsaWNraXR5VG91Y2hGaXguanM/OWY1OSJdLCJuYW1lcyI6WyJmbGlja2l0eVRvdWNoRml4IiwidG91Y2hpbmdTbGlkZXIiLCJ0b3VjaFN0YXJ0Q29vcmRzWCIsIm9uVG91Y2hTdGFydCIsImUiLCJ0YXJnZXQiLCJjbG9zZXN0IiwidG91Y2hlcyIsInBhZ2VYIiwib25Ub3VjaE1vdmUiLCJjYW5jZWxhYmxlIiwiTWF0aCIsImFicyIsInByZXZlbnREZWZhdWx0IiwiZG9jdW1lbnQiLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhc3NpdmUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixHQUFNO0FBQzdCLE1BQUlDLGNBQWMsR0FBRyxLQUFyQjtBQUNBLE1BQUlDLGlCQUFpQixHQUFHLENBQXhCOztBQUVBLE1BQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUFDLENBQUMsRUFBSTtBQUN4QixRQUFJQSxDQUFDLENBQUNDLE1BQUYsQ0FBU0MsT0FBVCxJQUFvQkYsQ0FBQyxDQUFDQyxNQUFGLENBQVNDLE9BQVQsQ0FBaUIsa0JBQWpCLENBQXhCLEVBQThEO0FBQzVETCxvQkFBYyxHQUFHLElBQWpCO0FBQ0FDLHVCQUFpQixHQUFHRSxDQUFDLENBQUNHLE9BQUYsQ0FBVSxDQUFWLEVBQWFDLEtBQWpDO0FBQ0QsS0FIRCxNQUdPO0FBQ0xQLG9CQUFjLEdBQUcsS0FBakI7QUFDRDtBQUNGLEdBUEQ7O0FBU0EsTUFBTVEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQUwsQ0FBQyxFQUFJO0FBQ3ZCLFFBQUksRUFBRUgsY0FBYyxJQUFJRyxDQUFDLENBQUNNLFVBQXRCLENBQUosRUFBdUM7QUFDckM7QUFDRDs7QUFFRCxRQUFJQyxJQUFJLENBQUNDLEdBQUwsQ0FBU1IsQ0FBQyxDQUFDRyxPQUFGLENBQVUsQ0FBVixFQUFhQyxLQUFiLEdBQXFCTixpQkFBOUIsSUFBbUQsRUFBdkQsRUFBMkQ7QUFDekRFLE9BQUMsQ0FBQ1MsY0FBRjtBQUNEO0FBQ0YsR0FSRDs7QUFVQUMsVUFBUSxDQUFDQyxJQUFULENBQWNDLGdCQUFkLENBQStCLFlBQS9CLEVBQTZDYixZQUE3QztBQUNBVyxVQUFRLENBQUNDLElBQVQsQ0FBY0MsZ0JBQWQsQ0FBK0IsV0FBL0IsRUFBNENQLFdBQTVDLEVBQXlEO0FBQUVRLFdBQU8sRUFBRTtBQUFYLEdBQXpEO0FBQ0QsQ0F6QkQ7O0FBMkJlakIsK0VBQWYiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0ZsaWNraXR5VG91Y2hGaXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGlzIGEgaGVscGVyIGNsYXNzIHRvIGZpeCBhIHRvdWNoIGlzc3VlIHRoYXQgY2FtZSB1cCBpbiBmbGlja2l0eVxuLy8gb24gaU9TIGRldmljZXMgYXMgb2YgdmVyc2lvbiAxMy4gSXQgc2hvdWxkIHNtb290aCBvdXQgc29tZSBvZiB0aGUgc2Nyb2xsXG4vLyBhbmQgc3dpcGUgaXNzdWVzIHRoYXQgZmxpY2tpdHkgaXMgaGF2aW5nIG9uIHRoYXQgdmVyc2lvbiBvZiBpT1MuXG5jb25zdCBmbGlja2l0eVRvdWNoRml4ID0gKCkgPT4ge1xuICBsZXQgdG91Y2hpbmdTbGlkZXIgPSBmYWxzZTtcbiAgbGV0IHRvdWNoU3RhcnRDb29yZHNYID0gMDtcblxuICBjb25zdCBvblRvdWNoU3RhcnQgPSBlID0+IHtcbiAgICBpZiAoZS50YXJnZXQuY2xvc2VzdCAmJiBlLnRhcmdldC5jbG9zZXN0KCcuZmxpY2tpdHktc2xpZGVyJykpIHtcbiAgICAgIHRvdWNoaW5nU2xpZGVyID0gdHJ1ZTtcbiAgICAgIHRvdWNoU3RhcnRDb29yZHNYID0gZS50b3VjaGVzWzBdLnBhZ2VYO1xuICAgIH0gZWxzZSB7XG4gICAgICB0b3VjaGluZ1NsaWRlciA9IGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBvblRvdWNoTW92ZSA9IGUgPT4ge1xuICAgIGlmICghKHRvdWNoaW5nU2xpZGVyICYmIGUuY2FuY2VsYWJsZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoTWF0aC5hYnMoZS50b3VjaGVzWzBdLnBhZ2VYIC0gdG91Y2hTdGFydENvb3Jkc1gpID4gMTApIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH07XG5cbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0Jywgb25Ub3VjaFN0YXJ0KTtcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBvblRvdWNoTW92ZSwgeyBwYXNzaXZlOiBmYWxzZSB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZsaWNraXR5VG91Y2hGaXg7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/helpers/FlickityTouchFix.js\n");

/***/ }),

/***/ "./source/scripts/helpers/Images.js":
/*!******************************************!*\
  !*** ./source/scripts/helpers/Images.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Images; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Images = /*#__PURE__*/function () {\n  function Images() {\n    _classCallCheck(this, Images);\n  }\n\n  _createClass(Images, [{\n    key: \"preload\",\n\n    /**\n     * Preloads an image in memory and uses the browsers cache to store it until needed.\n     *\n     * @param {Array} images - A list of image urls\n     * @param {String} size - A shopify image size attribute\n     */\n    value: function preload(images, size) {\n      if (typeof images === 'string') {\n        images = [images];\n      }\n\n      for (var i = 0; i < images.length; i++) {\n        this.loadImage(this.getSizedImageUrl(images[i], size));\n      }\n    }\n    /**\n     * Loads and caches an image in the browsers cache.\n     *\n     * @param {string} path - An image url\n     */\n\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(path) {\n      return new Image().src = path;\n    }\n    /**\n     * Adds a Shopify size attribute to a URL\n     *\n     * @param src\n     * @param size\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getSizedImageUrl\",\n    value: function getSizedImageUrl() {\n      var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var size = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (!size) {\n        return null;\n      }\n\n      if (size === 'master') {\n        return this.removeProtocol(src);\n      }\n\n      var match = src.match(/\\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\\?v=\\d+)?$/i);\n\n      if (match) {\n        var prefix = src.split(match[0]);\n        var suffix = match[0];\n        return this.removeProtocol(\"\".concat(prefix[0], \"_\").concat(size).concat(suffix));\n      } else {\n        console.warn(\"No \".concat(size, \" found for '\").concat(src));\n        return null;\n      }\n    }\n  }, {\n    key: \"removeProtocol\",\n    value: function removeProtocol(path) {\n      return path.replace(/http(s)?:/, '');\n    }\n  }]);\n\n  return Images;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0ltYWdlcy5qcz83MjYyIl0sIm5hbWVzIjpbIkltYWdlcyIsImltYWdlcyIsInNpemUiLCJpIiwibGVuZ3RoIiwibG9hZEltYWdlIiwiZ2V0U2l6ZWRJbWFnZVVybCIsInBhdGgiLCJJbWFnZSIsInNyYyIsInJlbW92ZVByb3RvY29sIiwibWF0Y2giLCJwcmVmaXgiLCJzcGxpdCIsInN1ZmZpeCIsImNvbnNvbGUiLCJ3YXJuIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7SUFBcUJBLE07Ozs7Ozs7O0FBQ25COzs7Ozs7NEJBTVFDLE0sRUFBUUMsSSxFQUFNO0FBQ3BCLFVBQUksT0FBT0QsTUFBUCxLQUFrQixRQUF0QixFQUFnQztBQUM5QkEsY0FBTSxHQUFHLENBQUNBLE1BQUQsQ0FBVDtBQUNEOztBQUVELFdBQUssSUFBSUUsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsTUFBTSxDQUFDRyxNQUEzQixFQUFtQ0QsQ0FBQyxFQUFwQyxFQUF3QztBQUN0QyxhQUFLRSxTQUFMLENBQWUsS0FBS0MsZ0JBQUwsQ0FBc0JMLE1BQU0sQ0FBQ0UsQ0FBRCxDQUE1QixFQUFpQ0QsSUFBakMsQ0FBZjtBQUNEO0FBQ0Y7QUFFRDs7Ozs7Ozs7OEJBS1VLLEksRUFBTTtBQUNkLGFBQU8sSUFBSUMsS0FBSixHQUFZQyxHQUFaLEdBQWtCRixJQUF6QjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7dUNBT21DO0FBQUEsVUFBbEJFLEdBQWtCLHVFQUFaLElBQVk7QUFBQSxVQUFOUCxJQUFNOztBQUNqQyxVQUFJLENBQUNBLElBQUwsRUFBVztBQUNULGVBQU8sSUFBUDtBQUNEOztBQUVELFVBQUlBLElBQUksS0FBSyxRQUFiLEVBQXVCO0FBQ3JCLGVBQU8sS0FBS1EsY0FBTCxDQUFvQkQsR0FBcEIsQ0FBUDtBQUNEOztBQUVELFVBQU1FLEtBQUssR0FBR0YsR0FBRyxDQUFDRSxLQUFKLENBQVUsc0RBQVYsQ0FBZDs7QUFFQSxVQUFJQSxLQUFKLEVBQVc7QUFDVCxZQUFNQyxNQUFNLEdBQUdILEdBQUcsQ0FBQ0ksS0FBSixDQUFVRixLQUFLLENBQUMsQ0FBRCxDQUFmLENBQWY7QUFDQSxZQUFNRyxNQUFNLEdBQUdILEtBQUssQ0FBQyxDQUFELENBQXBCO0FBRUEsZUFBTyxLQUFLRCxjQUFMLFdBQXVCRSxNQUFNLENBQUMsQ0FBRCxDQUE3QixjQUFvQ1YsSUFBcEMsU0FBMkNZLE1BQTNDLEVBQVA7QUFDRCxPQUxELE1BS087QUFDTEMsZUFBTyxDQUFDQyxJQUFSLGNBQW1CZCxJQUFuQix5QkFBc0NPLEdBQXRDO0FBQ0EsZUFBTyxJQUFQO0FBQ0Q7QUFDRjs7O21DQUVjRixJLEVBQU07QUFDbkIsYUFBT0EsSUFBSSxDQUFDVSxPQUFMLENBQWEsV0FBYixFQUEwQixFQUExQixDQUFQO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0ltYWdlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEltYWdlcyB7XG4gIC8qKlxuICAgKiBQcmVsb2FkcyBhbiBpbWFnZSBpbiBtZW1vcnkgYW5kIHVzZXMgdGhlIGJyb3dzZXJzIGNhY2hlIHRvIHN0b3JlIGl0IHVudGlsIG5lZWRlZC5cbiAgICpcbiAgICogQHBhcmFtIHtBcnJheX0gaW1hZ2VzIC0gQSBsaXN0IG9mIGltYWdlIHVybHNcbiAgICogQHBhcmFtIHtTdHJpbmd9IHNpemUgLSBBIHNob3BpZnkgaW1hZ2Ugc2l6ZSBhdHRyaWJ1dGVcbiAgICovXG4gIHByZWxvYWQoaW1hZ2VzLCBzaXplKSB7XG4gICAgaWYgKHR5cGVvZiBpbWFnZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICBpbWFnZXMgPSBbaW1hZ2VzXTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5sb2FkSW1hZ2UodGhpcy5nZXRTaXplZEltYWdlVXJsKGltYWdlc1tpXSwgc2l6ZSkpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBMb2FkcyBhbmQgY2FjaGVzIGFuIGltYWdlIGluIHRoZSBicm93c2VycyBjYWNoZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggLSBBbiBpbWFnZSB1cmxcbiAgICovXG4gIGxvYWRJbWFnZShwYXRoKSB7XG4gICAgcmV0dXJuIG5ldyBJbWFnZSgpLnNyYyA9IHBhdGg7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhIFNob3BpZnkgc2l6ZSBhdHRyaWJ1dGUgdG8gYSBVUkxcbiAgICpcbiAgICogQHBhcmFtIHNyY1xuICAgKiBAcGFyYW0gc2l6ZVxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICovXG4gIGdldFNpemVkSW1hZ2VVcmwoc3JjID0gbnVsbCwgc2l6ZSkge1xuICAgIGlmICghc2l6ZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHNpemUgPT09ICdtYXN0ZXInKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZW1vdmVQcm90b2NvbChzcmMpO1xuICAgIH1cblxuICAgIGNvbnN0IG1hdGNoID0gc3JjLm1hdGNoKC9cXC4oanBnfGpwZWd8Z2lmfHBuZ3xibXB8Yml0bWFwfHRpZmZ8dGlmKShcXD92PVxcZCspPyQvaSk7XG5cbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIGNvbnN0IHByZWZpeCA9IHNyYy5zcGxpdChtYXRjaFswXSk7XG4gICAgICBjb25zdCBzdWZmaXggPSBtYXRjaFswXTtcblxuICAgICAgcmV0dXJuIHRoaXMucmVtb3ZlUHJvdG9jb2woYCR7cHJlZml4WzBdfV8ke3NpemV9JHtzdWZmaXh9YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUud2FybihgTm8gJHtzaXplfSBmb3VuZCBmb3IgJyR7c3JjfWApO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlUHJvdG9jb2wocGF0aCkge1xuICAgIHJldHVybiBwYXRoLnJlcGxhY2UoL2h0dHAocyk/Oi8sICcnKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/helpers/Images.js\n");

/***/ }),

/***/ "./source/scripts/helpers/LazyLoader.js":
/*!**********************************************!*\
  !*** ./source/scripts/helpers/LazyLoader.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LazyLoader; });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Allows a callback to be run once, when a target intersects the viewport.\n * @constructor\n * @param {HTMLElement} target Element to track\n * @param {Function} callback Function to execute when target enters viewport (only executed once)\n * @param {Object} [options] options with which to construct the IntersectionObserver\n * @param {string} [options.rootMargin='30%'] A string which specifies a set of offsets to add to the root's bounding_box when calculating intersections.\n * @param {number} [options.threshold=0] Ratio of intersection required to trigger callback\n */\nvar LazyLoader = /*#__PURE__*/function () {\n  function LazyLoader(target, callback, options) {\n    _classCallCheck(this, LazyLoader);\n\n    var defaultOptions = {\n      rootMargin: '30%',\n      threshold: 0\n    };\n    this.callback = callback;\n    this._runCallback = this._runCallback.bind(this); // This is to solve an issue with ItersectionObserver where the events were not firing for\n    // items that were already in the viewport on Chrome 71. It could have also been an issue that\n    // was combined with Flickity. Calling the callback for items already in the viewport seemed\n    // to fix the issue.\n\n    if (this._isInViewport(target)) {\n      this.callback();\n    } else {\n      this.observer = new IntersectionObserver(this._runCallback, _objectSpread(_objectSpread({}, defaultOptions), options));\n      this.observer.observe(target);\n    }\n  }\n\n  _createClass(LazyLoader, [{\n    key: \"_isInViewport\",\n    value: function _isInViewport(target) {\n      var bounding = target.getBoundingClientRect();\n      return bounding.top >= 0 && bounding.left >= 0 && bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) && bounding.right <= (window.innerWidth || document.documentElement.clientWidth);\n    }\n    /**\n     * Runs the callback if first entry becomes intersecting, then unloads the LazyLoader\n     * @_runCallback\n     * @param {IntersectionObserverEntry[]} entries Entry to check - all but the\n     * first element will be ignored.\n     */\n\n  }, {\n    key: \"_runCallback\",\n    value: function _runCallback(entries) {\n      // do nothing unless target moved into state of intersection\n      if (entries[0].isIntersecting === true) {\n        this.unload();\n        this.callback();\n      }\n    }\n    /**\n     * Disconnects IntersectionObserver if active\n     * @unload\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      if (this.observer) {\n        this.observer.disconnect();\n      }\n    }\n  }]);\n\n  return LazyLoader;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0xhenlMb2FkZXIuanM/MDA0ZSJdLCJuYW1lcyI6WyJMYXp5TG9hZGVyIiwidGFyZ2V0IiwiY2FsbGJhY2siLCJvcHRpb25zIiwiZGVmYXVsdE9wdGlvbnMiLCJyb290TWFyZ2luIiwidGhyZXNob2xkIiwiX3J1bkNhbGxiYWNrIiwiYmluZCIsIl9pc0luVmlld3BvcnQiLCJvYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwib2JzZXJ2ZSIsImJvdW5kaW5nIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwibGVmdCIsImJvdHRvbSIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRIZWlnaHQiLCJyaWdodCIsImlubmVyV2lkdGgiLCJjbGllbnRXaWR0aCIsImVudHJpZXMiLCJpc0ludGVyc2VjdGluZyIsInVubG9hZCIsImRpc2Nvbm5lY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7OztJQVNxQkEsVTtBQUNuQixzQkFBWUMsTUFBWixFQUFvQkMsUUFBcEIsRUFBOEJDLE9BQTlCLEVBQXVDO0FBQUE7O0FBQ3JDLFFBQU1DLGNBQWMsR0FBRztBQUNyQkMsZ0JBQVUsRUFBRSxLQURTO0FBRXJCQyxlQUFTLEVBQUU7QUFGVSxLQUF2QjtBQUtBLFNBQUtKLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsU0FBS0ssWUFBTCxHQUFvQixLQUFLQSxZQUFMLENBQWtCQyxJQUFsQixDQUF1QixJQUF2QixDQUFwQixDQVBxQyxDQVNyQztBQUNBO0FBQ0E7QUFDQTs7QUFDQSxRQUFJLEtBQUtDLGFBQUwsQ0FBbUJSLE1BQW5CLENBQUosRUFBZ0M7QUFDOUIsV0FBS0MsUUFBTDtBQUNELEtBRkQsTUFFTztBQUNMLFdBQUtRLFFBQUwsR0FBZ0IsSUFBSUMsb0JBQUosQ0FBeUIsS0FBS0osWUFBOUIsa0NBQWlESCxjQUFqRCxHQUFvRUQsT0FBcEUsRUFBaEI7QUFDQSxXQUFLTyxRQUFMLENBQWNFLE9BQWQsQ0FBc0JYLE1BQXRCO0FBQ0Q7QUFDRjs7OztrQ0FFYUEsTSxFQUFRO0FBQ3BCLFVBQU1ZLFFBQVEsR0FBR1osTUFBTSxDQUFDYSxxQkFBUCxFQUFqQjtBQUNBLGFBQU9ELFFBQVEsQ0FBQ0UsR0FBVCxJQUFnQixDQUFoQixJQUNGRixRQUFRLENBQUNHLElBQVQsSUFBaUIsQ0FEZixJQUVGSCxRQUFRLENBQUNJLE1BQVQsS0FBb0JDLE1BQU0sQ0FBQ0MsV0FBUCxJQUFzQkMsUUFBUSxDQUFDQyxlQUFULENBQXlCQyxZQUFuRSxDQUZFLElBR0ZULFFBQVEsQ0FBQ1UsS0FBVCxLQUFtQkwsTUFBTSxDQUFDTSxVQUFQLElBQXFCSixRQUFRLENBQUNDLGVBQVQsQ0FBeUJJLFdBQWpFLENBSEw7QUFJRDtBQUVEOzs7Ozs7Ozs7aUNBTWFDLE8sRUFBUztBQUNwQjtBQUNBLFVBQUlBLE9BQU8sQ0FBQyxDQUFELENBQVAsQ0FBV0MsY0FBWCxLQUE4QixJQUFsQyxFQUF3QztBQUN0QyxhQUFLQyxNQUFMO0FBQ0EsYUFBSzFCLFFBQUw7QUFDRDtBQUNGO0FBRUQ7Ozs7Ozs7NkJBSVM7QUFDUCxVQUFJLEtBQUtRLFFBQVQsRUFBbUI7QUFDakIsYUFBS0EsUUFBTCxDQUFjbUIsVUFBZDtBQUNEO0FBQ0YiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL0xhenlMb2FkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFsbG93cyBhIGNhbGxiYWNrIHRvIGJlIHJ1biBvbmNlLCB3aGVuIGEgdGFyZ2V0IGludGVyc2VjdHMgdGhlIHZpZXdwb3J0LlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0YXJnZXQgRWxlbWVudCB0byB0cmFja1xuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgRnVuY3Rpb24gdG8gZXhlY3V0ZSB3aGVuIHRhcmdldCBlbnRlcnMgdmlld3BvcnQgKG9ubHkgZXhlY3V0ZWQgb25jZSlcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gb3B0aW9ucyB3aXRoIHdoaWNoIHRvIGNvbnN0cnVjdCB0aGUgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5yb290TWFyZ2luPSczMCUnXSBBIHN0cmluZyB3aGljaCBzcGVjaWZpZXMgYSBzZXQgb2Ygb2Zmc2V0cyB0byBhZGQgdG8gdGhlIHJvb3QncyBib3VuZGluZ19ib3ggd2hlbiBjYWxjdWxhdGluZyBpbnRlcnNlY3Rpb25zLlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLnRocmVzaG9sZD0wXSBSYXRpbyBvZiBpbnRlcnNlY3Rpb24gcmVxdWlyZWQgdG8gdHJpZ2dlciBjYWxsYmFja1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMYXp5TG9hZGVyIHtcbiAgY29uc3RydWN0b3IodGFyZ2V0LCBjYWxsYmFjaywgb3B0aW9ucykge1xuICAgIGNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgICAgcm9vdE1hcmdpbjogJzMwJScsXG4gICAgICB0aHJlc2hvbGQ6IDAsXG4gICAgfTtcblxuICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB0aGlzLl9ydW5DYWxsYmFjayA9IHRoaXMuX3J1bkNhbGxiYWNrLmJpbmQodGhpcyk7XG5cbiAgICAvLyBUaGlzIGlzIHRvIHNvbHZlIGFuIGlzc3VlIHdpdGggSXRlcnNlY3Rpb25PYnNlcnZlciB3aGVyZSB0aGUgZXZlbnRzIHdlcmUgbm90IGZpcmluZyBmb3JcbiAgICAvLyBpdGVtcyB0aGF0IHdlcmUgYWxyZWFkeSBpbiB0aGUgdmlld3BvcnQgb24gQ2hyb21lIDcxLiBJdCBjb3VsZCBoYXZlIGFsc28gYmVlbiBhbiBpc3N1ZSB0aGF0XG4gICAgLy8gd2FzIGNvbWJpbmVkIHdpdGggRmxpY2tpdHkuIENhbGxpbmcgdGhlIGNhbGxiYWNrIGZvciBpdGVtcyBhbHJlYWR5IGluIHRoZSB2aWV3cG9ydCBzZWVtZWRcbiAgICAvLyB0byBmaXggdGhlIGlzc3VlLlxuICAgIGlmICh0aGlzLl9pc0luVmlld3BvcnQodGFyZ2V0KSkge1xuICAgICAgdGhpcy5jYWxsYmFjaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHRoaXMuX3J1bkNhbGxiYWNrLCB7IC4uLmRlZmF1bHRPcHRpb25zLCAuLi5vcHRpb25zIH0pO1xuICAgICAgdGhpcy5vYnNlcnZlci5vYnNlcnZlKHRhcmdldCk7XG4gICAgfVxuICB9XG5cbiAgX2lzSW5WaWV3cG9ydCh0YXJnZXQpIHtcbiAgICBjb25zdCBib3VuZGluZyA9IHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICByZXR1cm4gYm91bmRpbmcudG9wID49IDBcbiAgICAgICYmIGJvdW5kaW5nLmxlZnQgPj0gMFxuICAgICAgJiYgYm91bmRpbmcuYm90dG9tIDw9ICh3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodClcbiAgICAgICYmIGJvdW5kaW5nLnJpZ2h0IDw9ICh3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJ1bnMgdGhlIGNhbGxiYWNrIGlmIGZpcnN0IGVudHJ5IGJlY29tZXMgaW50ZXJzZWN0aW5nLCB0aGVuIHVubG9hZHMgdGhlIExhenlMb2FkZXJcbiAgICogQF9ydW5DYWxsYmFja1xuICAgKiBAcGFyYW0ge0ludGVyc2VjdGlvbk9ic2VydmVyRW50cnlbXX0gZW50cmllcyBFbnRyeSB0byBjaGVjayAtIGFsbCBidXQgdGhlXG4gICAqIGZpcnN0IGVsZW1lbnQgd2lsbCBiZSBpZ25vcmVkLlxuICAgKi9cbiAgX3J1bkNhbGxiYWNrKGVudHJpZXMpIHtcbiAgICAvLyBkbyBub3RoaW5nIHVubGVzcyB0YXJnZXQgbW92ZWQgaW50byBzdGF0ZSBvZiBpbnRlcnNlY3Rpb25cbiAgICBpZiAoZW50cmllc1swXS5pc0ludGVyc2VjdGluZyA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy51bmxvYWQoKTtcbiAgICAgIHRoaXMuY2FsbGJhY2soKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRGlzY29ubmVjdHMgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgaWYgYWN0aXZlXG4gICAqIEB1bmxvYWRcbiAgICovXG4gIHVubG9hZCgpIHtcbiAgICBpZiAodGhpcy5vYnNlcnZlcikge1xuICAgICAgdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/helpers/LazyLoader.js\n");

/***/ }),

/***/ "./source/scripts/helpers/ProductReviews.js":
/*!**************************************************!*\
  !*** ./source/scripts/helpers/ProductReviews.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return initShopifyProductReviews; });\n/*\n * Initialize Shopify Product Reviews\n *\n * */\nfunction initShopifyProductReviews() {\n  if (!window.SPR) {\n    return;\n  }\n\n  window.SPR.registerCallbacks();\n  window.SPR.initRatingHandler();\n  window.SPR.initDomEls();\n  window.SPR.loadProducts();\n  window.SPR.loadBadges();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL1Byb2R1Y3RSZXZpZXdzLmpzPzViNzAiXSwibmFtZXMiOlsiaW5pdFNob3BpZnlQcm9kdWN0UmV2aWV3cyIsIndpbmRvdyIsIlNQUiIsInJlZ2lzdGVyQ2FsbGJhY2tzIiwiaW5pdFJhdGluZ0hhbmRsZXIiLCJpbml0RG9tRWxzIiwibG9hZFByb2R1Y3RzIiwibG9hZEJhZGdlcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBOzs7O0FBS2UsU0FBU0EseUJBQVQsR0FBcUM7QUFDbEQsTUFBSSxDQUFDQyxNQUFNLENBQUNDLEdBQVosRUFBaUI7QUFDZjtBQUNEOztBQUVERCxRQUFNLENBQUNDLEdBQVAsQ0FBV0MsaUJBQVg7QUFDQUYsUUFBTSxDQUFDQyxHQUFQLENBQVdFLGlCQUFYO0FBQ0FILFFBQU0sQ0FBQ0MsR0FBUCxDQUFXRyxVQUFYO0FBQ0FKLFFBQU0sQ0FBQ0MsR0FBUCxDQUFXSSxZQUFYO0FBQ0FMLFFBQU0sQ0FBQ0MsR0FBUCxDQUFXSyxVQUFYO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL1Byb2R1Y3RSZXZpZXdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEluaXRpYWxpemUgU2hvcGlmeSBQcm9kdWN0IFJldmlld3NcbiAqXG4gKiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0U2hvcGlmeVByb2R1Y3RSZXZpZXdzKCkge1xuICBpZiAoIXdpbmRvdy5TUFIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB3aW5kb3cuU1BSLnJlZ2lzdGVyQ2FsbGJhY2tzKCk7XG4gIHdpbmRvdy5TUFIuaW5pdFJhdGluZ0hhbmRsZXIoKTtcbiAgd2luZG93LlNQUi5pbml0RG9tRWxzKCk7XG4gIHdpbmRvdy5TUFIubG9hZFByb2R1Y3RzKCk7XG4gIHdpbmRvdy5TUFIubG9hZEJhZGdlcygpO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/helpers/ProductReviews.js\n");

/***/ }),

/***/ "./source/scripts/helpers/Quantity.js":
/*!********************************************!*\
  !*** ./source/scripts/helpers/Quantity.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Quantity; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Quantity = /*#__PURE__*/function () {\n  function Quantity(el) {\n    _classCallCheck(this, Quantity);\n\n    this.$el = $(el);\n    this.$inputParent = this.$el.find('.form-field--qty-input');\n    this.$input = this.$el.find('[data-quantity-input]');\n    this.$selectParent = this.$el.find('.form-field--qty-select');\n    this.$select = this.$el.find('[data-quantity-select]');\n    this._watchSelect = this._watchSelect.bind(this);\n    this._watchInput = this._watchInput.bind(this);\n    this.$select.on('change.quantity', this._watchSelect);\n    this.$input.on('change.quantity', this._watchInput);\n  }\n\n  _createClass(Quantity, [{\n    key: \"unload\",\n    value: function unload() {\n      this.$el.off('.quantity');\n    }\n  }, {\n    key: \"_validateValue\",\n    value: function _validateValue(event) {\n      var baseValue = parseInt(event.currentTarget.value, 10);\n      return isNaN(baseValue) ? 1 : baseValue;\n    }\n  }, {\n    key: \"_watchSelect\",\n    value: function _watchSelect(event) {\n      var value = this._validateValue(event); // Update input to match select\n\n\n      this.$input.val(value).trigger('change'); // Switch to quantity input when 10 or more\n\n      if (value >= 10) {\n        this.$inputParent.removeClass('hidden').addClass('visible');\n        this.$input.focus().removeAttr('tabindex').select();\n        this.$selectParent.removeClass('visible').addClass('hidden');\n        this.$select.attr('tabindex', '-1');\n      }\n    }\n  }, {\n    key: \"_watchInput\",\n    value: function _watchInput(event) {\n      this.$input.val(this._validateValue(event));\n    }\n  }]);\n\n  return Quantity;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL1F1YW50aXR5LmpzP2VhMzgiXSwibmFtZXMiOlsiUXVhbnRpdHkiLCJlbCIsIiRlbCIsIiQiLCIkaW5wdXRQYXJlbnQiLCJmaW5kIiwiJGlucHV0IiwiJHNlbGVjdFBhcmVudCIsIiRzZWxlY3QiLCJfd2F0Y2hTZWxlY3QiLCJiaW5kIiwiX3dhdGNoSW5wdXQiLCJvbiIsIm9mZiIsImV2ZW50IiwiYmFzZVZhbHVlIiwicGFyc2VJbnQiLCJjdXJyZW50VGFyZ2V0IiwidmFsdWUiLCJpc05hTiIsIl92YWxpZGF0ZVZhbHVlIiwidmFsIiwidHJpZ2dlciIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJmb2N1cyIsInJlbW92ZUF0dHIiLCJzZWxlY3QiLCJhdHRyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztJQUFxQkEsUTtBQUNuQixvQkFBWUMsRUFBWixFQUFnQjtBQUFBOztBQUNkLFNBQUtDLEdBQUwsR0FBV0MsQ0FBQyxDQUFDRixFQUFELENBQVo7QUFDQSxTQUFLRyxZQUFMLEdBQW9CLEtBQUtGLEdBQUwsQ0FBU0csSUFBVCxDQUFjLHdCQUFkLENBQXBCO0FBQ0EsU0FBS0MsTUFBTCxHQUFjLEtBQUtKLEdBQUwsQ0FBU0csSUFBVCxDQUFjLHVCQUFkLENBQWQ7QUFDQSxTQUFLRSxhQUFMLEdBQXFCLEtBQUtMLEdBQUwsQ0FBU0csSUFBVCxDQUFjLHlCQUFkLENBQXJCO0FBQ0EsU0FBS0csT0FBTCxHQUFlLEtBQUtOLEdBQUwsQ0FBU0csSUFBVCxDQUFjLHdCQUFkLENBQWY7QUFFQSxTQUFLSSxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCRCxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUVBLFNBQUtGLE9BQUwsQ0FBYUksRUFBYixDQUFnQixpQkFBaEIsRUFBbUMsS0FBS0gsWUFBeEM7QUFDQSxTQUFLSCxNQUFMLENBQVlNLEVBQVosQ0FBZSxpQkFBZixFQUFrQyxLQUFLRCxXQUF2QztBQUNEOzs7OzZCQUVRO0FBQ1AsV0FBS1QsR0FBTCxDQUFTVyxHQUFULENBQWEsV0FBYjtBQUNEOzs7bUNBRWNDLEssRUFBTztBQUNwQixVQUFNQyxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0YsS0FBSyxDQUFDRyxhQUFOLENBQW9CQyxLQUFyQixFQUE0QixFQUE1QixDQUExQjtBQUVBLGFBQU9DLEtBQUssQ0FBQ0osU0FBRCxDQUFMLEdBQW1CLENBQW5CLEdBQXVCQSxTQUE5QjtBQUNEOzs7aUNBRVlELEssRUFBTztBQUNsQixVQUFNSSxLQUFLLEdBQUcsS0FBS0UsY0FBTCxDQUFvQk4sS0FBcEIsQ0FBZCxDQURrQixDQUdsQjs7O0FBQ0EsV0FBS1IsTUFBTCxDQUFZZSxHQUFaLENBQWdCSCxLQUFoQixFQUF1QkksT0FBdkIsQ0FBK0IsUUFBL0IsRUFKa0IsQ0FNbEI7O0FBQ0EsVUFBSUosS0FBSyxJQUFJLEVBQWIsRUFBaUI7QUFDZixhQUFLZCxZQUFMLENBQ0dtQixXQURILENBQ2UsUUFEZixFQUVHQyxRQUZILENBRVksU0FGWjtBQUlBLGFBQUtsQixNQUFMLENBQ0dtQixLQURILEdBRUdDLFVBRkgsQ0FFYyxVQUZkLEVBR0dDLE1BSEg7QUFLQSxhQUFLcEIsYUFBTCxDQUNHZ0IsV0FESCxDQUNlLFNBRGYsRUFFR0MsUUFGSCxDQUVZLFFBRlo7QUFJQSxhQUFLaEIsT0FBTCxDQUFhb0IsSUFBYixDQUFrQixVQUFsQixFQUE4QixJQUE5QjtBQUNEO0FBQ0Y7OztnQ0FFV2QsSyxFQUFPO0FBQ2pCLFdBQUtSLE1BQUwsQ0FBWWUsR0FBWixDQUFnQixLQUFLRCxjQUFMLENBQW9CTixLQUFwQixDQUFoQjtBQUNEIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvaGVscGVycy9RdWFudGl0eS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFF1YW50aXR5IHtcbiAgY29uc3RydWN0b3IoZWwpIHtcbiAgICB0aGlzLiRlbCA9ICQoZWwpO1xuICAgIHRoaXMuJGlucHV0UGFyZW50ID0gdGhpcy4kZWwuZmluZCgnLmZvcm0tZmllbGQtLXF0eS1pbnB1dCcpO1xuICAgIHRoaXMuJGlucHV0ID0gdGhpcy4kZWwuZmluZCgnW2RhdGEtcXVhbnRpdHktaW5wdXRdJyk7XG4gICAgdGhpcy4kc2VsZWN0UGFyZW50ID0gdGhpcy4kZWwuZmluZCgnLmZvcm0tZmllbGQtLXF0eS1zZWxlY3QnKTtcbiAgICB0aGlzLiRzZWxlY3QgPSB0aGlzLiRlbC5maW5kKCdbZGF0YS1xdWFudGl0eS1zZWxlY3RdJyk7XG5cbiAgICB0aGlzLl93YXRjaFNlbGVjdCA9IHRoaXMuX3dhdGNoU2VsZWN0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5fd2F0Y2hJbnB1dCA9IHRoaXMuX3dhdGNoSW5wdXQuYmluZCh0aGlzKTtcblxuICAgIHRoaXMuJHNlbGVjdC5vbignY2hhbmdlLnF1YW50aXR5JywgdGhpcy5fd2F0Y2hTZWxlY3QpO1xuICAgIHRoaXMuJGlucHV0Lm9uKCdjaGFuZ2UucXVhbnRpdHknLCB0aGlzLl93YXRjaElucHV0KTtcbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICB0aGlzLiRlbC5vZmYoJy5xdWFudGl0eScpO1xuICB9XG5cbiAgX3ZhbGlkYXRlVmFsdWUoZXZlbnQpIHtcbiAgICBjb25zdCBiYXNlVmFsdWUgPSBwYXJzZUludChldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlLCAxMCk7XG5cbiAgICByZXR1cm4gaXNOYU4oYmFzZVZhbHVlKSA/IDEgOiBiYXNlVmFsdWU7XG4gIH1cblxuICBfd2F0Y2hTZWxlY3QoZXZlbnQpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX3ZhbGlkYXRlVmFsdWUoZXZlbnQpO1xuXG4gICAgLy8gVXBkYXRlIGlucHV0IHRvIG1hdGNoIHNlbGVjdFxuICAgIHRoaXMuJGlucHV0LnZhbCh2YWx1ZSkudHJpZ2dlcignY2hhbmdlJyk7XG5cbiAgICAvLyBTd2l0Y2ggdG8gcXVhbnRpdHkgaW5wdXQgd2hlbiAxMCBvciBtb3JlXG4gICAgaWYgKHZhbHVlID49IDEwKSB7XG4gICAgICB0aGlzLiRpbnB1dFBhcmVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpXG4gICAgICAgIC5hZGRDbGFzcygndmlzaWJsZScpO1xuXG4gICAgICB0aGlzLiRpbnB1dFxuICAgICAgICAuZm9jdXMoKVxuICAgICAgICAucmVtb3ZlQXR0cigndGFiaW5kZXgnKVxuICAgICAgICAuc2VsZWN0KCk7XG5cbiAgICAgIHRoaXMuJHNlbGVjdFBhcmVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ3Zpc2libGUnKVxuICAgICAgICAuYWRkQ2xhc3MoJ2hpZGRlbicpO1xuXG4gICAgICB0aGlzLiRzZWxlY3QuYXR0cigndGFiaW5kZXgnLCAnLTEnKTtcbiAgICB9XG4gIH1cblxuICBfd2F0Y2hJbnB1dChldmVudCkge1xuICAgIHRoaXMuJGlucHV0LnZhbCh0aGlzLl92YWxpZGF0ZVZhbHVlKGV2ZW50KSk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/helpers/Quantity.js\n");

/***/ }),

/***/ "./source/scripts/helpers/mapUtils.js":
/*!********************************************!*\
  !*** ./source/scripts/helpers/mapUtils.js ***!
  \********************************************/
/*! exports provided: createMap, displayErrorInThemeEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMap\", function() { return createMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayErrorInThemeEditor\", function() { return displayErrorInThemeEditor; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/*\n * Function to convert any given latitude and longitude format to decimal degrees\n */\n\nfunction getDecimalDegrees() {\n  var firstComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var secondComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var thirdComponent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var fourthComponent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var directions = {\n    N: 1,\n    E: 1,\n    S: -1,\n    W: -1\n  };\n  var decimalDegrees = 0.0;\n  var components = [firstComponent, secondComponent, thirdComponent, fourthComponent];\n\n  for (var i = 0; i < components.length; i++) {\n    var component = components[i];\n\n    if (component) {\n      if (Number.isNaN(parseFloat(component))) {\n        decimalDegrees *= directions[component];\n      } else {\n        decimalDegrees += parseFloat(component) / Math.pow(60, i);\n      }\n    }\n  }\n\n  return decimalDegrees;\n}\n/*\n * By providing the ability to use a place name, or latitude and longitude coordinates\n * we give merchants, and our demo stores the option to bypass the Geocoding API.\n * The Geocoding API (https://developers.google.com/maps/documentation/geocoding/usage-and-billing) allows us\n * to take a place name and convert it to latitude and longitude expressed in decimal degrees.\n */\n\n\nfunction getLatitudeLongitude(address) {\n  var deferred = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.Deferred(); // Degrees, Minutes and Seconds: DDD° MM' SS.S\"\n\n  var latLongDegreesMinutesSeconds = /^([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2})(?:'[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:\"[ ]?| )?(N|E|S|W) ?([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2})(?:'[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:\"[ ]?| )?(N|E|S|W)$/g; // Degrees and Decimal Minutes: DDD° MM.MMM'\n\n  var latLongDegreesMinutes = /^([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:'[ ]?| )?(N|E|S|W) ?([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:'[ ]?| )?(N|E|S|W)$/g; // Decimal Degrees: DDD.DDDDD°\n\n  var latLongDegrees = /^([-|+]?[0-9]{1,3}(?:\\.[0-9]+)?)(?:°[ ]?| )?(N|E|S|W)?,? ?([-|+]?[0-9]{1,3}(?:\\.[0-9]+)?)(?:°[ ]?| )?(N|E|S|W)?$/g;\n  var latLongFormats = [latLongDegreesMinutesSeconds, latLongDegreesMinutes, latLongDegrees];\n  var latLongMatches = latLongFormats.map(function (latLongFormat) {\n    return address.match(latLongFormat);\n  });\n  /*\n   * Select the first latitude and longitude format that is matched.\n   * Ordering:\n   *   1. Degrees, minutes, and seconds,\n   *   2. Degrees, and decimal minutes,\n   *   3. Decimal degrees.\n   */\n\n  var latLongMatch = latLongMatches.reduce(function (accumulator, value, index) {\n    if (!accumulator && value) {\n      var latLongResult = latLongFormats[index].exec(address);\n      var lat = latLongResult.slice(1, latLongResult.length / 2 + 1);\n      var lng = latLongResult.slice(latLongResult.length / 2 + 1, latLongResult.length);\n      return {\n        lat: lat,\n        lng: lng\n      };\n    }\n\n    return accumulator;\n  }, null); // If we've got a match on latitude and longitude, use that and avoid geocoding\n\n  if (latLongMatch) {\n    var latDecimalDegrees = getDecimalDegrees.apply(void 0, _toConsumableArray(latLongMatch.lat));\n    var longDecimalDegrees = getDecimalDegrees.apply(void 0, _toConsumableArray(latLongMatch.lng));\n    deferred.resolve({\n      lat: latDecimalDegrees,\n      lng: longDecimalDegrees\n    });\n  } else {\n    // Otherwise, geocode the assumed address\n    var geocoder = new google.maps.Geocoder();\n    geocoder.geocode({\n      address: address\n    }, function (results, status) {\n      if (status !== google.maps.GeocoderStatus.OK) {\n        deferred.reject(status);\n      }\n\n      deferred.resolve(results[0].geometry.location);\n    });\n  }\n\n  return deferred;\n}\n\nfunction getMapStyles(colors) {\n  if (!colors) {\n    return [];\n  }\n\n  return [{\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.e\n    }]\n  }, {\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: colors.a\n    }]\n  }, {\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: colors.e\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.country',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.land_parcel',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.neighborhood',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.locality',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'poi',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: colors.d\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.c\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.b\n    }]\n  }, {\n    featureType: 'road.highway.controlled_access',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: colors.b\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: colors.e\n    }]\n  }, {\n    featureType: 'transit',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: colors.f\n    }]\n  }];\n}\n\nfunction createMap(options) {\n  var deferred = jquery__WEBPACK_IMPORTED_MODULE_0___default.a.Deferred();\n  var container = options.container,\n      address = options.address,\n      zoom = options.zoom,\n      colors = options.colors;\n  getLatitudeLongitude(address).done(function (latLong) {\n    var map = new google.maps.Map(container, {\n      center: latLong,\n      clickableIcons: false,\n      disableDefaultUI: true,\n      disableDoubleClickZoom: true,\n      gestureHandling: 'none',\n      keyboardShortcuts: false,\n      maxZoom: zoom,\n      minZoom: zoom,\n      scrollWheel: false,\n      styles: getMapStyles(colors),\n      zoom: zoom,\n      zoomControl: false\n    });\n    new google.maps.Marker({\n      clickable: false,\n      map: map,\n      position: map.getCenter()\n    });\n    map.panBy(0, 0);\n    deferred.resolve(map);\n  }).fail(function (status) {\n    var usageLimits = 'https://developers.google.com/maps/faq#usagelimits';\n    var errorMessage;\n\n    switch (status) {\n      case 'ZERO_RESULTS':\n        errorMessage = \"<p>Unable to find the address:</p> \".concat(address);\n        break;\n\n      case 'OVER_QUERY_LIMIT':\n        errorMessage = \"\\n            <p>Unable to load Google Maps, you have reached your usage limit.</p>\\n            <p>\\n              Please visit\\n              <a href=\\\"\".concat(usageLimits, \"\\\" target=\\\"_blank\\\">\").concat(usageLimits, \"</a>\\n              for more details.\\n            </p>\\n          \");\n        break;\n\n      default:\n        errorMessage = 'Unable to load Google Maps.';\n        break;\n    }\n\n    deferred.reject(errorMessage);\n  });\n  return deferred;\n}\n\nfunction displayErrorInThemeEditor(container, errorMessage) {\n  var isThemeEditor = window.Shopify && window.Shopify.designMode;\n\n  if (!isThemeEditor) {\n    return;\n  }\n\n  container.innerHTML = \"<div class=\\\"map-error-message\\\">\".concat(errorMessage, \"</div>\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/helpers/mapUtils.js\n");

/***/ }),

/***/ "./source/scripts/helpers/scrollLeft.js":
/*!**********************************************!*\
  !*** ./source/scripts/helpers/scrollLeft.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return scrollLeft; });\nfunction scrollLeft($el) {\n  var el = $el.get(0);\n  var container = el.parentElement;\n  var $container = $el.parent();\n\n  if (!container) {\n    return;\n  }\n\n  var containerBounds = container.getBoundingClientRect();\n  var containerCenter = containerBounds.left + containerBounds.width / 2;\n  var elBounds = el.getBoundingClientRect();\n  var elCenter = elBounds.left + elBounds.width / 2;\n  var scrollAmount = container.scrollLeft - (containerCenter - elCenter);\n  $container.animate({\n    scrollLeft: scrollAmount\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9oZWxwZXJzL3Njcm9sbExlZnQuanM/NWRiYSJdLCJuYW1lcyI6WyJzY3JvbGxMZWZ0IiwiJGVsIiwiZWwiLCJnZXQiLCJjb250YWluZXIiLCJwYXJlbnRFbGVtZW50IiwiJGNvbnRhaW5lciIsInBhcmVudCIsImNvbnRhaW5lckJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNvbnRhaW5lckNlbnRlciIsImxlZnQiLCJ3aWR0aCIsImVsQm91bmRzIiwiZWxDZW50ZXIiLCJzY3JvbGxBbW91bnQiLCJhbmltYXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWUsU0FBU0EsVUFBVCxDQUFvQkMsR0FBcEIsRUFBeUI7QUFDdEMsTUFBTUMsRUFBRSxHQUFHRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxDQUFSLENBQVg7QUFDQSxNQUFNQyxTQUFTLEdBQUdGLEVBQUUsQ0FBQ0csYUFBckI7QUFDQSxNQUFNQyxVQUFVLEdBQUdMLEdBQUcsQ0FBQ00sTUFBSixFQUFuQjs7QUFFQSxNQUFJLENBQUNILFNBQUwsRUFBZ0I7QUFDZDtBQUNEOztBQUVELE1BQU1JLGVBQWUsR0FBR0osU0FBUyxDQUFDSyxxQkFBVixFQUF4QjtBQUNBLE1BQU1DLGVBQWUsR0FBR0YsZUFBZSxDQUFDRyxJQUFoQixHQUF3QkgsZUFBZSxDQUFDSSxLQUFoQixHQUF3QixDQUF4RTtBQUNBLE1BQU1DLFFBQVEsR0FBR1gsRUFBRSxDQUFDTyxxQkFBSCxFQUFqQjtBQUNBLE1BQU1LLFFBQVEsR0FBR0QsUUFBUSxDQUFDRixJQUFULEdBQWlCRSxRQUFRLENBQUNELEtBQVQsR0FBaUIsQ0FBbkQ7QUFDQSxNQUFNRyxZQUFZLEdBQUdYLFNBQVMsQ0FBQ0osVUFBVixJQUF3QlUsZUFBZSxHQUFHSSxRQUExQyxDQUFyQjtBQUVBUixZQUFVLENBQUNVLE9BQVgsQ0FBbUI7QUFDakJoQixjQUFVLEVBQUVlO0FBREssR0FBbkI7QUFHRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL2hlbHBlcnMvc2Nyb2xsTGVmdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNjcm9sbExlZnQoJGVsKSB7XG4gIGNvbnN0IGVsID0gJGVsLmdldCgwKTtcbiAgY29uc3QgY29udGFpbmVyID0gZWwucGFyZW50RWxlbWVudDtcbiAgY29uc3QgJGNvbnRhaW5lciA9ICRlbC5wYXJlbnQoKTtcblxuICBpZiAoIWNvbnRhaW5lcikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGNvbnRhaW5lckJvdW5kcyA9IGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgY29udGFpbmVyQ2VudGVyID0gY29udGFpbmVyQm91bmRzLmxlZnQgKyAoY29udGFpbmVyQm91bmRzLndpZHRoIC8gMik7XG4gIGNvbnN0IGVsQm91bmRzID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IGVsQ2VudGVyID0gZWxCb3VuZHMubGVmdCArIChlbEJvdW5kcy53aWR0aCAvIDIpO1xuICBjb25zdCBzY3JvbGxBbW91bnQgPSBjb250YWluZXIuc2Nyb2xsTGVmdCAtIChjb250YWluZXJDZW50ZXIgLSBlbENlbnRlcik7XG5cbiAgJGNvbnRhaW5lci5hbmltYXRlKHtcbiAgICBzY3JvbGxMZWZ0OiBzY3JvbGxBbW91bnQsXG4gIH0pO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/helpers/scrollLeft.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicBlogPosts.js":
/*!*****************************************************!*\
  !*** ./source/scripts/sections/DynamicBlogPosts.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicBlogPosts; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar DynamicBlogPosts = /*#__PURE__*/function () {\n  function DynamicBlogPosts(section) {\n    _classCallCheck(this, DynamicBlogPosts);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.flickity = null;\n    this.$blogPosts = this.$el.find('[data-blog-posts]'); // Activate flickity on mobile\n\n    this._mobileSlider = this._mobileSlider.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__[\"onChange\"](this._mobileSlider);\n\n    this._mobileSlider();\n  }\n  /**\n   * Unbind events when section is re-drawn\n   */\n\n\n  _createClass(DynamicBlogPosts, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__[\"offChange\"](this._mobileSlider);\n\n      this._destroyFlickity();\n    }\n  }, {\n    key: \"_initFlickity\",\n    value: function _initFlickity() {\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_2___default.a(this.$blogPosts[0], {\n        cellSelector: '.article--excerpt-wrapper',\n        contain: true,\n        freeScroll: true,\n        percentPosition: false,\n        prevNextButtons: false,\n        pageDots: false,\n        setGallerySize: false\n      });\n\n      this._bindSlider();\n\n      this.flickity.resize();\n    }\n  }, {\n    key: \"_destroyFlickity\",\n    value: function _destroyFlickity() {\n      if (!this.flickity) {\n        return;\n      }\n\n      this.$window.off('.blog-posts');\n      this.$blogPosts.off('.blog-posts');\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n  }, {\n    key: \"_mobileSlider\",\n    value: function _mobileSlider() {\n      // If is Large layout, attempt to destroy flickity\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__[\"min\"]('L')) {\n        this._destroyFlickity();\n\n        return;\n      } // Is XS/S/M, and flickity is init'd -- do nothing\n\n\n      if (this.flickity) {\n        this.flickity.resize();\n        return;\n      } // Is XS/S/M, and flickity is not init'd\n\n\n      this._initFlickity();\n    }\n  }, {\n    key: \"_bindSlider\",\n    value: function _bindSlider() {\n      var _this = this;\n\n      var $slider = this.$blogPosts.find('.flickity-slider');\n      this.$window.on('resize.blog-posts', just_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n        _this.$blogPosts.trigger('heightUpdate.blog-posts');\n      }));\n      this.flickity.on('cellSelect', function () {\n        _this.$blogPosts.trigger('heightUpdate.blog-posts');\n      });\n      this.$blogPosts.on('heightUpdate.blog-posts', function () {\n        if (!_this.flickity) {\n          return;\n        }\n\n        $slider.height(Math.ceil(_this.flickity.maxCellHeight));\n      }); // Sets the Slider to the height of the first slide\n\n      this.$blogPosts.trigger('heightUpdate.blog-posts');\n    }\n  }]);\n\n  return DynamicBlogPosts;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljQmxvZ1Bvc3RzLmpzPzI0OTgiXSwibmFtZXMiOlsiRHluYW1pY0Jsb2dQb3N0cyIsInNlY3Rpb24iLCIkZWwiLCIkIiwiZWwiLCIkd2luZG93Iiwid2luZG93IiwiZmxpY2tpdHkiLCIkYmxvZ1Bvc3RzIiwiZmluZCIsIl9tb2JpbGVTbGlkZXIiLCJiaW5kIiwiYnJlYWtwb2ludCIsIl9kZXN0cm95RmxpY2tpdHkiLCJGbGlja2l0eSIsImNlbGxTZWxlY3RvciIsImNvbnRhaW4iLCJmcmVlU2Nyb2xsIiwicGVyY2VudFBvc2l0aW9uIiwicHJldk5leHRCdXR0b25zIiwicGFnZURvdHMiLCJzZXRHYWxsZXJ5U2l6ZSIsIl9iaW5kU2xpZGVyIiwicmVzaXplIiwib2ZmIiwiZGVzdHJveSIsIl9pbml0RmxpY2tpdHkiLCIkc2xpZGVyIiwib24iLCJkZWJvdW5jZSIsInRyaWdnZXIiLCJoZWlnaHQiLCJNYXRoIiwiY2VpbCIsIm1heENlbGxIZWlnaHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7SUFHcUJBLGdCO0FBQ25CLDRCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtDLEdBQUwsR0FBV0MsNkNBQUMsQ0FBQ0YsT0FBTyxDQUFDRyxFQUFULENBQVo7QUFDQSxTQUFLQyxPQUFMLEdBQWVGLDZDQUFDLENBQUNHLE1BQUQsQ0FBaEI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBRUEsU0FBS0MsVUFBTCxHQUFrQixLQUFLTixHQUFMLENBQVNPLElBQVQsQ0FBYyxtQkFBZCxDQUFsQixDQUxtQixDQU9uQjs7QUFDQSxTQUFLQyxhQUFMLEdBQXFCLEtBQUtBLGFBQUwsQ0FBbUJDLElBQW5CLENBQXdCLElBQXhCLENBQXJCO0FBQ0FDLG1FQUFBLENBQW9CLEtBQUtGLGFBQXpCOztBQUNBLFNBQUtBLGFBQUw7QUFDRDtBQUVEOzs7Ozs7O3NDQUdrQjtBQUNoQkUsc0VBQUEsQ0FBcUIsS0FBS0YsYUFBMUI7O0FBQ0EsV0FBS0csZ0JBQUw7QUFDRDs7O29DQUVlO0FBQ2QsV0FBS04sUUFBTCxHQUFnQixJQUFJTywrQ0FBSixDQUFhLEtBQUtOLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBYixFQUFpQztBQUMvQ08sb0JBQVksRUFBRSwyQkFEaUM7QUFFL0NDLGVBQU8sRUFBRSxJQUZzQztBQUcvQ0Msa0JBQVUsRUFBRSxJQUhtQztBQUkvQ0MsdUJBQWUsRUFBRSxLQUo4QjtBQUsvQ0MsdUJBQWUsRUFBRSxLQUw4QjtBQU0vQ0MsZ0JBQVEsRUFBRSxLQU5xQztBQU8vQ0Msc0JBQWMsRUFBRTtBQVArQixPQUFqQyxDQUFoQjs7QUFVQSxXQUFLQyxXQUFMOztBQUNBLFdBQUtmLFFBQUwsQ0FBY2dCLE1BQWQ7QUFDRDs7O3VDQUVrQjtBQUNqQixVQUFJLENBQUMsS0FBS2hCLFFBQVYsRUFBb0I7QUFDbEI7QUFDRDs7QUFFRCxXQUFLRixPQUFMLENBQWFtQixHQUFiLENBQWlCLGFBQWpCO0FBQ0EsV0FBS2hCLFVBQUwsQ0FBZ0JnQixHQUFoQixDQUFvQixhQUFwQjtBQUNBLFdBQUtqQixRQUFMLENBQWNrQixPQUFkO0FBQ0EsV0FBS2xCLFFBQUwsR0FBZ0IsSUFBaEI7QUFDRDs7O29DQUVlO0FBQ2Q7QUFDQSxVQUFJSywwREFBQSxDQUFlLEdBQWYsQ0FBSixFQUF5QjtBQUN2QixhQUFLQyxnQkFBTDs7QUFDQTtBQUNELE9BTGEsQ0FPZDs7O0FBQ0EsVUFBSSxLQUFLTixRQUFULEVBQW1CO0FBQ2pCLGFBQUtBLFFBQUwsQ0FBY2dCLE1BQWQ7QUFDQTtBQUNELE9BWGEsQ0FhZDs7O0FBQ0EsV0FBS0csYUFBTDtBQUNEOzs7a0NBRWE7QUFBQTs7QUFDWixVQUFNQyxPQUFPLEdBQUcsS0FBS25CLFVBQUwsQ0FBZ0JDLElBQWhCLENBQXFCLGtCQUFyQixDQUFoQjtBQUVBLFdBQUtKLE9BQUwsQ0FBYXVCLEVBQWIsQ0FBZ0IsbUJBQWhCLEVBQXFDQyxvREFBUSxDQUFDLFlBQU07QUFDbEQsYUFBSSxDQUFDckIsVUFBTCxDQUFnQnNCLE9BQWhCLENBQXdCLHlCQUF4QjtBQUNELE9BRjRDLENBQTdDO0FBSUEsV0FBS3ZCLFFBQUwsQ0FBY3FCLEVBQWQsQ0FBaUIsWUFBakIsRUFBK0IsWUFBTTtBQUNuQyxhQUFJLENBQUNwQixVQUFMLENBQWdCc0IsT0FBaEIsQ0FBd0IseUJBQXhCO0FBQ0QsT0FGRDtBQUlBLFdBQUt0QixVQUFMLENBQWdCb0IsRUFBaEIsQ0FBbUIseUJBQW5CLEVBQThDLFlBQU07QUFDbEQsWUFBSSxDQUFDLEtBQUksQ0FBQ3JCLFFBQVYsRUFBb0I7QUFDbEI7QUFDRDs7QUFFRG9CLGVBQU8sQ0FBQ0ksTUFBUixDQUFlQyxJQUFJLENBQUNDLElBQUwsQ0FBVSxLQUFJLENBQUMxQixRQUFMLENBQWMyQixhQUF4QixDQUFmO0FBQ0QsT0FORCxFQVhZLENBbUJaOztBQUNBLFdBQUsxQixVQUFMLENBQWdCc0IsT0FBaEIsQ0FBd0IseUJBQXhCO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljQmxvZ1Bvc3RzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdqdXN0LWRlYm91bmNlJztcbmltcG9ydCBGbGlja2l0eSBmcm9tICdmbGlja2l0eSc7XG5pbXBvcnQgKiBhcyBicmVha3BvaW50IGZyb20gJ0BwaXhlbHVuaW9uL2JyZWFrcG9pbnQnO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIER5bmFtaWNCbG9nUG9zdHMge1xuICBjb25zdHJ1Y3RvcihzZWN0aW9uKSB7XG4gICAgdGhpcy4kZWwgPSAkKHNlY3Rpb24uZWwpO1xuICAgIHRoaXMuJHdpbmRvdyA9ICQod2luZG93KTtcbiAgICB0aGlzLmZsaWNraXR5ID0gbnVsbDtcblxuICAgIHRoaXMuJGJsb2dQb3N0cyA9IHRoaXMuJGVsLmZpbmQoJ1tkYXRhLWJsb2ctcG9zdHNdJyk7XG5cbiAgICAvLyBBY3RpdmF0ZSBmbGlja2l0eSBvbiBtb2JpbGVcbiAgICB0aGlzLl9tb2JpbGVTbGlkZXIgPSB0aGlzLl9tb2JpbGVTbGlkZXIuYmluZCh0aGlzKTtcbiAgICBicmVha3BvaW50Lm9uQ2hhbmdlKHRoaXMuX21vYmlsZVNsaWRlcik7XG4gICAgdGhpcy5fbW9iaWxlU2xpZGVyKCk7XG4gIH1cblxuICAvKipcbiAgICogVW5iaW5kIGV2ZW50cyB3aGVuIHNlY3Rpb24gaXMgcmUtZHJhd25cbiAgICovXG4gIG9uU2VjdGlvblVubG9hZCgpIHtcbiAgICBicmVha3BvaW50Lm9mZkNoYW5nZSh0aGlzLl9tb2JpbGVTbGlkZXIpO1xuICAgIHRoaXMuX2Rlc3Ryb3lGbGlja2l0eSgpO1xuICB9XG5cbiAgX2luaXRGbGlja2l0eSgpIHtcbiAgICB0aGlzLmZsaWNraXR5ID0gbmV3IEZsaWNraXR5KHRoaXMuJGJsb2dQb3N0c1swXSwge1xuICAgICAgY2VsbFNlbGVjdG9yOiAnLmFydGljbGUtLWV4Y2VycHQtd3JhcHBlcicsXG4gICAgICBjb250YWluOiB0cnVlLFxuICAgICAgZnJlZVNjcm9sbDogdHJ1ZSxcbiAgICAgIHBlcmNlbnRQb3NpdGlvbjogZmFsc2UsXG4gICAgICBwcmV2TmV4dEJ1dHRvbnM6IGZhbHNlLFxuICAgICAgcGFnZURvdHM6IGZhbHNlLFxuICAgICAgc2V0R2FsbGVyeVNpemU6IGZhbHNlLFxuICAgIH0pO1xuXG4gICAgdGhpcy5fYmluZFNsaWRlcigpO1xuICAgIHRoaXMuZmxpY2tpdHkucmVzaXplKCk7XG4gIH1cblxuICBfZGVzdHJveUZsaWNraXR5KCkge1xuICAgIGlmICghdGhpcy5mbGlja2l0eSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuJHdpbmRvdy5vZmYoJy5ibG9nLXBvc3RzJyk7XG4gICAgdGhpcy4kYmxvZ1Bvc3RzLm9mZignLmJsb2ctcG9zdHMnKTtcbiAgICB0aGlzLmZsaWNraXR5LmRlc3Ryb3koKTtcbiAgICB0aGlzLmZsaWNraXR5ID0gbnVsbDtcbiAgfVxuXG4gIF9tb2JpbGVTbGlkZXIoKSB7XG4gICAgLy8gSWYgaXMgTGFyZ2UgbGF5b3V0LCBhdHRlbXB0IHRvIGRlc3Ryb3kgZmxpY2tpdHlcbiAgICBpZiAoYnJlYWtwb2ludC5taW4oJ0wnKSkge1xuICAgICAgdGhpcy5fZGVzdHJveUZsaWNraXR5KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSXMgWFMvUy9NLCBhbmQgZmxpY2tpdHkgaXMgaW5pdCdkIC0tIGRvIG5vdGhpbmdcbiAgICBpZiAodGhpcy5mbGlja2l0eSkge1xuICAgICAgdGhpcy5mbGlja2l0eS5yZXNpemUoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJcyBYUy9TL00sIGFuZCBmbGlja2l0eSBpcyBub3QgaW5pdCdkXG4gICAgdGhpcy5faW5pdEZsaWNraXR5KCk7XG4gIH1cblxuICBfYmluZFNsaWRlcigpIHtcbiAgICBjb25zdCAkc2xpZGVyID0gdGhpcy4kYmxvZ1Bvc3RzLmZpbmQoJy5mbGlja2l0eS1zbGlkZXInKTtcblxuICAgIHRoaXMuJHdpbmRvdy5vbigncmVzaXplLmJsb2ctcG9zdHMnLCBkZWJvdW5jZSgoKSA9PiB7XG4gICAgICB0aGlzLiRibG9nUG9zdHMudHJpZ2dlcignaGVpZ2h0VXBkYXRlLmJsb2ctcG9zdHMnKTtcbiAgICB9KSk7XG5cbiAgICB0aGlzLmZsaWNraXR5Lm9uKCdjZWxsU2VsZWN0JywgKCkgPT4ge1xuICAgICAgdGhpcy4kYmxvZ1Bvc3RzLnRyaWdnZXIoJ2hlaWdodFVwZGF0ZS5ibG9nLXBvc3RzJyk7XG4gICAgfSk7XG5cbiAgICB0aGlzLiRibG9nUG9zdHMub24oJ2hlaWdodFVwZGF0ZS5ibG9nLXBvc3RzJywgKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmZsaWNraXR5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgJHNsaWRlci5oZWlnaHQoTWF0aC5jZWlsKHRoaXMuZmxpY2tpdHkubWF4Q2VsbEhlaWdodCkpO1xuICAgIH0pO1xuXG4gICAgLy8gU2V0cyB0aGUgU2xpZGVyIHRvIHRoZSBoZWlnaHQgb2YgdGhlIGZpcnN0IHNsaWRlXG4gICAgdGhpcy4kYmxvZ1Bvc3RzLnRyaWdnZXIoJ2hlaWdodFVwZGF0ZS5ibG9nLXBvc3RzJyk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicBlogPosts.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicCollectionList.js":
/*!**********************************************************!*\
  !*** ./source/scripts/sections/DynamicCollectionList.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicCollectionList; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DynamicCollectionList = /*#__PURE__*/function () {\n  function DynamicCollectionList(section) {\n    _classCallCheck(this, DynamicCollectionList);\n\n    this.el = section.el;\n    this.collections = this.el.querySelectorAll('.dynamic-collection-list--item');\n    this.showMoreButton = this.el.querySelector('.dynamic-collection-list--show-more-button');\n    this._showAllCollections = this._showAllCollections.bind(this);\n    this.showMoreButton.addEventListener('click', this._showAllCollections);\n  }\n\n  _createClass(DynamicCollectionList, [{\n    key: \"_applyClasses\",\n    value: function _applyClasses() {\n      var collections = this.collections;\n      collections.forEach(function (collection) {\n        collection.classList.add('active', 'active-mobile');\n      });\n    }\n  }, {\n    key: \"_showAllCollections\",\n    value: function _showAllCollections() {\n      this._applyClasses();\n\n      this.showMoreButton.classList.remove('active', 'active-mobile');\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.showMoreButton.removeEventListener('click', this._showAllCollections);\n    }\n  }]);\n\n  return DynamicCollectionList;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljQ29sbGVjdGlvbkxpc3QuanM/YTc1ZiJdLCJuYW1lcyI6WyJEeW5hbWljQ29sbGVjdGlvbkxpc3QiLCJzZWN0aW9uIiwiZWwiLCJjb2xsZWN0aW9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzaG93TW9yZUJ1dHRvbiIsInF1ZXJ5U2VsZWN0b3IiLCJfc2hvd0FsbENvbGxlY3Rpb25zIiwiYmluZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJmb3JFYWNoIiwiY29sbGVjdGlvbiIsImNsYXNzTGlzdCIsImFkZCIsIl9hcHBseUNsYXNzZXMiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztJQUFxQkEscUI7QUFDbkIsaUNBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFDbkIsU0FBS0MsRUFBTCxHQUFVRCxPQUFPLENBQUNDLEVBQWxCO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLRCxFQUFMLENBQVFFLGdCQUFSLENBQXlCLGdDQUF6QixDQUFuQjtBQUNBLFNBQUtDLGNBQUwsR0FBc0IsS0FBS0gsRUFBTCxDQUFRSSxhQUFSLENBQXNCLDRDQUF0QixDQUF0QjtBQUVBLFNBQUtDLG1CQUFMLEdBQTJCLEtBQUtBLG1CQUFMLENBQXlCQyxJQUF6QixDQUE4QixJQUE5QixDQUEzQjtBQUNBLFNBQUtILGNBQUwsQ0FBb0JJLGdCQUFwQixDQUFxQyxPQUFyQyxFQUE4QyxLQUFLRixtQkFBbkQ7QUFDRDs7OztvQ0FFZTtBQUNkLFVBQU1KLFdBQVcsR0FBRyxLQUFLQSxXQUF6QjtBQUVBQSxpQkFBVyxDQUFDTyxPQUFaLENBQW9CLFVBQUNDLFVBQUQsRUFBZ0I7QUFDbENBLGtCQUFVLENBQUNDLFNBQVgsQ0FBcUJDLEdBQXJCLENBQXlCLFFBQXpCLEVBQW1DLGVBQW5DO0FBQ0QsT0FGRDtBQUdEOzs7MENBRXFCO0FBQ3BCLFdBQUtDLGFBQUw7O0FBQ0EsV0FBS1QsY0FBTCxDQUFvQk8sU0FBcEIsQ0FBOEJHLE1BQTlCLENBQXFDLFFBQXJDLEVBQStDLGVBQS9DO0FBQ0Q7OztzQ0FFaUI7QUFDaEIsV0FBS1YsY0FBTCxDQUFvQlcsbUJBQXBCLENBQXdDLE9BQXhDLEVBQWlELEtBQUtULG1CQUF0RDtBQUNEIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvc2VjdGlvbnMvRHluYW1pY0NvbGxlY3Rpb25MaXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHluYW1pY0NvbGxlY3Rpb25MaXN0IHtcbiAgY29uc3RydWN0b3Ioc2VjdGlvbikge1xuICAgIHRoaXMuZWwgPSBzZWN0aW9uLmVsO1xuICAgIHRoaXMuY29sbGVjdGlvbnMgPSB0aGlzLmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5keW5hbWljLWNvbGxlY3Rpb24tbGlzdC0taXRlbScpO1xuICAgIHRoaXMuc2hvd01vcmVCdXR0b24gPSB0aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoJy5keW5hbWljLWNvbGxlY3Rpb24tbGlzdC0tc2hvdy1tb3JlLWJ1dHRvbicpO1xuXG4gICAgdGhpcy5fc2hvd0FsbENvbGxlY3Rpb25zID0gdGhpcy5fc2hvd0FsbENvbGxlY3Rpb25zLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zaG93TW9yZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX3Nob3dBbGxDb2xsZWN0aW9ucyk7ICBcbiAgfVxuXG4gIF9hcHBseUNsYXNzZXMoKSB7XG4gICAgY29uc3QgY29sbGVjdGlvbnMgPSB0aGlzLmNvbGxlY3Rpb25zO1xuXG4gICAgY29sbGVjdGlvbnMuZm9yRWFjaCgoY29sbGVjdGlvbikgPT4ge1xuICAgICAgY29sbGVjdGlvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnLCAnYWN0aXZlLW1vYmlsZScpO1xuICAgIH0pO1xuICB9XG5cbiAgX3Nob3dBbGxDb2xsZWN0aW9ucygpIHtcbiAgICB0aGlzLl9hcHBseUNsYXNzZXMoKTtcbiAgICB0aGlzLnNob3dNb3JlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScsICdhY3RpdmUtbW9iaWxlJyk7XG4gIH1cblxuICBvblNlY3Rpb25VbmxvYWQoKSB7XG4gICAgdGhpcy5zaG93TW9yZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX3Nob3dBbGxDb2xsZWN0aW9ucyk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicCollectionList.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicFeaturedCollection.js":
/*!**************************************************************!*\
  !*** ./source/scripts/sections/DynamicFeaturedCollection.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicFeaturedCollection; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/ProductReviews */ \"./source/scripts/helpers/ProductReviews.js\");\n/* harmony import */ var _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/ProductGridItem */ \"./source/scripts/components/ProductGridItem.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar DynamicFeaturedCollection = /*#__PURE__*/function () {\n  function DynamicFeaturedCollection(section) {\n    var _this = this;\n\n    _classCallCheck(this, DynamicFeaturedCollection);\n\n    this.section = section;\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.flickity = null;\n    this.contentEl = section.el.querySelector('[data-content]');\n    this.initialLayout = this.contentEl.dataset.layout;\n    this._initFlickity = this._initFlickity.bind(this);\n    this._destroyFlickity = this._destroyFlickity.bind(this); // Product items\n\n    this.productItems = [];\n    var $productItems = this.$el.find('[data-product-item]');\n    $productItems.each(function (i, productItem) {\n      var productData = JSON.parse(productItem.querySelector('[data-product-data]').innerHTML);\n\n      _this.productItems.push(new _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n        $el: jquery__WEBPACK_IMPORTED_MODULE_0___default()(productItem),\n        id: _this.section.id,\n        product: productData,\n        lazy: true\n      }));\n    });\n    var hasBanner = section.el.querySelector('[data-collection-banner]');\n    var minProductCount = 5;\n\n    if (hasBanner) {\n      minProductCount = 4;\n    }\n\n    if (this.productItems.length > minProductCount && this.initialLayout === 'slideshow') {\n      this._initFlickity();\n    } else {\n      this.onBreakpointChange = function () {\n        var useSlideshow = _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"max\"]('L');\n\n        if (useSlideshow) {\n          _this.contentEl.dataset.layout = 'slideshow';\n          window.requestAnimationFrame(function () {\n            return _this._initFlickity();\n          });\n        } else {\n          _this.contentEl.dataset.layout = 'grid';\n\n          _this._destroyFlickity();\n        }\n      };\n\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"onChange\"](this.onBreakpointChange);\n\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"max\"]('L')) {\n        window.requestAnimationFrame(function () {\n          return _this._initFlickity();\n        });\n      }\n    }\n\n    if (this.$el.find('.spr-badge').length) {\n      Object(_helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    }\n  }\n\n  _createClass(DynamicFeaturedCollection, [{\n    key: \"_initFlickity\",\n    value: function _initFlickity() {\n      var _this2 = this;\n\n      if (this.flickity) return; // Already initialized\n\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_1___default.a(this.contentEl, {\n        autoPlay: 0,\n        accessibility: true,\n        cellAlign: 'left',\n        cellSelector: '.productgrid--item',\n        groupCells: true,\n        pageDots: false,\n        contain: true,\n        arrowShape: 'M65.29 11.99L27.28 50L65.3 87.99L70.25 83.06L37.19 50L70.26 16.94L65.29 11.99Z'\n      });\n      var resize = flickity__WEBPACK_IMPORTED_MODULE_1___default.a.prototype.resize;\n      var viewport = this.contentEl.querySelector('.flickity-viewport');\n      var slider = this.contentEl.querySelector('.flickity-slider');\n      /*\n       * We must wrap Flickity's slider element to allow the usage of\n       * clip, and clip-path to obscure the overflow product items.\n       * To use clip, and clip-path, the clipped element must be absolutely\n       * positioned. In this case, the only native Flickity element\n       * that is absolutely positioned is the slider; but, it moves with the first\n       * slide rather than remaining in the viewport removing it as a candidate.\n       * Therefore, it is necessary to include a wrapper element that we can\n       * absolutely position that remains within the viewport.\n       * The only thing we need to watch out for is that the elements\n       * are moved in a non-destructive manner.\n       */\n\n      var sliderWrapper = document.createElement('div');\n      sliderWrapper.classList.add('flickity-slider--wrapper');\n      viewport.appendChild(sliderWrapper);\n      sliderWrapper.appendChild(slider);\n\n      this.flickity.resize = function r() {\n        viewport.style.height = '';\n        resize.call(this);\n      };\n\n      this.$el.on('rimg:load', function () {\n        return _this2.flickity.resize();\n      });\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this._destroyFlickity();\n\n      this.productItems.forEach(function (productItem) {\n        productItem.unload();\n      });\n    }\n  }, {\n    key: \"_destroyFlickity\",\n    value: function _destroyFlickity() {\n      if (!this.flickity) return; // Already uninitialized\n\n      this.contentEl.dataset.layout = this.initialLayout;\n      var viewport = this.contentEl.querySelector('.flickity-viewport');\n      var slider = this.contentEl.querySelector('.flickity-slider');\n      /*\n       * Remember to move the Flickity native elements back\n       * into the correct DOM layout, before removing the added\n       * wrapper.\n       */\n\n      var sliderWrapper = this.contentEl.querySelector('.flickity-slider--wrapper');\n      viewport.appendChild(slider);\n      viewport.removeChild(sliderWrapper);\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n  }]);\n\n  return DynamicFeaturedCollection;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicFeaturedCollection.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicHighlightsBanners.js":
/*!*************************************************************!*\
  !*** ./source/scripts/sections/DynamicHighlightsBanners.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicHighlightsBanners; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar DynamicHighlightsBanners = /*#__PURE__*/function () {\n  function DynamicHighlightsBanners(section) {\n    _classCallCheck(this, DynamicHighlightsBanners);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.$carousel = this.$el.find('.highlights-banners');\n    this.slides = '.highlights-banners-block';\n    this.flickity = null;\n    this.flickityOptions = null;\n\n    if (this.$carousel.find(this.slides).length > 1) {\n      this._initSlider();\n    }\n  }\n\n  _createClass(DynamicHighlightsBanners, [{\n    key: \"_initSlider\",\n    value: function _initSlider() {\n      this.flickityOptions = {\n        autoPlay: 0,\n        accessibility: true,\n        cellAlign: 'center',\n        cellSelector: this.slides,\n        pageDots: false,\n        prevNextButtons: false,\n        contain: true\n      };\n\n      this._bindFlickity();\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this._destroyFlickity();\n\n      this.$window.off('.twitter');\n    }\n  }, {\n    key: \"_bindFlickity\",\n    value: function _bindFlickity() {\n      var _this = this;\n\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__[\"min\"]('L') === false && this.flickity === null) {\n        this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_2___default.a(this.$carousel[0], this.flickityOptions);\n      }\n\n      this.$window.on('resize', just_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n        if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__[\"min\"]('L') === false && _this.flickity === null) {\n          _this._bindFlickity();\n        } else if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_3__[\"min\"]('L') && _this.flickity) {\n          _this._destroyFlickity();\n        }\n      }));\n    }\n  }, {\n    key: \"_destroyFlickity\",\n    value: function _destroyFlickity() {\n      if (!this.flickity) {\n        return;\n      }\n\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n  }]);\n\n  return DynamicHighlightsBanners;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljSGlnaGxpZ2h0c0Jhbm5lcnMuanM/ZmJiNyJdLCJuYW1lcyI6WyJEeW5hbWljSGlnaGxpZ2h0c0Jhbm5lcnMiLCJzZWN0aW9uIiwiJGVsIiwiJCIsImVsIiwiJHdpbmRvdyIsIndpbmRvdyIsIiRjYXJvdXNlbCIsImZpbmQiLCJzbGlkZXMiLCJmbGlja2l0eSIsImZsaWNraXR5T3B0aW9ucyIsImxlbmd0aCIsIl9pbml0U2xpZGVyIiwiYXV0b1BsYXkiLCJhY2Nlc3NpYmlsaXR5IiwiY2VsbEFsaWduIiwiY2VsbFNlbGVjdG9yIiwicGFnZURvdHMiLCJwcmV2TmV4dEJ1dHRvbnMiLCJjb250YWluIiwiX2JpbmRGbGlja2l0eSIsIl9kZXN0cm95RmxpY2tpdHkiLCJvZmYiLCJicmVha3BvaW50IiwiRmxpY2tpdHkiLCJvbiIsImRlYm91bmNlIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztJQUVxQkEsd0I7QUFDbkIsb0NBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFDbkIsU0FBS0MsR0FBTCxHQUFXQyw2Q0FBQyxDQUFDRixPQUFPLENBQUNHLEVBQVQsQ0FBWjtBQUNBLFNBQUtDLE9BQUwsR0FBZUYsNkNBQUMsQ0FBQ0csTUFBRCxDQUFoQjtBQUVBLFNBQUtDLFNBQUwsR0FBaUIsS0FBS0wsR0FBTCxDQUFTTSxJQUFULENBQWMscUJBQWQsQ0FBakI7QUFDQSxTQUFLQyxNQUFMLEdBQWMsMkJBQWQ7QUFFQSxTQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsU0FBS0MsZUFBTCxHQUF1QixJQUF2Qjs7QUFFQSxRQUFJLEtBQUtKLFNBQUwsQ0FBZUMsSUFBZixDQUFvQixLQUFLQyxNQUF6QixFQUFpQ0csTUFBakMsR0FBMEMsQ0FBOUMsRUFBaUQ7QUFDL0MsV0FBS0MsV0FBTDtBQUNEO0FBQ0Y7Ozs7a0NBRWE7QUFDWixXQUFLRixlQUFMLEdBQXVCO0FBQ3JCRyxnQkFBUSxFQUFFLENBRFc7QUFFckJDLHFCQUFhLEVBQUUsSUFGTTtBQUdyQkMsaUJBQVMsRUFBRSxRQUhVO0FBSXJCQyxvQkFBWSxFQUFFLEtBQUtSLE1BSkU7QUFLckJTLGdCQUFRLEVBQUUsS0FMVztBQU1yQkMsdUJBQWUsRUFBRSxLQU5JO0FBT3JCQyxlQUFPLEVBQUU7QUFQWSxPQUF2Qjs7QUFVQSxXQUFLQyxhQUFMO0FBQ0Q7OztzQ0FFaUI7QUFDaEIsV0FBS0MsZ0JBQUw7O0FBQ0EsV0FBS2pCLE9BQUwsQ0FBYWtCLEdBQWIsQ0FBaUIsVUFBakI7QUFDRDs7O29DQUVlO0FBQUE7O0FBQ2QsVUFBSUMsMERBQUEsQ0FBZSxHQUFmLE1BQXdCLEtBQXhCLElBQWlDLEtBQUtkLFFBQUwsS0FBa0IsSUFBdkQsRUFBNkQ7QUFDM0QsYUFBS0EsUUFBTCxHQUFnQixJQUFJZSwrQ0FBSixDQUFhLEtBQUtsQixTQUFMLENBQWUsQ0FBZixDQUFiLEVBQWdDLEtBQUtJLGVBQXJDLENBQWhCO0FBQ0Q7O0FBRUQsV0FBS04sT0FBTCxDQUFhcUIsRUFBYixDQUFnQixRQUFoQixFQUEwQkMsb0RBQVEsQ0FBQyxZQUFNO0FBQ3ZDLFlBQUlILDBEQUFBLENBQWUsR0FBZixNQUF3QixLQUF4QixJQUFpQyxLQUFJLENBQUNkLFFBQUwsS0FBa0IsSUFBdkQsRUFBNkQ7QUFDM0QsZUFBSSxDQUFDVyxhQUFMO0FBQ0QsU0FGRCxNQUVPLElBQUlHLDBEQUFBLENBQWUsR0FBZixLQUF1QixLQUFJLENBQUNkLFFBQWhDLEVBQTBDO0FBQy9DLGVBQUksQ0FBQ1ksZ0JBQUw7QUFDRDtBQUNGLE9BTmlDLENBQWxDO0FBT0Q7Ozt1Q0FFa0I7QUFDakIsVUFBSSxDQUFDLEtBQUtaLFFBQVYsRUFBb0I7QUFDbEI7QUFDRDs7QUFFRCxXQUFLQSxRQUFMLENBQWNrQixPQUFkO0FBQ0EsV0FBS2xCLFFBQUwsR0FBZ0IsSUFBaEI7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL0R5bmFtaWNIaWdobGlnaHRzQmFubmVycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnanVzdC1kZWJvdW5jZSc7XG5pbXBvcnQgRmxpY2tpdHkgZnJvbSAnZmxpY2tpdHknO1xuaW1wb3J0ICogYXMgYnJlYWtwb2ludCBmcm9tICdAcGl4ZWx1bmlvbi9icmVha3BvaW50JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHluYW1pY0hpZ2hsaWdodHNCYW5uZXJzIHtcbiAgY29uc3RydWN0b3Ioc2VjdGlvbikge1xuICAgIHRoaXMuJGVsID0gJChzZWN0aW9uLmVsKTtcbiAgICB0aGlzLiR3aW5kb3cgPSAkKHdpbmRvdyk7XG5cbiAgICB0aGlzLiRjYXJvdXNlbCA9IHRoaXMuJGVsLmZpbmQoJy5oaWdobGlnaHRzLWJhbm5lcnMnKTtcbiAgICB0aGlzLnNsaWRlcyA9ICcuaGlnaGxpZ2h0cy1iYW5uZXJzLWJsb2NrJztcblxuICAgIHRoaXMuZmxpY2tpdHkgPSBudWxsO1xuICAgIHRoaXMuZmxpY2tpdHlPcHRpb25zID0gbnVsbDtcblxuICAgIGlmICh0aGlzLiRjYXJvdXNlbC5maW5kKHRoaXMuc2xpZGVzKS5sZW5ndGggPiAxKSB7XG4gICAgICB0aGlzLl9pbml0U2xpZGVyKCk7XG4gICAgfVxuICB9XG5cbiAgX2luaXRTbGlkZXIoKSB7XG4gICAgdGhpcy5mbGlja2l0eU9wdGlvbnMgPSB7XG4gICAgICBhdXRvUGxheTogMCxcbiAgICAgIGFjY2Vzc2liaWxpdHk6IHRydWUsXG4gICAgICBjZWxsQWxpZ246ICdjZW50ZXInLFxuICAgICAgY2VsbFNlbGVjdG9yOiB0aGlzLnNsaWRlcyxcbiAgICAgIHBhZ2VEb3RzOiBmYWxzZSxcbiAgICAgIHByZXZOZXh0QnV0dG9uczogZmFsc2UsXG4gICAgICBjb250YWluOiB0cnVlLFxuICAgIH07XG5cbiAgICB0aGlzLl9iaW5kRmxpY2tpdHkoKTtcbiAgfVxuXG4gIG9uU2VjdGlvblVubG9hZCgpIHtcbiAgICB0aGlzLl9kZXN0cm95RmxpY2tpdHkoKTtcbiAgICB0aGlzLiR3aW5kb3cub2ZmKCcudHdpdHRlcicpO1xuICB9XG5cbiAgX2JpbmRGbGlja2l0eSgpIHtcbiAgICBpZiAoYnJlYWtwb2ludC5taW4oJ0wnKSA9PT0gZmFsc2UgJiYgdGhpcy5mbGlja2l0eSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5mbGlja2l0eSA9IG5ldyBGbGlja2l0eSh0aGlzLiRjYXJvdXNlbFswXSwgdGhpcy5mbGlja2l0eU9wdGlvbnMpO1xuICAgIH1cblxuICAgIHRoaXMuJHdpbmRvdy5vbigncmVzaXplJywgZGVib3VuY2UoKCkgPT4ge1xuICAgICAgaWYgKGJyZWFrcG9pbnQubWluKCdMJykgPT09IGZhbHNlICYmIHRoaXMuZmxpY2tpdHkgPT09IG51bGwpIHtcbiAgICAgICAgdGhpcy5fYmluZEZsaWNraXR5KCk7XG4gICAgICB9IGVsc2UgaWYgKGJyZWFrcG9pbnQubWluKCdMJykgJiYgdGhpcy5mbGlja2l0eSkge1xuICAgICAgICB0aGlzLl9kZXN0cm95RmxpY2tpdHkoKTtcbiAgICAgIH1cbiAgICB9KSk7XG4gIH1cblxuICBfZGVzdHJveUZsaWNraXR5KCkge1xuICAgIGlmICghdGhpcy5mbGlja2l0eSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuZmxpY2tpdHkuZGVzdHJveSgpO1xuICAgIHRoaXMuZmxpY2tpdHkgPSBudWxsO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicHighlightsBanners.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicMap.js":
/*!***********************************************!*\
  !*** ./source/scripts/sections/DynamicMap.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicMap; });\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helpers_mapUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/mapUtils */ \"./source/scripts/helpers/mapUtils.js\");\n/* harmony import */ var _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/LazyLoader */ \"./source/scripts/helpers/LazyLoader.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar DynamicMap = /*#__PURE__*/function () {\n  function DynamicMap(section) {\n    var _this = this;\n\n    _classCallCheck(this, DynamicMap);\n\n    var initMap = function initMap() {\n      _this.map = null;\n      var el = section.el.querySelector('[data-map]');\n      var container = el.querySelector('[data-map-container]');\n      var settings = section.data;\n      var address = settings.address,\n          colors = settings.colors;\n      var apiKey = settings.api_key; // Scale so range is 12 ~ 17, rather than 1 to 6\n\n      var zoom = Number.isNaN(settings.zoom) ? 13 : 11 + parseInt(settings.zoom, 10);\n\n      if (apiKey) {\n        if (window.googleMaps === undefined) {\n          scriptjs__WEBPACK_IMPORTED_MODULE_0___default()(\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey), function () {\n            window.googleMaps = true;\n            Object(_helpers_mapUtils__WEBPACK_IMPORTED_MODULE_1__[\"createMap\"])({\n              container: container,\n              address: address,\n              zoom: zoom,\n              colors: colors\n            }).done(function (map) {\n              _this.map = map;\n            }).fail(function (error) {\n              return Object(_helpers_mapUtils__WEBPACK_IMPORTED_MODULE_1__[\"displayErrorInThemeEditor\"])(container, error);\n            });\n          });\n        } else {\n          Object(_helpers_mapUtils__WEBPACK_IMPORTED_MODULE_1__[\"createMap\"])({\n            container: container,\n            address: address,\n            zoom: zoom,\n            colors: colors\n          }).done(function (map) {\n            _this.map = map;\n          }).fail(function (error) {\n            return Object(_helpers_mapUtils__WEBPACK_IMPORTED_MODULE_1__[\"displayErrorInThemeEditor\"])(container, error);\n          });\n        }\n      }\n    };\n\n    this.lazyLoader = new _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_2__[\"default\"](section.el, initMap);\n  }\n\n  _createClass(DynamicMap, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.map = null;\n      this.lazyLoader.unload();\n    }\n  }]);\n\n  return DynamicMap;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljTWFwLmpzPzRjNTUiXSwibmFtZXMiOlsiRHluYW1pY01hcCIsInNlY3Rpb24iLCJpbml0TWFwIiwibWFwIiwiZWwiLCJxdWVyeVNlbGVjdG9yIiwiY29udGFpbmVyIiwic2V0dGluZ3MiLCJkYXRhIiwiYWRkcmVzcyIsImNvbG9ycyIsImFwaUtleSIsImFwaV9rZXkiLCJ6b29tIiwiTnVtYmVyIiwiaXNOYU4iLCJwYXJzZUludCIsIndpbmRvdyIsImdvb2dsZU1hcHMiLCJ1bmRlZmluZWQiLCIkc2NyaXB0IiwiY3JlYXRlTWFwIiwiZG9uZSIsImZhaWwiLCJlcnJvciIsImRpc3BsYXlFcnJvckluVGhlbWVFZGl0b3IiLCJsYXp5TG9hZGVyIiwiTGF6eUxvYWRlciIsInVubG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOztJQUVxQkEsVTtBQUNuQixzQkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUFBOztBQUNuQixRQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxHQUFNO0FBQ3BCLFdBQUksQ0FBQ0MsR0FBTCxHQUFXLElBQVg7QUFFQSxVQUFNQyxFQUFFLEdBQUdILE9BQU8sQ0FBQ0csRUFBUixDQUFXQyxhQUFYLENBQXlCLFlBQXpCLENBQVg7QUFDQSxVQUFNQyxTQUFTLEdBQUdGLEVBQUUsQ0FBQ0MsYUFBSCxDQUFpQixzQkFBakIsQ0FBbEI7QUFDQSxVQUFNRSxRQUFRLEdBQUdOLE9BQU8sQ0FBQ08sSUFBekI7QUFMb0IsVUFNWkMsT0FOWSxHQU1RRixRQU5SLENBTVpFLE9BTlk7QUFBQSxVQU1IQyxNQU5HLEdBTVFILFFBTlIsQ0FNSEcsTUFORztBQU9wQixVQUFNQyxNQUFNLEdBQUdKLFFBQVEsQ0FBQ0ssT0FBeEIsQ0FQb0IsQ0FRcEI7O0FBQ0EsVUFBTUMsSUFBSSxHQUFHQyxNQUFNLENBQUNDLEtBQVAsQ0FBYVIsUUFBUSxDQUFDTSxJQUF0QixJQUE4QixFQUE5QixHQUFtQyxLQUFLRyxRQUFRLENBQUNULFFBQVEsQ0FBQ00sSUFBVixFQUFnQixFQUFoQixDQUE3RDs7QUFFQSxVQUFJRixNQUFKLEVBQVk7QUFDVixZQUFJTSxNQUFNLENBQUNDLFVBQVAsS0FBc0JDLFNBQTFCLEVBQXFDO0FBQ25DQyx5REFBTyx1REFBZ0RULE1BQWhELEdBQTBELFlBQU07QUFDckVNLGtCQUFNLENBQUNDLFVBQVAsR0FBb0IsSUFBcEI7QUFDQUcsK0VBQVMsQ0FBQztBQUNSZix1QkFBUyxFQUFUQSxTQURRO0FBRVJHLHFCQUFPLEVBQVBBLE9BRlE7QUFHUkksa0JBQUksRUFBSkEsSUFIUTtBQUlSSCxvQkFBTSxFQUFOQTtBQUpRLGFBQUQsQ0FBVCxDQUtHWSxJQUxILENBS1EsVUFBQ25CLEdBQUQsRUFBUztBQUNmLG1CQUFJLENBQUNBLEdBQUwsR0FBV0EsR0FBWDtBQUNELGFBUEQsRUFPR29CLElBUEgsQ0FPUSxVQUFBQyxLQUFLO0FBQUEscUJBQUlDLG1GQUF5QixDQUFDbkIsU0FBRCxFQUFZa0IsS0FBWixDQUE3QjtBQUFBLGFBUGI7QUFRRCxXQVZNLENBQVA7QUFXRCxTQVpELE1BWU87QUFDTEgsNkVBQVMsQ0FBQztBQUNSZixxQkFBUyxFQUFUQSxTQURRO0FBRVJHLG1CQUFPLEVBQVBBLE9BRlE7QUFHUkksZ0JBQUksRUFBSkEsSUFIUTtBQUlSSCxrQkFBTSxFQUFOQTtBQUpRLFdBQUQsQ0FBVCxDQUtHWSxJQUxILENBS1EsVUFBQ25CLEdBQUQsRUFBUztBQUNmLGlCQUFJLENBQUNBLEdBQUwsR0FBV0EsR0FBWDtBQUNELFdBUEQsRUFPR29CLElBUEgsQ0FPUSxVQUFBQyxLQUFLO0FBQUEsbUJBQUlDLG1GQUF5QixDQUFDbkIsU0FBRCxFQUFZa0IsS0FBWixDQUE3QjtBQUFBLFdBUGI7QUFRRDtBQUNGO0FBQ0YsS0FuQ0Q7O0FBcUNBLFNBQUtFLFVBQUwsR0FBa0IsSUFBSUMsMkRBQUosQ0FBZTFCLE9BQU8sQ0FBQ0csRUFBdkIsRUFBMkJGLE9BQTNCLENBQWxCO0FBQ0Q7Ozs7c0NBRWlCO0FBQ2hCLFdBQUtDLEdBQUwsR0FBVyxJQUFYO0FBQ0EsV0FBS3VCLFVBQUwsQ0FBZ0JFLE1BQWhCO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljTWFwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICRzY3JpcHQgZnJvbSAnc2NyaXB0anMnO1xuaW1wb3J0IHsgY3JlYXRlTWFwLCBkaXNwbGF5RXJyb3JJblRoZW1lRWRpdG9yIH0gZnJvbSAnLi4vaGVscGVycy9tYXBVdGlscyc7XG5pbXBvcnQgTGF6eUxvYWRlciBmcm9tICcuLi9oZWxwZXJzL0xhenlMb2FkZXInO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEeW5hbWljTWFwIHtcbiAgY29uc3RydWN0b3Ioc2VjdGlvbikge1xuICAgIGNvbnN0IGluaXRNYXAgPSAoKSA9PiB7XG4gICAgICB0aGlzLm1hcCA9IG51bGw7XG5cbiAgICAgIGNvbnN0IGVsID0gc2VjdGlvbi5lbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tYXBdJyk7XG4gICAgICBjb25zdCBjb250YWluZXIgPSBlbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tYXAtY29udGFpbmVyXScpO1xuICAgICAgY29uc3Qgc2V0dGluZ3MgPSBzZWN0aW9uLmRhdGE7XG4gICAgICBjb25zdCB7IGFkZHJlc3MsIGNvbG9ycyB9ID0gc2V0dGluZ3M7XG4gICAgICBjb25zdCBhcGlLZXkgPSBzZXR0aW5ncy5hcGlfa2V5O1xuICAgICAgLy8gU2NhbGUgc28gcmFuZ2UgaXMgMTIgfiAxNywgcmF0aGVyIHRoYW4gMSB0byA2XG4gICAgICBjb25zdCB6b29tID0gTnVtYmVyLmlzTmFOKHNldHRpbmdzLnpvb20pID8gMTMgOiAxMSArIHBhcnNlSW50KHNldHRpbmdzLnpvb20sIDEwKTtcblxuICAgICAgaWYgKGFwaUtleSkge1xuICAgICAgICBpZiAod2luZG93Lmdvb2dsZU1hcHMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICRzY3JpcHQoYGh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9JHthcGlLZXl9YCwgKCkgPT4ge1xuICAgICAgICAgICAgd2luZG93Lmdvb2dsZU1hcHMgPSB0cnVlO1xuICAgICAgICAgICAgY3JlYXRlTWFwKHtcbiAgICAgICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgICAgICB6b29tLFxuICAgICAgICAgICAgICBjb2xvcnMsXG4gICAgICAgICAgICB9KS5kb25lKChtYXApID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5tYXAgPSBtYXA7XG4gICAgICAgICAgICB9KS5mYWlsKGVycm9yID0+IGRpc3BsYXlFcnJvckluVGhlbWVFZGl0b3IoY29udGFpbmVyLCBlcnJvcikpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNyZWF0ZU1hcCh7XG4gICAgICAgICAgICBjb250YWluZXIsXG4gICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgICAgem9vbSxcbiAgICAgICAgICAgIGNvbG9ycyxcbiAgICAgICAgICB9KS5kb25lKChtYXApID0+IHtcbiAgICAgICAgICAgIHRoaXMubWFwID0gbWFwO1xuICAgICAgICAgIH0pLmZhaWwoZXJyb3IgPT4gZGlzcGxheUVycm9ySW5UaGVtZUVkaXRvcihjb250YWluZXIsIGVycm9yKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5sYXp5TG9hZGVyID0gbmV3IExhenlMb2FkZXIoc2VjdGlvbi5lbCwgaW5pdE1hcCk7XG4gIH1cblxuICBvblNlY3Rpb25VbmxvYWQoKSB7XG4gICAgdGhpcy5tYXAgPSBudWxsO1xuICAgIHRoaXMubGF6eUxvYWRlci51bmxvYWQoKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicMap.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicMenuList.js":
/*!****************************************************!*\
  !*** ./source/scripts/sections/DynamicMenuList.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicMenuList; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Accordion */ \"./source/scripts/Accordion.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar DynamicMenuList = /*#__PURE__*/function () {\n  function DynamicMenuList(section) {\n    _classCallCheck(this, DynamicMenuList);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.context = section.data.context;\n    this.Accordion = new _Accordion__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.$el); // Handle Accordion interaction when window size changes\n\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"onChange\"](this.layoutHandler);\n\n    this._bindEvents();\n  }\n\n  _createClass(DynamicMenuList, [{\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this = this;\n\n      this.$el.on('click.menu-list', '[data-accordion-trigger]', function (event) {\n        event.preventDefault();\n\n        _this._toggleAccordion(jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).parent());\n      });\n      this.$el.on('click.menu-list', '[data-menulist-toggle]', function (event) {\n        event.preventDefault();\n\n        _this._toggleList(event.currentTarget);\n      });\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.$el.off('.menu-list');\n      delete this.Accordion;\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect(block) {\n      this._toggleAccordion(jquery__WEBPACK_IMPORTED_MODULE_0___default()(block.el), true);\n    }\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect(block) {\n      this._toggleAccordion(jquery__WEBPACK_IMPORTED_MODULE_0___default()(block.el), false);\n    }\n  }, {\n    key: \"_toggleAccordion\",\n    value: function _toggleAccordion($block) {\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) return;\n      this.Accordion.toggle($block);\n    }\n  }, {\n    key: \"_toggleList\",\n    value: function _toggleList(el) {\n      var $trigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n      var $items = $trigger.parent().siblings('[data-hidden-default]');\n      var siblingsVisible = $trigger.data('menulist-toggle');\n      $items.toggleClass('menulist--menu-item-hidden', siblingsVisible);\n      $trigger.data('menulist-toggle', !siblingsVisible).text(!siblingsVisible ? this.context.see_less : this.context.see_more);\n    }\n  }, {\n    key: \"onBreakpointChange\",\n    value: function onBreakpointChange(breakpoints) {\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) {\n        this.Accordion.openAll();\n      } else if (breakpoints.previous === 'L' && !_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) {\n        this.Accordion.closeOpen();\n      }\n    }\n  }]);\n\n  return DynamicMenuList;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljTWVudUxpc3QuanM/ZWYxMyJdLCJuYW1lcyI6WyJEeW5hbWljTWVudUxpc3QiLCJzZWN0aW9uIiwiJGVsIiwiJCIsImVsIiwiY29udGV4dCIsImRhdGEiLCJBY2NvcmRpb24iLCJsYXlvdXRIYW5kbGVyIiwib25CcmVha3BvaW50Q2hhbmdlIiwiYmluZCIsImJyZWFrcG9pbnQiLCJfYmluZEV2ZW50cyIsIm9uIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIl90b2dnbGVBY2NvcmRpb24iLCJjdXJyZW50VGFyZ2V0IiwicGFyZW50IiwiX3RvZ2dsZUxpc3QiLCJvZmYiLCJibG9jayIsIiRibG9jayIsInRvZ2dsZSIsIiR0cmlnZ2VyIiwiJGl0ZW1zIiwic2libGluZ3MiLCJzaWJsaW5nc1Zpc2libGUiLCJ0b2dnbGVDbGFzcyIsInRleHQiLCJzZWVfbGVzcyIsInNlZV9tb3JlIiwiYnJlYWtwb2ludHMiLCJvcGVuQWxsIiwicHJldmlvdXMiLCJjbG9zZU9wZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7O0lBRXFCQSxlO0FBQ25CLDJCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtDLEdBQUwsR0FBV0MsNkNBQUMsQ0FBQ0YsT0FBTyxDQUFDRyxFQUFULENBQVo7QUFDQSxTQUFLQyxPQUFMLEdBQWVKLE9BQU8sQ0FBQ0ssSUFBUixDQUFhRCxPQUE1QjtBQUNBLFNBQUtFLFNBQUwsR0FBaUIsSUFBSUEsa0RBQUosQ0FBYyxLQUFLTCxHQUFuQixDQUFqQixDQUhtQixDQUtuQjs7QUFDQSxTQUFLTSxhQUFMLEdBQXFCLEtBQUtDLGtCQUFMLENBQXdCQyxJQUF4QixDQUE2QixJQUE3QixDQUFyQjtBQUNBQyxtRUFBQSxDQUFvQixLQUFLSCxhQUF6Qjs7QUFFQSxTQUFLSSxXQUFMO0FBQ0Q7Ozs7a0NBRWE7QUFBQTs7QUFDWixXQUFLVixHQUFMLENBQVNXLEVBQVQsQ0FBWSxpQkFBWixFQUErQiwwQkFBL0IsRUFBMkQsVUFBQUMsS0FBSyxFQUFJO0FBQ2xFQSxhQUFLLENBQUNDLGNBQU47O0FBQ0EsYUFBSSxDQUFDQyxnQkFBTCxDQUFzQmIsNkNBQUMsQ0FBQ1csS0FBSyxDQUFDRyxhQUFQLENBQUQsQ0FBdUJDLE1BQXZCLEVBQXRCO0FBQ0QsT0FIRDtBQUtBLFdBQUtoQixHQUFMLENBQVNXLEVBQVQsQ0FBWSxpQkFBWixFQUErQix3QkFBL0IsRUFBeUQsVUFBQUMsS0FBSyxFQUFJO0FBQ2hFQSxhQUFLLENBQUNDLGNBQU47O0FBQ0EsYUFBSSxDQUFDSSxXQUFMLENBQWlCTCxLQUFLLENBQUNHLGFBQXZCO0FBQ0QsT0FIRDtBQUlEOzs7c0NBRWlCO0FBQ2hCLFdBQUtmLEdBQUwsQ0FBU2tCLEdBQVQsQ0FBYSxZQUFiO0FBRUEsYUFBTyxLQUFLYixTQUFaO0FBQ0Q7Ozt5Q0FFb0JjLEssRUFBTztBQUMxQixXQUFLTCxnQkFBTCxDQUFzQmIsNkNBQUMsQ0FBQ2tCLEtBQUssQ0FBQ2pCLEVBQVAsQ0FBdkIsRUFBbUMsSUFBbkM7QUFDRDs7OzJDQUVzQmlCLEssRUFBTztBQUM1QixXQUFLTCxnQkFBTCxDQUFzQmIsNkNBQUMsQ0FBQ2tCLEtBQUssQ0FBQ2pCLEVBQVAsQ0FBdkIsRUFBbUMsS0FBbkM7QUFDRDs7O3FDQUVnQmtCLE0sRUFBUTtBQUN2QixVQUFJWCwwREFBQSxDQUFlLEdBQWYsQ0FBSixFQUF5QjtBQUV6QixXQUFLSixTQUFMLENBQWVnQixNQUFmLENBQXNCRCxNQUF0QjtBQUNEOzs7Z0NBRVdsQixFLEVBQUk7QUFDZCxVQUFNb0IsUUFBUSxHQUFHckIsNkNBQUMsQ0FBQ0MsRUFBRCxDQUFsQjtBQUNBLFVBQU1xQixNQUFNLEdBQUdELFFBQVEsQ0FBQ04sTUFBVCxHQUFrQlEsUUFBbEIsQ0FBMkIsdUJBQTNCLENBQWY7QUFDQSxVQUFNQyxlQUFlLEdBQUdILFFBQVEsQ0FBQ2xCLElBQVQsQ0FBYyxpQkFBZCxDQUF4QjtBQUVBbUIsWUFBTSxDQUFDRyxXQUFQLENBQW1CLDRCQUFuQixFQUFpREQsZUFBakQ7QUFDQUgsY0FBUSxDQUNMbEIsSUFESCxDQUNRLGlCQURSLEVBQzJCLENBQUNxQixlQUQ1QixFQUVHRSxJQUZILENBRVEsQ0FBQ0YsZUFBRCxHQUFtQixLQUFLdEIsT0FBTCxDQUFheUIsUUFBaEMsR0FBMkMsS0FBS3pCLE9BQUwsQ0FBYTBCLFFBRmhFO0FBR0Q7Ozt1Q0FFa0JDLFcsRUFBYTtBQUM5QixVQUFJckIsMERBQUEsQ0FBZSxHQUFmLENBQUosRUFBeUI7QUFDdkIsYUFBS0osU0FBTCxDQUFlMEIsT0FBZjtBQUNELE9BRkQsTUFFTyxJQUFJRCxXQUFXLENBQUNFLFFBQVosS0FBeUIsR0FBekIsSUFBZ0MsQ0FBQ3ZCLDBEQUFBLENBQWUsR0FBZixDQUFyQyxFQUEwRDtBQUMvRCxhQUFLSixTQUFMLENBQWU0QixTQUFmO0FBQ0Q7QUFDRiIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL0R5bmFtaWNNZW51TGlzdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgKiBhcyBicmVha3BvaW50IGZyb20gJ0BwaXhlbHVuaW9uL2JyZWFrcG9pbnQnO1xuXG5pbXBvcnQgQWNjb3JkaW9uIGZyb20gJy4uL0FjY29yZGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIER5bmFtaWNNZW51TGlzdCB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLiRlbCA9ICQoc2VjdGlvbi5lbCk7XG4gICAgdGhpcy5jb250ZXh0ID0gc2VjdGlvbi5kYXRhLmNvbnRleHQ7XG4gICAgdGhpcy5BY2NvcmRpb24gPSBuZXcgQWNjb3JkaW9uKHRoaXMuJGVsKTtcblxuICAgIC8vIEhhbmRsZSBBY2NvcmRpb24gaW50ZXJhY3Rpb24gd2hlbiB3aW5kb3cgc2l6ZSBjaGFuZ2VzXG4gICAgdGhpcy5sYXlvdXRIYW5kbGVyID0gdGhpcy5vbkJyZWFrcG9pbnRDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICBicmVha3BvaW50Lm9uQ2hhbmdlKHRoaXMubGF5b3V0SGFuZGxlcik7XG5cbiAgICB0aGlzLl9iaW5kRXZlbnRzKCk7XG4gIH1cblxuICBfYmluZEV2ZW50cygpIHtcbiAgICB0aGlzLiRlbC5vbignY2xpY2subWVudS1saXN0JywgJ1tkYXRhLWFjY29yZGlvbi10cmlnZ2VyXScsIGV2ZW50ID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl90b2dnbGVBY2NvcmRpb24oJChldmVudC5jdXJyZW50VGFyZ2V0KS5wYXJlbnQoKSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLiRlbC5vbignY2xpY2subWVudS1saXN0JywgJ1tkYXRhLW1lbnVsaXN0LXRvZ2dsZV0nLCBldmVudCA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5fdG9nZ2xlTGlzdChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uU2VjdGlvblVubG9hZCgpIHtcbiAgICB0aGlzLiRlbC5vZmYoJy5tZW51LWxpc3QnKTtcblxuICAgIGRlbGV0ZSB0aGlzLkFjY29yZGlvbjtcbiAgfVxuXG4gIG9uU2VjdGlvbkJsb2NrU2VsZWN0KGJsb2NrKSB7XG4gICAgdGhpcy5fdG9nZ2xlQWNjb3JkaW9uKCQoYmxvY2suZWwpLCB0cnVlKTtcbiAgfVxuXG4gIG9uU2VjdGlvbkJsb2NrRGVzZWxlY3QoYmxvY2spIHtcbiAgICB0aGlzLl90b2dnbGVBY2NvcmRpb24oJChibG9jay5lbCksIGZhbHNlKTtcbiAgfVxuXG4gIF90b2dnbGVBY2NvcmRpb24oJGJsb2NrKSB7XG4gICAgaWYgKGJyZWFrcG9pbnQubWluKCdMJykpIHJldHVybjtcblxuICAgIHRoaXMuQWNjb3JkaW9uLnRvZ2dsZSgkYmxvY2spO1xuICB9XG5cbiAgX3RvZ2dsZUxpc3QoZWwpIHtcbiAgICBjb25zdCAkdHJpZ2dlciA9ICQoZWwpO1xuICAgIGNvbnN0ICRpdGVtcyA9ICR0cmlnZ2VyLnBhcmVudCgpLnNpYmxpbmdzKCdbZGF0YS1oaWRkZW4tZGVmYXVsdF0nKTtcbiAgICBjb25zdCBzaWJsaW5nc1Zpc2libGUgPSAkdHJpZ2dlci5kYXRhKCdtZW51bGlzdC10b2dnbGUnKTtcblxuICAgICRpdGVtcy50b2dnbGVDbGFzcygnbWVudWxpc3QtLW1lbnUtaXRlbS1oaWRkZW4nLCBzaWJsaW5nc1Zpc2libGUpO1xuICAgICR0cmlnZ2VyXG4gICAgICAuZGF0YSgnbWVudWxpc3QtdG9nZ2xlJywgIXNpYmxpbmdzVmlzaWJsZSlcbiAgICAgIC50ZXh0KCFzaWJsaW5nc1Zpc2libGUgPyB0aGlzLmNvbnRleHQuc2VlX2xlc3MgOiB0aGlzLmNvbnRleHQuc2VlX21vcmUpO1xuICB9XG5cbiAgb25CcmVha3BvaW50Q2hhbmdlKGJyZWFrcG9pbnRzKSB7XG4gICAgaWYgKGJyZWFrcG9pbnQubWluKCdMJykpIHtcbiAgICAgIHRoaXMuQWNjb3JkaW9uLm9wZW5BbGwoKTtcbiAgICB9IGVsc2UgaWYgKGJyZWFrcG9pbnRzLnByZXZpb3VzID09PSAnTCcgJiYgIWJyZWFrcG9pbnQubWluKCdMJykpIHtcbiAgICAgIHRoaXMuQWNjb3JkaW9uLmNsb3NlT3BlbigpO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicMenuList.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicNewsletter.js":
/*!******************************************************!*\
  !*** ./source/scripts/sections/DynamicNewsletter.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicNewsletter; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar DynamicNewsletter = /*#__PURE__*/function () {\n  function DynamicNewsletter(section) {\n    _classCallCheck(this, DynamicNewsletter);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.forms = new _Forms__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$el);\n  }\n\n  _createClass(DynamicNewsletter, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.forms.unload();\n    }\n  }]);\n\n  return DynamicNewsletter;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljTmV3c2xldHRlci5qcz8wZTViIl0sIm5hbWVzIjpbIkR5bmFtaWNOZXdzbGV0dGVyIiwic2VjdGlvbiIsIiRlbCIsIiQiLCJlbCIsImZvcm1zIiwiRm9ybXMiLCJ1bmxvYWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLGlCO0FBQ25CLDZCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtDLEdBQUwsR0FBV0MsNkNBQUMsQ0FBQ0YsT0FBTyxDQUFDRyxFQUFULENBQVo7QUFFQSxTQUFLQyxLQUFMLEdBQWEsSUFBSUMsOENBQUosQ0FBVSxLQUFLSixHQUFmLENBQWI7QUFDRDs7OztzQ0FFaUI7QUFDaEIsV0FBS0csS0FBTCxDQUFXRSxNQUFYO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljTmV3c2xldHRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBGb3JtcyBmcm9tICcuLi9Gb3Jtcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIER5bmFtaWNOZXdzbGV0dGVyIHtcbiAgY29uc3RydWN0b3Ioc2VjdGlvbikge1xuICAgIHRoaXMuJGVsID0gJChzZWN0aW9uLmVsKTtcblxuICAgIHRoaXMuZm9ybXMgPSBuZXcgRm9ybXModGhpcy4kZWwpO1xuICB9XG5cbiAgb25TZWN0aW9uVW5sb2FkKCkge1xuICAgIHRoaXMuZm9ybXMudW5sb2FkKCk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicNewsletter.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicPromoBlocks.js":
/*!*******************************************************!*\
  !*** ./source/scripts/sections/DynamicPromoBlocks.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicPromoBlocks; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar DynamicPromoBlocks = /*#__PURE__*/function () {\n  function DynamicPromoBlocks(section) {\n    var _this = this;\n\n    _classCallCheck(this, DynamicPromoBlocks);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.contentSelector = section.data.content_selector;\n    this.blockSelector = section.data.block_selector;\n    this.content = \"[\".concat(this.contentSelector, \"]\");\n    this.expandedClass = \"\".concat(this.blockSelector, \"--expanded\");\n    this.compressBlocks = section.data.compress_blocks; // Adjusts the height of the block so it can contain the wrapper within it\n\n    this.adjustHeight = function (block) {\n      var $block = jquery__WEBPACK_IMPORTED_MODULE_0___default()(block);\n      var $wrapper = $block.find(\".\".concat(_this.blockSelector, \"--content-wrapper\"));\n      var padding = window.getComputedStyle($block[0], null).getPropertyValue('padding-top').replace('px', '');\n\n      if ($block.innerHeight() - padding * 2 < $wrapper.innerHeight()) {\n        $block.css({\n          height: \"\".concat($wrapper.innerHeight() + padding * 2, \"px\")\n        });\n        $wrapper.css({\n          transform: 'none',\n          top: 'auto'\n        });\n      }\n    }; // Removes height settings on the block because they only need to be there for small screens\n\n\n    this.resetHeight = function (block) {\n      var $block = jquery__WEBPACK_IMPORTED_MODULE_0___default()(block);\n      var $wrapper = $block.find(\".\".concat(_this.blockSelector, \"--content-wrapper\"));\n      $block.css({\n        height: ''\n      });\n      $wrapper.css({\n        transform: '',\n        top: ''\n      });\n    }; // Revert navigation to original state on breakpoint change\n\n\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"onChange\"](this.layoutHandler);\n    this._blockInteraction = this._blockInteraction.bind(this);\n    this.$el.on(\"click.\".concat(this.blockSelector), this.content, this._blockInteraction);\n\n    if (!this.compressBlocks && _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"max\"]('XS')) {\n      this.$el.find(this.content).each(function (index, block) {\n        _this.adjustHeight(block);\n      });\n    }\n  }\n  /**\n   * Remove block's toggled state and attributes when leaving mobile\n   */\n\n\n  _createClass(DynamicPromoBlocks, [{\n    key: \"onBreakpointChange\",\n    value: function onBreakpointChange() {\n      var _this2 = this;\n\n      if (!_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"max\"]('XS')) {\n        this.$el.find(\".\".concat(this.expandedClass)).each(function (i, content) {\n          _this2._collapse(content);\n        });\n        this.$el.find(this.content).each(function (index, block) {\n          _this2.resetHeight(block);\n        });\n      } else if (!this.compressBlocks) {\n        this.$el.find(this.content).each(function (index, block) {\n          _this2.adjustHeight(block);\n        });\n      }\n    }\n    /**\n     * Unbind events when section is re-drawn\n     */\n\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.$el.off(\".\".concat(this.blockSelector));\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"offChange\"](this.layoutHandler);\n    }\n    /**\n     * Callback to open block on mobile from the TE\n     *\n     * @param block\n     */\n\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect(block) {\n      if (!_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"max\"]('XS')) return;\n\n      this._expand(block.el.querySelector(this.content));\n    }\n    /**\n     * Callback to close block on mobile from the TE\n     *\n     * @param block\n     */\n\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect(block) {\n      if (!_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"max\"]('XS')) return;\n\n      this._collapse(block.el.querySelector(this.content));\n    }\n    /**\n     * Expand a block on first click, then allow it to behave as normal\n     *\n     * @param event\n     * @private\n     */\n\n  }, {\n    key: \"_blockInteraction\",\n    value: function _blockInteraction(event) {\n      var content = event.currentTarget;\n      var clicked = content.getAttribute('data-clicked'); // On second click, or on desktop, don't interfere with block\n\n      if (clicked || !_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"max\"]('XS') || !this.compressBlocks) {\n        return;\n      }\n\n      event.preventDefault();\n      content.setAttribute('data-clicked', 'clicked');\n\n      this._expand(content);\n    }\n    /**\n     * Expand promo block\n     *\n     * @param content\n     * @private\n     */\n\n  }, {\n    key: \"_expand\",\n    value: function _expand(content) {\n      var _this3 = this;\n\n      if (!this.compressBlocks) {\n        return;\n      }\n\n      var $content = jquery__WEBPACK_IMPORTED_MODULE_0___default()(content);\n      $content.addClass('animating animating-in').one('trend', function () {\n        $content.removeClass('animating animating-in').addClass(_this3.expandedClass).off('trend');\n\n        _this3.adjustHeight($content);\n      });\n    }\n    /**\n     * Collapse a block\n     *\n     * @param content\n     * @private\n     */\n\n  }, {\n    key: \"_collapse\",\n    value: function _collapse(content) {\n      var _this4 = this;\n\n      if (!this.compressBlocks) {\n        return;\n      }\n\n      var $content = jquery__WEBPACK_IMPORTED_MODULE_0___default()(content);\n      $content.addClass('animating animating-out').one('trend', function () {\n        $content.removeClass(\"animating animating-out \".concat(_this4.expandedClass)).off('trend');\n        content.removeAttribute('data-clicked');\n\n        _this4.resetHeight($content);\n      });\n    }\n  }]);\n\n  return DynamicPromoBlocks;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicPromoBlocks.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicRichText.js":
/*!****************************************************!*\
  !*** ./source/scripts/sections/DynamicRichText.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicTwitterFeed; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_RichText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/RichText */ \"./source/scripts/components/RichText.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar DynamicTwitterFeed = /*#__PURE__*/function () {\n  function DynamicTwitterFeed(section) {\n    var _this = this;\n\n    _classCallCheck(this, DynamicTwitterFeed);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.rte = [];\n    this.$el.find('[data-rte]').each(function (i, el) {\n      _this.rte.push(new _components_RichText__WEBPACK_IMPORTED_MODULE_1__[\"default\"](jquery__WEBPACK_IMPORTED_MODULE_0___default()(el)));\n    });\n  }\n  /**\n   * Unbind events when section is re-drawn\n   */\n\n\n  _createClass(DynamicTwitterFeed, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.rte.forEach(function (richTextArea) {\n        richTextArea.unload();\n      });\n    }\n  }]);\n\n  return DynamicTwitterFeed;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljUmljaFRleHQuanM/NjZlZSJdLCJuYW1lcyI6WyJEeW5hbWljVHdpdHRlckZlZWQiLCJzZWN0aW9uIiwiJGVsIiwiJCIsImVsIiwicnRlIiwiZmluZCIsImVhY2giLCJpIiwicHVzaCIsIlJpY2hUZXh0IiwiZm9yRWFjaCIsInJpY2hUZXh0QXJlYSIsInVubG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztJQUVxQkEsa0I7QUFDbkIsOEJBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFBQTs7QUFDbkIsU0FBS0MsR0FBTCxHQUFXQyw2Q0FBQyxDQUFDRixPQUFPLENBQUNHLEVBQVQsQ0FBWjtBQUVBLFNBQUtDLEdBQUwsR0FBVyxFQUFYO0FBQ0EsU0FBS0gsR0FBTCxDQUFTSSxJQUFULENBQWMsWUFBZCxFQUE0QkMsSUFBNUIsQ0FBaUMsVUFBQ0MsQ0FBRCxFQUFJSixFQUFKLEVBQVc7QUFDMUMsV0FBSSxDQUFDQyxHQUFMLENBQVNJLElBQVQsQ0FBYyxJQUFJQyw0REFBSixDQUFhUCw2Q0FBQyxDQUFDQyxFQUFELENBQWQsQ0FBZDtBQUNELEtBRkQ7QUFHRDtBQUVEOzs7Ozs7O3NDQUdrQjtBQUNoQixXQUFLQyxHQUFMLENBQVNNLE9BQVQsQ0FBaUIsVUFBQ0MsWUFBRCxFQUFrQjtBQUNqQ0Esb0JBQVksQ0FBQ0MsTUFBYjtBQUNELE9BRkQ7QUFHRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL0R5bmFtaWNSaWNoVGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgUmljaFRleHQgZnJvbSAnLi4vY29tcG9uZW50cy9SaWNoVGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIER5bmFtaWNUd2l0dGVyRmVlZCB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLiRlbCA9ICQoc2VjdGlvbi5lbCk7XG5cbiAgICB0aGlzLnJ0ZSA9IFtdO1xuICAgIHRoaXMuJGVsLmZpbmQoJ1tkYXRhLXJ0ZV0nKS5lYWNoKChpLCBlbCkgPT4ge1xuICAgICAgdGhpcy5ydGUucHVzaChuZXcgUmljaFRleHQoJChlbCkpKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVbmJpbmQgZXZlbnRzIHdoZW4gc2VjdGlvbiBpcyByZS1kcmF3blxuICAgKi9cbiAgb25TZWN0aW9uVW5sb2FkKCkge1xuICAgIHRoaXMucnRlLmZvckVhY2goKHJpY2hUZXh0QXJlYSkgPT4ge1xuICAgICAgcmljaFRleHRBcmVhLnVubG9hZCgpO1xuICAgIH0pO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicRichText.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicSearch.js":
/*!**************************************************!*\
  !*** ./source/scripts/sections/DynamicSearch.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicSearch; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\n/* harmony import */ var _components_search_LiveSearch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/search/LiveSearch */ \"./source/scripts/components/search/LiveSearch.js\");\n/* harmony import */ var _components_search_SearchForm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/search/SearchForm */ \"./source/scripts/components/search/SearchForm.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar DynamicSearch = /*#__PURE__*/function () {\n  function DynamicSearch(section) {\n    var _this = this;\n\n    _classCallCheck(this, DynamicSearch);\n\n    this.el = section.el;\n    this.settings = section.data.settings;\n    this.search = null;\n    this.$scripts = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-scripts]');\n    this.searchArea = this.el.querySelector('[data-live-search]');\n    this.searchInput = this.el.querySelector('[data-live-search-input]');\n    this.forms = new _Forms__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.el);\n\n    if (this.settings.live_search.enable) {\n      scriptjs__WEBPACK_IMPORTED_MODULE_1___default()(this.$scripts.data('shopify-api-url'), function () {\n        _this.search = new _components_search_LiveSearch__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n          el: _this.searchArea,\n          header: _this.el\n        }, _this.settings.live_search);\n      });\n    } else {\n      this.search = new _components_search_SearchForm__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.searchField);\n    }\n\n    this.searchFocused = function () {\n      if (_this.settings.live_search.enable && _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"max\"]('S')) {\n        _this.search.openMobileTakeover();\n      }\n    };\n\n    this.searchInput.addEventListener('focus', this.searchFocused);\n  }\n\n  _createClass(DynamicSearch, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.search.unload();\n      this.forms.unload();\n      this.searchInput.removeEventListener('focus', this.searchFocused);\n    }\n  }]);\n\n  return DynamicSearch;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljU2VhcmNoLmpzPzJhMGEiXSwibmFtZXMiOlsiRHluYW1pY1NlYXJjaCIsInNlY3Rpb24iLCJlbCIsInNldHRpbmdzIiwiZGF0YSIsInNlYXJjaCIsIiRzY3JpcHRzIiwiJCIsInNlYXJjaEFyZWEiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoSW5wdXQiLCJmb3JtcyIsIkZvcm1zIiwibGl2ZV9zZWFyY2giLCJlbmFibGUiLCIkc2NyaXB0IiwiTGl2ZVNlYXJjaCIsImhlYWRlciIsIlNlYXJjaEZvcm0iLCJzZWFyY2hGaWVsZCIsInNlYXJjaEZvY3VzZWQiLCJicmVha3BvaW50Iiwib3Blbk1vYmlsZVRha2VvdmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInVubG9hZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztJQUVxQkEsYTtBQUNuQix5QkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUFBOztBQUNuQixTQUFLQyxFQUFMLEdBQVVELE9BQU8sQ0FBQ0MsRUFBbEI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCRixPQUFPLENBQUNHLElBQVIsQ0FBYUQsUUFBN0I7QUFDQSxTQUFLRSxNQUFMLEdBQWMsSUFBZDtBQUVBLFNBQUtDLFFBQUwsR0FBZ0JDLDZDQUFDLENBQUMsZ0JBQUQsQ0FBakI7QUFFQSxTQUFLQyxVQUFMLEdBQWtCLEtBQUtOLEVBQUwsQ0FBUU8sYUFBUixDQUFzQixvQkFBdEIsQ0FBbEI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CLEtBQUtSLEVBQUwsQ0FBUU8sYUFBUixDQUFzQiwwQkFBdEIsQ0FBbkI7QUFFQSxTQUFLRSxLQUFMLEdBQWEsSUFBSUMsOENBQUosQ0FBVSxLQUFLVixFQUFmLENBQWI7O0FBRUEsUUFBSSxLQUFLQyxRQUFMLENBQWNVLFdBQWQsQ0FBMEJDLE1BQTlCLEVBQXNDO0FBQ3BDQyxxREFBTyxDQUFDLEtBQUtULFFBQUwsQ0FBY0YsSUFBZCxDQUFtQixpQkFBbkIsQ0FBRCxFQUF3QyxZQUFNO0FBQ25ELGFBQUksQ0FBQ0MsTUFBTCxHQUFjLElBQUlXLHFFQUFKLENBQWU7QUFDM0JkLFlBQUUsRUFBRSxLQUFJLENBQUNNLFVBRGtCO0FBRTNCUyxnQkFBTSxFQUFFLEtBQUksQ0FBQ2Y7QUFGYyxTQUFmLEVBR1gsS0FBSSxDQUFDQyxRQUFMLENBQWNVLFdBSEgsQ0FBZDtBQUlELE9BTE0sQ0FBUDtBQU1ELEtBUEQsTUFPTztBQUNMLFdBQUtSLE1BQUwsR0FBYyxJQUFJYSxxRUFBSixDQUFlLEtBQUtDLFdBQXBCLENBQWQ7QUFDRDs7QUFFRCxTQUFLQyxhQUFMLEdBQXFCLFlBQU07QUFDekIsVUFBSSxLQUFJLENBQUNqQixRQUFMLENBQWNVLFdBQWQsQ0FBMEJDLE1BQTFCLElBQW9DTywwREFBQSxDQUFlLEdBQWYsQ0FBeEMsRUFBNkQ7QUFDM0QsYUFBSSxDQUFDaEIsTUFBTCxDQUFZaUIsa0JBQVo7QUFDRDtBQUNGLEtBSkQ7O0FBTUEsU0FBS1osV0FBTCxDQUFpQmEsZ0JBQWpCLENBQWtDLE9BQWxDLEVBQTJDLEtBQUtILGFBQWhEO0FBQ0Q7Ozs7c0NBRWlCO0FBQ2hCLFdBQUtmLE1BQUwsQ0FBWW1CLE1BQVo7QUFDQSxXQUFLYixLQUFMLENBQVdhLE1BQVg7QUFDQSxXQUFLZCxXQUFMLENBQWlCZSxtQkFBakIsQ0FBcUMsT0FBckMsRUFBOEMsS0FBS0wsYUFBbkQ7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL0R5bmFtaWNTZWFyY2guanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0ICRzY3JpcHQgZnJvbSAnc2NyaXB0anMnO1xuaW1wb3J0ICogYXMgYnJlYWtwb2ludCBmcm9tICdAcGl4ZWx1bmlvbi9icmVha3BvaW50JztcblxuaW1wb3J0IEZvcm1zIGZyb20gJy4uL0Zvcm1zJztcbmltcG9ydCBMaXZlU2VhcmNoIGZyb20gJy4uL2NvbXBvbmVudHMvc2VhcmNoL0xpdmVTZWFyY2gnO1xuaW1wb3J0IFNlYXJjaEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9zZWFyY2gvU2VhcmNoRm9ybSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIER5bmFtaWNTZWFyY2gge1xuICBjb25zdHJ1Y3RvcihzZWN0aW9uKSB7XG4gICAgdGhpcy5lbCA9IHNlY3Rpb24uZWw7XG4gICAgdGhpcy5zZXR0aW5ncyA9IHNlY3Rpb24uZGF0YS5zZXR0aW5ncztcbiAgICB0aGlzLnNlYXJjaCA9IG51bGw7XG5cbiAgICB0aGlzLiRzY3JpcHRzID0gJCgnW2RhdGEtc2NyaXB0c10nKTtcblxuICAgIHRoaXMuc2VhcmNoQXJlYSA9IHRoaXMuZWwucXVlcnlTZWxlY3RvcignW2RhdGEtbGl2ZS1zZWFyY2hdJyk7XG4gICAgdGhpcy5zZWFyY2hJbnB1dCA9IHRoaXMuZWwucXVlcnlTZWxlY3RvcignW2RhdGEtbGl2ZS1zZWFyY2gtaW5wdXRdJyk7XG5cbiAgICB0aGlzLmZvcm1zID0gbmV3IEZvcm1zKHRoaXMuZWwpO1xuXG4gICAgaWYgKHRoaXMuc2V0dGluZ3MubGl2ZV9zZWFyY2guZW5hYmxlKSB7XG4gICAgICAkc2NyaXB0KHRoaXMuJHNjcmlwdHMuZGF0YSgnc2hvcGlmeS1hcGktdXJsJyksICgpID0+IHtcbiAgICAgICAgdGhpcy5zZWFyY2ggPSBuZXcgTGl2ZVNlYXJjaCh7XG4gICAgICAgICAgZWw6IHRoaXMuc2VhcmNoQXJlYSxcbiAgICAgICAgICBoZWFkZXI6IHRoaXMuZWwsXG4gICAgICAgIH0sIHRoaXMuc2V0dGluZ3MubGl2ZV9zZWFyY2gpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2VhcmNoID0gbmV3IFNlYXJjaEZvcm0odGhpcy5zZWFyY2hGaWVsZCk7XG4gICAgfVxuXG4gICAgdGhpcy5zZWFyY2hGb2N1c2VkID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuc2V0dGluZ3MubGl2ZV9zZWFyY2guZW5hYmxlICYmIGJyZWFrcG9pbnQubWF4KCdTJykpIHtcbiAgICAgICAgdGhpcy5zZWFyY2gub3Blbk1vYmlsZVRha2VvdmVyKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCB0aGlzLnNlYXJjaEZvY3VzZWQpO1xuICB9XG5cbiAgb25TZWN0aW9uVW5sb2FkKCkge1xuICAgIHRoaXMuc2VhcmNoLnVubG9hZCgpO1xuICAgIHRoaXMuZm9ybXMudW5sb2FkKCk7XG4gICAgdGhpcy5zZWFyY2hJbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsIHRoaXMuc2VhcmNoRm9jdXNlZCk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicSearch.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicTestimonials.js":
/*!********************************************************!*\
  !*** ./source/scripts/sections/DynamicTestimonials.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicTestimonials; });\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar DynamicTestimonials = /*#__PURE__*/function () {\n  function DynamicTestimonials(section) {\n    _classCallCheck(this, DynamicTestimonials);\n\n    this.section = section;\n    this.testimonialsEl = section.el.querySelector('[data-testimonials]');\n\n    if (this.testimonialsEl.dataset.testimonials === '1') {\n      // No work needs to be done if there is one testimonial\n      return;\n    }\n\n    this._onBreakpointChange = this._onBreakpointChange.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"onChange\"](this._onBreakpointChange);\n\n    if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"max\"]('S')) {\n      this._initializeMobile();\n    }\n  }\n\n  _createClass(DynamicTestimonials, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      if (this.testimonialsEl.dataset.testimonials === '1') {\n        // No work needs to be done if there is one testimonial\n        return;\n      }\n\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"offChange\"](this._onBreakpointChange);\n    }\n  }, {\n    key: \"_onBreakpointChange\",\n    value: function _onBreakpointChange(data) {\n      var current = data.current;\n\n      if (current === 'XS' || current === 'S') {\n        this._initializeMobile();\n      } else {\n        this._destroyMobile();\n      }\n    }\n  }, {\n    key: \"_initializeMobile\",\n    value: function _initializeMobile() {\n      if (this.flickity) {\n        return;\n      }\n\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_0___default.a(this.testimonialsEl, {\n        prevNextButtons: false\n      });\n    }\n  }, {\n    key: \"_destroyMobile\",\n    value: function _destroyMobile() {\n      if (!this.flickity) {\n        return;\n      }\n\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n  }]);\n\n  return DynamicTestimonials;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljVGVzdGltb25pYWxzLmpzPzAyMGQiXSwibmFtZXMiOlsiRHluYW1pY1Rlc3RpbW9uaWFscyIsInNlY3Rpb24iLCJ0ZXN0aW1vbmlhbHNFbCIsImVsIiwicXVlcnlTZWxlY3RvciIsImRhdGFzZXQiLCJ0ZXN0aW1vbmlhbHMiLCJfb25CcmVha3BvaW50Q2hhbmdlIiwiYmluZCIsImJyZWFrcG9pbnQiLCJfaW5pdGlhbGl6ZU1vYmlsZSIsImRhdGEiLCJjdXJyZW50IiwiX2Rlc3Ryb3lNb2JpbGUiLCJmbGlja2l0eSIsIkZsaWNraXR5IiwicHJldk5leHRCdXR0b25zIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7SUFFcUJBLG1CO0FBQ25CLCtCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLGNBQUwsR0FBc0JELE9BQU8sQ0FBQ0UsRUFBUixDQUFXQyxhQUFYLENBQXlCLHFCQUF6QixDQUF0Qjs7QUFFQSxRQUFJLEtBQUtGLGNBQUwsQ0FBb0JHLE9BQXBCLENBQTRCQyxZQUE1QixLQUE2QyxHQUFqRCxFQUFzRDtBQUNwRDtBQUNBO0FBQ0Q7O0FBRUQsU0FBS0MsbUJBQUwsR0FBMkIsS0FBS0EsbUJBQUwsQ0FBeUJDLElBQXpCLENBQThCLElBQTlCLENBQTNCO0FBRUFDLG1FQUFBLENBQW9CLEtBQUtGLG1CQUF6Qjs7QUFFQSxRQUFJRSwwREFBQSxDQUFlLEdBQWYsQ0FBSixFQUF5QjtBQUN2QixXQUFLQyxpQkFBTDtBQUNEO0FBQ0Y7Ozs7c0NBRWlCO0FBQ2hCLFVBQUksS0FBS1IsY0FBTCxDQUFvQkcsT0FBcEIsQ0FBNEJDLFlBQTVCLEtBQTZDLEdBQWpELEVBQXNEO0FBQ3BEO0FBQ0E7QUFDRDs7QUFFREcsc0VBQUEsQ0FBcUIsS0FBS0YsbUJBQTFCO0FBQ0Q7Ozt3Q0FFbUJJLEksRUFBTTtBQUFBLFVBQ2hCQyxPQURnQixHQUNKRCxJQURJLENBQ2hCQyxPQURnQjs7QUFHeEIsVUFBSUEsT0FBTyxLQUFLLElBQVosSUFBb0JBLE9BQU8sS0FBSyxHQUFwQyxFQUF5QztBQUN2QyxhQUFLRixpQkFBTDtBQUNELE9BRkQsTUFFTztBQUNMLGFBQUtHLGNBQUw7QUFDRDtBQUNGOzs7d0NBRW1CO0FBQ2xCLFVBQUksS0FBS0MsUUFBVCxFQUFtQjtBQUNqQjtBQUNEOztBQUVELFdBQUtBLFFBQUwsR0FBZ0IsSUFBSUMsK0NBQUosQ0FDZCxLQUFLYixjQURTLEVBRWQ7QUFDRWMsdUJBQWUsRUFBRTtBQURuQixPQUZjLENBQWhCO0FBTUQ7OztxQ0FFZ0I7QUFDZixVQUFJLENBQUMsS0FBS0YsUUFBVixFQUFvQjtBQUNsQjtBQUNEOztBQUVELFdBQUtBLFFBQUwsQ0FBY0csT0FBZDtBQUNBLFdBQUtILFFBQUwsR0FBZ0IsSUFBaEI7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL0R5bmFtaWNUZXN0aW1vbmlhbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmxpY2tpdHkgZnJvbSAnZmxpY2tpdHknO1xuaW1wb3J0ICogYXMgYnJlYWtwb2ludCBmcm9tICdAcGl4ZWx1bmlvbi9icmVha3BvaW50JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHluYW1pY1Rlc3RpbW9uaWFscyB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLnNlY3Rpb24gPSBzZWN0aW9uO1xuICAgIHRoaXMudGVzdGltb25pYWxzRWwgPSBzZWN0aW9uLmVsLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRlc3RpbW9uaWFsc10nKTtcblxuICAgIGlmICh0aGlzLnRlc3RpbW9uaWFsc0VsLmRhdGFzZXQudGVzdGltb25pYWxzID09PSAnMScpIHtcbiAgICAgIC8vIE5vIHdvcmsgbmVlZHMgdG8gYmUgZG9uZSBpZiB0aGVyZSBpcyBvbmUgdGVzdGltb25pYWxcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9vbkJyZWFrcG9pbnRDaGFuZ2UgPSB0aGlzLl9vbkJyZWFrcG9pbnRDaGFuZ2UuYmluZCh0aGlzKTtcblxuICAgIGJyZWFrcG9pbnQub25DaGFuZ2UodGhpcy5fb25CcmVha3BvaW50Q2hhbmdlKTtcblxuICAgIGlmIChicmVha3BvaW50Lm1heCgnUycpKSB7XG4gICAgICB0aGlzLl9pbml0aWFsaXplTW9iaWxlKCk7XG4gICAgfVxuICB9XG5cbiAgb25TZWN0aW9uVW5sb2FkKCkge1xuICAgIGlmICh0aGlzLnRlc3RpbW9uaWFsc0VsLmRhdGFzZXQudGVzdGltb25pYWxzID09PSAnMScpIHtcbiAgICAgIC8vIE5vIHdvcmsgbmVlZHMgdG8gYmUgZG9uZSBpZiB0aGVyZSBpcyBvbmUgdGVzdGltb25pYWxcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBicmVha3BvaW50Lm9mZkNoYW5nZSh0aGlzLl9vbkJyZWFrcG9pbnRDaGFuZ2UpO1xuICB9XG5cbiAgX29uQnJlYWtwb2ludENoYW5nZShkYXRhKSB7XG4gICAgY29uc3QgeyBjdXJyZW50IH0gPSBkYXRhO1xuXG4gICAgaWYgKGN1cnJlbnQgPT09ICdYUycgfHwgY3VycmVudCA9PT0gJ1MnKSB7XG4gICAgICB0aGlzLl9pbml0aWFsaXplTW9iaWxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2Rlc3Ryb3lNb2JpbGUoKTtcbiAgICB9XG4gIH1cblxuICBfaW5pdGlhbGl6ZU1vYmlsZSgpIHtcbiAgICBpZiAodGhpcy5mbGlja2l0eSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuZmxpY2tpdHkgPSBuZXcgRmxpY2tpdHkoXG4gICAgICB0aGlzLnRlc3RpbW9uaWFsc0VsLFxuICAgICAge1xuICAgICAgICBwcmV2TmV4dEJ1dHRvbnM6IGZhbHNlLFxuICAgICAgfSxcbiAgICApO1xuICB9XG5cbiAgX2Rlc3Ryb3lNb2JpbGUoKSB7XG4gICAgaWYgKCF0aGlzLmZsaWNraXR5KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5mbGlja2l0eS5kZXN0cm95KCk7XG4gICAgdGhpcy5mbGlja2l0eSA9IG51bGw7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicTestimonials.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicTwitterFeed.js":
/*!*******************************************************!*\
  !*** ./source/scripts/sections/DynamicTwitterFeed.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicTwitterFeed; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var twitter_fetcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! twitter-fetcher */ \"./node_modules/twitter-fetcher/js/twitterFetcher_min.js\");\n/* harmony import */ var twitter_fetcher__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(twitter_fetcher__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/LazyLoader */ \"./source/scripts/helpers/LazyLoader.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar DynamicTwitterFeed = /*#__PURE__*/function () {\n  function DynamicTwitterFeed(section) {\n    _classCallCheck(this, DynamicTwitterFeed);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.settings = section.data;\n    this._load = this._load.bind(this);\n    this.lazyLoader = new _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_5__[\"default\"](section.el, this._load);\n  }\n\n  _createClass(DynamicTwitterFeed, [{\n    key: \"_load\",\n    value: function _load() {\n      var _this = this;\n\n      this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n      this.flickity = null;\n      this.$content = this.$el.find('[data-twitter-content]');\n      this.$wrapper = this.$el.find('[data-twitter-wrapper]');\n      this.$tweets = this.$el.find('[data-tweet-content]');\n      this.$template = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.settings.template);\n      var onboarding = this.settings.onboarding;\n      var username = this.settings.username;\n      var retweets = this.settings.retweets;\n      var images = this.settings.images;\n      var locale = this.settings.locale || 'en'; // Activate flickity on mobile\n\n      this._mobileSlider = this._mobileSlider.bind(this);\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_4__[\"onChange\"](this._mobileSlider);\n\n      this._mobileSlider();\n\n      if (onboarding || !username) {\n        return;\n      }\n\n      twitter_fetcher__WEBPACK_IMPORTED_MODULE_1___default.a.fetch({\n        'profile': {\n          'screenName': username\n        },\n        'maxTweets': 3,\n        'enableLinks': true,\n        'showUser': true,\n        'showTime': true,\n        'dataOnly': false,\n        'useEmoji': true,\n        'showImages': images,\n        'showRetweet': retweets,\n        'lang': locale,\n        'customCallback': function customCallback(tweets) {\n          return _this._renderTweets(tweets);\n        },\n        'showInteraction': false\n      });\n    }\n    /**\n     * Unbind events when section is re-drawn\n     */\n\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.$window.off('.twitter');\n      this.$content.off('.twitter');\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_4__[\"offChange\"](this._mobileSlider);\n\n      this._destroyFlickity();\n\n      this.lazyLoader.unload();\n    }\n  }, {\n    key: \"_initFlickity\",\n    value: function _initFlickity() {\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_3___default.a(this.$content[0], {\n        cellSelector: '[data-tweet-content]',\n        contain: true,\n        freeScroll: true,\n        percentPosition: false,\n        prevNextButtons: false,\n        pageDots: false,\n        setGallerySize: false\n      });\n\n      this._bindSlider();\n\n      this.flickity.resize();\n    }\n  }, {\n    key: \"_destroyFlickity\",\n    value: function _destroyFlickity() {\n      if (!this.flickity) {\n        return;\n      }\n\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n  }, {\n    key: \"_mobileSlider\",\n    value: function _mobileSlider() {\n      // If is Large layout, attempt to destroy flickity\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_4__[\"min\"]('L')) {\n        this._destroyFlickity();\n\n        return;\n      } // Is XS/S/M, and flickity is init'd -- resize\n\n\n      if (this.flickity) {\n        this.flickity.resize();\n        return;\n      } // Is XS/S/M, and flickity is not init'd\n\n\n      this._initFlickity();\n    }\n  }, {\n    key: \"_bindSlider\",\n    value: function _bindSlider() {\n      var _this2 = this;\n\n      var $slider = this.$content.find('.flickity-slider');\n      this.$window.on('resize.twitter', just_debounce__WEBPACK_IMPORTED_MODULE_2___default()(function () {\n        _this2.$content.trigger('heightUpdate.twitter');\n      }));\n      this.flickity.on('cellSelect', function () {\n        _this2.$content.trigger('heightUpdate.twitter');\n      });\n      this.$content.on('heightUpdate.twitter', function () {\n        if (!_this2.flickity) {\n          return;\n        }\n\n        $slider.height(Math.ceil(_this2.flickity.maxCellHeight));\n      }); // Sets the Slider to the height of the first slide\n\n      this.$content.trigger('heightUpdate.twitter');\n    }\n    /**\n     * Retrieve information about user who tweeted\n     *\n     * @param el\n     * @returns {{$avatar: *, link: *, name, screenName}}\n     * @private\n     */\n\n  }, {\n    key: \"_extractAuthor\",\n    value: function _extractAuthor(el) {\n      var $el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n      var link = $el.find('a').attr('href');\n      var name = $el.find('[data-scribe=\"element:name\"]').text();\n      var screenName = $el.find('[data-scribe=\"element:screen_name\"]').text();\n      var $avatar = $el.find('img');\n      return {\n        $avatar: $avatar,\n        link: link,\n        name: name,\n        screenName: screenName\n      };\n    }\n    /**\n     * Retrieve link to tweet, and when it was tweeted\n     *\n     * @param el\n     * @returns {{link: *, postedAt: *}}\n     * @private\n     */\n\n  }, {\n    key: \"_extractMeta\",\n    value: function _extractMeta(el) {\n      var $el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n      var link = $el.find('a').attr('href');\n      var postedAt = $el.text();\n      return {\n        link: link,\n        postedAt: postedAt\n      };\n    }\n  }, {\n    key: \"_extractWrapperClass\",\n    value: function _extractWrapperClass() {\n      var wrapperClass = this.$wrapper.attr('class').match(/tweet--count-\\d+$/);\n\n      if (wrapperClass) {\n        return wrapperClass[0];\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"_renderTweets\",\n    value: function _renderTweets(tweets) {\n      var _this3 = this;\n\n      var tweetsLength = tweets.length;\n      if (!tweets || !tweetsLength) return;\n      var tweetsArray = [];\n      var wrapperClass = \"tweet--count-\".concat(tweetsLength);\n      tweets.forEach(function (tweet) {\n        var $tweet = jquery__WEBPACK_IMPORTED_MODULE_0___default()(tweet);\n\n        var $template = _this3.$template.clone();\n\n        var authorInfo = _this3._extractAuthor($tweet[0]);\n\n        var meta = _this3._extractMeta($tweet[2]);\n\n        var content = $tweet[1]; // Render header\n\n        $template.find('.tweet--header').attr('href', authorInfo.link);\n        $template.find('.tweet--header-image').html(authorInfo.$avatar);\n        $template.find('.tweet--header-name').text(authorInfo.name);\n        $template.find('.tweet--header-screenname').text(authorInfo.screenName); // Render content\n\n        $template.find('.tweet--content').append($tweet[3] ? $tweet[3] : null).append(content); // Render footer\n\n        $template.find('.tweet--footer').attr('href', meta.link).find('.tweet--footer--posted').text(meta.postedAt);\n        tweetsArray.push($template);\n      });\n      this.$wrapper.css('min-height', this.$wrapper.height());\n      this.$tweets.fadeOut().promise().then(function () {\n        _this3._destroyFlickity();\n\n        _this3.$tweets.remove();\n\n        _this3.$content.append(tweetsArray);\n\n        _this3.$wrapper.removeClass(_this3._extractWrapperClass()).addClass(wrapperClass).css('min-height', '');\n\n        _this3.$tweets = _this3.$el.find('[data-tweet-content]');\n\n        _this3._mobileSlider();\n      });\n    }\n  }]);\n\n  return DynamicTwitterFeed;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicTwitterFeed.js\n");

/***/ }),

/***/ "./source/scripts/sections/DynamicVideo.js":
/*!*************************************************!*\
  !*** ./source/scripts/sections/DynamicVideo.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicVideo; });\n/* harmony import */ var _components_Video__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Video */ \"./source/scripts/components/Video.js\");\n/* harmony import */ var _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/LazyLoader */ \"./source/scripts/helpers/LazyLoader.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar DynamicVideo = /*#__PURE__*/function () {\n  function DynamicVideo(section) {\n    _classCallCheck(this, DynamicVideo);\n\n    this.el = section.el;\n    this.autoplay = section.data.autoplay;\n    this.init = this.init.bind(this);\n    this.lazyLoader = new _helpers_LazyLoader__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.el, this.init);\n  }\n\n  _createClass(DynamicVideo, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var videoEl = this.el.querySelector('[data-video]');\n      this.hasPlayed = false;\n\n      if (videoEl) {\n        this.video = new _components_Video__WEBPACK_IMPORTED_MODULE_0__[\"default\"](videoEl);\n      }\n\n      if (this.video && this.autoplay) {\n        var thresholds = {\n          play: 0.5,\n          pause: 0.2\n        };\n        this.playPauseObserver = new IntersectionObserver(function (entries) {\n          var _entries$ = entries[0],\n              intersectionRatio = _entries$.intersectionRatio,\n              isIntersecting = _entries$.isIntersecting;\n\n          if (intersectionRatio >= thresholds.play && isIntersecting && !_this.hasPlayed) {\n            // videoEl has just scrolled into view and is at least 50% visible: play video\n            _this.video._autoplay();\n\n            _this.hasPlayed = true;\n          } else if (intersectionRatio <= thresholds.pause && isIntersecting === false) {\n            // videoEl has scrolled out of view and is less than 20% visible: pause video\n            _this.video._onPauseClick();\n          }\n        }, {\n          threshold: [thresholds.pause, thresholds.play]\n        });\n        this.playPauseObserver.observe(videoEl);\n      }\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      if (this.video) {\n        this.video.unload();\n      }\n\n      if (this.playPauseObserver) {\n        this.playPauseObserver.disconnect();\n      }\n\n      this.lazyLoader.unload();\n    }\n  }]);\n\n  return DynamicVideo;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljVmlkZW8uanM/NWE2NCJdLCJuYW1lcyI6WyJEeW5hbWljVmlkZW8iLCJzZWN0aW9uIiwiZWwiLCJhdXRvcGxheSIsImRhdGEiLCJpbml0IiwiYmluZCIsImxhenlMb2FkZXIiLCJMYXp5TG9hZGVyIiwidmlkZW9FbCIsInF1ZXJ5U2VsZWN0b3IiLCJoYXNQbGF5ZWQiLCJ2aWRlbyIsIlZpZGVvIiwidGhyZXNob2xkcyIsInBsYXkiLCJwYXVzZSIsInBsYXlQYXVzZU9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiaW50ZXJzZWN0aW9uUmF0aW8iLCJpc0ludGVyc2VjdGluZyIsIl9hdXRvcGxheSIsIl9vblBhdXNlQ2xpY2siLCJ0aHJlc2hvbGQiLCJvYnNlcnZlIiwidW5sb2FkIiwiZGlzY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0lBRXFCQSxZO0FBQ25CLHdCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtDLEVBQUwsR0FBVUQsT0FBTyxDQUFDQyxFQUFsQjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JGLE9BQU8sQ0FBQ0csSUFBUixDQUFhRCxRQUE3QjtBQUNBLFNBQUtFLElBQUwsR0FBWSxLQUFLQSxJQUFMLENBQVVDLElBQVYsQ0FBZSxJQUFmLENBQVo7QUFFQSxTQUFLQyxVQUFMLEdBQWtCLElBQUlDLDJEQUFKLENBQWUsS0FBS04sRUFBcEIsRUFBd0IsS0FBS0csSUFBN0IsQ0FBbEI7QUFDRDs7OzsyQkFFTTtBQUFBOztBQUNMLFVBQU1JLE9BQU8sR0FBRyxLQUFLUCxFQUFMLENBQVFRLGFBQVIsQ0FBc0IsY0FBdEIsQ0FBaEI7QUFDQSxXQUFLQyxTQUFMLEdBQWlCLEtBQWpCOztBQUVBLFVBQUlGLE9BQUosRUFBYTtBQUNYLGFBQUtHLEtBQUwsR0FBYSxJQUFJQyx5REFBSixDQUFVSixPQUFWLENBQWI7QUFDRDs7QUFFRCxVQUFJLEtBQUtHLEtBQUwsSUFBYyxLQUFLVCxRQUF2QixFQUFpQztBQUMvQixZQUFNVyxVQUFVLEdBQUc7QUFBRUMsY0FBSSxFQUFFLEdBQVI7QUFBYUMsZUFBSyxFQUFFO0FBQXBCLFNBQW5CO0FBRUEsYUFBS0MsaUJBQUwsR0FBeUIsSUFBSUMsb0JBQUosQ0FBeUIsVUFBQ0MsT0FBRCxFQUFhO0FBQUEsMEJBQ2ZBLE9BQU8sQ0FBQyxDQUFELENBRFE7QUFBQSxjQUNyREMsaUJBRHFELGFBQ3JEQSxpQkFEcUQ7QUFBQSxjQUNsQ0MsY0FEa0MsYUFDbENBLGNBRGtDOztBQUc3RCxjQUFJRCxpQkFBaUIsSUFBSU4sVUFBVSxDQUFDQyxJQUFoQyxJQUF3Q00sY0FBeEMsSUFBMEQsQ0FBQyxLQUFJLENBQUNWLFNBQXBFLEVBQStFO0FBQzdFO0FBQ0EsaUJBQUksQ0FBQ0MsS0FBTCxDQUFXVSxTQUFYOztBQUNBLGlCQUFJLENBQUNYLFNBQUwsR0FBaUIsSUFBakI7QUFDRCxXQUpELE1BSU8sSUFBSVMsaUJBQWlCLElBQUlOLFVBQVUsQ0FBQ0UsS0FBaEMsSUFBeUNLLGNBQWMsS0FBSyxLQUFoRSxFQUF1RTtBQUM1RTtBQUNBLGlCQUFJLENBQUNULEtBQUwsQ0FBV1csYUFBWDtBQUNEO0FBQ0YsU0FYd0IsRUFZekI7QUFDRUMsbUJBQVMsRUFBRSxDQUFDVixVQUFVLENBQUNFLEtBQVosRUFBbUJGLFVBQVUsQ0FBQ0MsSUFBOUI7QUFEYixTQVp5QixDQUF6QjtBQWdCQSxhQUFLRSxpQkFBTCxDQUF1QlEsT0FBdkIsQ0FBK0JoQixPQUEvQjtBQUNEO0FBQ0Y7OztzQ0FFaUI7QUFDaEIsVUFBSSxLQUFLRyxLQUFULEVBQWdCO0FBQ2QsYUFBS0EsS0FBTCxDQUFXYyxNQUFYO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLVCxpQkFBVCxFQUE0QjtBQUMxQixhQUFLQSxpQkFBTCxDQUF1QlUsVUFBdkI7QUFDRDs7QUFFRCxXQUFLcEIsVUFBTCxDQUFnQm1CLE1BQWhCO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9EeW5hbWljVmlkZW8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmlkZW8gZnJvbSAnLi4vY29tcG9uZW50cy9WaWRlbyc7XG5pbXBvcnQgTGF6eUxvYWRlciBmcm9tICcuLi9oZWxwZXJzL0xhenlMb2FkZXInO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEeW5hbWljVmlkZW8ge1xuICBjb25zdHJ1Y3RvcihzZWN0aW9uKSB7XG4gICAgdGhpcy5lbCA9IHNlY3Rpb24uZWw7XG4gICAgdGhpcy5hdXRvcGxheSA9IHNlY3Rpb24uZGF0YS5hdXRvcGxheTtcbiAgICB0aGlzLmluaXQgPSB0aGlzLmluaXQuYmluZCh0aGlzKTtcblxuICAgIHRoaXMubGF6eUxvYWRlciA9IG5ldyBMYXp5TG9hZGVyKHRoaXMuZWwsIHRoaXMuaW5pdCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIGNvbnN0IHZpZGVvRWwgPSB0aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXZpZGVvXScpO1xuICAgIHRoaXMuaGFzUGxheWVkID0gZmFsc2U7XG5cbiAgICBpZiAodmlkZW9FbCkge1xuICAgICAgdGhpcy52aWRlbyA9IG5ldyBWaWRlbyh2aWRlb0VsKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy52aWRlbyAmJiB0aGlzLmF1dG9wbGF5KSB7XG4gICAgICBjb25zdCB0aHJlc2hvbGRzID0geyBwbGF5OiAwLjUsIHBhdXNlOiAwLjIgfTtcblxuICAgICAgdGhpcy5wbGF5UGF1c2VPYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoZW50cmllcykgPT4ge1xuICAgICAgICBjb25zdCB7IGludGVyc2VjdGlvblJhdGlvLCBpc0ludGVyc2VjdGluZyB9ID0gZW50cmllc1swXTtcblxuICAgICAgICBpZiAoaW50ZXJzZWN0aW9uUmF0aW8gPj0gdGhyZXNob2xkcy5wbGF5ICYmIGlzSW50ZXJzZWN0aW5nICYmICF0aGlzLmhhc1BsYXllZCkge1xuICAgICAgICAgIC8vIHZpZGVvRWwgaGFzIGp1c3Qgc2Nyb2xsZWQgaW50byB2aWV3IGFuZCBpcyBhdCBsZWFzdCA1MCUgdmlzaWJsZTogcGxheSB2aWRlb1xuICAgICAgICAgIHRoaXMudmlkZW8uX2F1dG9wbGF5KCk7XG4gICAgICAgICAgdGhpcy5oYXNQbGF5ZWQgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGludGVyc2VjdGlvblJhdGlvIDw9IHRocmVzaG9sZHMucGF1c2UgJiYgaXNJbnRlcnNlY3RpbmcgPT09IGZhbHNlKSB7XG4gICAgICAgICAgLy8gdmlkZW9FbCBoYXMgc2Nyb2xsZWQgb3V0IG9mIHZpZXcgYW5kIGlzIGxlc3MgdGhhbiAyMCUgdmlzaWJsZTogcGF1c2UgdmlkZW9cbiAgICAgICAgICB0aGlzLnZpZGVvLl9vblBhdXNlQ2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGhyZXNob2xkOiBbdGhyZXNob2xkcy5wYXVzZSwgdGhyZXNob2xkcy5wbGF5XSxcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnBsYXlQYXVzZU9ic2VydmVyLm9ic2VydmUodmlkZW9FbCk7XG4gICAgfVxuICB9XG5cbiAgb25TZWN0aW9uVW5sb2FkKCkge1xuICAgIGlmICh0aGlzLnZpZGVvKSB7XG4gICAgICB0aGlzLnZpZGVvLnVubG9hZCgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBsYXlQYXVzZU9ic2VydmVyKSB7XG4gICAgICB0aGlzLnBsYXlQYXVzZU9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICB9XG5cbiAgICB0aGlzLmxhenlMb2FkZXIudW5sb2FkKCk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/DynamicVideo.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticAnnouncement.js":
/*!*******************************************************!*\
  !*** ./source/scripts/sections/StaticAnnouncement.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticAnnouncement; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StaticAnnouncement = function StaticAnnouncement(section) {\n  _classCallCheck(this, StaticAnnouncement);\n\n  // Since the announcement bar positioning is actually handled by the\n  // StaticSectionHeader and StickyHeader classes, we need to let them know\n  // when the announcement element is refreshed within the editor.\n  if (window.Shopify && window.Shopify.designMode) {\n    section.postMessage('announcement:load');\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNBbm5vdW5jZW1lbnQuanM/OTc4NSJdLCJuYW1lcyI6WyJTdGF0aWNBbm5vdW5jZW1lbnQiLCJzZWN0aW9uIiwid2luZG93IiwiU2hvcGlmeSIsImRlc2lnbk1vZGUiLCJwb3N0TWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7OztJQUFxQkEsa0IsR0FDbkIsNEJBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsTUFBSUMsTUFBTSxDQUFDQyxPQUFQLElBQWtCRCxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsVUFBckMsRUFBaUQ7QUFDL0NILFdBQU8sQ0FBQ0ksV0FBUixDQUFvQixtQkFBcEI7QUFDRDtBQUNGLEMiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNBbm5vdW5jZW1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0aWNBbm5vdW5jZW1lbnQge1xuICBjb25zdHJ1Y3RvcihzZWN0aW9uKSB7XG4gICAgLy8gU2luY2UgdGhlIGFubm91bmNlbWVudCBiYXIgcG9zaXRpb25pbmcgaXMgYWN0dWFsbHkgaGFuZGxlZCBieSB0aGVcbiAgICAvLyBTdGF0aWNTZWN0aW9uSGVhZGVyIGFuZCBTdGlja3lIZWFkZXIgY2xhc3Nlcywgd2UgbmVlZCB0byBsZXQgdGhlbSBrbm93XG4gICAgLy8gd2hlbiB0aGUgYW5ub3VuY2VtZW50IGVsZW1lbnQgaXMgcmVmcmVzaGVkIHdpdGhpbiB0aGUgZWRpdG9yLlxuICAgIGlmICh3aW5kb3cuU2hvcGlmeSAmJiB3aW5kb3cuU2hvcGlmeS5kZXNpZ25Nb2RlKSB7XG4gICAgICBzZWN0aW9uLnBvc3RNZXNzYWdlKCdhbm5vdW5jZW1lbnQ6bG9hZCcpO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticAnnouncement.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticArticle.js":
/*!**************************************************!*\
  !*** ./source/scripts/sections/StaticArticle.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticArticle; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_RichText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/RichText */ \"./source/scripts/components/RichText.js\");\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\n/* harmony import */ var _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shortcodes/Shortcodes */ \"./source/scripts/shortcodes/Shortcodes.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar StaticArticle = /*#__PURE__*/function () {\n  function StaticArticle(section) {\n    _classCallCheck(this, StaticArticle);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.$commentForm = this.$el.find('[data-articlecomments-form]');\n    this.richText = new _components_RichText__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$el);\n\n    if (this.$commentForm.length) {\n      this.commentForm = new _Forms__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.$commentForm);\n    }\n\n    this.shortcodes = new _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_3__[\"default\"](section.el);\n  }\n\n  _createClass(StaticArticle, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.richText.unload();\n\n      if (this.commentForm) {\n        this.commentForm.unload();\n      }\n\n      if (this.shortcodes) {\n        this.shortcodes.unload();\n      }\n    }\n  }]);\n\n  return StaticArticle;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNBcnRpY2xlLmpzPzczY2YiXSwibmFtZXMiOlsiU3RhdGljQXJ0aWNsZSIsInNlY3Rpb24iLCIkZWwiLCIkIiwiZWwiLCIkY29tbWVudEZvcm0iLCJmaW5kIiwicmljaFRleHQiLCJSaWNoVGV4dCIsImxlbmd0aCIsImNvbW1lbnRGb3JtIiwiRm9ybXMiLCJzaG9ydGNvZGVzIiwiU2hvcnRjb2RlcyIsInVubG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBOztJQUVxQkEsYTtBQUNuQix5QkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNuQixTQUFLQyxHQUFMLEdBQVdDLDZDQUFDLENBQUNGLE9BQU8sQ0FBQ0csRUFBVCxDQUFaO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLSCxHQUFMLENBQVNJLElBQVQsQ0FBYyw2QkFBZCxDQUFwQjtBQUVBLFNBQUtDLFFBQUwsR0FBZ0IsSUFBSUMsNERBQUosQ0FBYSxLQUFLTixHQUFsQixDQUFoQjs7QUFFQSxRQUFJLEtBQUtHLFlBQUwsQ0FBa0JJLE1BQXRCLEVBQThCO0FBQzVCLFdBQUtDLFdBQUwsR0FBbUIsSUFBSUMsOENBQUosQ0FBVSxLQUFLTixZQUFmLENBQW5CO0FBQ0Q7O0FBRUQsU0FBS08sVUFBTCxHQUFrQixJQUFJQyw4REFBSixDQUFlWixPQUFPLENBQUNHLEVBQXZCLENBQWxCO0FBQ0Q7Ozs7c0NBRWlCO0FBQ2hCLFdBQUtHLFFBQUwsQ0FBY08sTUFBZDs7QUFFQSxVQUFJLEtBQUtKLFdBQVQsRUFBc0I7QUFDcEIsYUFBS0EsV0FBTCxDQUFpQkksTUFBakI7QUFDRDs7QUFFRCxVQUFJLEtBQUtGLFVBQVQsRUFBcUI7QUFDbkIsYUFBS0EsVUFBTCxDQUFnQkUsTUFBaEI7QUFDRDtBQUNGIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvc2VjdGlvbnMvU3RhdGljQXJ0aWNsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgUmljaFRleHQgZnJvbSAnLi4vY29tcG9uZW50cy9SaWNoVGV4dCc7XG5pbXBvcnQgRm9ybXMgZnJvbSAnLi4vRm9ybXMnO1xuXG5pbXBvcnQgU2hvcnRjb2RlcyBmcm9tICcuLi9zaG9ydGNvZGVzL1Nob3J0Y29kZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0aWNBcnRpY2xlIHtcbiAgY29uc3RydWN0b3Ioc2VjdGlvbikge1xuICAgIHRoaXMuJGVsID0gJChzZWN0aW9uLmVsKTtcbiAgICB0aGlzLiRjb21tZW50Rm9ybSA9IHRoaXMuJGVsLmZpbmQoJ1tkYXRhLWFydGljbGVjb21tZW50cy1mb3JtXScpXG5cbiAgICB0aGlzLnJpY2hUZXh0ID0gbmV3IFJpY2hUZXh0KHRoaXMuJGVsKTtcblxuICAgIGlmICh0aGlzLiRjb21tZW50Rm9ybS5sZW5ndGgpIHtcbiAgICAgIHRoaXMuY29tbWVudEZvcm0gPSBuZXcgRm9ybXModGhpcy4kY29tbWVudEZvcm0pO1xuICAgIH1cblxuICAgIHRoaXMuc2hvcnRjb2RlcyA9IG5ldyBTaG9ydGNvZGVzKHNlY3Rpb24uZWwpO1xuICB9XG5cbiAgb25TZWN0aW9uVW5sb2FkKCkge1xuICAgIHRoaXMucmljaFRleHQudW5sb2FkKCk7XG5cbiAgICBpZiAodGhpcy5jb21tZW50Rm9ybSkge1xuICAgICAgdGhpcy5jb21tZW50Rm9ybS51bmxvYWQoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zaG9ydGNvZGVzKSB7XG4gICAgICB0aGlzLnNob3J0Y29kZXMudW5sb2FkKCk7XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticArticle.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticBlog.js":
/*!***********************************************!*\
  !*** ./source/scripts/sections/StaticBlog.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticBlog; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_RichText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/RichText */ \"./source/scripts/components/RichText.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar StaticBlog = /*#__PURE__*/function () {\n  function StaticBlog(section) {\n    _classCallCheck(this, StaticBlog);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.richText = new _components_RichText__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$el);\n  }\n\n  _createClass(StaticBlog, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.richText.unload();\n    }\n  }]);\n\n  return StaticBlog;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNCbG9nLmpzPzliN2EiXSwibmFtZXMiOlsiU3RhdGljQmxvZyIsInNlY3Rpb24iLCIkZWwiLCIkIiwiZWwiLCJyaWNoVGV4dCIsIlJpY2hUZXh0IiwidW5sb2FkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0lBRXFCQSxVO0FBQ25CLHNCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtDLEdBQUwsR0FBV0MsNkNBQUMsQ0FBQ0YsT0FBTyxDQUFDRyxFQUFULENBQVo7QUFFQSxTQUFLQyxRQUFMLEdBQWdCLElBQUlDLDREQUFKLENBQWEsS0FBS0osR0FBbEIsQ0FBaEI7QUFDRDs7OztzQ0FFaUI7QUFDaEIsV0FBS0csUUFBTCxDQUFjRSxNQUFkO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNCbG9nLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCBSaWNoVGV4dCBmcm9tICcuLi9jb21wb25lbnRzL1JpY2hUZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhdGljQmxvZyB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLiRlbCA9ICQoc2VjdGlvbi5lbCk7XG5cbiAgICB0aGlzLnJpY2hUZXh0ID0gbmV3IFJpY2hUZXh0KHRoaXMuJGVsKTtcbiAgfVxuXG4gIG9uU2VjdGlvblVubG9hZCgpIHtcbiAgICB0aGlzLnJpY2hUZXh0LnVubG9hZCgpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticBlog.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticCart.js":
/*!***********************************************!*\
  !*** ./source/scripts/sections/StaticCart.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticCart; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _shopify_theme_addresses__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shopify/theme-addresses */ \"./node_modules/@shopify/theme-addresses/theme-addresses.js\");\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\n/* harmony import */ var _components_MessageBanner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/MessageBanner */ \"./source/scripts/components/MessageBanner.js\");\n/* harmony import */ var _components_CartItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/CartItem */ \"./source/scripts/components/CartItem.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar StaticCart = /*#__PURE__*/function () {\n  function StaticCart(section) {\n    var _this = this;\n\n    _classCallCheck(this, StaticCart);\n\n    this.settings = section.data.settings;\n    this.shipping = section.data.shipping;\n    this.cart = section.data.cart;\n    this.messageBanner = new _components_MessageBanner__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window);\n    this.el = section.el;\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.$header = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-site-header-main]');\n    this.$total = this.$el.find('[data-cart-total]');\n    this.$shipping = this.$el.find('[data-cartshipping]'); // Product form containers\n\n    this.$titleTotalSmall = this.$el.find('.cart-title-total--small');\n    this.$titleTotalLarge = this.$el.find('.cart-title-total--large');\n    this.$titleTotalContents = this.$el.find('[data-cart-title-total]'); // Shipping calculator elements\n\n    this.$shippingToggle = this.$el.find('[data-cartshipping-toggle]');\n    this.$shippingResponse = this.$shipping.find('[data-cartshipping-response]');\n    this.$shippingResponseMessage = this.$shippingResponse.find('[data-cartshipping-message]');\n    this.$shippingResponseRates = this.$shippingResponse.find('[data-cartshipping-rates]');\n    this.$shippingSubmit = this.$shipping.find('[data-cartshipping-submit]');\n    this.$form = this.$el.find('[data-cart-form]');\n    this.$checkoutButtons = this.$el.find('button[name=\"checkout\"]');\n    this.$totals = this.$el.find('[data-cart-totals]');\n\n    this._moveTitleTotal();\n\n    var $scripts = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-scripts]');\n    scriptjs__WEBPACK_IMPORTED_MODULE_1___default()($scripts.data('shopify-api-url'), function () {\n      _this._bindEvents();\n\n      _this.cartItems = _this.cart.items.map(function (lineItem) {\n        var $el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-cartitem-id=\\\"\".concat(lineItem.id, \"\\\"]\"), _this.$el);\n        return new _components_CartItem__WEBPACK_IMPORTED_MODULE_6__[\"default\"]($el.get(0), lineItem, _this.settings);\n      });\n      _this.cartTotalValue = window.api.theme.useValue({\n        name: 'cart:total',\n        handler: function handler(data) {\n          if (!data) {\n            console.error('Error initializing cart total value.');\n            return;\n          }\n\n          var price = data.price;\n\n          _this.$total.each(function (i, el) {\n            el.setAttribute('data-cart-total', price);\n            el.innerHTML = Shopify.formatMoney(price, _this.settings.money_format);\n          });\n        },\n        initialValue: {\n          price: _this.cart.total_price,\n          compare_at_price: _this.cart.total_price\n        }\n      });\n      _this.cartCheckoutValue = window.api.theme.useValue({\n        name: 'cart:checkout',\n        handler: function handler(value) {\n          if (typeof value === 'undefined' || value === null) {\n            console.error(\"Error initializing cart checkout value.\");\n            return;\n          }\n\n          _this.$checkoutButtons.prop('disabled', !value);\n        },\n        initialValue: true\n      });\n      _this.cartNotificationsElement = window.api.theme.useElement('cart:notifications', section.el.querySelector('[data-cart-notifications]'));\n      _this.cartToolsElement = window.api.theme.useElement('cart:tools', section.el.querySelector('[data-cart-tools]')); // When the cart is submitted, we should fire an event that can be cancelled by integrations\n\n      _this.$form.on('submit', function (event) {\n        return window.api.theme.triggerEvent('cart:checkout', {\n          cancel: function cancel() {\n            return event.preventDefault();\n          }\n        });\n      });\n\n      Shopify.onError = _this._handleErrors.bind(_this);\n    });\n    this.forms = new _Forms__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.$el);\n\n    if (this.settings.shipping && this.$shipping.length) {\n      scriptjs__WEBPACK_IMPORTED_MODULE_1___default()($scripts.data('shopify-countries'), function () {\n        scriptjs__WEBPACK_IMPORTED_MODULE_1___default()($scripts.data('shopify-common'), function () {\n          scriptjs__WEBPACK_IMPORTED_MODULE_1___default()($scripts.data('shopify-cart'), function () {\n            _this._initShippingCalc();\n          });\n        });\n      });\n    }\n  }\n\n  _createClass(StaticCart, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.cartItems.forEach(function (cartItem) {\n        return cartItem.unload();\n      });\n      this.cartTotalValue.unload();\n      this.cartCheckoutValue.unload();\n      this.cartNotificationsElement.unload();\n      this.cartToolsElement.unload();\n      this.$el.off('.cart-page');\n      this.$window.off('.cart-page');\n      this.forms.unload();\n      this.messageBanner.unload();\n      this.messageBanner.dismissBanners();\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this2 = this;\n\n      this.$el.on('keydown.cart-page', '[data-cartitem-quantity]', function (event) {\n        _this2._quantityKeyDown(event);\n      });\n      /*\n       * There are two [data-cartitem-quantity] selectors.\n       * Use the input as the source of truth rather than the select\n       * because the input has an infinite value range whereas the select\n       * has a finite range.\n       */\n\n      this.$el.on('change.cart-page', '[data-cartitem-quantity][data-quantity-input]', function (event) {\n        _this2._editItemQuantity(event);\n      });\n      this.$el.on('click.cart-page', '[data-cartitem-remove]', function (event) {\n        event.preventDefault();\n\n        _this2._editItemQuantity(event, true);\n      });\n      this.$window.on('resize.cart-page', just_debounce__WEBPACK_IMPORTED_MODULE_2___default()(function () {\n        return _this2._moveTitleTotal();\n      }, 20));\n    }\n  }, {\n    key: \"_moveTitleTotal\",\n    value: function _moveTitleTotal() {\n      if (!this.$titleTotalContents.length) {\n        return;\n      }\n\n      if (this.$window.outerWidth() >= 480) {\n        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default.a.contains(this.$titleTotalLarge[0], this.$titleTotalContents[0])) {\n          var $form = this.$titleTotalContents.detach();\n          this.$titleTotalLarge.append($form);\n        }\n      } else {\n        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default.a.contains(this.$titleTotalSmall[0], this.$titleTotalContents[0])) {\n          var _$form = this.$titleTotalContents.detach();\n\n          this.$titleTotalSmall.append(_$form);\n        }\n      }\n    }\n    /**\n     * Prevent form submission when pressing `enter` within a quantity selector\n     *\n     * @param event\n     * @private\n     */\n\n  }, {\n    key: \"_quantityKeyDown\",\n    value: function _quantityKeyDown(event) {\n      // Only block enter keys\n      if (event.keyCode !== 13) {\n        return;\n      } // Block form submission, but update field\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).trigger('change');\n      event.preventDefault();\n    }\n    /**\n     * Handle an item quantity change\n     *\n     * @param event\n     * @param {Boolean} remove - Set as true to remove cart item\n     * @private\n     */\n\n  }, {\n    key: \"_editItemQuantity\",\n    value: function _editItemQuantity(event) {\n      var remove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.messageBanner.dismissBanners();\n      var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var $cartItem = $target.closest('[data-cartitem-id]');\n      var quantity = remove ? 0 : parseInt($target.val(), 10);\n      quantity = Math.max(quantity, 0);\n\n      this._updateCart($cartItem, quantity); // Remove item from cart visually if it is being removed\n\n\n      if (quantity === 0 || remove) {\n        $cartItem.height($cartItem.height());\n      }\n    }\n    /**\n     * Update cart with a valid quantity\n     *\n     * @param $cartItem\n     * @param quantity\n     * @private\n     */\n\n  }, {\n    key: \"_updateCart\",\n    value: function _updateCart($cartItem, quantity) {\n      var _this3 = this;\n\n      var id = $cartItem.data('cartitem-id'); // Notify Shopify updated item\n\n      Shopify.changeItem(id, quantity, function (response) {\n        _this3._didUpdate(id, quantity, response, $cartItem);\n      });\n    }\n  }, {\n    key: \"_quantityError\",\n    value: function _quantityError(limit, title) {\n      var errorMessage = this.settings.stock_limit.replace('** quantity **', limit).replace('** title **', title);\n      this.messageBanner.message(errorMessage, 'error');\n    }\n    /**\n     * Update cart content based on information from Shopify\n     *\n     * @param id\n     * @param quantity\n     * @param response\n     * @param $cartItem\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: \"_didUpdate\",\n    value: function _didUpdate(id, quantity, response, $cartItem) {\n      // Reload page if all items are removed from cart\n      if (!response.items.length) {\n        window.location = window.Theme.routes.cart_url;\n        return;\n      }\n\n      window.api.theme.triggerEvent('cart:updated', {\n        cancel: function cancel() {}\n      });\n      this.cart = response;\n      this.$header.trigger('cartcount:update', {\n        response: response\n      }); // Update all totals on the page when the cart has been updated\n\n      window.api.theme.updateValue('cart:total', {\n        price: this.cart.total_price,\n        compare_at_price: this.cart.total_price\n      });\n      window.api.theme.updateValue('cart:checkout', true);\n      window.api.theme.updateElement('cart:notifications');\n      window.api.theme.updateElement('cart:tools'); // Select item from response\n\n      var filteredItems = response.items.filter(function (item) {\n        return item.id === id;\n      });\n\n      if (!filteredItems.length) {\n        $cartItem.addClass('removing').one('trend', function () {\n          $cartItem.off('trend').remove();\n        });\n        return;\n      }\n\n      window.api.theme.updateValue(\"line-item:\".concat(id, \":price\"), {\n        price: this.cart.items.filter(function (lineItem) {\n          return lineItem.id === id;\n        })[0].line_price,\n        compare_at_price: this.cart.items.filter(function (lineItem) {\n          return lineItem.id === id;\n        })[0].original_line_price\n      });\n      var cartItem = filteredItems[0];\n\n      if (cartItem.quantity !== quantity) {\n        this._quantityError(cartItem.quantity, cartItem.title);\n\n        $cartItem.find('[data-quantity-input]').val(cartItem.quantity);\n        $cartItem.find('[data-quantity-select]').val(cartItem.quantity);\n      }\n    }\n    /**\n     * Handle Errors returned from Shopify\n     *\n     * @param errors\n     * @private\n     */\n\n  }, {\n    key: \"_handleErrors\",\n    value: function _handleErrors() {\n      var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!errors) {\n        return;\n      }\n\n      var shippingResponse = {\n        message: this.shipping.error_general\n      };\n\n      if (errors.zip && errors.zip.length > 0) {\n        if (errors.zip[0].indexOf('is not valid') !== -1 || errors.zip[0].indexOf('can\\'t be blank') !== -1) {\n          shippingResponse.message = \"\".concat(this.shipping.zip, \" \").concat(errors.zip);\n        }\n      }\n\n      if (errors.error && errors.error.length > 0) {\n        if (errors.error[0].indexOf('shipment_too_heavy') !== -1) {\n          shippingResponse.message = this.shipping.shipment_too_heavy;\n        }\n      }\n\n      this._handleShippingResponse(shippingResponse);\n    }\n  }, {\n    key: \"_initShippingCalc\",\n    value: function _initShippingCalc() {\n      var _this4 = this;\n\n      this._bindShippingCalcEvents();\n\n      var countrySelect = document.getElementById('address_country');\n      var provinceSelect = document.getElementById('address_province');\n      var provinceContainer = document.getElementById('address_province_container');\n      this.shippingCountryProvinceSelector = new _shopify_theme_addresses__WEBPACK_IMPORTED_MODULE_3__[\"CountryProvinceSelector\"](countrySelect.innerHTML);\n      this.shippingCountryProvinceSelector.build(countrySelect, provinceSelect, {\n        onCountryChange: function onCountryChange(provinces) {\n          if (provinces.length) {\n            provinceContainer.style.display = 'block';\n          } else {\n            provinceContainer.style.display = 'none';\n          } // \"Province\", \"State\", \"Region\", etc. and \"Postal Code\", \"ZIP Code\", etc.\n          // Even countries without provinces include a label.\n\n\n          var _window$Countries$cou = window.Countries[countrySelect.value],\n              label = _window$Countries$cou.label,\n              zip_label = _window$Countries$cou.zip_label;\n          provinceContainer.querySelector('label[for=\"address_province\"]').innerHTML = label;\n          _this4.el.querySelector('#address_zip ~ label[for=\"address_zip\"]').innerHTML = zip_label;\n        }\n      });\n    }\n  }, {\n    key: \"_bindShippingCalcEvents\",\n    value: function _bindShippingCalcEvents() {\n      var _this5 = this;\n\n      this.$el.on('click.cart-page', '[data-cartshipping-toggle]', function () {\n        _this5._toggleShippingCalc();\n      });\n      this.$el.on('click.cart-page', '[data-cartshipping-submit]', function () {\n        _this5._getShippingRates();\n      });\n      this.$el.on('keypress.cart-page', '#address_zip', function (event) {\n        if (event.keyCode === 10 || event.keyCode === 13) {\n          event.preventDefault();\n\n          _this5.$shippingSubmit.trigger('click');\n        }\n      });\n    }\n  }, {\n    key: \"_toggleShippingCalc\",\n    value: function _toggleShippingCalc() {\n      var oldText = this.$shippingToggle.text();\n      var newText = this.$shippingToggle.data('cartshipping-toggle');\n      this.$shippingToggle.text(newText).data('cartshipping-toggle', oldText);\n      this.$shipping.toggleClass('open');\n    }\n  }, {\n    key: \"_getShippingRates\",\n    value: function _getShippingRates() {\n      var _this6 = this;\n\n      this._disableShippingButton();\n\n      var shippingAddress = {};\n      shippingAddress.country = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#address_country').val() || '';\n      shippingAddress.province = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#address_province').val() || '';\n      shippingAddress.zip = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#address_zip').val() || '';\n      var queryString = Object.keys(shippingAddress).map(function (key) {\n        return \"\".concat(encodeURIComponent(\"shipping_address[\".concat(key, \"]\")), \"=\").concat(encodeURIComponent(shippingAddress[key]));\n      }).join('&');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax(\"\".concat(window.Theme.routes.cart_url, \"/shipping_rates.json?\").concat(queryString), {\n        dataType: 'json'\n      }).fail(function (error) {\n        return _this6._handleErrors(error.responseJSON || {});\n      }).done(function (response) {\n        var rates = response.shipping_rates;\n        var addressBase = [];\n\n        if (shippingAddress.zip.length) {\n          addressBase.push(shippingAddress.zip.trim());\n        }\n\n        if (shippingAddress.province.length) {\n          addressBase.push(shippingAddress.province);\n        }\n\n        if (shippingAddress.country.length) {\n          addressBase.push(shippingAddress.country);\n        }\n\n        var address = addressBase.join(', ');\n        var message = '';\n\n        if (rates.length > 1) {\n          var firstRate = window.Shopify.formatMoney(rates[0].price, _this6.settings.money_format);\n          message = _this6.shipping.multiple_rates.replace('*address*', address).replace('*number_of_rates*', rates.length).replace('*rate*', \"<span class=\\\"money\\\">\".concat(firstRate, \"</span>\"));\n        } else if (rates.length === 1) {\n          message = _this6.shipping.one_rate.replace('*address*', address);\n        } else {\n          message = _this6.shipping.no_rates;\n        }\n\n        var ratesList = rates.map(function (rate) {\n          var price = window.Shopify.formatMoney(rate.price, _this6.settings.money_format);\n\n          var rateValue = _this6.shipping.rate_value.replace('*rate_title*', rate.name).replace('*rate*', \"<span class=\\\"money\\\">\".concat(price, \"</span>\"));\n\n          return \"<li>\".concat(rateValue, \"</li>\");\n        });\n\n        _this6._handleShippingResponse({\n          message: message,\n          rates: ratesList\n        });\n      });\n    }\n  }, {\n    key: \"_enableShippingButton\",\n    value: function _enableShippingButton() {\n      this.$shippingSubmit.text(this.shipping.calculate_shipping).attr('disabled', false);\n    }\n  }, {\n    key: \"_disableShippingButton\",\n    value: function _disableShippingButton() {\n      this.$shippingSubmit.text(this.shipping.calculating).attr('disabled', true);\n    }\n  }, {\n    key: \"_showShippingResponse\",\n    value: function _showShippingResponse() {\n      this.$shippingResponse.addClass('visible');\n    }\n  }, {\n    key: \"_hideShippingResponse\",\n    value: function _hideShippingResponse() {\n      this.$shippingResponse.removeClass('visible');\n    }\n    /**\n     * Handle shipping responses\n     *\n     * @param {object} shippingResponse\n     * @property {String} shippingResponse.messages - Error / Success message\n     * @property {Array|String} shippingResponse.rates - Shipping rates\n     * @private\n     */\n\n  }, {\n    key: \"_handleShippingResponse\",\n    value: function _handleShippingResponse() {\n      var shippingResponse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      // Hide the response so that it can be populated smoothly\n      this._hideShippingResponse();\n\n      var message = shippingResponse.message || null;\n      var rates = shippingResponse.rates || null; // Empty out contents\n\n      this.$shippingResponseMessage.empty();\n      this.$shippingResponseRates.empty();\n\n      if (message) {\n        this.$shippingResponseMessage.html(message);\n      }\n\n      if (rates) {\n        this.$shippingResponseRates.html(rates);\n      } // Reset the calculating button so it can be used again\n\n\n      this._enableShippingButton(); // No error provided\n\n\n      if (!message && !rates) {\n        return;\n      } // Show the response\n\n\n      this._showShippingResponse();\n    }\n  }]);\n\n  return StaticCart;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticCart.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticCollection.js":
/*!*****************************************************!*\
  !*** ./source/scripts/sections/StaticCollection.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticCollection; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! intersection-observer */ \"./node_modules/intersection-observer/intersection-observer.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/ProductReviews */ \"./source/scripts/helpers/ProductReviews.js\");\n/* harmony import */ var _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/ProductGridItem */ \"./source/scripts/components/ProductGridItem.js\");\n/* harmony import */ var _components_Modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/Modal */ \"./source/scripts/components/Modal.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\nfunction decodeUrlQueryParams(url) {\n  var queryParamsString = new RegExp(/.*\\?([^#]+)/).exec(url);\n  var queryParams = {};\n\n  if (queryParamsString && queryParamsString.length >= 2) {\n    queryParamsString[1].split('&').forEach(function (param) {\n      var _param$split = param.split('='),\n          _param$split2 = _slicedToArray(_param$split, 2),\n          key = _param$split2[0],\n          value = _param$split2[1];\n\n      queryParams[decodeURIComponent(key)] = decodeURIComponent(value);\n    });\n  }\n\n  return queryParams;\n}\n\nfunction sanitizeQueryParams(params) {\n  var sanitizedParams = params;\n\n  if (_typeof(sanitizedParams) !== 'object') {\n    throw new Error('params is not of type Object');\n  }\n\n  if ('page' in sanitizedParams && sanitizedParams.page === 1) {\n    delete sanitizedParams.page;\n  }\n\n  if ('view' in sanitizedParams) {\n    if (sanitizedParams.view.indexOf('_ajax-collection-') !== -1) {\n      sanitizedParams.view = sanitizedParams.view.replace('_ajax-collection-', '');\n    }\n\n    if (sanitizedParams.view === '_ajax-collection') {\n      delete sanitizedParams.view;\n    }\n  }\n\n  return sanitizedParams;\n}\n\nvar StaticCollection = /*#__PURE__*/function () {\n  function StaticCollection(section) {\n    _classCallCheck(this, StaticCollection);\n\n    this.id = section.id;\n    this.el = section.el;\n    this.context = section.data.context;\n    this.events = [];\n    this.processing = false;\n    this.queryParams = _objectSpread({}, decodeUrlQueryParams(window.location.search));\n    this.view = this.queryParams.grid_list;\n    this.filtersContent = '[data-productgrid-filters-content]';\n    this.sortContent = '[data-productgrid-sort-content]';\n    this.$sortTrigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-trigger-sort]', this.el);\n    this.$showbyTrigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-show-by]', this.el);\n    this.$sortTriggerButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-trigger-sort-button]', this.el);\n    this.$sortTriggerModal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-modal-sort]', this.el);\n    this.$filtersTrigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-trigger-filters]', this.el);\n    this.$additionalTags = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-filter-toggle]', this.el);\n    this.$allTags = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"\".concat(this.filtersContent, \" .filter-item a:not([data-filter-toggle])\"), this.el);\n    this.$viewToggle = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-collection-view]', this.el);\n    this.$gridContainer = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.productgrid--outer', this.el);\n    this.$gridTagLinks = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.filter-item--grid a, .filter-item--grid-simple a', this.el);\n    this.$paginationLinks = jquery__WEBPACK_IMPORTED_MODULE_0___default()('a.pagination--item', this.el);\n    this.sidebarContainer = this.el.querySelector('.productgrid--sidebar');\n    this.responseContainer = this.el.querySelector('.results--container');\n    this.clickToLoadTrigger = this.el.querySelector('[data-click-to-load]');\n    this.clickToLoad = this.el.querySelector('.click-to-load');\n    this.infiniteScrollTrigger = this.el.querySelector('[data-infinite-scroll]');\n    this.infiniteScroll = this.el.querySelector('.infinite-scroll');\n    this.productGrid = this.responseContainer.querySelector('.productgrid--items');\n    this.paginationContainer = this.responseContainer.querySelector('.pagination--container:not(.visually-hidden)');\n    this._changeSortingButton = this._changeSortingButton.bind(this);\n    this._activateTag = this._activateTag.bind(this);\n    this._toggleTags = this._toggleTags.bind(this);\n    this._toggleView = this._toggleView.bind(this); // Ajax Search functions\n\n    this._ajaxFilter = this._ajaxFilter.bind(this);\n    this.modal = new _components_Modal__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n\n    if (window.history.scrollRestoration && (this.infiniteScroll || this.clickToLoad)) {\n      window.history.scrollRestoration = 'manual';\n    }\n\n    this._updateView(this.view);\n\n    if (this.productGrid) {\n      this._initProductItems(this.productGrid.querySelectorAll('[data-product-item]'));\n    }\n\n    this._bindEvents();\n  }\n\n  _createClass(StaticCollection, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.events.forEach(function ($el) {\n        return $el.off('.collection');\n      });\n      this.modal.unload();\n      this.recentlyViewed.unload();\n      this.productItems.forEach(function (productItem) {\n        productItem.unload();\n      });\n    }\n  }, {\n    key: \"_initProductItems\",\n    value: function _initProductItems(productEls) {\n      this.productItems = [];\n\n      for (var i = 0; i < productEls.length; i++) {\n        var productItem = productEls[i];\n        this.productItems.push(new _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n          $el: jquery__WEBPACK_IMPORTED_MODULE_0___default()(productItem),\n          id: this.id,\n          product: JSON.parse(productItem.querySelector('[data-product-data]').innerHTML),\n          queryParams: this.queryParams,\n          lazy: true\n        }));\n      }\n\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spr-badge', this.el)) {\n        Object(_helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n      }\n    }\n    /**\n     * Style a tag as active after click, before page transition\n     *\n     * @param event\n     * @private\n     */\n\n  }, {\n    key: \"_activateTag\",\n    value: function _activateTag(event) {\n      if (this.processing) {\n        event.preventDefault();\n        return;\n      }\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).closest('.filter-item').toggleClass('filter-item--active').toggleClass('filter-item--inactive');\n\n      this._ajaxFilter(event);\n    }\n    /**\n     * Expand / Collapse additional tags in the sidebar\n     *\n     * @param event\n     * @private\n     */\n\n  }, {\n    key: \"_toggleTags\",\n    value: function _toggleTags(event) {\n      event.preventDefault();\n\n      if (this.processing) {\n        return;\n      }\n\n      var $trigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var $items = $trigger.parent().siblings('[data-hidden-default]');\n      var siblingsVisible = $trigger.data('filter-toggle');\n      $items.toggleClass('filter-item--hidden', siblingsVisible);\n      $trigger.data('filter-toggle', !siblingsVisible).text(!siblingsVisible ? this.context.see_less : this.context.see_more);\n\n      if (this.modal.isOpen()) {\n        this.modal.position();\n      }\n    }\n    /**\n     * Sort by opens a modal on mobile, this handles button events\n     *\n     * @param event\n     * @private\n     */\n\n  }, {\n    key: \"_changeSortingButton\",\n    value: function _changeSortingButton(event) {\n      if (this.processing) {\n        return;\n      }\n\n      var activeClass = 'utils-sortby--modal-button--active';\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).addClass(activeClass).parent().siblings().find(\".\".concat(activeClass)).removeClass(activeClass);\n\n      this._ajaxFilter(event);\n    }\n    /**\n     * Toggle grid or list view\n     *\n     */\n\n  }, {\n    key: \"_toggleView\",\n    value: function _toggleView(event) {\n      var _this = this;\n\n      var view = event.currentTarget.getAttribute('data-collection-view');\n      this.queryParams.grid_list = view;\n      this.view = view;\n\n      this._updateView(this.queryParams.grid_list);\n\n      this._updateHistory(window.location.pathname);\n\n      if (this.productItems.length) {\n        this.productItems.forEach(function (productItem) {\n          return productItem.handleViewChange(_this.queryParams.grid_list);\n        });\n      }\n    }\n  }, {\n    key: \"_updateView\",\n    value: function _updateView() {\n      var view = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'grid-view';\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.utils-viewtoggle-button', this.el).removeClass('active');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-collection-view=\".concat(view, \"]\")).addClass('active');\n      var className = view.replace('-', '');\n\n      if (className === 'listview') {\n        this.$gridContainer.removeClass('productgrid-gridview');\n      } else {\n        this.$gridContainer.removeClass('productgrid-listview');\n      }\n\n      this.$gridContainer.addClass(\"productgrid-\".concat(className));\n    }\n    /* AJAX search functions */\n\n  }, {\n    key: \"_setProcessing\",\n    value: function _setProcessing() {\n      var processing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'filter';\n      this.processing = processing;\n\n      if (processing) {\n        if (type === 'filter') {\n          var y = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop();\n\n          if (y >= 310) {\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()('html, body').animate({\n              scrollTop: y - 300\n            }, 150).animate({\n              scrollTop: 10\n            }, 0).animate({\n              scrollTop: 0\n            }, 150);\n          } else {\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()('html, body').animate({\n              scrollTop: 0\n            }, 150);\n          }\n        }\n\n        if (this.sidebarContainer) {\n          this.sidebarContainer.classList.add(\"processing--\".concat(type));\n        }\n\n        this.responseContainer.classList.add(\"processing--\".concat(type));\n      } else {\n        if (this.sidebarContainer) {\n          this.sidebarContainer.classList.add(\"processing--\".concat(type));\n        }\n\n        this.responseContainer.classList.remove(\"processing--\".concat(type));\n      }\n    }\n    /**\n     * Retrieve the template containing filtered product items and tags via AJAX\n     */\n\n  }, {\n    key: \"_ajaxFilter\",\n    value: function _ajaxFilter(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.processing === true) {\n        return;\n      }\n\n      var target = event.currentTarget;\n      var fetchUrl = window.location.pathname;\n      this.queryParams.page = 1;\n\n      if (target.hasAttribute('data-show-by')) {\n        // 'Show by' - number of products per page\n        this.queryParams.view = target.getAttribute('data-show-by');\n      } else if (target.hasAttribute('data-productgrid-trigger-sort') || target.hasAttribute('data-productgrid-trigger-sort-button')) {\n        // Sortby select/button\n        this.queryParams.sort_by = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).val();\n      } else if (target.hasAttribute('data-to-page')) {\n        // Pagination link\n        this.queryParams.page = target.getAttribute('data-to-page');\n      } else {\n        // Filter links\n        var href = target.getAttribute('href');\n        var queryParams = decodeUrlQueryParams(href);\n        delete this.queryParams.constraint;\n\n        if (queryParams.constraint) {\n          this.queryParams.constraint = queryParams.constraint;\n        }\n\n        fetchUrl = href.replace(/\\?[^#]+/, '');\n      }\n\n      this._ajaxFetch(fetchUrl, 'filter');\n    }\n  }, {\n    key: \"_ajaxPagination\",\n    value: function _ajaxPagination() {\n      var infiniteScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.queryParams.page = infiniteScroll ? this.infiniteScrollTrigger.getAttribute('data-to-page') : this.clickToLoadTrigger.getAttribute('data-to-page');\n\n      this._ajaxFetch(window.location.pathname, 'pagination');\n    }\n  }, {\n    key: \"_ajaxFetch\",\n    value: function _ajaxFetch(url, type) {\n      var _this2 = this;\n\n      // Trigger UI processing state\n      this._setProcessing(true, type);\n\n      this.queryParams = sanitizeQueryParams(this.queryParams);\n\n      var params = _objectSpread({}, this.queryParams);\n\n      params.view = this.queryParams.view ? \"_ajax-collection-\".concat(this.queryParams.view) : '_ajax-collection';\n      shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__[\"default\"].load(url, params).then(function (_ref) {\n        var html = _ref.html;\n\n        if (type === 'pagination') {\n          var fragment = document.createDocumentFragment();\n          var productItems = document.createElement('div');\n          productItems.innerHTML = html.productgridItems;\n\n          while (productItems.firstChild) {\n            fragment.appendChild(productItems.firstChild);\n          }\n\n          var newProductItems = fragment.querySelectorAll('[data-product-item]');\n\n          _this2.productGrid.appendChild(fragment);\n\n          _this2._initProductItems(newProductItems);\n\n          _this2.paginationContainer.innerHTML = html.pagination;\n        } else {\n          _this2.productItems.forEach(function (item) {\n            return item.unload();\n          });\n\n          _this2.responseContainer.innerHTML = html.productgrid;\n\n          _this2._initProductItems(_this2.responseContainer.querySelectorAll('[data-product-item]'));\n\n          if (_this2.sidebarContainer) {\n            _this2.sidebarContainer.innerHTML = html.sidebar;\n          }\n        }\n\n        _this2._updateView(_this2.queryParams.grid_list);\n\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].watch(_this2.responseContainer);\n\n        if (_this2.modal.isOpen()) {\n          _this2.modal.close();\n        }\n\n        _this2._updateHistory(url); // Update link bindings with new DOM elements\n\n\n        _this2._updateLinkBindings();\n\n        _this2._bindEvents(); // Once it's all updated, update the UI to show processing is complete\n\n\n        _this2._setProcessing(false, type);\n      });\n    }\n    /**\n     * Unbind AJAX events for links no longer on the page, and bind new links\n     */\n\n  }, {\n    key: \"_updateLinkBindings\",\n    value: function _updateLinkBindings() {\n      this.events.forEach(function ($el) {\n        return $el.off('.collection');\n      });\n      this.$gridTagLinks = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.filter-item--grid a, .filter-item--grid-simple a', this.el);\n      this.$additionalTags = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-filter-toggle]', this.el);\n      this.$viewToggle = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-collection-view]', this.el);\n      this.$filtersTrigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-trigger-filters]', this.el);\n      this.$sortTriggerModal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-modal-sort]', this.el);\n      this.$sortTrigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-trigger-sort]', this.el);\n      this.$sortTriggerButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-productgrid-trigger-sort-button]', this.el);\n      this.$showbyTrigger = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-show-by]', this.el);\n      this.$paginationLinks = jquery__WEBPACK_IMPORTED_MODULE_0___default()('a.pagination--item', this.el);\n      this.$allTags = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"\".concat(this.filtersContent, \" .filter-item a:not([data-filter-toggle])\"), this.el);\n      this.clickToLoad = this.el.querySelector('.click-to-load');\n      this.clickToLoadTrigger = this.el.querySelector('[data-click-to-load]');\n      this.infiniteScrollTrigger = this.el.querySelector('[data-infinite-scroll]');\n      this.infiniteScroll = this.el.querySelector('.infinite-scroll');\n      this.productGrid = this.responseContainer.querySelector('.productgrid--items');\n      this.paginationContainer = this.responseContainer.querySelector('.pagination--container:not(.visually-hidden)');\n    }\n    /**\n     * Bind filter link click events to new ajax functionality\n     */\n\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this$events,\n          _this3 = this;\n\n      var links = this.$gridTagLinks.get().concat(this.$showbyTrigger.get());\n\n      (_this$events = this.events).push.apply(_this$events, _toConsumableArray(links.map(function (el) {\n        return jquery__WEBPACK_IMPORTED_MODULE_0___default()(el).on('click.collection', _this3._ajaxFilter);\n      })));\n\n      this.events.push(this.$sortTrigger.on('change.collection', this._ajaxFilter), this.$viewToggle.on('click.collection', this._toggleView), this.$filtersTrigger.on('click.collection', function () {\n        return _this3.modal.open(_this3.filtersContent, 'productgrid-filters');\n      }), this.$allTags.on('click.collection', this._activateTag), this.$additionalTags.on('click.collection', this._toggleTags), this.$sortTriggerModal.on('click.collection', function () {\n        return _this3.modal.open(_this3.sortContent, 'productgrid-sort');\n      }), this.$sortTriggerButton.on('click.collection', this._changeSortingButton));\n\n      if (this.infiniteScrollTrigger) {\n        var observer = new IntersectionObserver(function (entries) {\n          entries.forEach(function (entry) {\n            if (entry.intersectionRatio > 0) {\n              _this3._ajaxPagination(true);\n            }\n          });\n        });\n        observer.observe(this.infiniteScrollTrigger);\n      } else if (this.clickToLoad) {\n        this.events.push(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.clickToLoadTrigger).on('click.collection', function () {\n          return _this3._ajaxPagination(false);\n        }));\n      } else {\n        this.events.push(this.$paginationLinks.on('click.collection', this._ajaxFilter));\n      }\n    }\n    /**\n     * Update the page URL so users can link to their particular search\n     */\n\n  }, {\n    key: \"_updateHistory\",\n    value: function _updateHistory(url) {\n      var _this4 = this;\n\n      if (window.Shopify && window.Shopify.designMode || !window.history.pushState) {\n        return;\n      }\n\n      var querylessHref = url.replace(/\\?[^#]+/, '');\n      var href = querylessHref.replace(/([^#]+)(.*)/, function (match, address, hash) {\n        return \"\".concat(address, \"?\").concat(Object.keys(_this4.queryParams).sort().map(function (key) {\n          return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(_this4.queryParams[key]));\n        }).join('&')).concat(hash);\n      });\n\n      if (window.location.href !== href) {\n        window.history.pushState({}, '', href);\n      }\n    }\n  }]);\n\n  return StaticCollection;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticCollection.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticCollectionMinimal.js":
/*!************************************************************!*\
  !*** ./source/scripts/sections/StaticCollectionMinimal.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticCollectionMinimal; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! intersection-observer */ \"./node_modules/intersection-observer/intersection-observer.js\");\n/* harmony import */ var intersection_observer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(intersection_observer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/ProductReviews */ \"./source/scripts/helpers/ProductReviews.js\");\n/* harmony import */ var _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/ProductGridItem */ \"./source/scripts/components/ProductGridItem.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar StaticCollectionMinimal = /*#__PURE__*/function () {\n  function StaticCollectionMinimal(section) {\n    _classCallCheck(this, StaticCollectionMinimal);\n\n    this.el = section.el;\n    this.id = section.id; // Pagination\n\n    this.paginationStyle = section.data.pagination_style;\n    this.clickToLoadTrigger = this.el.querySelector('[data-click-to-load]');\n    this.clickToLoad = this.el.querySelector('.click-to-load');\n    this.infiniteScrollTrigger = this.el.querySelector('[data-infinite-scroll]');\n    this.infiniteScroll = this.el.querySelector('.infinite-scroll');\n    this.paginationLinks = this.el.querySelectorAll('a.pagination--item');\n    this.responseContainer = this.el.querySelector('.results--container');\n    this.paginationContainer = this.responseContainer.querySelector('.pagination--container:not(.visually-hidden)');\n    this.productGrid = this.responseContainer.querySelector('.productgrid--items');\n    this.toPage = null; // Product Cards\n\n    this.productItemEls = this.productGrid.querySelectorAll('[data-product-item]');\n    this.productItems = [];\n    this._processing = this._processing.bind(this);\n    this._bindEvents = this._bindEvents.bind(this);\n    this._unbindEvents = this._unbindEvents.bind(this);\n    this._initProductCards = this._initProductCards.bind(this);\n    this._updateHistory = this._updateHistory.bind(this);\n    this._fetchProductCards = this._fetchProductCards.bind(this);\n\n    this._initProductCards(this.productItemEls);\n\n    this._bindEvents();\n  }\n\n  _createClass(StaticCollectionMinimal, [{\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this = this;\n\n      if (this.clickToLoadTrigger) {\n        this.clickToLoadTrigger.addEventListener('click', this._fetchProductCards);\n      } else if (this.infiniteScrollTrigger) {\n        var observer = new IntersectionObserver(function (entries) {\n          entries.forEach(function (entry) {\n            if (entry.intersectionRatio > 0) {\n              _this._fetchProductCards(false);\n            }\n          });\n        });\n        observer.observe(this.infiniteScrollTrigger);\n      } else {\n        this.paginationLinks.forEach(function (link) {\n          link.addEventListener('click', _this._fetchProductCards);\n        });\n      }\n    }\n  }, {\n    key: \"_unbindEvents\",\n    value: function _unbindEvents() {\n      var _this2 = this;\n\n      if (this.clickToLoadTrigger) {\n        this.clickToLoadTrigger.removeEventListener('click', this._fetchProductCards);\n      } else {\n        this.paginationLinks.forEach(function (link) {\n          link.removeEventListener('click', _this2._fetchProductCards);\n        });\n      }\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this._unbindEvents();\n\n      this.recentlyViewed.unload();\n      this.productItems.forEach(function (productItem) {\n        productItem.unload();\n      });\n    }\n  }, {\n    key: \"_initProductCards\",\n    value: function _initProductCards(productEls) {\n      for (var i = 0; i < productEls.length; i++) {\n        var productItem = productEls[i];\n        this.productItems.push(new _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n          $el: jquery__WEBPACK_IMPORTED_MODULE_0___default()(productItem),\n          id: this.id,\n          product: JSON.parse(productItem.querySelector('[data-product-data]').innerHTML),\n          queryParams: {\n            page: this.toPage\n          },\n          lazy: true\n        }));\n      }\n\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spr-badge', this.el)) {\n        Object(_helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n      }\n    }\n  }, {\n    key: \"_processing\",\n    value: function _processing(isProcessing) {\n      if (isProcessing && this.paginationStyle === 'traditional') {\n        this.responseContainer.classList.add('processing--filter');\n        var y = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop();\n\n        if (y >= 310) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('html, body').animate({\n            scrollTop: y - 300\n          }, 150).animate({\n            scrollTop: 10\n          }, 0).animate({\n            scrollTop: 0\n          }, 150);\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('html, body').animate({\n            scrollTop: 0\n          }, 150);\n        }\n      } else if (isProcessing && this.paginationStyle !== 'traditional') {\n        this.responseContainer.classList.add('processing--pagination');\n      } else if (!isProcessing && this.paginationStyle === 'traditional') {\n        this.responseContainer.classList.remove('processing--filter');\n      } else {\n        this.responseContainer.classList.remove('processing--pagination');\n      }\n    }\n  }, {\n    key: \"_fetchProductCards\",\n    value: function _fetchProductCards(event) {\n      var _this3 = this;\n\n      this._processing(true);\n\n      this.toPage = event ? event.target.dataset.toPage : this.infiniteScrollTrigger.dataset.toPage;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      var fetchUrl = window.location.pathname;\n      var params = {\n        page: this.toPage,\n        view: '_ajax-minimal'\n      };\n      shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__[\"default\"].load(fetchUrl, params).then(function (_ref) {\n        var html = _ref.html;\n        var fragment = document.createDocumentFragment();\n        var productItems = document.createElement('div');\n        productItems.innerHTML = html.productgridItems;\n\n        while (productItems.firstChild) {\n          fragment.appendChild(productItems.firstChild);\n        }\n\n        if (_this3.paginationStyle === 'traditional') {\n          _this3.productItems.forEach(function (item) {\n            return item.unload();\n          });\n\n          _this3.productItems = [];\n          _this3.responseContainer.innerHTML = html.productgrid;\n\n          _this3._initProductCards(_this3.responseContainer.querySelectorAll('[data-product-item]'));\n        } else {\n          var newProductItems = fragment.querySelectorAll('[data-product-item]');\n\n          _this3.productGrid.appendChild(fragment);\n\n          _this3._initProductCards(newProductItems);\n        }\n\n        _this3.paginationContainer.innerHTML = html.pagination;\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].watch(_this3.responseContainer);\n\n        _this3._unbindEvents();\n\n        _this3.clickToLoadTrigger = _this3.el.querySelector('[data-click-to-load]');\n        _this3.clickToLoad = _this3.el.querySelector('.click-to-load');\n        _this3.infiniteScrollTrigger = _this3.el.querySelector('[data-infinite-scroll]');\n        _this3.infiniteScroll = _this3.el.querySelector('.infinite-scroll');\n        _this3.paginationLinks = _this3.el.querySelectorAll('a.pagination--item');\n\n        _this3._bindEvents();\n\n        _this3._updateHistory(fetchUrl, params);\n\n        _this3._processing(false);\n      });\n    }\n  }, {\n    key: \"_updateHistory\",\n    value: function _updateHistory(url, params) {\n      if (window.Shopify && window.Shopify.designMode || !window.history.pushState) {\n        return;\n      }\n\n      var href = \"\".concat(url, \"?page=\").concat(params.page);\n      window.history.pushState({}, '', href);\n    }\n  }]);\n\n  return StaticCollectionMinimal;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticCollectionMinimal.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticPassword.js":
/*!***************************************************!*\
  !*** ./source/scripts/sections/StaticPassword.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticPassword; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Modal */ \"./source/scripts/components/Modal.js\");\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar StaticPassword = /*#__PURE__*/function () {\n  function StaticPassword(section) {\n    _classCallCheck(this, StaticPassword);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.modalForms = null;\n    this.newsletterForm = null;\n    this.modalContents = '[data-passwordentry]';\n    this.$newsletterForm = this.$el.find('[data-password-newsletter]');\n    this.modalOpen = this.onModalOpen.bind(this);\n    this.modalClose = this.onModalClose.bind(this);\n    this._openModal = this._openModal.bind(this);\n    this.modal = new _components_Modal__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n      onOpen: this.modalOpen,\n      onClose: this.modalClose\n    });\n\n    if (this.$newsletterForm) {\n      this.newsletterForm = new _Forms__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.$newsletterForm);\n    }\n\n    this._checkForPasswordAttempt();\n\n    this._bindEvents();\n  }\n\n  _createClass(StaticPassword, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.$el.off('.static-password');\n\n      if (this.newsletterForm) {\n        this.newsletterForm.unload();\n      }\n\n      if (this.modalForms) {\n        this.modalForms.unload();\n      }\n    }\n  }, {\n    key: \"onModalOpen\",\n    value: function onModalOpen() {\n      var $contents = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-passwordentry-contents]');\n      this.modalForms = new _Forms__WEBPACK_IMPORTED_MODULE_2__[\"default\"]($contents);\n    }\n  }, {\n    key: \"onModalClose\",\n    value: function onModalClose() {\n      this.modalForms.unload();\n      this.modalForms = null;\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      this.$el.on('click.static-password', '[data-passwordentry-toggle]', this._openModal);\n    }\n  }, {\n    key: \"_openModal\",\n    value: function _openModal() {\n      this.modal.open(this.modalContents, 'passwordentry');\n    }\n  }, {\n    key: \"_checkForPasswordAttempt\",\n    value: function _checkForPasswordAttempt() {\n      if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-passwordentry-errors]').length) {\n        return;\n      }\n\n      this._openModal();\n    }\n  }]);\n\n  return StaticPassword;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNQYXNzd29yZC5qcz9jYTQ2Il0sIm5hbWVzIjpbIlN0YXRpY1Bhc3N3b3JkIiwic2VjdGlvbiIsIiRlbCIsIiQiLCJlbCIsIm1vZGFsRm9ybXMiLCJuZXdzbGV0dGVyRm9ybSIsIm1vZGFsQ29udGVudHMiLCIkbmV3c2xldHRlckZvcm0iLCJmaW5kIiwibW9kYWxPcGVuIiwib25Nb2RhbE9wZW4iLCJiaW5kIiwibW9kYWxDbG9zZSIsIm9uTW9kYWxDbG9zZSIsIl9vcGVuTW9kYWwiLCJtb2RhbCIsIk1vZGFsIiwib25PcGVuIiwib25DbG9zZSIsIkZvcm1zIiwiX2NoZWNrRm9yUGFzc3dvcmRBdHRlbXB0IiwiX2JpbmRFdmVudHMiLCJvZmYiLCJ1bmxvYWQiLCIkY29udGVudHMiLCJvbiIsIm9wZW4iLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTs7SUFFcUJBLGM7QUFDbkIsMEJBQVlDLE9BQVosRUFBcUI7QUFBQTs7QUFDbkIsU0FBS0MsR0FBTCxHQUFXQyw2Q0FBQyxDQUFDRixPQUFPLENBQUNHLEVBQVQsQ0FBWjtBQUVBLFNBQUtDLFVBQUwsR0FBa0IsSUFBbEI7QUFDQSxTQUFLQyxjQUFMLEdBQXNCLElBQXRCO0FBQ0EsU0FBS0MsYUFBTCxHQUFxQixzQkFBckI7QUFDQSxTQUFLQyxlQUFMLEdBQXVCLEtBQUtOLEdBQUwsQ0FBU08sSUFBVCxDQUFjLDRCQUFkLENBQXZCO0FBRUEsU0FBS0MsU0FBTCxHQUFpQixLQUFLQyxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUFqQjtBQUNBLFNBQUtDLFVBQUwsR0FBa0IsS0FBS0MsWUFBTCxDQUFrQkYsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBbEI7QUFDQSxTQUFLRyxVQUFMLEdBQWtCLEtBQUtBLFVBQUwsQ0FBZ0JILElBQWhCLENBQXFCLElBQXJCLENBQWxCO0FBRUEsU0FBS0ksS0FBTCxHQUFhLElBQUlDLHlEQUFKLENBQVU7QUFDckJDLFlBQU0sRUFBRSxLQUFLUixTQURRO0FBRXJCUyxhQUFPLEVBQUUsS0FBS047QUFGTyxLQUFWLENBQWI7O0FBS0EsUUFBSSxLQUFLTCxlQUFULEVBQTBCO0FBQ3hCLFdBQUtGLGNBQUwsR0FBc0IsSUFBSWMsOENBQUosQ0FBVSxLQUFLWixlQUFmLENBQXRCO0FBQ0Q7O0FBRUQsU0FBS2Esd0JBQUw7O0FBQ0EsU0FBS0MsV0FBTDtBQUNEOzs7O3NDQUVpQjtBQUNoQixXQUFLcEIsR0FBTCxDQUFTcUIsR0FBVCxDQUFhLGtCQUFiOztBQUVBLFVBQUksS0FBS2pCLGNBQVQsRUFBeUI7QUFDdkIsYUFBS0EsY0FBTCxDQUFvQmtCLE1BQXBCO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLbkIsVUFBVCxFQUFxQjtBQUNuQixhQUFLQSxVQUFMLENBQWdCbUIsTUFBaEI7QUFDRDtBQUNGOzs7a0NBRWE7QUFDWixVQUFNQyxTQUFTLEdBQUd0Qiw2Q0FBQyxDQUFDLCtCQUFELENBQW5CO0FBQ0EsV0FBS0UsVUFBTCxHQUFrQixJQUFJZSw4Q0FBSixDQUFVSyxTQUFWLENBQWxCO0FBQ0Q7OzttQ0FFYztBQUNiLFdBQUtwQixVQUFMLENBQWdCbUIsTUFBaEI7QUFDQSxXQUFLbkIsVUFBTCxHQUFrQixJQUFsQjtBQUNEOzs7a0NBRWE7QUFDWixXQUFLSCxHQUFMLENBQVN3QixFQUFULENBQVksdUJBQVosRUFBcUMsNkJBQXJDLEVBQW9FLEtBQUtYLFVBQXpFO0FBQ0Q7OztpQ0FFWTtBQUNYLFdBQUtDLEtBQUwsQ0FBV1csSUFBWCxDQUFnQixLQUFLcEIsYUFBckIsRUFBb0MsZUFBcEM7QUFDRDs7OytDQUUwQjtBQUN6QixVQUFJLENBQUNKLDZDQUFDLENBQUMsNkJBQUQsQ0FBRCxDQUFpQ3lCLE1BQXRDLEVBQThDO0FBQzVDO0FBQ0Q7O0FBRUQsV0FBS2IsVUFBTDtBQUNEIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvc2VjdGlvbnMvU3RhdGljUGFzc3dvcmQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgTW9kYWwgZnJvbSAnLi4vY29tcG9uZW50cy9Nb2RhbCc7XG5pbXBvcnQgRm9ybXMgZnJvbSAnLi4vRm9ybXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0aWNQYXNzd29yZCB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLiRlbCA9ICQoc2VjdGlvbi5lbCk7XG5cbiAgICB0aGlzLm1vZGFsRm9ybXMgPSBudWxsO1xuICAgIHRoaXMubmV3c2xldHRlckZvcm0gPSBudWxsO1xuICAgIHRoaXMubW9kYWxDb250ZW50cyA9ICdbZGF0YS1wYXNzd29yZGVudHJ5XSc7XG4gICAgdGhpcy4kbmV3c2xldHRlckZvcm0gPSB0aGlzLiRlbC5maW5kKCdbZGF0YS1wYXNzd29yZC1uZXdzbGV0dGVyXScpO1xuXG4gICAgdGhpcy5tb2RhbE9wZW4gPSB0aGlzLm9uTW9kYWxPcGVuLmJpbmQodGhpcyk7XG4gICAgdGhpcy5tb2RhbENsb3NlID0gdGhpcy5vbk1vZGFsQ2xvc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vcGVuTW9kYWwgPSB0aGlzLl9vcGVuTW9kYWwuYmluZCh0aGlzKTtcblxuICAgIHRoaXMubW9kYWwgPSBuZXcgTW9kYWwoe1xuICAgICAgb25PcGVuOiB0aGlzLm1vZGFsT3BlbixcbiAgICAgIG9uQ2xvc2U6IHRoaXMubW9kYWxDbG9zZSxcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLiRuZXdzbGV0dGVyRm9ybSkge1xuICAgICAgdGhpcy5uZXdzbGV0dGVyRm9ybSA9IG5ldyBGb3Jtcyh0aGlzLiRuZXdzbGV0dGVyRm9ybSk7XG4gICAgfVxuXG4gICAgdGhpcy5fY2hlY2tGb3JQYXNzd29yZEF0dGVtcHQoKTtcbiAgICB0aGlzLl9iaW5kRXZlbnRzKCk7XG4gIH1cblxuICBvblNlY3Rpb25VbmxvYWQoKSB7XG4gICAgdGhpcy4kZWwub2ZmKCcuc3RhdGljLXBhc3N3b3JkJyk7XG5cbiAgICBpZiAodGhpcy5uZXdzbGV0dGVyRm9ybSkge1xuICAgICAgdGhpcy5uZXdzbGV0dGVyRm9ybS51bmxvYWQoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5tb2RhbEZvcm1zKSB7XG4gICAgICB0aGlzLm1vZGFsRm9ybXMudW5sb2FkKCk7XG4gICAgfVxuICB9XG5cbiAgb25Nb2RhbE9wZW4oKSB7XG4gICAgY29uc3QgJGNvbnRlbnRzID0gJCgnW2RhdGEtcGFzc3dvcmRlbnRyeS1jb250ZW50c10nKTtcbiAgICB0aGlzLm1vZGFsRm9ybXMgPSBuZXcgRm9ybXMoJGNvbnRlbnRzKTtcbiAgfVxuXG4gIG9uTW9kYWxDbG9zZSgpIHtcbiAgICB0aGlzLm1vZGFsRm9ybXMudW5sb2FkKCk7XG4gICAgdGhpcy5tb2RhbEZvcm1zID0gbnVsbDtcbiAgfVxuXG4gIF9iaW5kRXZlbnRzKCkge1xuICAgIHRoaXMuJGVsLm9uKCdjbGljay5zdGF0aWMtcGFzc3dvcmQnLCAnW2RhdGEtcGFzc3dvcmRlbnRyeS10b2dnbGVdJywgdGhpcy5fb3Blbk1vZGFsKTtcbiAgfVxuXG4gIF9vcGVuTW9kYWwoKSB7XG4gICAgdGhpcy5tb2RhbC5vcGVuKHRoaXMubW9kYWxDb250ZW50cywgJ3Bhc3N3b3JkZW50cnknKTtcbiAgfVxuXG4gIF9jaGVja0ZvclBhc3N3b3JkQXR0ZW1wdCgpIHtcbiAgICBpZiAoISQoJ1tkYXRhLXBhc3N3b3JkZW50cnktZXJyb3JzXScpLmxlbmd0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX29wZW5Nb2RhbCgpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticPassword.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticProduct.js":
/*!**************************************************!*\
  !*** ./source/scripts/sections/StaticProduct.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticProduct; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\n/* harmony import */ var _components_RichText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/RichText */ \"./source/scripts/components/RichText.js\");\n/* harmony import */ var _components_ProductDetails__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/ProductDetails */ \"./source/scripts/components/ProductDetails.js\");\n/* harmony import */ var _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shortcodes/Shortcodes */ \"./source/scripts/shortcodes/Shortcodes.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\nvar StaticProduct = /*#__PURE__*/function () {\n  function StaticProduct(section) {\n    var _this = this;\n\n    _classCallCheck(this, StaticProduct);\n\n    this.section = section;\n    this.postMessage = section.postMessage;\n    this.context = section.data.context;\n    this.settings = section.data.settings;\n    this.product = section.data.product;\n    this.models = section.data.models;\n    this.richText = null;\n    this.reviewForm = null;\n    this.flickity = null;\n    this.flickityOptions = null;\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.$product = this.$el.find('[data-product-wrapper]');\n\n    if (this.settings) {\n      this.isThreeColumn = this.settings.layout === 'layout--three-col';\n    } // History\n\n\n    this.isThemeEditor = window.Shopify && window.Shopify.designMode;\n    this.useHistory = !this.isThemeEditor && window.history.replaceState && this.settings.enableHistory;\n    var gallery = this.$product.find('[data-product-gallery]')[0]; // Product details\n\n    this.$details = this.$product.find('[data-product-details]'); // Product description\n\n    this.$description = this.$product.find('[data-product-description]');\n    this.$readmore = this.$product.find('.product-readmore'); // Product form containers\n\n    this.$formRegular = this.$product.find('[data-product-form-regular]');\n    this.$formAlt = this.$product.find('[data-product-form-alt]'); // Product form area\n\n    this.$formArea = this.$product.find('[data-product-form-area]'); // Move product form and information on breakpoint change\n\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"onChange\"](this.layoutHandler); // Product reviews\n\n    this.$productReviews = this.$el.find('[data-product-reviews]');\n\n    this._moveForm();\n\n    if (this.$description.length) {\n      this.richText = new _components_RichText__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.$description);\n    }\n\n    if (this.$readmore.length) {\n      this.richText = new _components_RichText__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.$readmore);\n    }\n\n    if (this.$productReviews.length) {\n      this.reviewForm = new _Forms__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.$productReviews, '.spr-form-input');\n    } // Instantiate ProductDetails after Shopify API is loaded\n\n\n    scriptjs__WEBPACK_IMPORTED_MODULE_1___default()(jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-scripts]').data('shopify-api-url'), function () {\n      var options = {\n        $formArea: _this.$formArea,\n        gallery: gallery,\n        $details: _this.$details,\n        context: _this.context,\n        settings: _this.settings,\n        product: _this.product,\n        models: _this.models,\n        useHistory: _this.useHistory\n      };\n      _this.productDetails = new _components_ProductDetails__WEBPACK_IMPORTED_MODULE_5__[\"default\"](options);\n    });\n    this.shortcodes = new _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_6__[\"default\"](section.el);\n  }\n\n  _createClass(StaticProduct, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"offChange\"](this.layoutHandler);\n      this.productDetails.unload();\n\n      if (this.richText) {\n        this.richText.unload();\n      }\n\n      if (this.reviewForm) {\n        this.reviewForm.unload();\n      }\n\n      if (this.shortcodes) {\n        this.shortcodes.unload();\n      }\n    }\n  }, {\n    key: \"onBreakpointChange\",\n    value: function onBreakpointChange() {\n      this._moveForm();\n    }\n    /**\n     * Move product form if is a three column layout\n     * @private\n     */\n\n  }, {\n    key: \"_moveForm\",\n    value: function _moveForm() {\n      if (!this.isThreeColumn) return;\n\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"min\"]('L')) {\n        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default.a.contains(this.$formAlt[0], this.$formArea[0])) {\n          var $form = this.$formArea.detach();\n          this.$formAlt.append($form);\n        }\n      } else {\n        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default.a.contains(this.$formRegular[0], this.$formArea[0])) {\n          var _$form = this.$formArea.detach();\n\n          this.$formRegular.append(_$form);\n        }\n      }\n    }\n  }]);\n\n  return StaticProduct;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticProduct.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticProductRecommendations.js":
/*!*****************************************************************!*\
  !*** ./source/scripts/sections/StaticProductRecommendations.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticProductRecommendations; });\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/ProductGridItem */ \"./source/scripts/components/ProductGridItem.js\");\n/* harmony import */ var _components_ProductRowScroller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ProductRowScroller */ \"./source/scripts/components/ProductRowScroller.js\");\n/* harmony import */ var _helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/ProductReviews */ \"./source/scripts/helpers/ProductReviews.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // eslint-disable-line\n\n\n\n\n\n\nvar StaticProductRecommendations = /*#__PURE__*/function () {\n  function StaticProductRecommendations(section) {\n    _classCallCheck(this, StaticProductRecommendations);\n\n    this.section = section;\n    this.productId = section.data.productId;\n    this.limit = section.data.settings.limit;\n    this.recommendedProducts = [];\n    this.productsScroller = null;\n    this.recommendationContainer = document.querySelector('[data-product-recommendations]');\n    this.recommendUrl = \"\".concat(window.Theme.routes.product_recommendations_url, \"?section_id=static-product-recommendations&limit=\").concat(this.limit, \"&product_id=\").concat(this.productId);\n    this._loadRecommendations = this._loadRecommendations.bind(this);\n    this._resizeRowScroller = this._resizeRowScroller.bind(this);\n\n    this._loadRecommendations();\n  }\n\n  _createClass(StaticProductRecommendations, [{\n    key: \"_loadRecommendations\",\n    value: function _loadRecommendations() {\n      var _this = this;\n\n      shopify_asyncview__WEBPACK_IMPORTED_MODULE_1__[\"default\"].load(this.recommendUrl, {\n        view: ''\n      }).then(function (_ref) {\n        var html = _ref.html;\n        _this.recommendationContainer.innerHTML = html;\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_0__[\"default\"].watch(_this.recommendationContainer);\n\n        var productItems = _this.recommendationContainer.querySelectorAll('[data-product-item]');\n\n        if (productItems.length) {\n          productItems.forEach(function (productItem) {\n            var productData = JSON.parse(productItem.querySelector('[data-product-data]').innerHTML);\n\n            _this.recommendedProducts.push(new _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n              $el: $(productItem),\n              id: _this.section.id,\n              product: productData,\n              lazy: true\n            }));\n          });\n          Object(_helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n\n          if (window.Shopify && Shopify.PaymentButton) {\n            Shopify.PaymentButton.init();\n          }\n\n          _this.recommendationContainer.addEventListener('rimg:load', _this._resizeRowScroller);\n\n          _this.productsScroller = new _components_ProductRowScroller__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_this.section.el.querySelector('[data-product-row]'));\n        }\n      });\n    }\n  }, {\n    key: \"_resizeRowScroller\",\n    value: function _resizeRowScroller() {\n      if (this.productsScroller && this.productsScroller.flickity) {\n        this.productsScroller.flickity.resize();\n      }\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      if (this.productsScroller) {\n        this.productsScroller.unload();\n      }\n\n      this.recommendedProducts.forEach(function (productItem) {\n        productItem.unload();\n      });\n      this.recommendationContainer.removeEventListener('rimg:load', this._resizeRowScroller);\n    }\n  }]);\n\n  return StaticProductRecommendations;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNQcm9kdWN0UmVjb21tZW5kYXRpb25zLmpzP2FiOGYiXSwibmFtZXMiOlsiU3RhdGljUHJvZHVjdFJlY29tbWVuZGF0aW9ucyIsInNlY3Rpb24iLCJwcm9kdWN0SWQiLCJkYXRhIiwibGltaXQiLCJzZXR0aW5ncyIsInJlY29tbWVuZGVkUHJvZHVjdHMiLCJwcm9kdWN0c1Njcm9sbGVyIiwicmVjb21tZW5kYXRpb25Db250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZWNvbW1lbmRVcmwiLCJ3aW5kb3ciLCJUaGVtZSIsInJvdXRlcyIsInByb2R1Y3RfcmVjb21tZW5kYXRpb25zX3VybCIsIl9sb2FkUmVjb21tZW5kYXRpb25zIiwiYmluZCIsIl9yZXNpemVSb3dTY3JvbGxlciIsIkFzeW5jVmlldyIsImxvYWQiLCJ2aWV3IiwidGhlbiIsImh0bWwiLCJpbm5lckhUTUwiLCJyaW1nIiwid2F0Y2giLCJwcm9kdWN0SXRlbXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZm9yRWFjaCIsInByb2R1Y3RJdGVtIiwicHJvZHVjdERhdGEiLCJKU09OIiwicGFyc2UiLCJwdXNoIiwiUHJvZHVjdEdyaWRJdGVtIiwiJGVsIiwiJCIsImlkIiwicHJvZHVjdCIsImxhenkiLCJpbml0U2hvcGlmeVByb2R1Y3RSZXZpZXdzIiwiU2hvcGlmeSIsIlBheW1lbnRCdXR0b24iLCJpbml0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIlByb2R1Y3RSb3dTY3JvbGxlciIsImVsIiwiZmxpY2tpdHkiLCJyZXNpemUiLCJ1bmxvYWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0NBQWlDOztBQUNqQztBQUVBO0FBQ0E7QUFDQTs7SUFFcUJBLDRCO0FBQ25CLHdDQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLFNBQUwsR0FBaUJELE9BQU8sQ0FBQ0UsSUFBUixDQUFhRCxTQUE5QjtBQUNBLFNBQUtFLEtBQUwsR0FBYUgsT0FBTyxDQUFDRSxJQUFSLENBQWFFLFFBQWIsQ0FBc0JELEtBQW5DO0FBQ0EsU0FBS0UsbUJBQUwsR0FBMkIsRUFBM0I7QUFDQSxTQUFLQyxnQkFBTCxHQUF3QixJQUF4QjtBQUVBLFNBQUtDLHVCQUFMLEdBQStCQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsZ0NBQXZCLENBQS9CO0FBRUEsU0FBS0MsWUFBTCxhQUF1QkMsTUFBTSxDQUFDQyxLQUFQLENBQWFDLE1BQWIsQ0FBb0JDLDJCQUEzQyw4REFBMEgsS0FBS1gsS0FBL0gseUJBQW1KLEtBQUtGLFNBQXhKO0FBRUEsU0FBS2Msb0JBQUwsR0FBNEIsS0FBS0Esb0JBQUwsQ0FBMEJDLElBQTFCLENBQStCLElBQS9CLENBQTVCO0FBQ0EsU0FBS0Msa0JBQUwsR0FBMEIsS0FBS0Esa0JBQUwsQ0FBd0JELElBQXhCLENBQTZCLElBQTdCLENBQTFCOztBQUVBLFNBQUtELG9CQUFMO0FBQ0Q7Ozs7MkNBRXNCO0FBQUE7O0FBQ3JCRywrREFBUyxDQUFDQyxJQUFWLENBQ0UsS0FBS1QsWUFEUCxFQUVFO0FBQUVVLFlBQUksRUFBRTtBQUFSLE9BRkYsRUFHRUMsSUFIRixDQUdPLGdCQUFjO0FBQUEsWUFBWEMsSUFBVyxRQUFYQSxJQUFXO0FBQ25CLGFBQUksQ0FBQ2YsdUJBQUwsQ0FBNkJnQixTQUE3QixHQUF5Q0QsSUFBekM7QUFFQUUsNERBQUksQ0FBQ0MsS0FBTCxDQUFXLEtBQUksQ0FBQ2xCLHVCQUFoQjs7QUFFQSxZQUFNbUIsWUFBWSxHQUFHLEtBQUksQ0FBQ25CLHVCQUFMLENBQTZCb0IsZ0JBQTdCLENBQThDLHFCQUE5QyxDQUFyQjs7QUFDQSxZQUFJRCxZQUFZLENBQUNFLE1BQWpCLEVBQXlCO0FBQ3ZCRixzQkFBWSxDQUFDRyxPQUFiLENBQXFCLFVBQUFDLFdBQVcsRUFBSTtBQUNsQyxnQkFBTUMsV0FBVyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsV0FBVyxDQUFDckIsYUFBWixDQUEwQixxQkFBMUIsRUFBaURjLFNBQTVELENBQXBCOztBQUNBLGlCQUFJLENBQUNsQixtQkFBTCxDQUF5QjZCLElBQXpCLENBQThCLElBQUlDLG1FQUFKLENBQW9CO0FBQ2hEQyxpQkFBRyxFQUFFQyxDQUFDLENBQUNQLFdBQUQsQ0FEMEM7QUFFaERRLGdCQUFFLEVBQUUsS0FBSSxDQUFDdEMsT0FBTCxDQUFhc0MsRUFGK0I7QUFHaERDLHFCQUFPLEVBQUVSLFdBSHVDO0FBSWhEUyxrQkFBSSxFQUFFO0FBSjBDLGFBQXBCLENBQTlCO0FBTUQsV0FSRDtBQVVBQyxpRkFBeUI7O0FBRXpCLGNBQUk5QixNQUFNLENBQUMrQixPQUFQLElBQWtCQSxPQUFPLENBQUNDLGFBQTlCLEVBQTZDO0FBQzNDRCxtQkFBTyxDQUFDQyxhQUFSLENBQXNCQyxJQUF0QjtBQUNEOztBQUVELGVBQUksQ0FBQ3JDLHVCQUFMLENBQTZCc0MsZ0JBQTdCLENBQThDLFdBQTlDLEVBQTJELEtBQUksQ0FBQzVCLGtCQUFoRTs7QUFDQSxlQUFJLENBQUNYLGdCQUFMLEdBQXdCLElBQUl3QyxzRUFBSixDQUF1QixLQUFJLENBQUM5QyxPQUFMLENBQWErQyxFQUFiLENBQWdCdEMsYUFBaEIsQ0FBOEIsb0JBQTlCLENBQXZCLENBQXhCO0FBQ0Q7QUFDRixPQTdCRDtBQThCRDs7O3lDQUVvQjtBQUNuQixVQUFJLEtBQUtILGdCQUFMLElBQXlCLEtBQUtBLGdCQUFMLENBQXNCMEMsUUFBbkQsRUFBNkQ7QUFDM0QsYUFBSzFDLGdCQUFMLENBQXNCMEMsUUFBdEIsQ0FBK0JDLE1BQS9CO0FBQ0Q7QUFDRjs7O3NDQUVpQjtBQUNoQixVQUFJLEtBQUszQyxnQkFBVCxFQUEyQjtBQUN6QixhQUFLQSxnQkFBTCxDQUFzQjRDLE1BQXRCO0FBQ0Q7O0FBRUQsV0FBSzdDLG1CQUFMLENBQXlCd0IsT0FBekIsQ0FBaUMsVUFBQ0MsV0FBRCxFQUFpQjtBQUNoREEsbUJBQVcsQ0FBQ29CLE1BQVo7QUFDRCxPQUZEO0FBSUEsV0FBSzNDLHVCQUFMLENBQTZCNEMsbUJBQTdCLENBQWlELFdBQWpELEVBQThELEtBQUtsQyxrQkFBbkU7QUFDRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL1N0YXRpY1Byb2R1Y3RSZWNvbW1lbmRhdGlvbnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmltZyBmcm9tICdyaW1nLXNob3BpZnknOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5pbXBvcnQgQXN5bmNWaWV3IGZyb20gJ3Nob3BpZnktYXN5bmN2aWV3JztcblxuaW1wb3J0IFByb2R1Y3RHcmlkSXRlbSBmcm9tICcuLi9jb21wb25lbnRzL1Byb2R1Y3RHcmlkSXRlbSc7XG5pbXBvcnQgUHJvZHVjdFJvd1Njcm9sbGVyIGZyb20gJy4uL2NvbXBvbmVudHMvUHJvZHVjdFJvd1Njcm9sbGVyJztcbmltcG9ydCBpbml0U2hvcGlmeVByb2R1Y3RSZXZpZXdzIGZyb20gJy4uL2hlbHBlcnMvUHJvZHVjdFJldmlld3MnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0aWNQcm9kdWN0UmVjb21tZW5kYXRpb25zIHtcbiAgY29uc3RydWN0b3Ioc2VjdGlvbikge1xuICAgIHRoaXMuc2VjdGlvbiA9IHNlY3Rpb247XG4gICAgdGhpcy5wcm9kdWN0SWQgPSBzZWN0aW9uLmRhdGEucHJvZHVjdElkO1xuICAgIHRoaXMubGltaXQgPSBzZWN0aW9uLmRhdGEuc2V0dGluZ3MubGltaXQ7XG4gICAgdGhpcy5yZWNvbW1lbmRlZFByb2R1Y3RzID0gW107XG4gICAgdGhpcy5wcm9kdWN0c1Njcm9sbGVyID0gbnVsbDtcblxuICAgIHRoaXMucmVjb21tZW5kYXRpb25Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wcm9kdWN0LXJlY29tbWVuZGF0aW9uc10nKTtcblxuICAgIHRoaXMucmVjb21tZW5kVXJsID0gYCR7d2luZG93LlRoZW1lLnJvdXRlcy5wcm9kdWN0X3JlY29tbWVuZGF0aW9uc191cmx9P3NlY3Rpb25faWQ9c3RhdGljLXByb2R1Y3QtcmVjb21tZW5kYXRpb25zJmxpbWl0PSR7dGhpcy5saW1pdH0mcHJvZHVjdF9pZD0ke3RoaXMucHJvZHVjdElkfWA7XG5cbiAgICB0aGlzLl9sb2FkUmVjb21tZW5kYXRpb25zID0gdGhpcy5fbG9hZFJlY29tbWVuZGF0aW9ucy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX3Jlc2l6ZVJvd1Njcm9sbGVyID0gdGhpcy5fcmVzaXplUm93U2Nyb2xsZXIuYmluZCh0aGlzKTtcblxuICAgIHRoaXMuX2xvYWRSZWNvbW1lbmRhdGlvbnMoKTtcbiAgfVxuXG4gIF9sb2FkUmVjb21tZW5kYXRpb25zKCkge1xuICAgIEFzeW5jVmlldy5sb2FkKFxuICAgICAgdGhpcy5yZWNvbW1lbmRVcmwsXG4gICAgICB7IHZpZXc6ICcnIH1cbiAgICApLnRoZW4oKHsgaHRtbCB9KSA9PiB7XG4gICAgICB0aGlzLnJlY29tbWVuZGF0aW9uQ29udGFpbmVyLmlubmVySFRNTCA9IGh0bWw7XG5cbiAgICAgIHJpbWcud2F0Y2godGhpcy5yZWNvbW1lbmRhdGlvbkNvbnRhaW5lcik7XG5cbiAgICAgIGNvbnN0IHByb2R1Y3RJdGVtcyA9IHRoaXMucmVjb21tZW5kYXRpb25Db250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtcHJvZHVjdC1pdGVtXScpO1xuICAgICAgaWYgKHByb2R1Y3RJdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgcHJvZHVjdEl0ZW1zLmZvckVhY2gocHJvZHVjdEl0ZW0gPT4ge1xuICAgICAgICAgIGNvbnN0IHByb2R1Y3REYXRhID0gSlNPTi5wYXJzZShwcm9kdWN0SXRlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wcm9kdWN0LWRhdGFdJykuaW5uZXJIVE1MKTtcbiAgICAgICAgICB0aGlzLnJlY29tbWVuZGVkUHJvZHVjdHMucHVzaChuZXcgUHJvZHVjdEdyaWRJdGVtKHtcbiAgICAgICAgICAgICRlbDogJChwcm9kdWN0SXRlbSksXG4gICAgICAgICAgICBpZDogdGhpcy5zZWN0aW9uLmlkLFxuICAgICAgICAgICAgcHJvZHVjdDogcHJvZHVjdERhdGEsXG4gICAgICAgICAgICBsYXp5OiB0cnVlLFxuICAgICAgICAgIH0pKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaW5pdFNob3BpZnlQcm9kdWN0UmV2aWV3cygpO1xuXG4gICAgICAgIGlmICh3aW5kb3cuU2hvcGlmeSAmJiBTaG9waWZ5LlBheW1lbnRCdXR0b24pIHtcbiAgICAgICAgICBTaG9waWZ5LlBheW1lbnRCdXR0b24uaW5pdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5yZWNvbW1lbmRhdGlvbkNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdyaW1nOmxvYWQnLCB0aGlzLl9yZXNpemVSb3dTY3JvbGxlcik7XG4gICAgICAgIHRoaXMucHJvZHVjdHNTY3JvbGxlciA9IG5ldyBQcm9kdWN0Um93U2Nyb2xsZXIodGhpcy5zZWN0aW9uLmVsLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXByb2R1Y3Qtcm93XScpKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9yZXNpemVSb3dTY3JvbGxlcigpIHtcbiAgICBpZiAodGhpcy5wcm9kdWN0c1Njcm9sbGVyICYmIHRoaXMucHJvZHVjdHNTY3JvbGxlci5mbGlja2l0eSkge1xuICAgICAgdGhpcy5wcm9kdWN0c1Njcm9sbGVyLmZsaWNraXR5LnJlc2l6ZSgpO1xuICAgIH1cbiAgfVxuXG4gIG9uU2VjdGlvblVubG9hZCgpIHtcbiAgICBpZiAodGhpcy5wcm9kdWN0c1Njcm9sbGVyKSB7XG4gICAgICB0aGlzLnByb2R1Y3RzU2Nyb2xsZXIudW5sb2FkKCk7XG4gICAgfVxuXG4gICAgdGhpcy5yZWNvbW1lbmRlZFByb2R1Y3RzLmZvckVhY2goKHByb2R1Y3RJdGVtKSA9PiB7XG4gICAgICBwcm9kdWN0SXRlbS51bmxvYWQoKTtcbiAgICB9KTtcblxuICAgIHRoaXMucmVjb21tZW5kYXRpb25Db250YWluZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmltZzpsb2FkJywgdGhpcy5fcmVzaXplUm93U2Nyb2xsZXIpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticProductRecommendations.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticRecentlyViewed.js":
/*!*********************************************************!*\
  !*** ./source/scripts/sections/StaticRecentlyViewed.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticRecentlyViewed; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var _helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/ProductReviews */ \"./source/scripts/helpers/ProductReviews.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar StaticRecentlyViewed = /*#__PURE__*/function () {\n  function StaticRecentlyViewed(section) {\n    var _this = this;\n\n    _classCallCheck(this, StaticRecentlyViewed);\n\n    this.namespace = 'pxu';\n    this.maxRecentlyViewed = 30; // Store a max of 30 items\n\n    this.maxStorageTime = 30 * 24 * 3600; // Store items for 30 days only\n\n    this.version = \"\".concat(section.data.currency, \"-\").concat(window.Theme.routes.root_url); // Version key is used to update localstorage when format changes\n\n    this.storageKey = \"\".concat(this.namespace, \"-recentlyViewed-\").concat(this.version);\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.recentlyViewed = section.data.recently_viewed_info;\n    this.time = section.data.time;\n    this.flickity = null;\n    this.cardSettings = section.data.product_card_settings;\n\n    if (this.recentlyViewed && this.time) {\n      this.recentlyViewed.timestamp = Math.round(new Date().getTime() / 1000);\n    }\n\n    this.slideImageLoaded = this._onSlideImageLoaded.bind(this);\n\n    if (this.time) {\n      var _recentlyViewed = this._getRecentlyViewed();\n\n      if (this.recentlyViewed) {\n        this.removeRecentlyViewed(this.recentlyViewed.handle, _recentlyViewed);\n\n        _recentlyViewed.push(this.recentlyViewed);\n      }\n\n      var promises = this._setRecentlyViewed(_recentlyViewed); // Wait until promises are resolved before inserting markup into the DOM\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.when.apply(jquery__WEBPACK_IMPORTED_MODULE_0___default.a, _toConsumableArray(promises)).done(function () {\n        if (_recentlyViewed.length) {\n          var cardsMarkup = _this._getRecentlyViewedCards();\n\n          var cardsData = _this._getRecentlyViewed();\n\n          _this.$el.find('[data-recently-viewed-container]').append(cardsMarkup);\n\n          if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spr-badge', _this.$el)) {\n            Object(_helpers_ProductReviews__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n          }\n\n          cardsData.map(function (productData) {\n            var timestamp = _this.timeSince(productData.timestamp);\n\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-product-handle=\".concat(productData.handle, \"]\")).prepend(timestamp);\n          });\n          rimg_shopify__WEBPACK_IMPORTED_MODULE_2__[\"default\"].watch(_this.$el[0]);\n          _this.$carousel = _this.$el.find('.product-recently-viewed--content');\n          _this.slides = '.product-recently-viewed-card';\n\n          if (_this.$carousel.find(_this.slides).length > 1) {\n            _this._initSlider();\n          }\n        } else {\n          _this.$el.find('.product-recently-viewed--section').addClass('hide');\n        }\n      });\n    } else {\n      if (this.recentlyViewed) {\n        recentlyViewed.push(this.recentlyViewed);\n\n        this._setRecentlyViewed(recentlyViewed);\n      }\n\n      this.$el.find('.product-recently-viewed--section').addClass('hide');\n    }\n\n    this.bindEvents();\n  }\n\n  _createClass(StaticRecentlyViewed, [{\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this2 = this;\n\n      this.$el.on('click.recently-viewed', '[data-remove-recently-viewed]', function (event) {\n        var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n        var handle = $target.closest('[data-product-handle]').data('product-handle');\n\n        var recentlyViewed = _this2._getRecentlyViewed();\n\n        _this2.removeRecentlyViewed(handle, recentlyViewed);\n\n        _this2._setRecentlyViewed(recentlyViewed);\n\n        $target.parents('[data-recently-viewed-card]').addClass('hide-card');\n        $target.parents('[data-recently-viewed-card]').nextAll().addClass('move-card');\n        setTimeout(function () {\n          var index = $target.parents('[data-recently-viewed-card]').index();\n\n          if (index !== 0) {\n            index--;\n          }\n\n          $target.parents('[data-recently-viewed-card]').nextAll().removeClass('move-card');\n\n          if ($target.parents('[data-recently-viewed-card]').length) {\n            _this2.flickity.remove($target.parents('[data-recently-viewed-card]'));\n          }\n\n          _this2.flickity.selectCell(index);\n        }, 500);\n      });\n      this.$el.on('click.recently-viewed', '[data-clear-recently-viewed]', function (event) {\n        _this2.clearRecentlyViewed();\n      });\n    }\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.$el.off('.recently-viewed');\n\n      if (this.$carousel && this.$carousel[0]) {\n        this.$carousel[0].removeEventListener('rimg:load', this.slideImageLoaded);\n      }\n    }\n  }, {\n    key: \"timeSince\",\n    value: function timeSince(timestamp) {\n      var now = Math.round(new Date().getTime() / 1000);\n      var secondsPast = now - timestamp;\n\n      if (secondsPast < 60) {\n        var secondsAgo = parseInt(secondsPast);\n        return secondsAgo === 1 ? \"\".concat(secondsAgo, \" \").concat(this.time.second, \" \").concat(this.time.ago) : \"\".concat(secondsAgo, \" \").concat(this.time.seconds, \" \").concat(this.time.ago);\n      }\n\n      if (secondsPast < 3600) {\n        var minutesAgo = parseInt(secondsPast / 60);\n        return minutesAgo === 1 ? \"\".concat(minutesAgo, \" \").concat(this.time.minute, \" \").concat(this.time.ago) : \"\".concat(minutesAgo, \" \").concat(this.time.minutes, \" \").concat(this.time.ago);\n      }\n\n      if (secondsPast <= 86400) {\n        var hoursAgo = parseInt(secondsPast / 3600);\n        return hoursAgo === 1 ? \"\".concat(hoursAgo, \" \").concat(this.time.hour, \" \").concat(this.time.ago) : \"\".concat(hoursAgo, \" \").concat(this.time.hours, \" \").concat(this.time.ago);\n      }\n\n      if (secondsPast > 86400) {\n        var date = new Date(timestamp * 1000);\n        var currentDate = new Date(now * 1000);\n        var day = date.getDate();\n        var month = date.toDateString().match(/ [a-zA-Z]*/)[0].replace(' ', '');\n        var year = date.getFullYear() === currentDate.getFullYear() ? '' : \", \".concat(date.getFullYear());\n        return \"\".concat(month, \" \").concat(day, \" \").concat(year);\n      }\n    }\n  }, {\n    key: \"removeRecentlyViewed\",\n    value: function removeRecentlyViewed(handle, recentlyViewed) {\n      for (var i = 0; i < recentlyViewed.length; i++) {\n        if (recentlyViewed[i].handle === handle) {\n          recentlyViewed.splice(i, 1);\n        }\n      }\n\n      this._setRecentlyViewed(recentlyViewed);\n\n      var cards = sessionStorage.getItem(this.storageKey) ? JSON.parse(sessionStorage.getItem(this.storageKey)) : {};\n      delete cards[handle];\n      sessionStorage.setItem(this.storageKey, JSON.stringify(cards));\n\n      if (recentlyViewed.length === 0) {\n        this.$el.find('.product-recently-viewed--section').addClass('hide');\n      }\n\n      if (this.$carousel) {\n        this.$carousel[0].removeEventListener('rimg:load', this.slideImageLoaded);\n      }\n    }\n  }, {\n    key: \"clearRecentlyViewed\",\n    value: function clearRecentlyViewed() {\n      localStorage.removeItem(this.storageKey);\n      sessionStorage.removeItem(this.storageKey);\n      this.$el.find('[data-recently-viewed-card]').remove();\n      this.$el.find('.product-recently-viewed--section').addClass('hide');\n    }\n  }, {\n    key: \"_onSlideImageLoaded\",\n    value: function _onSlideImageLoaded() {\n      this.flickity.resize();\n    }\n  }, {\n    key: \"_initSlider\",\n    value: function _initSlider() {\n      this.flickityOptions = {\n        autoPlay: 0,\n        accessibility: true,\n        cellAlign: 'left',\n        cellSelector: this.slides,\n        groupCells: true,\n        pageDots: false,\n        contain: true,\n        arrowShape: {\n          x0: 10,\n          x1: 60,\n          y1: 50,\n          x2: 65,\n          y2: 45,\n          x3: 20\n        }\n      };\n      this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_1___default.a(this.$carousel[0], this.flickityOptions);\n      this.$carousel[0].addEventListener('rimg:load', this.slideImageLoaded);\n    }\n    /**\n     * Store recently viewed products\n     *\n     * @param {Object[]} productData - recently viewed products\n     * @param {number} productData[].timestamp - Timestamp indicating when product was added to productData\n     * @param {string} productData[].handle - Shopify product handle\n     * @private\n     */\n\n  }, {\n    key: \"_setRecentlyViewed\",\n    value: function _setRecentlyViewed(productData) {\n      var _this3 = this;\n\n      var now = Math.floor(Date.now() / 1000); // Unix timestamp for current date\n\n      var minStorageTimestamp = now - this.maxStorageTime;\n      var filteredData = productData.filter(function (item) {\n        return item.timestamp > minStorageTimestamp;\n      });\n\n      if (filteredData.length > this.maxRecentlyViewed) {\n        var removeCount = filteredData.length - this.maxRecentlyViewed;\n        filteredData.splice(0, removeCount); // Remove oldest if more than max number have been stored\n      }\n\n      try {\n        localStorage.setItem(this.storageKey, JSON.stringify(filteredData));\n      } catch (error) {\n        console.warn(error);\n      } // Retrieve markup for recently viewed cards and store in session\n\n\n      try {\n        var handles = filteredData ? filteredData.map(function (x) {\n          return x.handle;\n        }) : [];\n        var storedCards = sessionStorage.getItem(this.storageKey) ? JSON.parse(sessionStorage.getItem(this.storageKey)) : {};\n\n        if (storedCards.cardSettings) {\n          for (var key in storedCards.cardSettings) {\n            if (storedCards.cardSettings[key] !== this.cardSettings[key]) {\n              storedCards = {};\n              sessionStorage.removeItem(this.storageKey);\n              break;\n            }\n          }\n        }\n\n        storedCards.cardSettings = this.cardSettings;\n        var promises = handles.map(function (handle) {\n          if (storedCards[handle]) {\n            return;\n          }\n\n          var fetchUrl = \"\".concat(window.Theme.routes.all_products_collection_url, \"/products/\").concat(handle, \"?view=_recently-viewed\");\n          return jquery__WEBPACK_IMPORTED_MODULE_0___default.a.get(fetchUrl).catch(function (error) {\n            return console.error('Error:', error);\n          }).then(function (response) {\n            if (response) {\n              storedCards[handle] = response;\n\n              try {\n                sessionStorage.setItem(_this3.storageKey, JSON.stringify(storedCards));\n              } catch (error) {\n                console.warn(error);\n              }\n            }\n          });\n        });\n        return promises;\n      } catch (error) {\n        console.warn(error);\n        return false;\n      }\n    }\n    /**\n     * Get stored recently viewed products\n     *\n     * @returns {Array}\n     * @private\n     */\n\n  }, {\n    key: \"_getRecentlyViewed\",\n    value: function _getRecentlyViewed() {\n      try {\n        var _recentlyViewed2 = localStorage.getItem(this.storageKey) ? JSON.parse(localStorage.getItem(this.storageKey)) : [];\n\n        return _recentlyViewed2;\n      } catch (error) {\n        console.warn(error);\n        return [];\n      }\n    }\n  }, {\n    key: \"_getRecentlyViewedCards\",\n    value: function _getRecentlyViewedCards() {\n      var cards = sessionStorage.getItem(this.storageKey) ? JSON.parse(sessionStorage.getItem(this.storageKey)) : {};\n      var orderedItems = localStorage.getItem(this.storageKey) ? JSON.parse(localStorage.getItem(this.storageKey)) : {};\n      var markup = [];\n\n      for (var i = orderedItems.length - 1; i >= 0; i--) {\n        var cardKey = orderedItems[i].handle;\n        markup.push(cards[cardKey]);\n      }\n\n      return markup.join('');\n    }\n  }]);\n\n  return StaticRecentlyViewed;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticRecentlyViewed.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticSearch.js":
/*!*************************************************!*\
  !*** ./source/scripts/sections/StaticSearch.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticSearch; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rimg_shopify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rimg-shopify */ \"./node_modules/rimg-shopify/dist/index.es.js\");\n/* harmony import */ var shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shopify-asyncview */ \"./node_modules/shopify-asyncview/dist/index.es.js\");\n/* harmony import */ var _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ProductGridItem */ \"./source/scripts/components/ProductGridItem.js\");\n/* harmony import */ var _components_search_SearchForm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/search/SearchForm */ \"./source/scripts/components/search/SearchForm.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar StaticSearch = /*#__PURE__*/function () {\n  function StaticSearch(section) {\n    var _this = this;\n\n    _classCallCheck(this, StaticSearch);\n\n    this.section = section;\n    this.responseContainer = this.section.el.querySelector('[data-html]');\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.searchFieldSelector = '[data-live-search]';\n    this.paginationSelector = 'a.pagination--item';\n    this.$searchField = this.$el.find(this.searchFieldSelector);\n    this.paginationLinks = this.section.el.querySelectorAll(this.paginationSelector);\n    this.ajaxEvents = [];\n    this.processing = false;\n    this._ajaxFetch = this._ajaxFetch.bind(this);\n    this._initProducts = this._initProducts.bind(this);\n    this.paginationLinks.forEach(function (el) {\n      _this.ajaxEvents.push(jquery__WEBPACK_IMPORTED_MODULE_0___default()(el).on('click', _this._ajaxFetch));\n    }); // Product items\n\n    this.productItems = [];\n\n    this._initProducts();\n\n    this.searchForm = new _components_search_SearchForm__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.$searchField);\n\n    window.onpopstate = function (event) {\n      _this._ajaxFetch(event);\n    };\n  }\n\n  _createClass(StaticSearch, [{\n    key: \"_ajaxFetch\",\n    value: function _ajaxFetch(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      event.stopPropagation();\n      var fetchUrl;\n      var pageNumber;\n\n      if (event.type === 'popstate') {\n        fetchUrl = event.state.path;\n        pageNumber = event.state.toPage;\n      } else {\n        fetchUrl = event.currentTarget.getAttribute('href').replace('&view=undefined', '');\n        pageNumber = event.currentTarget.getAttribute('data-to-page');\n      }\n\n      this.processing = true;\n      this.responseContainer.classList.add('processing');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('html, body').animate({\n        scrollTop: 0\n      }, 'slow');\n      shopify_asyncview__WEBPACK_IMPORTED_MODULE_2__[\"default\"].load(fetchUrl, {\n        view: ''\n      }).then(function (_ref) {\n        var html = _ref.html;\n\n        _this2.ajaxEvents.forEach(function ($el) {\n          return $el.off('click', _this2._ajaxFetch);\n        });\n\n        _this2.ajaxEvents = [];\n        _this2.responseContainer.innerHTML = html;\n\n        _this2.searchForm.unload();\n\n        _this2.$searchField = _this2.$el.find(_this2.searchFieldSelector);\n        _this2.searchForm = new _components_search_SearchForm__WEBPACK_IMPORTED_MODULE_4__[\"default\"](_this2.$searchField);\n        rimg_shopify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].watch(_this2.responseContainer);\n\n        _this2._initProducts();\n\n        _this2.paginationLinks = _this2.section.el.querySelectorAll(_this2.paginationSelector);\n\n        _this2.paginationLinks.forEach(function (el) {\n          _this2.ajaxEvents.push(jquery__WEBPACK_IMPORTED_MODULE_0___default()(el).on('click', _this2._ajaxFetch));\n        });\n\n        if (event.type !== 'popstate') {\n          var newUrl = \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(fetchUrl);\n          window.history.pushState({\n            path: fetchUrl,\n            toPage: pageNumber\n          }, '', newUrl);\n        }\n\n        _this2.responseContainer.classList.remove('processing');\n      });\n    }\n  }, {\n    key: \"_initProducts\",\n    value: function _initProducts() {\n      var _this3 = this;\n\n      if (this.productItems.length > 0) {\n        this.productItems.forEach(function (productItem) {\n          productItem.unload();\n        });\n        this.productItems = [];\n      }\n\n      var $productItems = this.$el.find('[data-product-item]');\n      $productItems.each(function (i, productItem) {\n        _this3.productItems.push(new _components_ProductGridItem__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n          $el: jquery__WEBPACK_IMPORTED_MODULE_0___default()(productItem),\n          id: _this3.section.id,\n          product: JSON.parse(productItem.querySelector('[data-product-data]').innerHTML),\n          lazy: true\n        }));\n      });\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.searchForm.unload();\n      this.productItems.forEach(function (productItem) {\n        productItem.unload();\n      });\n    }\n  }]);\n\n  return StaticSearch;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticSearch.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticSectionFooter.js":
/*!********************************************************!*\
  !*** ./source/scripts/sections/StaticSectionFooter.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticSectionFooter; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_shopify_cross_border__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/shopify-cross-border */ \"./node_modules/@pixelunion/shopify-cross-border/dist/index.es.js\");\n/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Accordion */ \"./source/scripts/Accordion.js\");\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar StaticSectionFooter = /*#__PURE__*/function () {\n  function StaticSectionFooter(section) {\n    _classCallCheck(this, StaticSectionFooter);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.el = section.el;\n    this.currencyDisclosureEl = this.el.querySelector('[data-disclosure-currency]');\n    this.localeDisclosureEl = this.el.querySelector('[data-disclosure-locale]');\n    this.disclosures = [];\n    this.Accordion = new _Accordion__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.$el);\n    this.forms = new _Forms__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.$el);\n\n    if (this.currencyDisclosureEl) {\n      this.disclosures.push(new _pixelunion_shopify_cross_border__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.currencyDisclosureEl));\n    }\n\n    if (this.localeDisclosureEl) {\n      this.disclosures.push(new _pixelunion_shopify_cross_border__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.localeDisclosureEl));\n    } // Handle Accordion interaction when window size changes\n\n\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"onChange\"](this.layoutHandler);\n\n    this._bindEvents();\n  }\n\n  _createClass(StaticSectionFooter, [{\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this = this;\n\n      this.$el.on('click.footer', '[data-accordion-trigger]', function (event) {\n        event.preventDefault();\n\n        _this._toggleAccordion(jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).parent());\n      });\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.$el.off('.footer');\n      this.forms.unload();\n      this.disclosures.forEach(function (disclosure) {\n        return disclosure.unload();\n      });\n      delete this.Accordion;\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect(block) {\n      var $block = jquery__WEBPACK_IMPORTED_MODULE_0___default()(block.el);\n      if ($block.hasClass('has-accordion')) this._toggleAccordion($block, true);\n    }\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect(block) {\n      var $block = jquery__WEBPACK_IMPORTED_MODULE_0___default()(block.el);\n      if ($block.hasClass('has-accordion')) this._toggleAccordion($block, false);\n    }\n  }, {\n    key: \"_toggleAccordion\",\n    value: function _toggleAccordion($block) {\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) return;\n      this.Accordion.toggle($block);\n    }\n  }, {\n    key: \"onBreakpointChange\",\n    value: function onBreakpointChange(breakpoints) {\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) {\n        this.Accordion.openAll();\n      } else if (breakpoints.previous === 'L' && !_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) {\n        this.Accordion.closeOpen();\n      }\n    }\n  }]);\n\n  return StaticSectionFooter;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNTZWN0aW9uRm9vdGVyLmpzPzQ5NjQiXSwibmFtZXMiOlsiU3RhdGljU2VjdGlvbkZvb3RlciIsInNlY3Rpb24iLCIkZWwiLCIkIiwiZWwiLCJjdXJyZW5jeURpc2Nsb3N1cmVFbCIsInF1ZXJ5U2VsZWN0b3IiLCJsb2NhbGVEaXNjbG9zdXJlRWwiLCJkaXNjbG9zdXJlcyIsIkFjY29yZGlvbiIsImZvcm1zIiwiRm9ybXMiLCJwdXNoIiwiRGlzY2xvc3VyZSIsImxheW91dEhhbmRsZXIiLCJvbkJyZWFrcG9pbnRDaGFuZ2UiLCJiaW5kIiwiYnJlYWtwb2ludCIsIl9iaW5kRXZlbnRzIiwib24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiX3RvZ2dsZUFjY29yZGlvbiIsImN1cnJlbnRUYXJnZXQiLCJwYXJlbnQiLCJvZmYiLCJ1bmxvYWQiLCJmb3JFYWNoIiwiZGlzY2xvc3VyZSIsImJsb2NrIiwiJGJsb2NrIiwiaGFzQ2xhc3MiLCJ0b2dnbGUiLCJicmVha3BvaW50cyIsIm9wZW5BbGwiLCJwcmV2aW91cyIsImNsb3NlT3BlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7SUFFcUJBLG1CO0FBQ25CLCtCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ25CLFNBQUtDLEdBQUwsR0FBV0MsNkNBQUMsQ0FBQ0YsT0FBTyxDQUFDRyxFQUFULENBQVo7QUFDQSxTQUFLQSxFQUFMLEdBQVVILE9BQU8sQ0FBQ0csRUFBbEI7QUFDQSxTQUFLQyxvQkFBTCxHQUE0QixLQUFLRCxFQUFMLENBQVFFLGFBQVIsQ0FBc0IsNEJBQXRCLENBQTVCO0FBQ0EsU0FBS0Msa0JBQUwsR0FBMEIsS0FBS0gsRUFBTCxDQUFRRSxhQUFSLENBQXNCLDBCQUF0QixDQUExQjtBQUNBLFNBQUtFLFdBQUwsR0FBbUIsRUFBbkI7QUFFQSxTQUFLQyxTQUFMLEdBQWlCLElBQUlBLGtEQUFKLENBQWMsS0FBS1AsR0FBbkIsQ0FBakI7QUFDQSxTQUFLUSxLQUFMLEdBQWEsSUFBSUMsOENBQUosQ0FBVSxLQUFLVCxHQUFmLENBQWI7O0FBRUEsUUFBSSxLQUFLRyxvQkFBVCxFQUErQjtBQUM3QixXQUFLRyxXQUFMLENBQWlCSSxJQUFqQixDQUFzQixJQUFJQyx3RUFBSixDQUFlLEtBQUtSLG9CQUFwQixDQUF0QjtBQUNEOztBQUVELFFBQUksS0FBS0Usa0JBQVQsRUFBNkI7QUFDM0IsV0FBS0MsV0FBTCxDQUFpQkksSUFBakIsQ0FBc0IsSUFBSUMsd0VBQUosQ0FBZSxLQUFLTixrQkFBcEIsQ0FBdEI7QUFDRCxLQWhCa0IsQ0FrQm5COzs7QUFDQSxTQUFLTyxhQUFMLEdBQXFCLEtBQUtDLGtCQUFMLENBQXdCQyxJQUF4QixDQUE2QixJQUE3QixDQUFyQjtBQUNBQyxtRUFBQSxDQUFvQixLQUFLSCxhQUF6Qjs7QUFFQSxTQUFLSSxXQUFMO0FBQ0Q7Ozs7a0NBRWE7QUFBQTs7QUFDWixXQUFLaEIsR0FBTCxDQUFTaUIsRUFBVCxDQUFZLGNBQVosRUFBNEIsMEJBQTVCLEVBQXdELFVBQUFDLEtBQUssRUFBSTtBQUMvREEsYUFBSyxDQUFDQyxjQUFOOztBQUNBLGFBQUksQ0FBQ0MsZ0JBQUwsQ0FBc0JuQiw2Q0FBQyxDQUFDaUIsS0FBSyxDQUFDRyxhQUFQLENBQUQsQ0FBdUJDLE1BQXZCLEVBQXRCO0FBQ0QsT0FIRDtBQUlEOzs7c0NBRWlCO0FBQ2hCLFdBQUt0QixHQUFMLENBQVN1QixHQUFULENBQWEsU0FBYjtBQUNBLFdBQUtmLEtBQUwsQ0FBV2dCLE1BQVg7QUFDQSxXQUFLbEIsV0FBTCxDQUFpQm1CLE9BQWpCLENBQXlCLFVBQUFDLFVBQVU7QUFBQSxlQUFJQSxVQUFVLENBQUNGLE1BQVgsRUFBSjtBQUFBLE9BQW5DO0FBRUEsYUFBTyxLQUFLakIsU0FBWjtBQUNEOzs7eUNBRW9Cb0IsSyxFQUFPO0FBQzFCLFVBQU1DLE1BQU0sR0FBRzNCLDZDQUFDLENBQUMwQixLQUFLLENBQUN6QixFQUFQLENBQWhCO0FBRUEsVUFBSTBCLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQixlQUFoQixDQUFKLEVBQXNDLEtBQUtULGdCQUFMLENBQXNCUSxNQUF0QixFQUE4QixJQUE5QjtBQUN2Qzs7OzJDQUVzQkQsSyxFQUFPO0FBQzVCLFVBQU1DLE1BQU0sR0FBRzNCLDZDQUFDLENBQUMwQixLQUFLLENBQUN6QixFQUFQLENBQWhCO0FBRUEsVUFBSTBCLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQixlQUFoQixDQUFKLEVBQXNDLEtBQUtULGdCQUFMLENBQXNCUSxNQUF0QixFQUE4QixLQUE5QjtBQUN2Qzs7O3FDQUVnQkEsTSxFQUFRO0FBQ3ZCLFVBQUliLDBEQUFBLENBQWUsR0FBZixDQUFKLEVBQXlCO0FBRXpCLFdBQUtSLFNBQUwsQ0FBZXVCLE1BQWYsQ0FBc0JGLE1BQXRCO0FBQ0Q7Ozt1Q0FFa0JHLFcsRUFBYTtBQUM5QixVQUFJaEIsMERBQUEsQ0FBZSxHQUFmLENBQUosRUFBeUI7QUFDdkIsYUFBS1IsU0FBTCxDQUFleUIsT0FBZjtBQUNELE9BRkQsTUFFTyxJQUFJRCxXQUFXLENBQUNFLFFBQVosS0FBeUIsR0FBekIsSUFBZ0MsQ0FBQ2xCLDBEQUFBLENBQWUsR0FBZixDQUFyQyxFQUEwRDtBQUMvRCxhQUFLUixTQUFMLENBQWUyQixTQUFmO0FBQ0Q7QUFDRiIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3NlY3Rpb25zL1N0YXRpY1NlY3Rpb25Gb290ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0ICogYXMgYnJlYWtwb2ludCBmcm9tICdAcGl4ZWx1bmlvbi9icmVha3BvaW50JztcbmltcG9ydCBEaXNjbG9zdXJlIGZyb20gJ0BwaXhlbHVuaW9uL3Nob3BpZnktY3Jvc3MtYm9yZGVyJztcblxuaW1wb3J0IEFjY29yZGlvbiBmcm9tICcuLi9BY2NvcmRpb24nO1xuaW1wb3J0IEZvcm1zIGZyb20gJy4uL0Zvcm1zJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhdGljU2VjdGlvbkZvb3RlciB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLiRlbCA9ICQoc2VjdGlvbi5lbCk7XG4gICAgdGhpcy5lbCA9IHNlY3Rpb24uZWw7XG4gICAgdGhpcy5jdXJyZW5jeURpc2Nsb3N1cmVFbCA9IHRoaXMuZWwucXVlcnlTZWxlY3RvcignW2RhdGEtZGlzY2xvc3VyZS1jdXJyZW5jeV0nKTtcbiAgICB0aGlzLmxvY2FsZURpc2Nsb3N1cmVFbCA9IHRoaXMuZWwucXVlcnlTZWxlY3RvcignW2RhdGEtZGlzY2xvc3VyZS1sb2NhbGVdJyk7XG4gICAgdGhpcy5kaXNjbG9zdXJlcyA9IFtdO1xuXG4gICAgdGhpcy5BY2NvcmRpb24gPSBuZXcgQWNjb3JkaW9uKHRoaXMuJGVsKTtcbiAgICB0aGlzLmZvcm1zID0gbmV3IEZvcm1zKHRoaXMuJGVsKTtcblxuICAgIGlmICh0aGlzLmN1cnJlbmN5RGlzY2xvc3VyZUVsKSB7XG4gICAgICB0aGlzLmRpc2Nsb3N1cmVzLnB1c2gobmV3IERpc2Nsb3N1cmUodGhpcy5jdXJyZW5jeURpc2Nsb3N1cmVFbCkpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmxvY2FsZURpc2Nsb3N1cmVFbCkge1xuICAgICAgdGhpcy5kaXNjbG9zdXJlcy5wdXNoKG5ldyBEaXNjbG9zdXJlKHRoaXMubG9jYWxlRGlzY2xvc3VyZUVsKSk7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIEFjY29yZGlvbiBpbnRlcmFjdGlvbiB3aGVuIHdpbmRvdyBzaXplIGNoYW5nZXNcbiAgICB0aGlzLmxheW91dEhhbmRsZXIgPSB0aGlzLm9uQnJlYWtwb2ludENoYW5nZS5iaW5kKHRoaXMpO1xuICAgIGJyZWFrcG9pbnQub25DaGFuZ2UodGhpcy5sYXlvdXRIYW5kbGVyKTtcblxuICAgIHRoaXMuX2JpbmRFdmVudHMoKTtcbiAgfVxuXG4gIF9iaW5kRXZlbnRzKCkge1xuICAgIHRoaXMuJGVsLm9uKCdjbGljay5mb290ZXInLCAnW2RhdGEtYWNjb3JkaW9uLXRyaWdnZXJdJywgZXZlbnQgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX3RvZ2dsZUFjY29yZGlvbigkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLnBhcmVudCgpKTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uU2VjdGlvblVubG9hZCgpIHtcbiAgICB0aGlzLiRlbC5vZmYoJy5mb290ZXInKTtcbiAgICB0aGlzLmZvcm1zLnVubG9hZCgpO1xuICAgIHRoaXMuZGlzY2xvc3VyZXMuZm9yRWFjaChkaXNjbG9zdXJlID0+IGRpc2Nsb3N1cmUudW5sb2FkKCkpO1xuXG4gICAgZGVsZXRlIHRoaXMuQWNjb3JkaW9uO1xuICB9XG5cbiAgb25TZWN0aW9uQmxvY2tTZWxlY3QoYmxvY2spIHtcbiAgICBjb25zdCAkYmxvY2sgPSAkKGJsb2NrLmVsKTtcblxuICAgIGlmICgkYmxvY2suaGFzQ2xhc3MoJ2hhcy1hY2NvcmRpb24nKSkgdGhpcy5fdG9nZ2xlQWNjb3JkaW9uKCRibG9jaywgdHJ1ZSk7XG4gIH1cblxuICBvblNlY3Rpb25CbG9ja0Rlc2VsZWN0KGJsb2NrKSB7XG4gICAgY29uc3QgJGJsb2NrID0gJChibG9jay5lbCk7XG5cbiAgICBpZiAoJGJsb2NrLmhhc0NsYXNzKCdoYXMtYWNjb3JkaW9uJykpIHRoaXMuX3RvZ2dsZUFjY29yZGlvbigkYmxvY2ssIGZhbHNlKTtcbiAgfVxuXG4gIF90b2dnbGVBY2NvcmRpb24oJGJsb2NrKSB7XG4gICAgaWYgKGJyZWFrcG9pbnQubWluKCdMJykpIHJldHVybjtcblxuICAgIHRoaXMuQWNjb3JkaW9uLnRvZ2dsZSgkYmxvY2spO1xuICB9XG5cbiAgb25CcmVha3BvaW50Q2hhbmdlKGJyZWFrcG9pbnRzKSB7XG4gICAgaWYgKGJyZWFrcG9pbnQubWluKCdMJykpIHtcbiAgICAgIHRoaXMuQWNjb3JkaW9uLm9wZW5BbGwoKTtcbiAgICB9IGVsc2UgaWYgKGJyZWFrcG9pbnRzLnByZXZpb3VzID09PSAnTCcgJiYgIWJyZWFrcG9pbnQubWluKCdMJykpIHtcbiAgICAgIHRoaXMuQWNjb3JkaW9uLmNsb3NlT3BlbigpO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticSectionFooter.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticSectionHeader.js":
/*!********************************************************!*\
  !*** ./source/scripts/sections/StaticSectionHeader.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticSectionHeader; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\n/* harmony import */ var _components_header_TraditionalHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/header/TraditionalHeader */ \"./source/scripts/components/header/TraditionalHeader.js\");\n/* harmony import */ var _components_header_MinimalHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/header/MinimalHeader */ \"./source/scripts/components/header/MinimalHeader.js\");\n/* harmony import */ var _components_header_BasicHeader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/header/BasicHeader */ \"./source/scripts/components/header/BasicHeader.js\");\n/* harmony import */ var _components_navigation_NavMobile__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/navigation/NavMobile */ \"./source/scripts/components/navigation/NavMobile.js\");\n/* harmony import */ var _components_navigation_MegaNavScroller__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/navigation/MegaNavScroller */ \"./source/scripts/components/navigation/MegaNavScroller.js\");\n/* harmony import */ var _components_navigation_NavDesktopMenu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/navigation/NavDesktopMenu */ \"./source/scripts/components/navigation/NavDesktopMenu.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\nvar StaticSectionHeader = /*#__PURE__*/function () {\n  function StaticSectionHeader(section) {\n    var _this = this;\n\n    _classCallCheck(this, StaticSectionHeader);\n\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(section.el);\n    this.settings = section.data.settings;\n    this.postMessage = section.postMessage;\n    this.headerSearch = null;\n    this.$scripts = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-scripts]');\n    this.$menuToggle = this.$el.find('[data-menu-toggle]');\n    this.$cartCount = this.$el.find('[data-header-cart-count]');\n    this.$searchField = this.$el.find('[data-live-search]');\n    this.$siteNavigation = this.$el.find('[data-site-navigation]');\n    this.$desktopNavigation = this.$siteNavigation.find('ul.navmenu-depth-1');\n    this.$headerTools = this.$siteNavigation.find('[data-header-actions]');\n    var headerProperties = {\n      section: section.el,\n      postMessage: this.postMessage,\n      $scripts: this.$scripts\n    };\n\n    switch (this.settings.header_layout) {\n      case 'minimal':\n        this.header = new _components_header_MinimalHeader__WEBPACK_IMPORTED_MODULE_4__[\"default\"](headerProperties, this.settings);\n        break;\n\n      case 'basic':\n        this.header = new _components_header_BasicHeader__WEBPACK_IMPORTED_MODULE_5__[\"default\"](headerProperties, this.settings);\n        break;\n\n      case 'traditional':\n        this.header = new _components_header_TraditionalHeader__WEBPACK_IMPORTED_MODULE_3__[\"default\"](headerProperties, this.settings);\n        break;\n\n      default:\n        this.header = new _components_header_TraditionalHeader__WEBPACK_IMPORTED_MODULE_3__[\"default\"](headerProperties, this.settings);\n        break;\n    }\n\n    this.megaNavs = {};\n    var meganavMenus = document.querySelectorAll('[data-meganav-menu]');\n\n    for (var i = 0; i < meganavMenus.length; i++) {\n      var el = meganavMenus[i];\n      var id = el.getAttribute('data-meganav-id');\n      this.megaNavs[id] = new _components_navigation_MegaNavScroller__WEBPACK_IMPORTED_MODULE_7__[\"default\"](jquery__WEBPACK_IMPORTED_MODULE_0___default()(el));\n    }\n\n    this.navMobile = new _components_navigation_NavMobile__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n      $el: this.$el,\n      $toggleOpen: this.$menuToggle\n    });\n    this.navDesktop = new _components_navigation_NavDesktopMenu__WEBPACK_IMPORTED_MODULE_8__[\"default\"](document.querySelector('.site-navigation > [data-navmenu]'));\n    this.forms = new _Forms__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.$el);\n    this.$el.on('cartcount:update', function (event, data) {\n      _this.$cartCount.attr('data-header-cart-count', data.response.item_count).toggleClass('visible', data.response.item_count > 0);\n    });\n  }\n\n  _createClass(StaticSectionHeader, [{\n    key: \"onSectionDeselect\",\n    value: function onSectionDeselect() {\n      this._closeAllMeganavs();\n\n      this.header.sectionDeselect();\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this.header.unload();\n      this.navMobile.unload();\n      this.navDesktop.unload();\n      this.forms.unload();\n      this.$el.off('cartcount:update');\n    }\n  }, {\n    key: \"onSectionMessage\",\n    value: function onSectionMessage(name, data) {\n      if (name === 'nav:close-all' && _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) {\n        this._closeAllMeganavs();\n      }\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect(block) {\n      if (!_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_1__[\"min\"]('L')) {\n        return;\n      }\n\n      this.header.onSectionBlockSelect(block);\n      this.navDesktop.openMeganavBlock(this.megaNavs[block.id].$el[0]);\n    }\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect(block) {\n      this.header.onSectionBlockDeselect(block);\n\n      if (this.megaNavs[block.id]) {\n        this.megaNavs[block.id].$el.removeClass('meganav-editing-block');\n      }\n    }\n  }, {\n    key: \"_closeAllMeganavs\",\n    value: function _closeAllMeganavs() {\n      var keys = Object.keys(this.megaNavs);\n\n      for (var i = 0; keys.length < i; i++) {\n        this.megaNavs[keys[i]].$el.removeClass('meganav-editing-block');\n      }\n    }\n  }]);\n\n  return StaticSectionHeader;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticSectionHeader.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticSlideshow.js":
/*!****************************************************!*\
  !*** ./source/scripts/sections/StaticSlideshow.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticSlideshow; });\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! just-debounce */ \"./node_modules/just-debounce/index.js\");\n/* harmony import */ var just_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(just_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! flickity */ \"./node_modules/flickity/js/index.js\");\n/* harmony import */ var flickity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(flickity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixelunion/breakpoint */ \"./node_modules/@pixelunion/breakpoint/dist/cjs/index.js\");\n/* harmony import */ var _pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar StaticSlideshow = /*#__PURE__*/function () {\n  function StaticSlideshow(section) {\n    _classCallCheck(this, StaticSlideshow);\n\n    this.el = section.el;\n    this.settings = section.data;\n    this.$window = jquery__WEBPACK_IMPORTED_MODULE_3___default()(window);\n    this.carousel = this.el.querySelector('.slideshow');\n    this.slides = '.slideshow-slide';\n    this.container = this.el.querySelector('.slideshow-height-fullscreen');\n    this.isFullscreen = !!this.container;\n    this.selectBlockOnLoad = true;\n    this.continueAutoplay = true;\n    this.stopAutoplay = false;\n    this.autoplayTimeout = 0;\n    this.$firstSlideImage = null;\n    this.flickity = null;\n    this.flickityOptions = null;\n\n    if (this.carousel && this.carousel.querySelectorAll(this.slides).length > 1) {\n      this._initSlider();\n    }\n  }\n\n  _createClass(StaticSlideshow, [{\n    key: \"_initSlider\",\n    value: function _initSlider() {\n      var _this = this;\n\n      this.flickityOptions = {\n        autoPlay: this.settings.enable_autoplay ? this.settings.autoplay_duration * 1000 : false,\n        setGallerySize: !this.isFullscreen,\n        pauseAutoPlayOnHover: false,\n        accessibility: true,\n        adaptiveHeight: true,\n        cellAlign: 'left',\n        cellSelector: this.slides,\n        contain: true,\n        wrapAround: true,\n        arrowShape: {\n          x0: 10,\n          x1: 60,\n          y1: 50,\n          x2: 65,\n          y2: 45,\n          x3: 20\n        }\n      };\n      this.$firstSlideImage = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this.slides, this.carousel).find('img[data-rimg]').first();\n\n      var initFlickity = function initFlickity() {\n        _this.flickity = new flickity__WEBPACK_IMPORTED_MODULE_1___default.a(_this.carousel, _this.flickityOptions);\n\n        _this._bindEvents();\n      }; // If image isn't lazy loaded, it may load before\n      // this JS runs, so we need to check\n\n\n      if (this.$firstSlideImage.length && !this.$firstSlideImage[0].complete) {\n        var loadEventName = this.settings.lazyLoad ? 'rimg:load' : 'load';\n        this.$firstSlideImage.one(loadEventName, initFlickity);\n      } else {\n        initFlickity();\n      }\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this2 = this;\n\n      this._slideshowHeight();\n\n      this._positionDots();\n\n      this._changeArrrowColors();\n\n      this.$window.on('resize.slideshow', just_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n        _this2._slideshowHeight();\n\n        _this2._positionDots();\n\n        _this2._changeArrrowColors();\n      }));\n      this.flickity.on('select', function () {\n        _this2._slideshowHeight();\n\n        _this2._positionDots();\n\n        _this2._changeArrrowColors();\n\n        _this2.selectBlockOnLoad = false;\n\n        if (_this2.settings.enable_autoplay && !_this2.stopAutoplay) {\n          _this2.flickity.pausePlayer();\n\n          if (_this2.continueAutoplay) {\n            _this2.autoplayTimeout = 0;\n          } else {\n            _this2.autoplayTimeout = 10000;\n          }\n\n          _this2.continueAutoplay = true;\n          setTimeout(function () {\n            _this2.flickity.playPlayer();\n          }, _this2.autoplayTimeout);\n        }\n      });\n      this.flickity.on('dragStart', function () {\n        _this2.continueAutoplay = false;\n      });\n\n      this.stopAutoplaying = function () {\n        _this2.stopAutoplay = true;\n\n        _this2.flickity.stopPlayer();\n      }; // For users that need to use a keyboard for navigation, we want to pause the player\n      // when they are focused on it, and we also want to slide to the slide their focus is on.\n\n\n      this.slideElements = this.el.querySelectorAll(this.slides);\n      this.slideElements.forEach(function (slide) {\n        slide.addEventListener('focusin', function () {\n          _this2.stopAutoplaying();\n\n          var $slides = jquery__WEBPACK_IMPORTED_MODULE_3___default()(_this2.slides);\n          var $slide = jquery__WEBPACK_IMPORTED_MODULE_3___default()(slide);\n          var slideIndex = $slides.index($slide);\n\n          _this2.flickity.select(slideIndex, false, true);\n        });\n      }); // For screen readers, we will add a live region that is hidden to users,\n      // but is read when clicking the nagivation buttons\n\n      this.liveregion = document.createElement('div');\n      this.liveregion.setAttribute('aria-live', 'polite');\n      this.liveregion.setAttribute('class', 'live-region visually-hidden');\n      this.el.appendChild(this.liveregion);\n\n      this.handleManualSlideChange = function () {\n        _this2.stopAutoplaying();\n\n        _this2.liveregion.textContent = \"Slide autoplay stopped.\\n        On slide \".concat(_this2.flickity.selectedIndex + 1, \" of \").concat(_this2.flickity.slides.length);\n      }; // stop autoplaying if a user has interacted with the slideshow next/previous buttons\n\n\n      this.el.querySelector('.flickity-prev-next-button.next').addEventListener('click', this.handleManualSlideChange);\n      this.el.querySelector('.flickity-prev-next-button.previous').addEventListener('click', this.handleManualSlideChange);\n    }\n  }, {\n    key: \"_positionDots\",\n    value: function _positionDots() {\n      var pageDots = this.el.querySelector('.flickity-page-dots');\n      var top = 'auto';\n\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"max\"]('XS') && !this.isFullscreen) {\n        var content = this.flickity.selectedElement.querySelector('.slideshow-slide-content');\n        var height = this.flickity.selectedElement.querySelector('.slideshow-background').offsetHeight;\n        var dotGutter = 5;\n\n        if (content) {\n          top = \"\".concat(height + dotGutter, \"px\");\n        } else {\n          var pageDotsHeight = pageDots.offsetHeight;\n          var dotBottomGutter = 20; // If no content, and mobile, offset by height of dots, and the bottom gutter\n\n          top = \"\".concat(height - (pageDotsHeight + dotBottomGutter), \"px\");\n        }\n      }\n\n      pageDots.style.top = top;\n    }\n  }, {\n    key: \"_changeArrrowColors\",\n    value: function _changeArrrowColors() {\n      var currentColor = this.flickity.selectedElement.querySelector('.slideshow-background').dataset;\n      var dots = this.el.querySelectorAll('.flickity-page-dots .dot');\n\n      if (_pixelunion_breakpoint__WEBPACK_IMPORTED_MODULE_2__[\"max\"]('XS') && !this.isFullscreen) {\n        currentColor = currentColor.themecolor;\n      } else {\n        currentColor = currentColor.slidecolor;\n      }\n\n      this.el.querySelector('.flickity-prev-next-button.previous svg').style.fill = currentColor;\n      this.el.querySelector('.flickity-prev-next-button.next svg').style.fill = currentColor;\n\n      for (var i = 0; i < dots.length; i++) {\n        dots[i].style.background = currentColor;\n      }\n    }\n  }, {\n    key: \"_slideshowHeight\",\n    value: function _slideshowHeight() {\n      if (this.isFullscreen) {\n        var offsetHeight = document.querySelector('[data-site-header]').getBoundingClientRect().height;\n        var announcement = document.querySelector('.site-announcement');\n\n        if (announcement) {\n          offsetHeight += announcement.getBoundingClientRect().height;\n        }\n\n        this.el.querySelector('.flickity-viewport').style.height = \"calc(100vh - \".concat(offsetHeight, \"px)\");\n        this.container.style.height = \"calc(100vh - \".concat(offsetHeight, \"px)\");\n      }\n    }\n  }, {\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      this._destroyFlickity();\n\n      this.$window.off('.slideshow');\n\n      if (this.$firstSlideImage) {\n        this.$firstSlideImage.off('rimg:load');\n      }\n    }\n  }, {\n    key: \"_destroyFlickity\",\n    value: function _destroyFlickity() {\n      if (!this.flickity) {\n        return;\n      }\n\n      this.flickity.destroy();\n    }\n  }, {\n    key: \"onSectionBlockSelect\",\n    value: function onSectionBlockSelect(block) {\n      var _this3 = this;\n\n      if (!this.flickity) return;\n      setTimeout(function () {\n        _this3.flickity.resize();\n      }, 100);\n      var $slides = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this.slides);\n      var $slide = jquery__WEBPACK_IMPORTED_MODULE_3___default()(block.el);\n      var slideIndex = $slides.index($slide);\n\n      if (this.settings.enable_autoplay && this.flickity) {\n        this.stopAutoplay = true;\n        this.flickity.pausePlayer();\n      }\n\n      if (!$slide.hasClass('is-selected') && !this.selectBlockOnLoad) {\n        this.flickity.select(slideIndex, false, false);\n      } else if (this.selectBlockOnLoad) {\n        this.flickity.select(slideIndex, false, true);\n      }\n    }\n  }, {\n    key: \"onSectionBlockDeselect\",\n    value: function onSectionBlockDeselect() {\n      if (this.flickity && this.settings.enable_autoplay) {\n        this.stopAutoplay = false;\n        this.flickity.playPlayer();\n      }\n    }\n  }]);\n\n  return StaticSlideshow;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticSlideshow.js\n");

/***/ }),

/***/ "./source/scripts/sections/StaticUtilityBar.js":
/*!*****************************************************!*\
  !*** ./source/scripts/sections/StaticUtilityBar.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticUtilityBar; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar StaticUtilityBar = /*#__PURE__*/function () {\n  function StaticUtilityBar(section) {\n    _classCallCheck(this, StaticUtilityBar);\n\n    this.mobileEl = section.el.querySelector('[data-utility-bar-mobile]');\n    this.mobileNavContentEl = null;\n    this.mobileElChildren = [];\n    this.documentFragment = document.createDocumentFragment();\n    this.mobileLayout = section.data.settings.mobile_layout;\n    this._loadMobileNavItems = this._loadMobileNavItems.bind(this);\n\n    if (this.mobileEl) {\n      this._loadMobileNavItems();\n\n      window.addEventListener('shopify:section:load', this._loadMobileNavItems);\n    }\n  }\n\n  _createClass(StaticUtilityBar, [{\n    key: \"onSectionUnload\",\n    value: function onSectionUnload() {\n      var _this = this;\n\n      window.removeEventListener('shopify:section:load', this._loadMobileNavItems);\n\n      if (this.mobileNavContentEl) {\n        this.mobileElChildren.forEach(function (child) {\n          return _this.mobileNavContentEl.removeChild(child);\n        });\n      }\n    }\n  }, {\n    key: \"_loadMobileNavItems\",\n    value: function _loadMobileNavItems() {\n      var inDom = this.mobileElChildren.some(function (child) {\n        return document.body.contains(child);\n      });\n      if (inDom) return;\n      this.mobileNavContentEl = document.body.querySelector('[data-mobile-nav-content]');\n      this.mobileElChildren = [];\n\n      if (this.mobileNavContentEl) {\n        var children = this.mobileEl.children;\n\n        for (var i = 0; i < children.length; i++) {\n          var clone = children[i].cloneNode(true);\n          this.mobileElChildren.push(clone);\n          this.documentFragment.appendChild(clone);\n        }\n\n        if (this.mobileLayout === 'below') {\n          this.mobileNavContentEl.appendChild(this.documentFragment);\n        } else {\n          this.mobileNavContentEl.insertBefore(this.documentFragment, this.mobileNavContentEl.firstElementChild);\n        }\n      }\n    }\n  }]);\n\n  return StaticUtilityBar;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNVdGlsaXR5QmFyLmpzP2IzN2IiXSwibmFtZXMiOlsiU3RhdGljVXRpbGl0eUJhciIsInNlY3Rpb24iLCJtb2JpbGVFbCIsImVsIiwicXVlcnlTZWxlY3RvciIsIm1vYmlsZU5hdkNvbnRlbnRFbCIsIm1vYmlsZUVsQ2hpbGRyZW4iLCJkb2N1bWVudEZyYWdtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwibW9iaWxlTGF5b3V0IiwiZGF0YSIsInNldHRpbmdzIiwibW9iaWxlX2xheW91dCIsIl9sb2FkTW9iaWxlTmF2SXRlbXMiLCJiaW5kIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJmb3JFYWNoIiwiY2hpbGQiLCJyZW1vdmVDaGlsZCIsImluRG9tIiwic29tZSIsImJvZHkiLCJjb250YWlucyIsImNoaWxkcmVuIiwiaSIsImxlbmd0aCIsImNsb25lIiwiY2xvbmVOb2RlIiwicHVzaCIsImFwcGVuZENoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiZmlyc3RFbGVtZW50Q2hpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0lBQXFCQSxnQjtBQUNuQiw0QkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNuQixTQUFLQyxRQUFMLEdBQWdCRCxPQUFPLENBQUNFLEVBQVIsQ0FBV0MsYUFBWCxDQUF5QiwyQkFBekIsQ0FBaEI7QUFDQSxTQUFLQyxrQkFBTCxHQUEwQixJQUExQjtBQUNBLFNBQUtDLGdCQUFMLEdBQXdCLEVBQXhCO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0JDLFFBQVEsQ0FBQ0Msc0JBQVQsRUFBeEI7QUFDQSxTQUFLQyxZQUFMLEdBQW9CVCxPQUFPLENBQUNVLElBQVIsQ0FBYUMsUUFBYixDQUFzQkMsYUFBMUM7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixLQUFLQSxtQkFBTCxDQUF5QkMsSUFBekIsQ0FBOEIsSUFBOUIsQ0FBM0I7O0FBRUEsUUFBSSxLQUFLYixRQUFULEVBQW1CO0FBQ2pCLFdBQUtZLG1CQUFMOztBQUNBRSxZQUFNLENBQUNDLGdCQUFQLENBQXdCLHNCQUF4QixFQUFnRCxLQUFLSCxtQkFBckQ7QUFDRDtBQUNGOzs7O3NDQUVpQjtBQUFBOztBQUNoQkUsWUFBTSxDQUFDRSxtQkFBUCxDQUEyQixzQkFBM0IsRUFBbUQsS0FBS0osbUJBQXhEOztBQUNBLFVBQUksS0FBS1Qsa0JBQVQsRUFBNkI7QUFDM0IsYUFBS0MsZ0JBQUwsQ0FBc0JhLE9BQXRCLENBQThCLFVBQUFDLEtBQUs7QUFBQSxpQkFBSSxLQUFJLENBQUNmLGtCQUFMLENBQXdCZ0IsV0FBeEIsQ0FBb0NELEtBQXBDLENBQUo7QUFBQSxTQUFuQztBQUNEO0FBQ0Y7OzswQ0FFcUI7QUFDcEIsVUFBTUUsS0FBSyxHQUFHLEtBQUtoQixnQkFBTCxDQUFzQmlCLElBQXRCLENBQTJCLFVBQUFILEtBQUs7QUFBQSxlQUFJWixRQUFRLENBQUNnQixJQUFULENBQWNDLFFBQWQsQ0FBdUJMLEtBQXZCLENBQUo7QUFBQSxPQUFoQyxDQUFkO0FBRUEsVUFBSUUsS0FBSixFQUFXO0FBRVgsV0FBS2pCLGtCQUFMLEdBQTBCRyxRQUFRLENBQUNnQixJQUFULENBQWNwQixhQUFkLENBQTRCLDJCQUE1QixDQUExQjtBQUNBLFdBQUtFLGdCQUFMLEdBQXdCLEVBQXhCOztBQUVBLFVBQUksS0FBS0Qsa0JBQVQsRUFBNkI7QUFBQSxZQUNuQnFCLFFBRG1CLEdBQ04sS0FBS3hCLFFBREMsQ0FDbkJ3QixRQURtQjs7QUFHM0IsYUFBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRCxRQUFRLENBQUNFLE1BQTdCLEVBQXFDRCxDQUFDLEVBQXRDLEVBQTBDO0FBQ3hDLGNBQU1FLEtBQUssR0FBR0gsUUFBUSxDQUFDQyxDQUFELENBQVIsQ0FBWUcsU0FBWixDQUFzQixJQUF0QixDQUFkO0FBQ0EsZUFBS3hCLGdCQUFMLENBQXNCeUIsSUFBdEIsQ0FBMkJGLEtBQTNCO0FBQ0EsZUFBS3RCLGdCQUFMLENBQXNCeUIsV0FBdEIsQ0FBa0NILEtBQWxDO0FBQ0Q7O0FBRUQsWUFBSSxLQUFLbkIsWUFBTCxLQUFzQixPQUExQixFQUFtQztBQUNqQyxlQUFLTCxrQkFBTCxDQUF3QjJCLFdBQXhCLENBQW9DLEtBQUt6QixnQkFBekM7QUFDRCxTQUZELE1BRU87QUFDTCxlQUFLRixrQkFBTCxDQUF3QjRCLFlBQXhCLENBQXFDLEtBQUsxQixnQkFBMUMsRUFBNEQsS0FBS0Ysa0JBQUwsQ0FBd0I2QixpQkFBcEY7QUFDRDtBQUNGO0FBQ0YiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zZWN0aW9ucy9TdGF0aWNVdGlsaXR5QmFyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhdGljVXRpbGl0eUJhciB7XG4gIGNvbnN0cnVjdG9yKHNlY3Rpb24pIHtcbiAgICB0aGlzLm1vYmlsZUVsID0gc2VjdGlvbi5lbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS11dGlsaXR5LWJhci1tb2JpbGVdJyk7XG4gICAgdGhpcy5tb2JpbGVOYXZDb250ZW50RWwgPSBudWxsO1xuICAgIHRoaXMubW9iaWxlRWxDaGlsZHJlbiA9IFtdO1xuICAgIHRoaXMuZG9jdW1lbnRGcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICB0aGlzLm1vYmlsZUxheW91dCA9IHNlY3Rpb24uZGF0YS5zZXR0aW5ncy5tb2JpbGVfbGF5b3V0O1xuICAgIHRoaXMuX2xvYWRNb2JpbGVOYXZJdGVtcyA9IHRoaXMuX2xvYWRNb2JpbGVOYXZJdGVtcy5iaW5kKHRoaXMpO1xuXG4gICAgaWYgKHRoaXMubW9iaWxlRWwpIHtcbiAgICAgIHRoaXMuX2xvYWRNb2JpbGVOYXZJdGVtcygpO1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3BpZnk6c2VjdGlvbjpsb2FkJywgdGhpcy5fbG9hZE1vYmlsZU5hdkl0ZW1zKTtcbiAgICB9XG4gIH1cblxuICBvblNlY3Rpb25VbmxvYWQoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Nob3BpZnk6c2VjdGlvbjpsb2FkJywgdGhpcy5fbG9hZE1vYmlsZU5hdkl0ZW1zKTtcbiAgICBpZiAodGhpcy5tb2JpbGVOYXZDb250ZW50RWwpIHtcbiAgICAgIHRoaXMubW9iaWxlRWxDaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHRoaXMubW9iaWxlTmF2Q29udGVudEVsLnJlbW92ZUNoaWxkKGNoaWxkKSk7XG4gICAgfVxuICB9XG5cbiAgX2xvYWRNb2JpbGVOYXZJdGVtcygpIHtcbiAgICBjb25zdCBpbkRvbSA9IHRoaXMubW9iaWxlRWxDaGlsZHJlbi5zb21lKGNoaWxkID0+IGRvY3VtZW50LmJvZHkuY29udGFpbnMoY2hpbGQpKTtcblxuICAgIGlmIChpbkRvbSkgcmV0dXJuO1xuXG4gICAgdGhpcy5tb2JpbGVOYXZDb250ZW50RWwgPSBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1vYmlsZS1uYXYtY29udGVudF0nKTtcbiAgICB0aGlzLm1vYmlsZUVsQ2hpbGRyZW4gPSBbXTtcblxuICAgIGlmICh0aGlzLm1vYmlsZU5hdkNvbnRlbnRFbCkge1xuICAgICAgY29uc3QgeyBjaGlsZHJlbiB9ID0gdGhpcy5tb2JpbGVFbDtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBjbG9uZSA9IGNoaWxkcmVuW2ldLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgdGhpcy5tb2JpbGVFbENoaWxkcmVuLnB1c2goY2xvbmUpO1xuICAgICAgICB0aGlzLmRvY3VtZW50RnJhZ21lbnQuYXBwZW5kQ2hpbGQoY2xvbmUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5tb2JpbGVMYXlvdXQgPT09ICdiZWxvdycpIHtcbiAgICAgICAgdGhpcy5tb2JpbGVOYXZDb250ZW50RWwuYXBwZW5kQ2hpbGQodGhpcy5kb2N1bWVudEZyYWdtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubW9iaWxlTmF2Q29udGVudEVsLmluc2VydEJlZm9yZSh0aGlzLmRvY3VtZW50RnJhZ21lbnQsIHRoaXMubW9iaWxlTmF2Q29udGVudEVsLmZpcnN0RWxlbWVudENoaWxkKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/sections/StaticUtilityBar.js\n");

/***/ }),

/***/ "./source/scripts/shortcodes/Details.js":
/*!**********************************************!*\
  !*** ./source/scripts/shortcodes/Details.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Details; });\n/* harmony import */ var _Shortcode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Shortcode */ \"./source/scripts/shortcodes/Shortcode.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar Details = /*#__PURE__*/function (_Shortcode) {\n  _inherits(Details, _Shortcode);\n\n  var _super = _createSuper(Details);\n\n  _createClass(Details, null, [{\n    key: \"shortcode\",\n    get: function get() {\n      return 'details';\n    }\n  }]);\n\n  function Details(el) {\n    var _this;\n\n    _classCallCheck(this, Details);\n\n    _this = _super.call(this);\n    _this.summary = el.querySelector('summary'); // We need to add a wrapper to remove the outline when clicking on the summary.\n    // This way there will still be an outline for keyboard users.\n\n    var summaryWrapper = document.createElement('div');\n    summaryWrapper.setAttribute('tabindex', '-1');\n    summaryWrapper.classList.add('summary-wrapper');\n    summaryWrapper.innerHTML = _this.summary.innerHTML;\n    _this.summary.innerHTML = '';\n\n    _this.summary.appendChild(summaryWrapper);\n\n    return _this;\n  }\n\n  return Details;\n}(_Shortcode__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zaG9ydGNvZGVzL0RldGFpbHMuanM/M2VkYyJdLCJuYW1lcyI6WyJEZXRhaWxzIiwiZWwiLCJzdW1tYXJ5IiwicXVlcnlTZWxlY3RvciIsInN1bW1hcnlXcmFwcGVyIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiY2xhc3NMaXN0IiwiYWRkIiwiaW5uZXJIVE1MIiwiYXBwZW5kQ2hpbGQiLCJTaG9ydGNvZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7SUFFcUJBLE87Ozs7Ozs7d0JBQ0k7QUFDckIsYUFBTyxTQUFQO0FBQ0Q7OztBQUVELG1CQUFZQyxFQUFaLEVBQWdCO0FBQUE7O0FBQUE7O0FBQ2Q7QUFFQSxVQUFLQyxPQUFMLEdBQWVELEVBQUUsQ0FBQ0UsYUFBSCxDQUFpQixTQUFqQixDQUFmLENBSGMsQ0FLZDtBQUNBOztBQUNBLFFBQU1DLGNBQWMsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQXZCO0FBQ0FGLGtCQUFjLENBQUNHLFlBQWYsQ0FBNEIsVUFBNUIsRUFBd0MsSUFBeEM7QUFDQUgsa0JBQWMsQ0FBQ0ksU0FBZixDQUF5QkMsR0FBekIsQ0FBNkIsaUJBQTdCO0FBQ0FMLGtCQUFjLENBQUNNLFNBQWYsR0FBMkIsTUFBS1IsT0FBTCxDQUFhUSxTQUF4QztBQUVBLFVBQUtSLE9BQUwsQ0FBYVEsU0FBYixHQUF5QixFQUF6Qjs7QUFDQSxVQUFLUixPQUFMLENBQWFTLFdBQWIsQ0FBeUJQLGNBQXpCOztBQWJjO0FBY2Y7OztFQW5Ca0NRLGtEIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvc2hvcnRjb2Rlcy9EZXRhaWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNob3J0Y29kZSBmcm9tICcuL1Nob3J0Y29kZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERldGFpbHMgZXh0ZW5kcyBTaG9ydGNvZGUge1xuICBzdGF0aWMgZ2V0IHNob3J0Y29kZSgpIHtcbiAgICByZXR1cm4gJ2RldGFpbHMnO1xuICB9XG5cbiAgY29uc3RydWN0b3IoZWwpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5zdW1tYXJ5ID0gZWwucXVlcnlTZWxlY3Rvcignc3VtbWFyeScpO1xuXG4gICAgLy8gV2UgbmVlZCB0byBhZGQgYSB3cmFwcGVyIHRvIHJlbW92ZSB0aGUgb3V0bGluZSB3aGVuIGNsaWNraW5nIG9uIHRoZSBzdW1tYXJ5LlxuICAgIC8vIFRoaXMgd2F5IHRoZXJlIHdpbGwgc3RpbGwgYmUgYW4gb3V0bGluZSBmb3Iga2V5Ym9hcmQgdXNlcnMuXG4gICAgY29uc3Qgc3VtbWFyeVdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzdW1tYXJ5V3JhcHBlci5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgc3VtbWFyeVdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc3VtbWFyeS13cmFwcGVyJyk7XG4gICAgc3VtbWFyeVdyYXBwZXIuaW5uZXJIVE1MID0gdGhpcy5zdW1tYXJ5LmlubmVySFRNTDtcblxuICAgIHRoaXMuc3VtbWFyeS5pbm5lckhUTUwgPSAnJztcbiAgICB0aGlzLnN1bW1hcnkuYXBwZW5kQ2hpbGQoc3VtbWFyeVdyYXBwZXIpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/shortcodes/Details.js\n");

/***/ }),

/***/ "./source/scripts/shortcodes/ProductCTA.js":
/*!*************************************************!*\
  !*** ./source/scripts/shortcodes/ProductCTA.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProductCTA; });\n/* harmony import */ var _Shortcode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Shortcode */ \"./source/scripts/shortcodes/Shortcode.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar ProductCTA = /*#__PURE__*/function (_Shortcode) {\n  _inherits(ProductCTA, _Shortcode);\n\n  var _super = _createSuper(ProductCTA);\n\n  _createClass(ProductCTA, null, [{\n    key: \"shortcode\",\n    get: function get() {\n      return 'product-cta';\n    }\n  }]);\n\n  function ProductCTA(el) {\n    var _this;\n\n    _classCallCheck(this, ProductCTA);\n\n    _this = _super.call(this);\n    _this.productFormEl = null;\n    var parentEl = el.parentElement;\n\n    while (parentEl) {\n      _this.productFormEl = parentEl.hasAttribute('[data-product-form]') ? parentEl : parentEl.querySelector('[data-product-form]');\n      if (_this.productFormEl) break;\n      parentEl = parentEl.parentElement;\n    }\n\n    if (!_this.productFormEl) {\n      throw new Error('ProductCTA: No product form found.');\n    } // Keep a reference to shortcode element to unhide\n\n\n    _this.el = el;\n    _this.variantId = el.getAttribute('variant-id'); // Build the call to action element\n\n    _this.ctaEl = document.createElement('a');\n\n    _this.ctaEl.classList.add('shortcode--product-cta');\n\n    if (el.getAttribute('button-style')) {\n      _this.ctaEl.setAttribute('button-style', el.getAttribute('button-style'));\n    }\n\n    if (el.getAttribute('button-size')) {\n      _this.ctaEl.setAttribute('button-size', el.getAttribute('button-size'));\n    }\n\n    _this.ctaEl.href = el.getAttribute('link');\n    _this.ctaEl.innerHTML = el.innerHTML;\n    var target = el.getAttribute('target');\n\n    if (target) {\n      _this.ctaEl.setAttribute('target', target);\n\n      if (target === '_blank') {\n        var icon = document.createElement('span');\n        icon.classList.add('button-icon');\n        icon.setAttribute('aria-label', '(New window)');\n        icon.innerHTML = '<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.81792 2.29812L5.68732 5.42884L6.57121 6.3127L9.70198 3.18183L9.70227 5.51933L10.9523 5.51917L10.9518 1.67302L10.9517 1.0481L10.3268 1.0481L6.48062 1.04815L6.48064 2.29815L8.81792 2.29812ZM1.67297 1.04817H1.04797V1.67317V10.327V10.952H1.67297H10.3268H10.9518V10.327V8.13026H9.70175V9.70195H2.29797V2.29817H3.83642V1.04817H1.67297Z\" fill=\"currentColor\"/></svg>';\n\n        _this.ctaEl.appendChild(icon);\n      }\n    } // Remove element from DOM and insert new element into position\n\n\n    _this.el.toggleAttribute('hidden', true);\n\n    _this.productFormEl.parentNode.insertBefore(_this.ctaEl, _this.productFormEl.nextSibling);\n\n    if (_this.variantId) {\n      var variantsEl = _this.productFormEl.querySelector('[data-variants]');\n\n      _this._registerEvent({\n        el: variantsEl,\n        event: 'change',\n        listener: _this._onVariantChange.bind(_assertThisInitialized(_this))\n      });\n\n      _this._setVisible(variantsEl.value === _this.variantId);\n    } else {\n      _this._setVisible(true);\n    }\n\n    return _this;\n  }\n\n  _createClass(ProductCTA, [{\n    key: \"unload\",\n    value: function unload() {\n      _get(_getPrototypeOf(ProductCTA.prototype), \"unload\", this).call(this);\n\n      this.productFormEl.parentNode.removeChild(this.ctaEl);\n      this.el.toggleAttribute('hidden', false);\n    }\n  }, {\n    key: \"_setVisible\",\n    value: function _setVisible(visible) {\n      this.ctaEl.toggleAttribute('hidden', !visible);\n    }\n  }, {\n    key: \"_onVariantChange\",\n    value: function _onVariantChange(e) {\n      this._setVisible(e.currentTarget.value === this.variantId);\n    }\n  }]);\n\n  return ProductCTA;\n}(_Shortcode__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/scripts/shortcodes/ProductCTA.js\n");

/***/ }),

/***/ "./source/scripts/shortcodes/Shortcode.js":
/*!************************************************!*\
  !*** ./source/scripts/shortcodes/Shortcode.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Shortcode; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Shortcode = /*#__PURE__*/function () {\n  _createClass(Shortcode, null, [{\n    key: \"getShortcodes\",\n    value: function getShortcodes(el) {\n      var shortcodeEls = el.querySelectorAll(this.shortcode);\n      var shortcodes = [];\n\n      for (var i = shortcodeEls.length - 1; i >= 0; i--) {\n        var shortcodeEl = shortcodeEls[i];\n        shortcodes.push(new this(shortcodeEl));\n      }\n\n      return shortcodes;\n    }\n  }, {\n    key: \"isShortcode\",\n    value: function isShortcode(el) {\n      return el.tagName === this.shortcode;\n    }\n  }, {\n    key: \"shortcode\",\n    get: function get() {\n      throw new Error('Shortcode.shortcode is not defined.');\n    }\n  }]);\n\n  function Shortcode() {\n    _classCallCheck(this, Shortcode);\n\n    this.events = [];\n  }\n\n  _createClass(Shortcode, [{\n    key: \"unload\",\n    value: function unload() {\n      this.events.forEach(function (_ref) {\n        var el = _ref.el,\n            event = _ref.event,\n            listener = _ref.listener;\n        return el.removeEventListener(event, listener);\n      });\n    }\n  }, {\n    key: \"_registerEvent\",\n    value: function _registerEvent(_ref2) {\n      var el = _ref2.el,\n          event = _ref2.event,\n          listener = _ref2.listener;\n      this.events.push({\n        el: el,\n        event: event,\n        listener: listener\n      });\n      el.addEventListener(event, listener);\n      return {\n        el: el,\n        event: event,\n        listener: listener\n      };\n    }\n  }, {\n    key: \"_unregisterEvent\",\n    value: function _unregisterEvent(_ref3) {\n      var el = _ref3.el,\n          event = _ref3.event,\n          listener = _ref3.listener;\n      this.events.filter(function (e) {\n        return el !== e.el || event !== e.event || listener !== e.listener;\n      });\n      el.removeEventListener(event, listener);\n      return {\n        el: el,\n        event: event,\n        listener: listener\n      };\n    }\n  }]);\n\n  return Shortcode;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zaG9ydGNvZGVzL1Nob3J0Y29kZS5qcz9iNTEzIl0sIm5hbWVzIjpbIlNob3J0Y29kZSIsImVsIiwic2hvcnRjb2RlRWxzIiwicXVlcnlTZWxlY3RvckFsbCIsInNob3J0Y29kZSIsInNob3J0Y29kZXMiLCJpIiwibGVuZ3RoIiwic2hvcnRjb2RlRWwiLCJwdXNoIiwidGFnTmFtZSIsIkVycm9yIiwiZXZlbnRzIiwiZm9yRWFjaCIsImV2ZW50IiwibGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImZpbHRlciIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0lBQXFCQSxTOzs7a0NBS0VDLEUsRUFBSTtBQUN2QixVQUFNQyxZQUFZLEdBQUdELEVBQUUsQ0FBQ0UsZ0JBQUgsQ0FBb0IsS0FBS0MsU0FBekIsQ0FBckI7QUFDQSxVQUFNQyxVQUFVLEdBQUcsRUFBbkI7O0FBRUEsV0FBSyxJQUFJQyxDQUFDLEdBQUdKLFlBQVksQ0FBQ0ssTUFBYixHQUFzQixDQUFuQyxFQUFzQ0QsQ0FBQyxJQUFJLENBQTNDLEVBQThDQSxDQUFDLEVBQS9DLEVBQW1EO0FBQ2pELFlBQU1FLFdBQVcsR0FBR04sWUFBWSxDQUFDSSxDQUFELENBQWhDO0FBRUFELGtCQUFVLENBQUNJLElBQVgsQ0FBZ0IsSUFBSSxJQUFKLENBQVNELFdBQVQsQ0FBaEI7QUFDRDs7QUFFRCxhQUFPSCxVQUFQO0FBQ0Q7OztnQ0FFa0JKLEUsRUFBSTtBQUNyQixhQUFPQSxFQUFFLENBQUNTLE9BQUgsS0FBZSxLQUFLTixTQUEzQjtBQUNEOzs7d0JBbkJzQjtBQUNyQixZQUFNLElBQUlPLEtBQUosQ0FBVSxxQ0FBVixDQUFOO0FBQ0Q7OztBQW1CRCx1QkFBYztBQUFBOztBQUNaLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0Q7Ozs7NkJBRVE7QUFDUCxXQUFLQSxNQUFMLENBQVlDLE9BQVosQ0FBb0I7QUFBQSxZQUFHWixFQUFILFFBQUdBLEVBQUg7QUFBQSxZQUFPYSxLQUFQLFFBQU9BLEtBQVA7QUFBQSxZQUFjQyxRQUFkLFFBQWNBLFFBQWQ7QUFBQSxlQUE2QmQsRUFBRSxDQUFDZSxtQkFBSCxDQUF1QkYsS0FBdkIsRUFBOEJDLFFBQTlCLENBQTdCO0FBQUEsT0FBcEI7QUFDRDs7OzBDQUV1QztBQUFBLFVBQXZCZCxFQUF1QixTQUF2QkEsRUFBdUI7QUFBQSxVQUFuQmEsS0FBbUIsU0FBbkJBLEtBQW1CO0FBQUEsVUFBWkMsUUFBWSxTQUFaQSxRQUFZO0FBQ3RDLFdBQUtILE1BQUwsQ0FBWUgsSUFBWixDQUFpQjtBQUFFUixVQUFFLEVBQUZBLEVBQUY7QUFBTWEsYUFBSyxFQUFMQSxLQUFOO0FBQWFDLGdCQUFRLEVBQVJBO0FBQWIsT0FBakI7QUFFQWQsUUFBRSxDQUFDZ0IsZ0JBQUgsQ0FBb0JILEtBQXBCLEVBQTJCQyxRQUEzQjtBQUVBLGFBQU87QUFBRWQsVUFBRSxFQUFGQSxFQUFGO0FBQU1hLGFBQUssRUFBTEEsS0FBTjtBQUFhQyxnQkFBUSxFQUFSQTtBQUFiLE9BQVA7QUFDRDs7OzRDQUV5QztBQUFBLFVBQXZCZCxFQUF1QixTQUF2QkEsRUFBdUI7QUFBQSxVQUFuQmEsS0FBbUIsU0FBbkJBLEtBQW1CO0FBQUEsVUFBWkMsUUFBWSxTQUFaQSxRQUFZO0FBQ3hDLFdBQUtILE1BQUwsQ0FBWU0sTUFBWixDQUFtQixVQUFBQyxDQUFDO0FBQUEsZUFBSWxCLEVBQUUsS0FBS2tCLENBQUMsQ0FBQ2xCLEVBQVQsSUFBZWEsS0FBSyxLQUFLSyxDQUFDLENBQUNMLEtBQTNCLElBQW9DQyxRQUFRLEtBQUtJLENBQUMsQ0FBQ0osUUFBdkQ7QUFBQSxPQUFwQjtBQUVBZCxRQUFFLENBQUNlLG1CQUFILENBQXVCRixLQUF2QixFQUE4QkMsUUFBOUI7QUFFQSxhQUFPO0FBQUVkLFVBQUUsRUFBRkEsRUFBRjtBQUFNYSxhQUFLLEVBQUxBLEtBQU47QUFBYUMsZ0JBQVEsRUFBUkE7QUFBYixPQUFQO0FBQ0QiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zaG9ydGNvZGVzL1Nob3J0Y29kZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3J0Y29kZSB7XG4gIHN0YXRpYyBnZXQgc2hvcnRjb2RlKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignU2hvcnRjb2RlLnNob3J0Y29kZSBpcyBub3QgZGVmaW5lZC4nKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTaG9ydGNvZGVzKGVsKSB7XG4gICAgY29uc3Qgc2hvcnRjb2RlRWxzID0gZWwucXVlcnlTZWxlY3RvckFsbCh0aGlzLnNob3J0Y29kZSk7XG4gICAgY29uc3Qgc2hvcnRjb2RlcyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IHNob3J0Y29kZUVscy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgY29uc3Qgc2hvcnRjb2RlRWwgPSBzaG9ydGNvZGVFbHNbaV07XG5cbiAgICAgIHNob3J0Y29kZXMucHVzaChuZXcgdGhpcyhzaG9ydGNvZGVFbCkpO1xuICAgIH1cblxuICAgIHJldHVybiBzaG9ydGNvZGVzO1xuICB9XG5cbiAgc3RhdGljIGlzU2hvcnRjb2RlKGVsKSB7XG4gICAgcmV0dXJuIGVsLnRhZ05hbWUgPT09IHRoaXMuc2hvcnRjb2RlO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5ldmVudHMgPSBbXTtcbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICB0aGlzLmV2ZW50cy5mb3JFYWNoKCh7IGVsLCBldmVudCwgbGlzdGVuZXIgfSkgPT4gZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpKTtcbiAgfVxuXG4gIF9yZWdpc3RlckV2ZW50KHsgZWwsIGV2ZW50LCBsaXN0ZW5lciB9KSB7XG4gICAgdGhpcy5ldmVudHMucHVzaCh7IGVsLCBldmVudCwgbGlzdGVuZXIgfSk7XG5cbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4geyBlbCwgZXZlbnQsIGxpc3RlbmVyIH07XG4gIH1cblxuICBfdW5yZWdpc3RlckV2ZW50KHsgZWwsIGV2ZW50LCBsaXN0ZW5lciB9KSB7XG4gICAgdGhpcy5ldmVudHMuZmlsdGVyKGUgPT4gZWwgIT09IGUuZWwgfHwgZXZlbnQgIT09IGUuZXZlbnQgfHwgbGlzdGVuZXIgIT09IGUubGlzdGVuZXIpO1xuXG4gICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIHsgZWwsIGV2ZW50LCBsaXN0ZW5lciB9O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/shortcodes/Shortcode.js\n");

/***/ }),

/***/ "./source/scripts/shortcodes/Shortcodes.js":
/*!*************************************************!*\
  !*** ./source/scripts/shortcodes/Shortcodes.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Shortcodes; });\n/* harmony import */ var _ProductCTA__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProductCTA */ \"./source/scripts/shortcodes/ProductCTA.js\");\n/* harmony import */ var _Details__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Details */ \"./source/scripts/shortcodes/Details.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Shortcodes = /*#__PURE__*/function () {\n  function Shortcodes(el) {\n    _classCallCheck(this, Shortcodes);\n\n    this.shortcodes = [];\n    this.shortcodes.concat(_ProductCTA__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortcodes(el));\n    this.shortcodes.concat(_Details__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getShortcodes(el));\n  }\n\n  _createClass(Shortcodes, [{\n    key: \"unload\",\n    value: function unload() {\n      this.shortcodes = this.shortcodes.filter(function (shortcode) {\n        shortcode.unload();\n        return false;\n      });\n    }\n  }]);\n\n  return Shortcodes;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy9zaG9ydGNvZGVzL1Nob3J0Y29kZXMuanM/NGUwYSJdLCJuYW1lcyI6WyJTaG9ydGNvZGVzIiwiZWwiLCJzaG9ydGNvZGVzIiwiY29uY2F0IiwiUHJvZHVjdENUQSIsImdldFNob3J0Y29kZXMiLCJEZXRhaWxzIiwiZmlsdGVyIiwic2hvcnRjb2RlIiwidW5sb2FkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTs7SUFFcUJBLFU7QUFDbkIsc0JBQVlDLEVBQVosRUFBZ0I7QUFBQTs7QUFDZCxTQUFLQyxVQUFMLEdBQWtCLEVBQWxCO0FBRUEsU0FBS0EsVUFBTCxDQUFnQkMsTUFBaEIsQ0FBdUJDLG1EQUFVLENBQUNDLGFBQVgsQ0FBeUJKLEVBQXpCLENBQXZCO0FBQ0EsU0FBS0MsVUFBTCxDQUFnQkMsTUFBaEIsQ0FBdUJHLGdEQUFPLENBQUNELGFBQVIsQ0FBc0JKLEVBQXRCLENBQXZCO0FBQ0Q7Ozs7NkJBRVE7QUFDUCxXQUFLQyxVQUFMLEdBQWtCLEtBQUtBLFVBQUwsQ0FBZ0JLLE1BQWhCLENBQXVCLFVBQUFDLFNBQVMsRUFBSTtBQUNwREEsaUJBQVMsQ0FBQ0MsTUFBVjtBQUNBLGVBQU8sS0FBUDtBQUNELE9BSGlCLENBQWxCO0FBSUQiLCJmaWxlIjoiLi9zb3VyY2Uvc2NyaXB0cy9zaG9ydGNvZGVzL1Nob3J0Y29kZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvZHVjdENUQSBmcm9tICcuL1Byb2R1Y3RDVEEnO1xuaW1wb3J0IERldGFpbHMgZnJvbSAnLi9EZXRhaWxzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hvcnRjb2RlcyB7XG4gIGNvbnN0cnVjdG9yKGVsKSB7XG4gICAgdGhpcy5zaG9ydGNvZGVzID0gW107XG5cbiAgICB0aGlzLnNob3J0Y29kZXMuY29uY2F0KFByb2R1Y3RDVEEuZ2V0U2hvcnRjb2RlcyhlbCkpO1xuICAgIHRoaXMuc2hvcnRjb2Rlcy5jb25jYXQoRGV0YWlscy5nZXRTaG9ydGNvZGVzKGVsKSk7XG4gIH1cblxuICB1bmxvYWQoKSB7XG4gICAgdGhpcy5zaG9ydGNvZGVzID0gdGhpcy5zaG9ydGNvZGVzLmZpbHRlcihzaG9ydGNvZGUgPT4ge1xuICAgICAgc2hvcnRjb2RlLnVubG9hZCgpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/scripts/shortcodes/Shortcodes.js\n");

/***/ }),

/***/ "./source/scripts/templates/Account.js":
/*!*********************************************!*\
  !*** ./source/scripts/templates/Account.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Account; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Account = /*#__PURE__*/function () {\n  function Account() {\n    _classCallCheck(this, Account);\n\n    this.$accountContents = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-template-account]');\n    this.$loginContent = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-template-account-login]');\n    this.$addressesContent = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-template-account-addresses]');\n    this.$addressButtonFocus = null;\n    this._loginToggle = this._loginToggle.bind(this);\n\n    if (this.$loginContent.length) {\n      this._initLoginPage();\n    }\n\n    if (this.$addressesContent.length) {\n      this._initAddressPage();\n    }\n\n    if (this.$accountContents.length) {\n      this._init();\n    }\n  }\n\n  _createClass(Account, [{\n    key: \"_init\",\n    value: function _init() {\n      new _Forms__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$accountContents);\n    }\n  }, {\n    key: \"_initLoginPage\",\n    value: function _initLoginPage() {\n      this.$loginToggle = this.$loginContent.find('[data-login-toggle]');\n      this.$login = this.$loginContent.find('[data-account-login-main]');\n      this.$recovery = this.$loginContent.find('[data-account-login-recovery]');\n      this.$recoveryHasMessage = this.$recovery.find('[data-recovery-has-message]');\n      this.$loginToggle.on('click', this._loginToggle);\n\n      if (this.$recoveryHasMessage.length) {\n        this._loginToggle();\n      }\n    }\n  }, {\n    key: \"_loginToggle\",\n    value: function _loginToggle() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.$login.toggleClass('visible');\n      this.$recovery.toggleClass('visible');\n    }\n  }, {\n    key: \"_initAddressPage\",\n    value: function _initAddressPage() {\n      var _this = this;\n\n      var $customerAddresses = this.$addressesContent.find('[data-address-id]');\n      this.$addressesContent.on('click', '[data-edit-address]', function (event) {\n        var $target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n        var itemId = $target.attr('data-edit-address');\n        $customerAddresses.removeClass('visible');\n        _this.$addressButtonFocus = $target;\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-address-id=\\\"\".concat(itemId, \"\\\"]\")).addClass('visible').find('.form-field-input').eq(0).focus();\n      });\n      this.$addressesContent.on('click', '[data-edit-address-cancel]', function () {\n        $customerAddresses.removeClass('visible');\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-address-id=\"new\"]').addClass('visible'); // Return focus to last used button\n\n        _this.$addressButtonFocus.focus();\n\n        _this.$addressButtonFocus = null;\n      });\n      this.$addressesContent.on('click', '[data-delete-address]', function (event) {\n        var itemId = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr('data-delete-address');\n        Shopify.CustomerAddress.destroy(itemId, '');\n      });\n      $customerAddresses.each(function (i, el) {\n        var id = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el).attr('data-address-id');\n        var countryEl = \"customer_addr_\".concat(id, \"_country\");\n        var provinceEl = \"customer_addr_\".concat(id, \"_province\");\n        var options = {\n          hideElement: \"address_province_container_\".concat(id)\n        }; // Initiate provinces for address forms\n\n        new Shopify.CountryProvinceSelector(countryEl, provinceEl, options);\n      });\n    }\n  }]);\n\n  return Account;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy90ZW1wbGF0ZXMvQWNjb3VudC5qcz85OTZmIl0sIm5hbWVzIjpbIkFjY291bnQiLCIkYWNjb3VudENvbnRlbnRzIiwiJCIsIiRsb2dpbkNvbnRlbnQiLCIkYWRkcmVzc2VzQ29udGVudCIsIiRhZGRyZXNzQnV0dG9uRm9jdXMiLCJfbG9naW5Ub2dnbGUiLCJiaW5kIiwibGVuZ3RoIiwiX2luaXRMb2dpblBhZ2UiLCJfaW5pdEFkZHJlc3NQYWdlIiwiX2luaXQiLCJGb3JtcyIsIiRsb2dpblRvZ2dsZSIsImZpbmQiLCIkbG9naW4iLCIkcmVjb3ZlcnkiLCIkcmVjb3ZlcnlIYXNNZXNzYWdlIiwib24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidG9nZ2xlQ2xhc3MiLCIkY3VzdG9tZXJBZGRyZXNzZXMiLCIkdGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIml0ZW1JZCIsImF0dHIiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiZXEiLCJmb2N1cyIsInRhcmdldCIsIlNob3BpZnkiLCJDdXN0b21lckFkZHJlc3MiLCJkZXN0cm95IiwiZWFjaCIsImkiLCJlbCIsImlkIiwiY291bnRyeUVsIiwicHJvdmluY2VFbCIsIm9wdGlvbnMiLCJoaWRlRWxlbWVudCIsIkNvdW50cnlQcm92aW5jZVNlbGVjdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7O0lBRXFCQSxPO0FBQ25CLHFCQUFjO0FBQUE7O0FBQ1osU0FBS0MsZ0JBQUwsR0FBd0JDLDZDQUFDLENBQUMseUJBQUQsQ0FBekI7QUFDQSxTQUFLQyxhQUFMLEdBQXFCRCw2Q0FBQyxDQUFDLCtCQUFELENBQXRCO0FBQ0EsU0FBS0UsaUJBQUwsR0FBeUJGLDZDQUFDLENBQUMsbUNBQUQsQ0FBMUI7QUFDQSxTQUFLRyxtQkFBTCxHQUEyQixJQUEzQjtBQUVBLFNBQUtDLFlBQUwsR0FBb0IsS0FBS0EsWUFBTCxDQUFrQkMsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBcEI7O0FBRUEsUUFBSSxLQUFLSixhQUFMLENBQW1CSyxNQUF2QixFQUErQjtBQUM3QixXQUFLQyxjQUFMO0FBQ0Q7O0FBRUQsUUFBSSxLQUFLTCxpQkFBTCxDQUF1QkksTUFBM0IsRUFBbUM7QUFDakMsV0FBS0UsZ0JBQUw7QUFDRDs7QUFFRCxRQUFJLEtBQUtULGdCQUFMLENBQXNCTyxNQUExQixFQUFrQztBQUNoQyxXQUFLRyxLQUFMO0FBQ0Q7QUFDRjs7Ozs0QkFFTztBQUNOLFVBQUlDLDhDQUFKLENBQVUsS0FBS1gsZ0JBQWY7QUFDRDs7O3FDQUVnQjtBQUNmLFdBQUtZLFlBQUwsR0FBb0IsS0FBS1YsYUFBTCxDQUFtQlcsSUFBbkIsQ0FBd0IscUJBQXhCLENBQXBCO0FBQ0EsV0FBS0MsTUFBTCxHQUFjLEtBQUtaLGFBQUwsQ0FBbUJXLElBQW5CLENBQXdCLDJCQUF4QixDQUFkO0FBQ0EsV0FBS0UsU0FBTCxHQUFpQixLQUFLYixhQUFMLENBQW1CVyxJQUFuQixDQUF3QiwrQkFBeEIsQ0FBakI7QUFDQSxXQUFLRyxtQkFBTCxHQUEyQixLQUFLRCxTQUFMLENBQWVGLElBQWYsQ0FBb0IsNkJBQXBCLENBQTNCO0FBRUEsV0FBS0QsWUFBTCxDQUFrQkssRUFBbEIsQ0FBcUIsT0FBckIsRUFBOEIsS0FBS1osWUFBbkM7O0FBRUEsVUFBSSxLQUFLVyxtQkFBTCxDQUF5QlQsTUFBN0IsRUFBcUM7QUFDbkMsYUFBS0YsWUFBTDtBQUNEO0FBQ0Y7OzttQ0FFMEI7QUFBQSxVQUFkYSxLQUFjLHVFQUFOLElBQU07O0FBQ3pCLFVBQUlBLEtBQUosRUFBVztBQUNUQSxhQUFLLENBQUNDLGNBQU47QUFDRDs7QUFFRCxXQUFLTCxNQUFMLENBQVlNLFdBQVosQ0FBd0IsU0FBeEI7QUFDQSxXQUFLTCxTQUFMLENBQWVLLFdBQWYsQ0FBMkIsU0FBM0I7QUFDRDs7O3VDQUVrQjtBQUFBOztBQUNqQixVQUFNQyxrQkFBa0IsR0FBRyxLQUFLbEIsaUJBQUwsQ0FBdUJVLElBQXZCLENBQTRCLG1CQUE1QixDQUEzQjtBQUVBLFdBQUtWLGlCQUFMLENBQXVCYyxFQUF2QixDQUEwQixPQUExQixFQUFtQyxxQkFBbkMsRUFBMEQsVUFBQ0MsS0FBRCxFQUFXO0FBQ25FLFlBQU1JLE9BQU8sR0FBR3JCLDZDQUFDLENBQUNpQixLQUFLLENBQUNLLGFBQVAsQ0FBakI7QUFDQSxZQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csSUFBUixDQUFhLG1CQUFiLENBQWY7QUFFQUosMEJBQWtCLENBQUNLLFdBQW5CLENBQStCLFNBQS9CO0FBQ0EsYUFBSSxDQUFDdEIsbUJBQUwsR0FBMkJrQixPQUEzQjtBQUVBckIscURBQUMsOEJBQXNCdUIsTUFBdEIsU0FBRCxDQUNHRyxRQURILENBQ1ksU0FEWixFQUVHZCxJQUZILENBRVEsbUJBRlIsRUFHR2UsRUFISCxDQUdNLENBSE4sRUFJR0MsS0FKSDtBQUtELE9BWkQ7QUFjQSxXQUFLMUIsaUJBQUwsQ0FBdUJjLEVBQXZCLENBQTBCLE9BQTFCLEVBQW1DLDRCQUFuQyxFQUFpRSxZQUFNO0FBQ3JFSSwwQkFBa0IsQ0FBQ0ssV0FBbkIsQ0FBK0IsU0FBL0I7QUFDQXpCLHFEQUFDLENBQUMseUJBQUQsQ0FBRCxDQUE2QjBCLFFBQTdCLENBQXNDLFNBQXRDLEVBRnFFLENBSXJFOztBQUNBLGFBQUksQ0FBQ3ZCLG1CQUFMLENBQXlCeUIsS0FBekI7O0FBQ0EsYUFBSSxDQUFDekIsbUJBQUwsR0FBMkIsSUFBM0I7QUFDRCxPQVBEO0FBU0EsV0FBS0QsaUJBQUwsQ0FBdUJjLEVBQXZCLENBQTBCLE9BQTFCLEVBQW1DLHVCQUFuQyxFQUE0RCxVQUFDQyxLQUFELEVBQVc7QUFDckUsWUFBTU0sTUFBTSxHQUFHdkIsNkNBQUMsQ0FBQ2lCLEtBQUssQ0FBQ1ksTUFBUCxDQUFELENBQWdCTCxJQUFoQixDQUFxQixxQkFBckIsQ0FBZjtBQUNBTSxlQUFPLENBQUNDLGVBQVIsQ0FBd0JDLE9BQXhCLENBQWdDVCxNQUFoQyxFQUF3QyxFQUF4QztBQUNELE9BSEQ7QUFLQUgsd0JBQWtCLENBQUNhLElBQW5CLENBQXdCLFVBQUNDLENBQUQsRUFBSUMsRUFBSixFQUFXO0FBQ2pDLFlBQU1DLEVBQUUsR0FBR3BDLDZDQUFDLENBQUNtQyxFQUFELENBQUQsQ0FBTVgsSUFBTixDQUFXLGlCQUFYLENBQVg7QUFFQSxZQUFNYSxTQUFTLDJCQUFvQkQsRUFBcEIsYUFBZjtBQUNBLFlBQU1FLFVBQVUsMkJBQW9CRixFQUFwQixjQUFoQjtBQUNBLFlBQU1HLE9BQU8sR0FBRztBQUFFQyxxQkFBVyx1Q0FBZ0NKLEVBQWhDO0FBQWIsU0FBaEIsQ0FMaUMsQ0FPakM7O0FBQ0EsWUFBSU4sT0FBTyxDQUFDVyx1QkFBWixDQUFvQ0osU0FBcEMsRUFBK0NDLFVBQS9DLEVBQTJEQyxPQUEzRDtBQUNELE9BVEQ7QUFVRCIsImZpbGUiOiIuL3NvdXJjZS9zY3JpcHRzL3RlbXBsYXRlcy9BY2NvdW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuaW1wb3J0IEZvcm1zIGZyb20gJy4uL0Zvcm1zJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWNjb3VudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuJGFjY291bnRDb250ZW50cyA9ICQoJ1tkYXRhLXRlbXBsYXRlLWFjY291bnRdJyk7XG4gICAgdGhpcy4kbG9naW5Db250ZW50ID0gJCgnW2RhdGEtdGVtcGxhdGUtYWNjb3VudC1sb2dpbl0nKTtcbiAgICB0aGlzLiRhZGRyZXNzZXNDb250ZW50ID0gJCgnW2RhdGEtdGVtcGxhdGUtYWNjb3VudC1hZGRyZXNzZXNdJyk7XG4gICAgdGhpcy4kYWRkcmVzc0J1dHRvbkZvY3VzID0gbnVsbDtcblxuICAgIHRoaXMuX2xvZ2luVG9nZ2xlID0gdGhpcy5fbG9naW5Ub2dnbGUuYmluZCh0aGlzKTtcblxuICAgIGlmICh0aGlzLiRsb2dpbkNvbnRlbnQubGVuZ3RoKSB7XG4gICAgICB0aGlzLl9pbml0TG9naW5QYWdlKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJGFkZHJlc3Nlc0NvbnRlbnQubGVuZ3RoKSB7XG4gICAgICB0aGlzLl9pbml0QWRkcmVzc1BhZ2UoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4kYWNjb3VudENvbnRlbnRzLmxlbmd0aCkge1xuICAgICAgdGhpcy5faW5pdCgpO1xuICAgIH1cbiAgfVxuXG4gIF9pbml0KCkge1xuICAgIG5ldyBGb3Jtcyh0aGlzLiRhY2NvdW50Q29udGVudHMpO1xuICB9XG5cbiAgX2luaXRMb2dpblBhZ2UoKSB7XG4gICAgdGhpcy4kbG9naW5Ub2dnbGUgPSB0aGlzLiRsb2dpbkNvbnRlbnQuZmluZCgnW2RhdGEtbG9naW4tdG9nZ2xlXScpO1xuICAgIHRoaXMuJGxvZ2luID0gdGhpcy4kbG9naW5Db250ZW50LmZpbmQoJ1tkYXRhLWFjY291bnQtbG9naW4tbWFpbl0nKTtcbiAgICB0aGlzLiRyZWNvdmVyeSA9IHRoaXMuJGxvZ2luQ29udGVudC5maW5kKCdbZGF0YS1hY2NvdW50LWxvZ2luLXJlY292ZXJ5XScpO1xuICAgIHRoaXMuJHJlY292ZXJ5SGFzTWVzc2FnZSA9IHRoaXMuJHJlY292ZXJ5LmZpbmQoJ1tkYXRhLXJlY292ZXJ5LWhhcy1tZXNzYWdlXScpO1xuXG4gICAgdGhpcy4kbG9naW5Ub2dnbGUub24oJ2NsaWNrJywgdGhpcy5fbG9naW5Ub2dnbGUpO1xuXG4gICAgaWYgKHRoaXMuJHJlY292ZXJ5SGFzTWVzc2FnZS5sZW5ndGgpIHtcbiAgICAgIHRoaXMuX2xvZ2luVG9nZ2xlKCk7XG4gICAgfVxuICB9XG5cbiAgX2xvZ2luVG9nZ2xlKGV2ZW50ID0gbnVsbCkge1xuICAgIGlmIChldmVudCkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICB0aGlzLiRsb2dpbi50b2dnbGVDbGFzcygndmlzaWJsZScpO1xuICAgIHRoaXMuJHJlY292ZXJ5LnRvZ2dsZUNsYXNzKCd2aXNpYmxlJyk7XG4gIH1cblxuICBfaW5pdEFkZHJlc3NQYWdlKCkge1xuICAgIGNvbnN0ICRjdXN0b21lckFkZHJlc3NlcyA9IHRoaXMuJGFkZHJlc3Nlc0NvbnRlbnQuZmluZCgnW2RhdGEtYWRkcmVzcy1pZF0nKTtcblxuICAgIHRoaXMuJGFkZHJlc3Nlc0NvbnRlbnQub24oJ2NsaWNrJywgJ1tkYXRhLWVkaXQtYWRkcmVzc10nLCAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0ICR0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgY29uc3QgaXRlbUlkID0gJHRhcmdldC5hdHRyKCdkYXRhLWVkaXQtYWRkcmVzcycpO1xuXG4gICAgICAkY3VzdG9tZXJBZGRyZXNzZXMucmVtb3ZlQ2xhc3MoJ3Zpc2libGUnKTtcbiAgICAgIHRoaXMuJGFkZHJlc3NCdXR0b25Gb2N1cyA9ICR0YXJnZXQ7XG5cbiAgICAgICQoYFtkYXRhLWFkZHJlc3MtaWQ9XCIke2l0ZW1JZH1cIl1gKVxuICAgICAgICAuYWRkQ2xhc3MoJ3Zpc2libGUnKVxuICAgICAgICAuZmluZCgnLmZvcm0tZmllbGQtaW5wdXQnKVxuICAgICAgICAuZXEoMClcbiAgICAgICAgLmZvY3VzKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLiRhZGRyZXNzZXNDb250ZW50Lm9uKCdjbGljaycsICdbZGF0YS1lZGl0LWFkZHJlc3MtY2FuY2VsXScsICgpID0+IHtcbiAgICAgICRjdXN0b21lckFkZHJlc3Nlcy5yZW1vdmVDbGFzcygndmlzaWJsZScpO1xuICAgICAgJCgnW2RhdGEtYWRkcmVzcy1pZD1cIm5ld1wiXScpLmFkZENsYXNzKCd2aXNpYmxlJyk7XG5cbiAgICAgIC8vIFJldHVybiBmb2N1cyB0byBsYXN0IHVzZWQgYnV0dG9uXG4gICAgICB0aGlzLiRhZGRyZXNzQnV0dG9uRm9jdXMuZm9jdXMoKTtcbiAgICAgIHRoaXMuJGFkZHJlc3NCdXR0b25Gb2N1cyA9IG51bGw7XG4gICAgfSk7XG5cbiAgICB0aGlzLiRhZGRyZXNzZXNDb250ZW50Lm9uKCdjbGljaycsICdbZGF0YS1kZWxldGUtYWRkcmVzc10nLCAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IGl0ZW1JZCA9ICQoZXZlbnQudGFyZ2V0KS5hdHRyKCdkYXRhLWRlbGV0ZS1hZGRyZXNzJyk7XG4gICAgICBTaG9waWZ5LkN1c3RvbWVyQWRkcmVzcy5kZXN0cm95KGl0ZW1JZCwgJycpO1xuICAgIH0pO1xuXG4gICAgJGN1c3RvbWVyQWRkcmVzc2VzLmVhY2goKGksIGVsKSA9PiB7XG4gICAgICBjb25zdCBpZCA9ICQoZWwpLmF0dHIoJ2RhdGEtYWRkcmVzcy1pZCcpO1xuXG4gICAgICBjb25zdCBjb3VudHJ5RWwgPSBgY3VzdG9tZXJfYWRkcl8ke2lkfV9jb3VudHJ5YDtcbiAgICAgIGNvbnN0IHByb3ZpbmNlRWwgPSBgY3VzdG9tZXJfYWRkcl8ke2lkfV9wcm92aW5jZWA7XG4gICAgICBjb25zdCBvcHRpb25zID0geyBoaWRlRWxlbWVudDogYGFkZHJlc3NfcHJvdmluY2VfY29udGFpbmVyXyR7aWR9YCB9O1xuXG4gICAgICAvLyBJbml0aWF0ZSBwcm92aW5jZXMgZm9yIGFkZHJlc3MgZm9ybXNcbiAgICAgIG5ldyBTaG9waWZ5LkNvdW50cnlQcm92aW5jZVNlbGVjdG9yKGNvdW50cnlFbCwgcHJvdmluY2VFbCwgb3B0aW9ucyk7XG4gICAgfSk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/templates/Account.js\n");

/***/ }),

/***/ "./source/scripts/templates/Contact.js":
/*!*********************************************!*\
  !*** ./source/scripts/templates/Contact.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Contact; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Forms */ \"./source/scripts/Forms.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\nvar Contact = function Contact() {\n  _classCallCheck(this, Contact);\n\n  this.$contactContents = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-template-contact]');\n\n  if (this.$contactContents.length) {\n    new _Forms__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$contactContents);\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy90ZW1wbGF0ZXMvQ29udGFjdC5qcz8yMTVkIl0sIm5hbWVzIjpbIkNvbnRhY3QiLCIkY29udGFjdENvbnRlbnRzIiwiJCIsImxlbmd0aCIsIkZvcm1zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLE8sR0FDbkIsbUJBQWM7QUFBQTs7QUFDWixPQUFLQyxnQkFBTCxHQUF3QkMsNkNBQUMsQ0FBQyx5QkFBRCxDQUF6Qjs7QUFFQSxNQUFJLEtBQUtELGdCQUFMLENBQXNCRSxNQUExQixFQUFrQztBQUNoQyxRQUFJQyw4Q0FBSixDQUFVLEtBQUtILGdCQUFmO0FBQ0Q7QUFDRixDIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvdGVtcGxhdGVzL0NvbnRhY3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgRm9ybXMgZnJvbSAnLi4vRm9ybXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250YWN0IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy4kY29udGFjdENvbnRlbnRzID0gJCgnW2RhdGEtdGVtcGxhdGUtY29udGFjdF0nKTtcblxuICAgIGlmICh0aGlzLiRjb250YWN0Q29udGVudHMubGVuZ3RoKSB7XG4gICAgICBuZXcgRm9ybXModGhpcy4kY29udGFjdENvbnRlbnRzKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/templates/Contact.js\n");

/***/ }),

/***/ "./source/scripts/templates/GiftCard.js":
/*!**********************************************!*\
  !*** ./source/scripts/templates/GiftCard.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GiftCard; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\");\n/* harmony import */ var scriptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scriptjs__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar GiftCard = /*#__PURE__*/function () {\n  function GiftCard() {\n    _classCallCheck(this, GiftCard);\n\n    this.el = document.querySelector('.giftcard');\n    this.$el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.el);\n    this.qrCode = this.el.querySelector('[data-giftcard-qr]');\n    this.giftCardCode = this.el.querySelector('[data-giftcard-code]');\n\n    this._bindEvents();\n\n    this.addQrCode();\n  }\n\n  _createClass(GiftCard, [{\n    key: \"addQrCode\",\n    value: function addQrCode() {\n      return new QRCode(this.qrCode, {\n        text: jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.qrCode).data('giftcard-qr'),\n        width: 120,\n        height: 120\n      });\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this = this;\n\n      this.$el.on('click', '[data-giftcard-print]', function () {\n        window.print();\n      }); // Auto-select gift card code on click, based on ID passed to the function\n\n      this.$el.on('click', '[data-giftcard-code]', function () {\n        _this._selectText();\n      });\n    }\n  }, {\n    key: \"_selectText\",\n    value: function _selectText() {\n      var range = '';\n\n      if (document.body.createTextRange) {\n        // ms method\n        range = document.body.createTextRange();\n        range.moveToElementText(this.giftCardCode);\n        range.select();\n      } else if (window.getSelection) {\n        // moz, opera, webkit method\n        var selection = window.getSelection();\n        range = document.createRange();\n        range.selectNodeContents(this.giftCardCode);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n  }]);\n\n  return GiftCard;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy90ZW1wbGF0ZXMvR2lmdENhcmQuanM/ZTFkOCJdLCJuYW1lcyI6WyJHaWZ0Q2FyZCIsImVsIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiJGVsIiwiJCIsInFyQ29kZSIsImdpZnRDYXJkQ29kZSIsIl9iaW5kRXZlbnRzIiwiYWRkUXJDb2RlIiwiUVJDb2RlIiwidGV4dCIsImRhdGEiLCJ3aWR0aCIsImhlaWdodCIsIm9uIiwid2luZG93IiwicHJpbnQiLCJfc2VsZWN0VGV4dCIsInJhbmdlIiwiYm9keSIsImNyZWF0ZVRleHRSYW5nZSIsIm1vdmVUb0VsZW1lbnRUZXh0Iiwic2VsZWN0IiwiZ2V0U2VsZWN0aW9uIiwic2VsZWN0aW9uIiwiY3JlYXRlUmFuZ2UiLCJzZWxlY3ROb2RlQ29udGVudHMiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7SUFFcUJBLFE7QUFDbkIsc0JBQWM7QUFBQTs7QUFDWixTQUFLQyxFQUFMLEdBQVVDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixXQUF2QixDQUFWO0FBQ0EsU0FBS0MsR0FBTCxHQUFXQyw2Q0FBQyxDQUFDLEtBQUtKLEVBQU4sQ0FBWjtBQUNBLFNBQUtLLE1BQUwsR0FBYyxLQUFLTCxFQUFMLENBQVFFLGFBQVIsQ0FBc0Isb0JBQXRCLENBQWQ7QUFDQSxTQUFLSSxZQUFMLEdBQW9CLEtBQUtOLEVBQUwsQ0FBUUUsYUFBUixDQUFzQixzQkFBdEIsQ0FBcEI7O0FBRUEsU0FBS0ssV0FBTDs7QUFDQSxTQUFLQyxTQUFMO0FBQ0Q7Ozs7Z0NBRVc7QUFDVixhQUFPLElBQUlDLE1BQUosQ0FBVyxLQUFLSixNQUFoQixFQUF3QjtBQUM3QkssWUFBSSxFQUFFTiw2Q0FBQyxDQUFDLEtBQUtDLE1BQU4sQ0FBRCxDQUFlTSxJQUFmLENBQW9CLGFBQXBCLENBRHVCO0FBRTdCQyxhQUFLLEVBQUUsR0FGc0I7QUFHN0JDLGNBQU0sRUFBRTtBQUhxQixPQUF4QixDQUFQO0FBS0Q7OztrQ0FFYTtBQUFBOztBQUNaLFdBQUtWLEdBQUwsQ0FBU1csRUFBVCxDQUFZLE9BQVosRUFBcUIsdUJBQXJCLEVBQThDLFlBQU07QUFDbERDLGNBQU0sQ0FBQ0MsS0FBUDtBQUNELE9BRkQsRUFEWSxDQUtaOztBQUNBLFdBQUtiLEdBQUwsQ0FBU1csRUFBVCxDQUFZLE9BQVosRUFBcUIsc0JBQXJCLEVBQTZDLFlBQU07QUFDakQsYUFBSSxDQUFDRyxXQUFMO0FBQ0QsT0FGRDtBQUdEOzs7a0NBRWE7QUFDWixVQUFJQyxLQUFLLEdBQUcsRUFBWjs7QUFFQSxVQUFJakIsUUFBUSxDQUFDa0IsSUFBVCxDQUFjQyxlQUFsQixFQUFtQztBQUFFO0FBQ25DRixhQUFLLEdBQUdqQixRQUFRLENBQUNrQixJQUFULENBQWNDLGVBQWQsRUFBUjtBQUNBRixhQUFLLENBQUNHLGlCQUFOLENBQXdCLEtBQUtmLFlBQTdCO0FBQ0FZLGFBQUssQ0FBQ0ksTUFBTjtBQUNELE9BSkQsTUFJTyxJQUFJUCxNQUFNLENBQUNRLFlBQVgsRUFBeUI7QUFBRTtBQUNoQyxZQUFJQyxTQUFTLEdBQUdULE1BQU0sQ0FBQ1EsWUFBUCxFQUFoQjtBQUNBTCxhQUFLLEdBQUdqQixRQUFRLENBQUN3QixXQUFULEVBQVI7QUFDQVAsYUFBSyxDQUFDUSxrQkFBTixDQUF5QixLQUFLcEIsWUFBOUI7QUFDQWtCLGlCQUFTLENBQUNHLGVBQVY7QUFDQUgsaUJBQVMsQ0FBQ0ksUUFBVixDQUFtQlYsS0FBbkI7QUFDRDtBQUNGIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvdGVtcGxhdGVzL0dpZnRDYXJkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCAkc2NyaXB0IGZyb20gJ3NjcmlwdGpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2lmdENhcmQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmdpZnRjYXJkJyk7XG4gICAgdGhpcy4kZWwgPSAkKHRoaXMuZWwpO1xuICAgIHRoaXMucXJDb2RlID0gdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1naWZ0Y2FyZC1xcl0nKTtcbiAgICB0aGlzLmdpZnRDYXJkQ29kZSA9IHRoaXMuZWwucXVlcnlTZWxlY3RvcignW2RhdGEtZ2lmdGNhcmQtY29kZV0nKTtcblxuICAgIHRoaXMuX2JpbmRFdmVudHMoKTtcbiAgICB0aGlzLmFkZFFyQ29kZSgpO1xuICB9XG5cbiAgYWRkUXJDb2RlKCkge1xuICAgIHJldHVybiBuZXcgUVJDb2RlKHRoaXMucXJDb2RlLCB7XG4gICAgICB0ZXh0OiAkKHRoaXMucXJDb2RlKS5kYXRhKCdnaWZ0Y2FyZC1xcicpLFxuICAgICAgd2lkdGg6IDEyMCxcbiAgICAgIGhlaWdodDogMTIwXG4gICAgfSk7XG4gIH1cblxuICBfYmluZEV2ZW50cygpIHtcbiAgICB0aGlzLiRlbC5vbignY2xpY2snLCAnW2RhdGEtZ2lmdGNhcmQtcHJpbnRdJywgKCkgPT4ge1xuICAgICAgd2luZG93LnByaW50KCk7XG4gICAgfSk7XG5cbiAgICAvLyBBdXRvLXNlbGVjdCBnaWZ0IGNhcmQgY29kZSBvbiBjbGljaywgYmFzZWQgb24gSUQgcGFzc2VkIHRvIHRoZSBmdW5jdGlvblxuICAgIHRoaXMuJGVsLm9uKCdjbGljaycsICdbZGF0YS1naWZ0Y2FyZC1jb2RlXScsICgpID0+IHtcbiAgICAgIHRoaXMuX3NlbGVjdFRleHQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zZWxlY3RUZXh0KCkge1xuICAgIGxldCByYW5nZSA9ICcnO1xuXG4gICAgaWYgKGRvY3VtZW50LmJvZHkuY3JlYXRlVGV4dFJhbmdlKSB7IC8vIG1zIG1ldGhvZFxuICAgICAgcmFuZ2UgPSBkb2N1bWVudC5ib2R5LmNyZWF0ZVRleHRSYW5nZSgpO1xuICAgICAgcmFuZ2UubW92ZVRvRWxlbWVudFRleHQodGhpcy5naWZ0Q2FyZENvZGUpO1xuICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cuZ2V0U2VsZWN0aW9uKSB7IC8vIG1veiwgb3BlcmEsIHdlYmtpdCBtZXRob2RcbiAgICAgIHZhciBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICByYW5nZS5zZWxlY3ROb2RlQ29udGVudHModGhpcy5naWZ0Q2FyZENvZGUpO1xuICAgICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgc2VsZWN0aW9uLmFkZFJhbmdlKHJhbmdlKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/templates/GiftCard.js\n");

/***/ }),

/***/ "./source/scripts/templates/Page.js":
/*!******************************************!*\
  !*** ./source/scripts/templates/Page.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Page; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_RichText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/RichText */ \"./source/scripts/components/RichText.js\");\n/* harmony import */ var _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shortcodes/Shortcodes */ \"./source/scripts/shortcodes/Shortcodes.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\nvar Page = function Page() {\n  _classCallCheck(this, Page);\n\n  this.$pageContent = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-template-page]');\n\n  if (this.$pageContent.length) {\n    new _components_RichText__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$pageContent);\n    new _shortcodes_Shortcodes__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.$pageContent[0]);\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2NyaXB0cy90ZW1wbGF0ZXMvUGFnZS5qcz8wZGZjIl0sIm5hbWVzIjpbIlBhZ2UiLCIkcGFnZUNvbnRlbnQiLCIkIiwibGVuZ3RoIiwiUmljaFRleHQiLCJTaG9ydGNvZGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFFQTs7SUFFcUJBLEksR0FDbkIsZ0JBQWM7QUFBQTs7QUFDWixPQUFLQyxZQUFMLEdBQW9CQyw2Q0FBQyxDQUFDLHNCQUFELENBQXJCOztBQUVBLE1BQUksS0FBS0QsWUFBTCxDQUFrQkUsTUFBdEIsRUFBOEI7QUFDNUIsUUFBSUMsNERBQUosQ0FBYSxLQUFLSCxZQUFsQjtBQUNBLFFBQUlJLDhEQUFKLENBQWUsS0FBS0osWUFBTCxDQUFrQixDQUFsQixDQUFmO0FBQ0Q7QUFDRixDIiwiZmlsZSI6Ii4vc291cmNlL3NjcmlwdHMvdGVtcGxhdGVzL1BhZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IFJpY2hUZXh0IGZyb20gJy4uL2NvbXBvbmVudHMvUmljaFRleHQnO1xuXG5pbXBvcnQgU2hvcnRjb2RlcyBmcm9tICcuLi9zaG9ydGNvZGVzL1Nob3J0Y29kZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWdlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy4kcGFnZUNvbnRlbnQgPSAkKCdbZGF0YS10ZW1wbGF0ZS1wYWdlXScpO1xuXG4gICAgaWYgKHRoaXMuJHBhZ2VDb250ZW50Lmxlbmd0aCkge1xuICAgICAgbmV3IFJpY2hUZXh0KHRoaXMuJHBhZ2VDb250ZW50KTtcbiAgICAgIG5ldyBTaG9ydGNvZGVzKHRoaXMuJHBhZ2VDb250ZW50WzBdKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/scripts/templates/Page.js\n");

/***/ })

/******/ });